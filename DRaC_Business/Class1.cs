using GTA;
using GTA.Math;
using GTA.Native;
using Microsoft.CSharp.RuntimeBinder;
using NativeUI;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace DRaC_Business
{
  public class Class1 : Script
  {
    public List<string> DancesList = new List<string>()
    {
      "anim@amb@nightclub_island@dancers@beachdance@,mi_loop_m03",
      "anim@amb@nightclub_island@dancers@beachdance@,mi_loop_m04",
      "anim@amb@nightclub_island@dancers@beachdance@,mi_loop_m05",
      "anim@amb@nightclub_island@dancers@beachdance@,mi_loop_m04",
      "anim@amb@nightclub_island@dancers@beachdance@,ti_loop_m01",
      "anim@amb@nightclub_island@dancers@beachdance@,ti_loop_m02",
      "anim@amb@nightclub_island@dancers@beachdance@,ti_loop_m03",
      "anim@amb@nightclub_island@dancers@beachdance@,ti_loop_m04",
      "anim@amb@nightclub_island@dancers@beachdance@,hi_loop_f01",
      "anim@amb@nightclub_island@dancers@beachdance@,hi_loop_f02",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_m01",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_m02",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_m03",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_m04",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_f01",
      "anim@amb@nightclub_island@dancers@beachdance@,li_loop_f02"
    };
    public List<Class1.SpawnS> CivillianSpawns = new List<Class1.SpawnS>()
    {
      new Class1.SpawnS(1, new Vector3(940.3389f, 13.86792f, 116.1642f), 228.6752f),
      new Class1.SpawnS(1, new Vector3(941.5753f, 14.70272f, 116.1642f), 89.62915f),
      new Class1.SpawnS(1, new Vector3(941.4255f, 13.57982f, 116.1642f), 38.23604f),
      new Class1.SpawnS(1, new Vector3(935.844f, 7.046496f, 116.1642f), 332.9319f),
      new Class1.SpawnS(1, new Vector3(937.1695f, 8.634978f, 116.1642f), 113.1428f),
      new Class1.SpawnS(1, new Vector3(938.6244f, 7.334195f, 116.1642f), 224.2561f),
      new Class1.SpawnS(1, new Vector3(939.9634f, 5.947296f, 116.1642f), 38.73786f),
      new Class1.SpawnS(1, new Vector3(942.0176f, 5.581164f, 116.1642f), 4.225938f),
      new Class1.SpawnS(1, new Vector3(943.2343f, 5.575437f, 116.1642f), 269.261f),
      new Class1.SpawnS(1, new Vector3(944.0798f, 6.644825f, 116.1642f), 160.258f),
      new Class1.SpawnS(1, new Vector3(944.8551f, 5.288838f, 116.1642f), 51.35738f),
      new Class1.SpawnS(1, new Vector3(945.2695f, 3.143576f, 116.1642f), 284.1477f),
      new Class1.SpawnS(1, new Vector3(946.7433f, 3.693798f, 116.1642f), 100.9248f),
      new Class1.SpawnS(1, new Vector3(940.4261f, 3.537667f, 116.1642f), 147.2634f),
      new Class1.SpawnS(1, new Vector3(939.0691f, 3.774562f, 116.1642f), 170.9926f),
      new Class1.SpawnS(1, new Vector3(937.4559f, 3.006f, 116.1642f), 253.2326f),
      new Class1.SpawnS(1, new Vector3(943.8021f, 11.55267f, 116.1642f), 134.2634f),
      new Class1.SpawnS(1, new Vector3(942.8433f, 11.65282f, 116.1642f), 277.1606f),
      new Class1.SpawnS(1, new Vector3(945.8914f, 17.10113f, 116.1642f), 78.21075f),
      new Class1.SpawnS(1, new Vector3(944.2933f, 16.83902f, 116.1642f), 295.8203f),
      new Class1.SpawnS(1, new Vector3(943.8658f, 19.63585f, 116.1642f), 340.3393f),
      new Class1.SpawnS(1, new Vector3(944.8027f, 20.67276f, 116.1642f), 57.57127f),
      new Class1.SpawnS(1, new Vector3(948.5615f, 18.84385f, 116.1642f), 142.5691f),
      new Class1.SpawnS(1, new Vector3(952.2647f, 21.91467f, 116.1642f), 244.8902f),
      new Class1.SpawnS(1, new Vector3(953.821f, 21.60463f, 116.1642f), 66.87621f),
      new Class1.SpawnS(1, new Vector3(953.443f, 26.45722f, 116.1642f), 167.6311f),
      new Class1.SpawnS(1, new Vector3(954.2025f, 25.03222f, 116.1642f), 347.7527f),
      new Class1.SpawnS(1, new Vector3(951.2604f, 24.45657f, 116.1642f), 153.1017f),
      new Class1.SpawnS(1, new Vector3(952.4682f, 23.67835f, 116.1642f), 47.29372f),
      new Class1.SpawnS(1, new Vector3(950.8041f, 23.02069f, 116.1642f), 303.5323f),
      new Class1.SpawnS(1, new Vector3(958.1925f, 22.93664f, 116.1642f), 109.3908f),
      new Class1.SpawnS(1, new Vector3(957.4963f, 21.5837f, 116.1642f), 323.1607f),
      new Class1.SpawnS(1, new Vector3(964.197f, 31.16289f, 116.1642f), 229.7441f),
      new Class1.SpawnS(1, new Vector3(965.7258f, 31.85718f, 116.1761f), 206.5975f),
      new Class1.SpawnS(1, new Vector3(964.3633f, 32.58329f, 116.1642f), 178.6785f),
      new Class1.SpawnS(1, new Vector3(965.4962f, 34.1111f, 116.1642f), 265.0572f),
      new Class1.SpawnS(1, new Vector3(966.2554f, 35.5251f, 116.1642f), 124.6912f),
      new Class1.SpawnS(1, new Vector3(967.8754f, 31.92117f, 116.1761f), 329.0187f),
      new Class1.SpawnS(1, new Vector3(963.045f, 37.69917f, 116.1642f), 57.25354f),
      new Class1.SpawnS(1, new Vector3(961.3177f, 38.33633f, 116.1642f), 262.9016f),
      new Class1.SpawnS(1, new Vector3(962.6148f, 39.1163f, 116.1642f), 147.0888f),
      new Class1.SpawnS(1, new Vector3(957.5583f, 41.58075f, 116.1642f), 334.0545f),
      new Class1.SpawnS(1, new Vector3(959.1136f, 41.39601f, 116.1642f), 107.2954f),
      new Class1.SpawnS(1, new Vector3(963.4489f, 44.11718f, 116.1759f), 308.3614f),
      new Class1.SpawnS(1, new Vector3(964.9203f, 45.09602f, 116.1761f), 71.03542f),
      new Class1.SpawnS(1, new Vector3(964.7509f, 42.89546f, 116.1642f), 11.23004f),
      new Class1.SpawnS(1, new Vector3(967.9941f, 44.22229f, 116.1642f), 223.1564f),
      new Class1.SpawnS(1, new Vector3(969.8339f, 43.05304f, 116.1642f), 140.3064f),
      new Class1.SpawnS(1, new Vector3(968.1816f, 42.37641f, 116.1642f), 350.4776f),
      new Class1.SpawnS(1, new Vector3(963.1379f, 47.53055f, 116.1761f), 23.33661f),
      new Class1.SpawnS(1, new Vector3(963.6896f, 48.83577f, 116.1761f), 120.9801f),
      new Class1.SpawnS(1, new Vector3(966.6624f, 49.87446f, 116.176f), 292.8786f),
      new Class1.SpawnS(1, new Vector3(967.7124f, 51.30257f, 116.1642f), 160.6275f),
      new Class1.SpawnS(1, new Vector3(968.4327f, 49.45813f, 116.1759f), 55.67472f),
      new Class1.SpawnS(1, new Vector3(972.5819f, 48.44128f, 116.1642f), 53.20551f),
      new Class1.SpawnS(1, new Vector3(971.0115f, 48.63354f, 116.1642f), 284.5505f),
      new Class1.SpawnS(1, new Vector3(975.9191f, 57.17556f, 116.1637f), 296.2444f),
      new Class1.SpawnS(1, new Vector3(975.5403f, 55.87547f, 116.1641f), 278.5245f),
      new Class1.SpawnS(1, new Vector3(977.2548f, 56.41534f, 116.1691f), 87.98623f),
      new Class1.SpawnS(1, new Vector3(958.053f, 28.12675f, 116.1761f), 313.5931f),
      new Class1.SpawnS(1, new Vector3(958.8018f, 29.51286f, 116.1761f), 110.5298f),
      new Class1.SpawnS(1, new Vector3(960.5164f, 32.79151f, 116.1646f), 318.1877f),
      new Class1.SpawnS(1, new Vector3(961.0229f, 33.87328f, 116.1642f), 206.6653f),
      new Class1.SpawnS(1, new Vector3(947.3071f, 20.20756f, 116.1642f), 137.0335f),
      new Class1.SpawnS(1, new Vector3(946.2736f, 19.78407f, 116.1642f), 209.6335f),
      new Class1.SpawnS(1, new Vector3(945.2597f, 8.354125f, 116.1642f), 193.494f),
      new Class1.SpawnS(1, new Vector3(945.7256f, 7.392662f, 116.1642f), 15.32119f)
    };
    public string CardId;
    public int Scene1;
    public int Scene3;
    public int Stage;
    public DealerTable ClosestDealerTable;
    public Prop ClosestTable;
    public Ped ClosestDealer;
    public Ped Ped_Assistant;
    public Prop Chair_Assistant;
    public Prop Valet;
    public Ped ValetPed;
    public bool CreatedInteriorBlips;
    public List<Blip> InteriorBlip = new List<Blip>();
    private bool firstTime = false;
    private string ModName = "DC&R Business";
    private string Developer = "HKH191";
    private string Version = "4.0.0";
    public Vector3 MarkerEnter;
    public Vector3 MarkerExit;
    public Vector3 MenuMarker;
    public Vector3 RoofEnterMarker;
    public Vector3 RoofExitMarker;
    public Vector3 HeliSpawn;
    public Vector3 GarageMarker;
    public Vector3 CarSpawn;
    public Vector3 WherehouseEnter;
    private ScriptSettings Config;
    private ScriptSettings OnlineInteriorsConfig;
    private Keys Key1;
    public Vector3 BuyMarker;
    public Vector3 BuyMarker2;
    public int num;
    private MenuPool modMenuPool;
    private UIMenu Missions;
    private UIMenu VehicleGaragePool;
    public Vector3 WherehouseMarker = new Vector3(930.546f, -8.284f, 78f);
    private UIMenu mainMenu;
    private UIMenu methgarage;
    private UIMenu VehicleWherehouseOptions;
    private UIMenu ProductStock;
    public int PartyPedChance = 45;
    public int PoolPedChance = 100;
    public bool bought;
    public int purchaselvl;
    public int maxstocks;
    public float stocksvalue;
    public float profitMargin;
    public int stockscount;
    public int stockstimer;
    public List<Prop> SlotProps = new List<Prop>();
    public int waittime;
    public int DisplayWait;
    public bool CreatedPeds2;
    public Prop PlayerCardA;
    public Prop PlayerCardB;
    public Prop PlayerCardC;
    public Prop PlayerCardD;
    public Prop PlayerCardE;
    public Prop PlayerCardF;
    public bool EnemySetup;
    public int Chooseenemynum;
    public Vehicle VehicleId;
    public bool VehicleSetup;
    private List<WeaponHash> weapons = Enum.GetValues(typeof (WeaponHash)).Cast<WeaponHash>().ToList<WeaponHash>();
    public bool CreatedSlots;
    public Prop CurrentSlot;
    public string carid;
    public int vehiclemissionid;
    public bool setupdelivery;
    public Vector3 DeliveryMaker;
    public Blip DeliveryLoc;
    public Blip ballasBlip1;
    public Vector3 Deliverypoint;
    public UIMenu Garage;
    public UIMenu Sourcingmenu;
    public UIMenu SupplyRunsmenu;
    public UIMenu OrganizationOptions;
    public bool setupwantedfordelivery;
    public int waittimeforwanted;
    public Vehicle AirVehicle;
    public int BuzzardBought;
    public int FMJBought;
    public int A911Bought;
    public int X80Bought;
    public int SEVEN70Bought;
    public int wherehosuebought;
    public int cargaragebought;
    public VehicleHash VehicleIdentifier;
    public Vehicle VehicleName;
    public bool foundvehicleyet;
    public Vector3 Vehicleloc;
    public Blip VehicleMarker;
    public Vehicle Vehicletoget;
    public Vector3 VehicleSpawn;
    public bool hasgotvehicle;
    private Blip Enemy;
    private Ped EnemyPed;
    private Vector3 EnemyLoc;
    public System.Random VehicleLoc;
    public System.Random VehicleRan;
    public Vehicle VehicleMissioncar;
    public Vector3 VehicleLocation;
    public int Missionnum;
    public Blip DestoryVehicle;
    private System.Random RandomWanted;
    private System.Random randomwantedwait;
    private int triggerwanted;
    public int Aircraftstorage;
    public bool warnedplayer;
    public Vector3 AircraftStorageLoc;
    public Blip AircraftStorageMarker;
    public Blip VehicleWarehouseMarker;
    public int GunLockerBought;
    public int MoneyVaultBought;
    public int DockBought;
    public int VehicleLotBought;
    public Vector3 Dockloc;
    public Blip DockBlip;
    public Vector3 LotLoc;
    public Blip LotBlip;
    public float SourcingPayout;
    public bool SourcingCheckingforDamage;
    public int AATrailerABought;
    public int AATrailerBBought;
    public int AATrailerCBought;
    public string OrganizationName;
    public UIMenu AssetRecoveryMenu;
    public bool TriggeredWanted;
    public int ValkyrieBought;
    public int AkulaBought;
    public int HunterBought;
    public int SavageBought;
    public int AnnihilatorBought;
    public Vehicle Vehicle1;
    public Vehicle Vehicle2;
    public Vehicle Vehicle3;
    public Blip ConvoyBlip1;
    public Blip ConvoyBlip2;
    public Blip ConvoyBlip3;
    public int convoysetup;
    public bool checkforconvoy;
    public int UseCustomWaitTime;
    public bool setWaittime;
    public Vector3 Radiopos;
    public int turretedlimo;
    public int assassinationmission;
    public int assassinationpayout;
    public Blip TowerBlip;
    public string Design;
    public Vector3 SleepPos;
    public Vector3 MBTOfficeSitRespawnPos;
    public Vector3 MBTOfficeSitPos;
    public bool sitting;
    public UIMenu Sourcingmenu2;
    public string SourcedVehicle;
    public bool NewVehicleSourcing;
    public bool PlayedSpinAnim;
    public float increaseGain;
    public AllStocks Allstocks;
    public UIMenu SpecialMissions;
    public List<Ped> Guards = new List<Ped>();
    public List<Ped> Driver = new List<Ped>();
    public Vehicle VtoGet;
    public Blip VtoGetBlip;
    public bool GotCar;
    public Vehicle VtoGet1;
    public Vehicle VtoGet2;
    public Vehicle VtoGet3;
    public int Vehiclesleft;
    public Blip DropzoneBlip;
    public Vector3 Dropzone;
    public bool VehicleisDamaged;
    public int Vehiclehealth;
    public Vehicle RentedVehicle;
    public bool startedRent;
    public int RentTimer;
    public int RentalvehicleHealth;
    public Vehicle ArcadeHauler1;
    public Vehicle ArcadeHauler2;
    public Vehicle ArcadeHauler3;
    public Prop ArcadeHauler1Cargo;
    public Prop ArcadeHauler2Cargo;
    public Prop ArcadeHauler3Cargo;
    public bool ISinPiracyScamMission;
    public int Piracymission;
    public int TimerLeft;
    public VehicleHash RandomVehicle;
    public bool HackhasStarted;
    public Vector3 GoPoint;
    public int StockTimer;
    public int StockTimer2;
    public float stocktoloose;
    private ScriptSettings ScriptConfig;
    public bool IsScriptEnabled;
    public Vector3 ChairPos = new Vector3(1111.04f, 242.7082f, -47.3f);
    public float P_Rotation = -7f;
    public bool IsSittinginCeoSeat;
    public bool IsSittinginCeoSeat2;
    public string WarehousePos;
    public Camera WarehouseCam;
    public bool WCamOn;
    public bool IsinInterior;
    public Vector3 EnterMarkerA;
    public Vector3 EnterMarkerB;
    public Vector3 EnterMarkerC;
    public Vector3 ExitMarkerA;
    public Vector3 ExitMarkerB;
    public Vector3 ExitMarkerC;
    public string officetext = "Office";
    public bool CleanUpO1 = false;
    public bool CleanUpO2 = false;
    public bool CleanUpO3 = false;
    public bool CleanUpO4 = false;
    public int Effect;
    public List<Ped> MainPed = new List<Ped>();
    private int ao = 0;
    private int bo = 0;
    public string CurrentText = "HKH";
    public int currentFont = 5;
    public int currentColor = 1;
    public int SlotTimer;
    private int OStage = 0;
    private int OSMovie = 0;
    private int OSF1 = 0;
    public bool isSpinning;
    public bool BarPeds = true;
    public bool SlotPeds = true;
    public bool MainPeds = true;
    public bool RandomWanderPeds = true;
    public bool MainWanderPeds = true;
    public Prop CardA;
    public Prop CardB;
    public Prop CardC;
    public Vector3 AssistantChair = new Vector3(-139.1f, -633.8f, 167.9f);
    public Vector3 AssistantPos = new Vector3(-139.1157f, -633.6f, 167.9f);
    public Vector3 CEOChairPos = new Vector3(-126f, -641.625f, 167.9f);
    public int ChairModelCEO;
    public int ChairModelAssistant;
    public object AssistantPedModel;
    public string AssistantPedModelType;
    public bool CreatedAssistant = false;
    public Prop AssistantChairProp;
    public Prop CEOChairProp;
    public Ped AssistantPed;
    public Ped ViewPed;
    public string SearchPedInput = "Aman";
    public Prop Chair;
    public Vector3 PenthouseUpgradeMarker = new Vector3(983.468f, 66.4218f, 115f);
    public Prop RouletteTableA;
    public Prop RouletteTableB;
    public Prop RouletteTableC;
    public List<string> ExProp = new List<string>();
    private List<string> CashProp = new List<string>();
    public int AmountOfCash;
    public Ped CutsenePed1;
    public Ped CutsenePed2;
    public Ped CutsenePed3;
    public Ped CutsenePed4;
    public string HostName;
    public BlipColor Blip_Colour;
    public string Uicolour;
    public Color MarkerColor;
    public string MarkerColorString;
    public int Casino_level;
    public int Chips_Amount;
    public Vector3 PenthouseEnter = new Vector3(963.8229f, 59.32881f, 111.5f);
    public Vector3 PenthouseExit = new Vector3(1119.3f, 266.3739f, -52f);
    public Vector3 PenthouseEnter2 = new Vector3(966.767f, 64.20187f, 111.5f);
    public Vector3 PenthouseExit2 = new Vector3(970.239f, 63.30465f, 111.5f);
    public Vector3 PenthouseEnter3 = new Vector3(1085.211f, 214.3609f, -50f);
    public Vector3 MembershipUpgradeMarker = new Vector3(1087.932f, 219.0564f, -50f);
    public UIMenu Casino_Menu;
    public UIMenu Chips_Menu;
    public Vector3 GarageEnt = new Vector3(1119.526f, 262.2122f, -52f);
    public Vector3 GarageExit = new Vector3(1380.048f, 177.9697f, -50f);
    public Vector3 ChipsPurchaseMarker = new Vector3(1115.378f, 219.2437f, -51f);
    public Blip MenuBlip;
    public Blip GarageBlip;
    public Blip PenthouseBlip;
    public List<Ped> Peds = new List<Ped>();
    public List<Ped> Peds2 = new List<Ped>();
    public List<Vector3> Spawns = new List<Vector3>();
    public Vehicle Prizecar = (Vehicle) null;
    public Ped ped;
    public List<Vector3> PokerTables = new List<Vector3>();
    public List<float> PokerTablesRot = new List<float>();
    public List<DealerTable> PokerDealerTables = new List<DealerTable>();
    public List<Vector3> BlackJackTables = new List<Vector3>();
    public List<float> BlackJackRot = new List<float>();
    public List<DealerTable> BlackjackDealerTables = new List<DealerTable>();
    public List<Vector3> SlotMachines = new List<Vector3>();
    public List<float> SlotMachinesRot = new List<float>();
    public List<Vector3> RouletteTables = new List<Vector3>();
    public List<float> RouletteTablesRot = new List<float>();
    public List<DealerTable> RouletteDealerTables = new List<DealerTable>();
    public List<Prop> Tables = new List<Prop>();
    public List<Prop> Tables2 = new List<Prop>();
    public List<Prop> Chips = new List<Prop>();
    public List<Ped> SMPed = new List<Ped>();
    public int PlayerCard_1;
    public int PlayerCard_2;
    public int PlayerCard_3;
    public int PlayerCard_4;
    public int PlayerCard_5;
    public int PlayerCard_6;
    public int DealerCard_1;
    public int DealerCard_2;
    public int DealerCard_3;
    public int DealerCard_4;
    public int DealerCard_5;
    public int DealerCard_6;
    public float Mp = 1f;
    public bool Playing_Poker;
    public bool Playing_BlackJack;
    public bool Playing_SlotMachine;
    public bool Playing_Roulette;
    public bool Placebet;
    public bool Drawcards;
    public bool Editbet;
    public int Playercards;
    public int DealerCards;
    private float Bet;
    public int Penthouse_Style;
    public int Penthouse_Media;
    public int Penthouse_Spa;
    public int Penthouse_Bar;
    public int Penthouse_Colour;
    public int Penthouse_Arcade;
    public int Penthouse_BarLight;
    public int Penthouse_PokerDealer;
    public int Penthouse_ExtraBedroom;
    public UIMenu Pent_Menu;
    public UIMenu Misc;
    public bool Endgame;
    public bool IsinHottub;
    public Vector3 jacuzziSeat1 = new Vector3(950.2065f, 8.426282f, 114.8f);
    public float J_rot1 = 35f;
    public Vector3 jacuzziSeat2 = new Vector3(947.8384f, 9.270115f, 114.8f);
    public float J_rot2 = -62f;
    public Vector3 jacuzziSeat3 = new Vector3(949.2515f, 8.05176f, 114.8f);
    public float J_rot3 = -10f;
    public Vector3 jacuzziSeat4 = new Vector3(948.5143f, 8.573825f, 114.8f);
    public float J_rot4 = -27f;
    public Vector3 jacuzziSeat5 = new Vector3(951.0193f, 10.6507f, 114.8f);
    public float J_rot5 = 113f;
    public Vector3 jacuzziSeat6 = new Vector3(950.6567f, 9.381268f, 114.8f);
    public float J_rot6 = 61f;
    public bool ReadyToSpin;
    public Vector3 jacuzziSeat7 = new Vector3(948.3551f, 44.92002f, 110.3f);
    public float J_rot7 = 146f;
    public Vector3 jacuzziSeat8 = new Vector3(954.6243f, 54.65971f, 110.3f);
    public float J_rot8 = 148f;
    public Vector3 jacuzziSeat9 = new Vector3(943.2098f, 34.43878f, 110.3f);
    public float J_rot9 = 103f;
    public Vector3 jacuzziSeat10 = new Vector3(937.0524f, 24.53947f, 110.3f);
    public float J_rot10 = 103f;
    public Ped Vendor1;
    public Ped Vendor2;
    public int PedType = 1;
    public int PedType2 = 1;
    public int RMax;
    public int RTimer;
    public int ThraxUnlocked;
    public Prop Champaine;
    public bool IsDrinking;
    public int DrinkTimer;
    public Vector3 RooftopEntA = new Vector3(1107.355f, 243.1685f, -46.7f);
    public Vector3 RooftopEntB = new Vector3(980.3979f, 56.70687f, 115f);
    public Vector3 RooftopExitA = new Vector3(971.8717f, 51.87973f, 119f);
    public Vector3 RooftopExitB = new Vector3(978.2067f, 61.9569f, 119f);
    public Vector3 LuckyWheel = new Vector3(1111.045f, 228.6406f, -50.5f);
    public List<Vector3> DrinkPosPent = new List<Vector3>();
    public List<float> DrinkPosRot = new List<float>();
    public List<Vector3> DrinkPosBar = new List<Vector3>();
    public List<float> DrinkPosBarRot = new List<float>();
    public UIMenu DrinksMainMenu;
    public int DevMission;
    public UIMenu ChipsMenu;
    public Prop WheelProp;
    public Prop WheelProp2;
    public float LuckyWheelSpinAmt;
    public int Dis_Unlocked;
    public string PrizeCarDisplayName;
    public int SpinsPerIncrease;
    public int MaxSpins;
    public bool IsInbettingRace;
    public int Multiplyer;
    public Vector3 FinishLine;
    public Vehicle VehicleA;
    public Vehicle VehicleB;
    public Vehicle VehicleC;
    public Vehicle VehicleD;
    public Vehicle VehicleE;
    public Vehicle VehicleF;
    public Vector3 RaceMarker;
    public int PlayersPos;
    public bool StartedRace;
    public bool IsLeading;
    public bool FinishedRace;
    public bool inRace;
    public Blip RaceBlip;
    public Blip FinishLineBLip;
    public bool InRace;
    public List<Vector3> CheckpointPos = new List<Vector3>();
    public List<Blip> CheckPointBlips = new List<Blip>();
    public List<Blip> PoliceCarBlips = new List<Blip>();
    public bool CheckpointRace;
    public int Laps;
    public int CurrentLap;
    public int Position;
    public int NextCheckpoint;
    public int CarsFinished;
    public int lap;
    public int checkpoint;
    public Vector3[] Route;
    public bool CircuitRace;
    public int ACheck;
    public int BCheck;
    public int CCheck;
    public int Alap;
    public int Blap;
    public int Clap;
    public int DCheck;
    public int ECheck;
    public int FCheck;
    public int Dlap;
    public int Elap;
    public int Flap;
    public bool StartR;
    public int Race;
    public float RaceBet;
    public bool CamActive;
    public Vector3 PracticeHackPos = new Vector3(2696.77f, -368.41f, -55.8f);
    public Vector3 PracticeDrill = new Vector3(2688.67f, -368.558f, -55.8f);
    public Prop Ball;
    public UIMenu RaceMenu;
    public int CurrentTable;
    public List<Prop> Champ = new List<Prop>();
    public Vector3 RaceSTMarker = new Vector3(1101.177f, 263.5259f, -52f);
    public Vehicle SpectateCar;
    public bool Opposite;
    public bool isRotating;
    public Prop Computer;
    public Vector3 ComputerPos = new Vector3(0.0f, 0.0f, 0.0f);
    public Prop VIPBlocker;
    public bool IsBuying;
    public Prop BasePlate;
    public Prop BasePlate2;
    public Vector3 ThraxPos = new Vector3(1099.792f, 219.5638f, -49.1f);
    public Blip LocationBlip;
    public Vehicle Plane;
    public Blip PlaneBlip;
    public Vector3 Spawn;
    public Vector3 MissionMarker;
    public bool DeliveryMissionOn;
    public int shipmentsDElivered;
    public Prop RouletteMarker;
    public Prop RouletteMarker1;
    public Prop RouletteMarker2;
    public int RouletteBetsPlaced;
    public float RouletteBet1;
    public string RouletteP1;
    public float RouletteBet2;
    public string RouletteP2;
    public float RouletteBet3;
    public string RouletteP3;
    public bool PlaceBet_R;
    public string BetPos = "None";
    public int BetPosNum = 0;
    public int MarkerNum;
    public Prop MarkerTomove;
    public Prop TableT;
    public int Vic1;
    public int Vic2;
    public int Vic3;
    public bool CreatedMarker;
    public bool ActiveInt;
    public List<Ped> EnemyAi = new List<Ped>();
    public List<Vehicle> EnemyVeh = new List<Vehicle>();
    public int EnemyTimer;
    public float VehicleA_stalltime;
    public int VehicleA_MpValue;
    public int VehicleA_max;
    public int VehicleB_MpValue;
    public float VehicleB_stalltime;
    public int VehicleB_max;
    public int VehicleC_MpValue;
    public float VehicleC_stalltime;
    public int VehicleC_max;
    public int VehicleD_MpValue;
    public float VehicleD_stalltime;
    public int VehicleD_max;
    public int VehicleE_MpValue;
    public float VehicleE_stalltime;
    public int VehicleE_max;
    public int VehicleF_MpValue;
    public float VehicleF_stalltime;
    public int VehicleF_max;
    public bool StopCounter;
    public int CarsCounted;
    public int MpValue;
    public int PlayerDeck;
    public int EliteDeckUnlocked;
    public int TDMPrice;
    public int TMDUnlocked;
    public bool TMD_UseNormalDeckCards;
    public bool TMD_UseEliteDeckCards;
    public bool TMD_UseAce;
    public bool TMD_UseKing;
    public bool TMD_UseQueen;
    public bool TMD_UseJack;
    public bool TMD_Use02;
    public bool TMD_Use03;
    public bool TMD_Use04;
    public bool TMD_Use05;
    public bool TMD_Use06;
    public bool TMD_Use07;
    public bool TMD_Use08;
    public bool TMD_Use09;
    public bool TMD_Use10;
    public bool TMD_Dealer;
    public Prop WheelWinMarker;
    public List<Prop> WheelMarkers = new List<Prop>();
    public Vehicle TankerA;
    public Vehicle TankerB;
    public Vehicle TankerC;
    public Vehicle TankerD;
    public Vehicle TankerE;
    public Vehicle TankerF;
    public Vehicle TankerG;
    public Vehicle TankerH;
    public List<Prop> Card_Deck = new List<Prop>();
    public UIMenu ArtMenu;
    public Vector3 Art_POSITION1 = new Vector3(983.9946f, 67.53082f, 116.2f);
    public Vector3 Art_POSITION2 = new Vector3(971.1457f, 47.36984f, 116.2f);
    public Vector3 Art_POSITION3 = new Vector3(961.6328f, 37.60376f, 116.2f);
    public Vector3 Art_POSITION4 = new Vector3(956.2783f, 40.9492f, 116.2f);
    public Vector3 Art_POSITION5 = new Vector3(965.6121f, 27.96647f, 116.2f);
    public Vector3 Art_POSITION6 = new Vector3(957.3006f, 28.48209f, 116.2f);
    public Vector3 Art_POSITION7 = new Vector3(958.4638f, 30.34361f, 116.2f);
    public Vector3 Art_POSITION8 = new Vector3(970.4116f, 51.76957f, 116.2f);
    public Vector3 Art_POSITION9 = new Vector3(964.9167f, 55.20304f, 116.2f);
    public Vector3 Art_POSITION10 = new Vector3(972.3202f, 52.8088f, 116.2f);
    public Vector3 Art_POSITION11 = new Vector3(974.3784f, 56.95401f, 116.2f);
    public Vector3 Art_POSITION12 = new Vector3(972.0966f, 53.30207f, 116.2f);
    public Vector3 Art_POSITION13 = new Vector3(973.5657f, 59.20665f, 116.2f);
    public Vector3 Art_POSITION14 = new Vector3(970.0708f, 61.39066f, 116.2f);
    public List<Prop> ArtProps = new List<Prop>();
    public string ArtPropName_1;
    public string ArtPropName_2;
    public string ArtPropName_3;
    public string ArtPropName_4;
    public string ArtPropName_5;
    public string ArtPropName_6;
    public string ArtPropName_7;
    public string ArtPropName_8;
    public string ArtPropName_9;
    public string ArtPropName_10;
    public string ArtPropName_11;
    public string ArtPropName_12;
    public string ArtPropName_13;
    public string ArtPropName_14;
    public Prop CurrentArtProp;
    public Camera ArtPropCam;
    public bool RemoveArt;
    public List<object> PaintProp = new List<object>();
    public List<object> SculptProp = new List<object>();
    public List<object> SculptLoc = new List<object>();
    public List<float> SculptPropRot = new List<float>();
    public List<object> PLocations = new List<object>();
    public int SunbatherPedChamce;
    public UIMenu submenu14s;
    public UIMenu submenu13s;
    public UIMenu submenu12s;
    public List<Ped> MiscPed = new List<Ped>();
    public List<PedHash> CustomTerracePeds = new List<PedHash>();
    public bool MiscPedsEnabled;
    public bool IsinGarageMenu;
    public Camera RaceCam;
    public UIMenu DrinksMenu;
    public UIMenu MainStuffMenu;
    public Vector3 GarageMenuPos = new Vector3(1120.13f, 214.5152f, -50.5f);
    public int EnemiesKilled;
    public int EnemySpawntimer;
    public List<Ped> Guard = new List<Ped>();
    public List<Vector3> PatrolNodes = new List<Vector3>();
    public List<Vector3> PatrolNodes2 = new List<Vector3>();
    public Vehicle EscapeHeli;
    public Vehicle PatrolCar;
    public int MoveTimer;
    public Ped Avery;
    public Ped Pilot;
    public bool TriggeredEscape;
    public Ped TargetPed;
    public Vector3 ArcadeBusinessEnter;
    public Vector3 ArcadeBusinessExit = new Vector3(2737.7f, -375.9f, -49f);
    public Vector3 ArcadeGarageEnter;
    public Vector3 ArcadeGarageExit = new Vector3(2677.8f, -361.4f, -56.5f);
    public int ArcadeOwned;
    public Blip Arcade;
    public int ArcadeVersion;
    public bool IsInArcade;
    public Vector3 AVehPos_1 = new Vector3(2704.7f, -357.0222f, -55.8f);
    public float AVehRot_1 = 180f;
    public Vector3 AVehPos_2 = new Vector3(2696.91f, -356.6655f, -55.8f);
    public float AVehRot_2 = 180f;
    public Vector3 AVehPos_3 = new Vector3(2688.997f, -357.438f, -55.8f);
    public float AVehRot_3 = 180f;
    public Vector3 AVehPos_4 = new Vector3(2720.1f, -395.9f, -55.8f);
    public float AVehRot_4 = 0.0f;
    public Vector3 AVehPos_5 = new Vector3(2712.3f, -395.9f, -55.8f);
    public float AVehRot_5 = 0.0f;
    public Vector3 AVehPos_6 = new Vector3(2704.2f, -395.9f, -55.8f);
    public float AVehRot_6 = 0.0f;
    public Vector3 AVehPos_7 = new Vector3(2688.6f, -395.9f, -55.8f);
    public float AVehRot_7 = 0.0f;
    public Vector3 AVehPos_8 = new Vector3(2681.1f, -395.9f, -55.8f);
    public float AVehRot_8 = 0.0f;
    public Vector3 AVehPos_9 = new Vector3(2712.199f, -381.5f, -55.8f);
    public float AVehRot_9 = -180f;
    public Vector3 AVehPos_10 = new Vector3(2704.22f, -381.72f, -55.8f);
    public float AVehRot_10 = -180f;
    public Vector3 AVehPos_11 = new Vector3(2688.8f, -382.053f, -55.8f);
    public float AVehRot_11 = -180f;
    public int ArcadeFloodID;
    public int MuralID;
    public int PushieID;
    public int NeonArtID;
    public int ArcadeStyle;
    public bool ArcadeClutter;
    public int UnlockedDilllEquipment;
    public int UnlockedHackingEquipment;
    public int UnlockedBreachingEquipment;
    public int UnlockedOutfitsEquipment;
    public int UnlockedPlansEquipment;
    public int UnlockedGarage;
    public int UnlockedGunlocker;
    public SaveCar SC = new SaveCar();
    public UIMenu RemoveMenu;
    public UIMenu RemoveMenu2;
    public UIMenu GarageMenu;
    public UIMenu GarageMenu2;
    public Vehicle ArcadeVeh1;
    public Vehicle ArcadeVeh2;
    public Vehicle ArcadeVeh3;
    public Vehicle ArcadeVeh4;
    public Vehicle ArcadeVeh5;
    public Vehicle ArcadeVeh6;
    public Vehicle ArcadeVeh7;
    public Vehicle ArcadeVeh8;
    public Vehicle ArcadeVeh9;
    public Vehicle ArcadeVeh10;
    public Vehicle ArcadeVeh11;
    public int GarageOwned = 1;
    private string path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//";
    public string SlotToDelete;
    public Vehicle CarToDelete;
    public string ListPath = "scripts\\HKH191sBusinessMods\\DC&R\\MilitaryTrader\\AllVehicles.ini";
    public bool DeliveringVehicle;
    public Vehicle VehicleToDeliver;
    public Vehicle SaveVehicle;
    public Vector3 ArcadeVehOptions = new Vector3(2697.018f, -384.5703f, -56f);
    public float M = 0.0f;
    public string Price = "000";
    public string Model = "";
    public string man = "";
    public string GarageNum;
    public UIMenu ArcadeC;
    public Prop ArcadeChairA;
    public Prop ArcadeChairB;
    public Vector3 ArcadeChairAPos = new Vector3(2726.5f, -377.5f, -48f);
    public Vector3 ArcadeChairBPos = new Vector3(2720.033f, -363.581f, -54.5f);
    public float ArcadeChairAHeading = 145f;
    public float ArcadeChairBHeading = -45f;
    public bool SittingInArcadeChairA;
    public bool SittingInArcadeChairB;
    public bool PlayingArcadeGame;
    public int CurrentArcadeGame;
    public int timer;
    public int TimeLeft;
    public float moneytobeawarded;
    public Vehicle PLayerVehicle;
    public Vector3 OriginalArcadePos;
    public List<Vector3> ArcadePos = new List<Vector3>();
    public Vector3 EnemySpawnPos1 = new Vector3(-300f, -720f, 371f);
    public Vector3 EnemySpawnPos2 = new Vector3(-275f, -720f, 371f);
    public Vector3 EnemySpawnPos3 = new Vector3(-250f, -720f, 371f);
    public Vector3 EnemySpawnPos4 = new Vector3(-225f, -720f, 371f);
    public Vector3 AircraftSpawnPos = new Vector3(-200f, -800f, 371f);
    public Vector3 EnemySpawnPos5 = new Vector3(-200f, -720f, 371f);
    public Vector3 EnemySpawnPos6 = new Vector3(-175f, -720f, 371f);
    public Vector3 EnemySpawnPos7 = new Vector3(-150f, -720f, 371f);
    public Vector3 EnemySpawnPos8 = new Vector3(-125f, -720f, 371f);
    public Vector3 EnemySpawnPos9 = new Vector3(-100f, -720f, 371f);
    public List<Ped> ArcadePeds = new List<Ped>();
    public Vehicle PlayerV;
    public List<Vehicle> EnemyVs = new List<Vehicle>();
    public List<Prop> EnemyOverlays = new List<Prop>();
    public List<Prop> ArcadeProps = new List<Prop>();
    public Camera ArcadeCamera;
    public Vector3 NextTarget;
    public int HP;
    public int EnemyMaxTimer;
    private static Vector3 ArcadePos1 = new Vector3(2730.69f, -376.3358f, -50f);
    public float ArcadeRot1 = 90f;
    public int Arcade1Ver;
    private static Vector3 ArcadePos2 = new Vector3(Class1.ArcadePos1.X, Class1.ArcadePos1.Y - 1f, Class1.ArcadePos1.Z);
    public float ArcadeRot2 = 90f;
    public int Arcade2Ver;
    private static Vector3 ArcadePos3 = new Vector3(Class1.ArcadePos2.X, Class1.ArcadePos2.Y - 1f, Class1.ArcadePos2.Z);
    public float ArcadeRot3 = 90f;
    public int Arcade3Ver;
    private static Vector3 ArcadePos4 = new Vector3(Class1.ArcadePos2.X, Class1.ArcadePos2.Y + 2f, Class1.ArcadePos2.Z);
    public float ArcadeRot4 = 90f;
    public int Arcade4Ver;
    private static Vector3 ArcadePos5 = new Vector3(Class1.ArcadePos4.X, Class1.ArcadePos4.Y + 1f, Class1.ArcadePos4.Z);
    public float ArcadeRot5 = 90f;
    public int Arcade5Ver;
    private static Vector3 ArcadePos6 = new Vector3(2730.137f, -371.844f, -50f);
    public float ArcadeRot6 = 0.0f;
    public int Arcade6Ver;
    private static Vector3 ArcadePos7 = new Vector3(Class1.ArcadePos6.X + 1f, Class1.ArcadePos6.Y, Class1.ArcadePos6.Z);
    public float ArcadeRot7 = 0.0f;
    public int Arcade7Ver;
    private static Vector3 ArcadePos8 = new Vector3(Class1.ArcadePos7.X + 1f, Class1.ArcadePos7.Y, Class1.ArcadePos7.Z);
    public float ArcadeRot8 = 0.0f;
    public int Arcade8Ver;
    private static Vector3 ArcadePos9 = new Vector3(Class1.ArcadePos8.X + 1f, Class1.ArcadePos8.Y, Class1.ArcadePos8.Z);
    public float ArcadeRot9 = 0.0f;
    public int Arcade9Ver;
    private static Vector3 ArcadePos10 = new Vector3(Class1.ArcadePos9.X + 1f, Class1.ArcadePos9.Y, Class1.ArcadePos9.Z);
    public float ArcadeRot10 = 0.0f;
    public int Arcade10Ver;
    private static Vector3 ArcadePos11 = new Vector3(Class1.ArcadePos10.X + 1f, Class1.ArcadePos10.Y, Class1.ArcadePos10.Z);
    public float ArcadeRot11 = 0.0f;
    public int Arcade11Ver;
    private static Vector3 ArcadePos12 = new Vector3(2733.906f, -385.2436f, -50f);
    public float ArcadeRot12 = -90f;
    public int Arcade12Ver;
    private static Vector3 ArcadePos13 = new Vector3(Class1.ArcadePos12.X, Class1.ArcadePos12.Y + 1f, Class1.ArcadePos12.Z);
    public float ArcadeRot13 = -90f;
    public int Arcade13Ver;
    private static Vector3 ArcadePos14 = new Vector3(Class1.ArcadePos13.X, Class1.ArcadePos13.Y + 1f, Class1.ArcadePos13.Z);
    public float ArcadeRot14 = -90f;
    public int Arcade14Ver;
    private static Vector3 ArcadePos15 = new Vector3(Class1.ArcadePos14.X, Class1.ArcadePos14.Y + 1f, Class1.ArcadePos14.Z);
    public float ArcadeRot15 = -90f;
    public int Arcade15Ver;
    private static Vector3 ArcadePos16 = new Vector3(Class1.ArcadePos15.X, Class1.ArcadePos15.Y + 1f, Class1.ArcadePos15.Z);
    public float ArcadeRot16 = -90f;
    public int Arcade16Ver;
    private static Vector3 ArcadePos17 = new Vector3(2733.07f, -391.4859f, -49.5f);
    public float ArcadeRot17 = 180f;
    public int Arcade17Ver;
    private static Vector3 ArcadePos18 = new Vector3(Class1.ArcadePos17.X - 1f, Class1.ArcadePos17.Y, Class1.ArcadePos17.Z);
    public float ArcadeRot18 = 180f;
    public int Arcade18Ver;
    private static Vector3 ArcadePos19 = new Vector3(Class1.ArcadePos18.X - 1f, Class1.ArcadePos18.Y, Class1.ArcadePos18.Z);
    public float ArcadeRot19 = 180f;
    public int Arcade19Ver;
    private static Vector3 ArcadePos20 = new Vector3(Class1.ArcadePos19.X - 1f, Class1.ArcadePos19.Y, Class1.ArcadePos19.Z);
    public float ArcadeRot20 = 180f;
    public int Arcade20Ver;
    private ScriptSettings Config2;
    public Ped Bartender;
    public bool PlayRadioMusic;
    public bool RadioMusicOn;
    public Vector3 RadioPos = new Vector3(2721.3f, -381.3f, -50f);
    public bool RadioOn;
    public string DefaultRadioStation = "1_";
    public int CurrentRadioStation;
    public bool RefreshingRadio;
    public List<string> RadioStat = new List<string>();
    public float Range;
    public UIMenu UpgradeArcade;
    public UIMenu ArcadeMissions;
    public int ArcadeBusinessLevel;
    public float BusinessUpgradeIncreaseGain = 75000f;
    public float BusinessUpgradeBasePrice = 125000f;
    public float IncreaseStockMinAmount = 25000f;
    public float IncreaseStockMaxAmount = 350000f;
    public float DecreaseStockMinAmount = 25000f;
    public float DecreaseStockMaxAmount = 350000f;
    public List<Prop> ArcadeMissionProps = new List<Prop>();
    public List<Vehicle> ArcadeMissionVehicles = new List<Vehicle>();
    public List<Ped> ArcadeMissionPeds = new List<Ped>();
    public int DroneTimer1;
    public int DroneTimer2;
    public int DroneTimer3;
    public int ArcadeMoneyVault;
    public Vector3 ArcadeMoneyMarker = new Vector3(2728.24f, -374.4655f, -48.5f);
    public int ArcadeLevel;
    public int CurrentArcadeValue;
    public int CurrentArcade;
    public bool BuyingArcades;
    public Camera ArcadeBuyCam;
    public UIMenu ArcadeBuyMenu;
    public Prop FakeArcade;
    public List<RaceArcade> RacingArcades = new List<RaceArcade>();
    public List<string> ArcadePropNames = new List<string>()
    {
      "null",
      "ch_prop_arcade_claw_01a",
      "ch_prop_arcade_degenatron_01a",
      "ch_prop_arcade_fortune_01a",
      "ch_prop_arcade_gun_01a",
      "ch_prop_arcade_love_01a",
      "ch_prop_arcade_space_01a",
      "ch_prop_arcade_street_02b",
      "ch_prop_arcade_street_01d",
      "ch_prop_arcade_street_01c",
      "ch_prop_arcade_street_01b",
      "ch_prop_arcade_street_01a",
      "ch_prop_arcade_invade_01a",
      "ch_prop_arcade_wizard_01a"
    };
    public bool StockSupplyRunMission;
    public bool SellStockDeliveryMission;
    public Vehicle StockVeh;
    public List<Vector3> SellStockLoc = new List<Vector3>();
    public int SellStockPointsBeenAt;
    public List<Prop> SellStockProps = new List<Prop>();
    public Prop SellStockProp1;
    public Prop SellStockProp2;
    public Prop SellStockProp3;
    public Prop SellStockProp4;
    public Prop SellStockProp5;
    public Prop SellStockProp6;
    public Prop SellStockProp7;
    public Prop SellStockProp8;
    public Prop SellStockProp9;
    public List<string> CrateProps = new List<string>()
    {
      "ex_prop_crate_xldiam",
      "ex_prop_crate_wlife_sc",
      "ex_prop_crate_wlife_bc",
      "ex_prop_crate_watch",
      "ex_prop_crate_tob_sc",
      "ex_prop_crate_tob_bc",
      "ex_prop_crate_shide",
      "ex_prop_crate_pharma_sc",
      "ex_prop_crate_pharma_bc",
      "ex_prop_crate_oegg",
      "ex_prop_crate_narc_sc",
      "ex_prop_crate_narc_bc",
      "ex_prop_crate_money_sc",
      "ex_prop_crate_money_bc",
      "ex_prop_crate_minig",
      "ex_prop_crate_med_sc",
      "ex_prop_crate_med_bc",
      "ex_prop_crate_jewels_sc",
      "ex_prop_crate_jewels_racks_sc",
      "ex_prop_crate_jewels_racks_bc",
      "ex_prop_crate_jewels_bc",
      "ex_prop_crate_highend_pharma_sc",
      "ex_prop_crate_highend_pharma_bc",
      "ex_prop_crate_gems_sc",
      "ex_prop_crate_gems_bc",
      "ex_prop_crate_furjacket_sc",
      "ex_prop_crate_furjacket_bc",
      "ex_prop_crate_freel",
      "ex_prop_crate_expl_sc",
      "ex_prop_crate_expl_bc",
      "ex_prop_crate_elec_sc",
      "ex_prop_crate_elec_bc",
      "ex_prop_crate_clothing_sc",
      "ex_prop_crate_clothing_bc",
      "ex_prop_crate_closed_sc",
      "ex_prop_crate_closed_rw",
      "ex_prop_crate_closed_mw",
      "ex_prop_crate_closed_ms",
      "ex_prop_crate_closed_bc",
      "ex_prop_crate_bull_sc_02",
      "ex_prop_crate_bull_bc_02",
      "ex_prop_crate_biohazard_sc",
      "ex_prop_crate_biohazard_bc",
      "ex_prop_crate_art_sc",
      "ex_prop_crate_art_bc",
      "ex_prop_crate_art_02_sc",
      "ex_prop_crate_art_02_bc",
      "ex_prop_crate_ammo_sc",
      "ex_prop_crate_ammo_bc"
    };
    public int AmttoDeliver;
    public List<Vector3> DropPoint = new List<Vector3>();
    public List<Blip> DropBlip = new List<Blip>();
    public List<Ped> SuppyGuards = new List<Ped>();
    public bool CreateSupplyVehicle;
    public bool GotVehicle;
    public int SupplyMission = 1;
    public int missionnum;
    public Blip SupplyGarageBlip;
    public Vector3 Sam1Loc;
    public Vector3 Sam2Loc;
    public Vector3 Sam3Loc;
    public Vehicle Sam1;
    public Vehicle Sam2;
    public Vehicle Sam3;
    public Blip Sam1blip;
    public Blip Sam2blip;
    public Blip Sam3blip;
    public Blip EndPointBlip;
    public Vector3 EndPointVec;
    public int UndergrondAreaLocked;
    public bool UndergrondAreaLockedbool;
    public bool UndergrondAreaLockedbool2;
    public Blip ArcadeMissionBlip;
    public Blip ArcadeMissionBlip1;
    public Blip ArcadeMissionBlip2;
    public Blip ArcadeMissionBlip3;
    public List<Ped> ArcadeInteriorPeds2 = new List<Ped>();
    public List<Ped> ArcadeInteriorPeds = new List<Ped>();
    public Vector3 ArcadeRandomLoc;
    public bool ArcadeMissionComplete;
    public List<Prop> SeconardyArcadeProps = new List<Prop>();
    public bool Deletedoor;
    public Prop UndergroundDoor;
    public Vehicle RetreiveVehicle1;
    public Vehicle RetreiveVehicle2;
    public Vehicle RetreiveVehicle3;
    public bool RetreivedVehicle1;
    public bool RetreivedVehicle2;
    public bool RetreivedVehicle3;
    public List<Ped> ArcadeCarPed = new List<Ped>();
    public List<Ped> ArcadeBikePed = new List<Ped>();
    public int ArcadeCarPedTimer;
    public int ArcadeBikePedTimer;
    public int ArcadeMissionTimer;
    public List<string> CutscenePed1Comp = new List<string>()
    {
      "0_0_0",
      "1_0_0",
      "2_0_0",
      "3_0_0",
      "4_0_0",
      "5_0_0",
      "6_0_0",
      "7_0_0",
      "8_0_0",
      "9_0_0",
      "10_0_0",
      "11_0_0"
    };
    public List<string> CutscenePed2Comp = new List<string>()
    {
      "0_0_0",
      "1_0_0",
      "2_0_0",
      "3_0_0",
      "4_0_0",
      "5_0_0",
      "6_0_0",
      "7_0_0",
      "8_0_0",
      "9_0_0",
      "10_0_0",
      "11_0_0"
    };
    public List<string> CutscenePed3Comp = new List<string>()
    {
      "0_0_0",
      "1_0_0",
      "2_0_0",
      "3_0_0",
      "4_0_0",
      "5_0_0",
      "6_0_0",
      "7_0_0",
      "8_0_0",
      "9_0_0",
      "10_0_0",
      "11_0_0"
    };
    public List<string> CutscenePed4Comp = new List<string>()
    {
      "0_0_0",
      "1_0_0",
      "2_0_0",
      "3_0_0",
      "4_0_0",
      "5_0_0",
      "6_0_0",
      "7_0_0",
      "8_0_0",
      "9_0_0",
      "10_0_0",
      "11_0_0"
    };
    public bool PlayingCutscene;
    public string CurrentCutscene;
    public int EndCutsceneTime;
    public List<Vector3> WordrobePositions = new List<Vector3>();
    public List<Vector3> SHowerPositions = new List<Vector3>();
    public UIMenu All;
    public UIMenu PenthouseWoredrobeMainMenu;
    public UIMenu PenthouseWoredrobeMenu;
    public int CompMax;
    public int DrawableMax;
    public bool InShower;
    public WeaponTint Liv;
    public int ID_O;
    public string ID_C;
    public int Comp;
    public GTA.Model OldCharacter;
    public List<Vector3> SeatPos = new List<Vector3>();
    public List<float> SeatRot = new List<float>();
    private UIMenu PenthouseweaponsMenu;
    public Vector3 PenthouseGunLockerMarker;
    public int PenthouseGunLockerBought;
    private UIMenu PenthouseMK2Pumpshotgun;
    private UIMenu PenthouseMK2SNSPistol;
    private UIMenu PenthouseMK2Revolver;
    private UIMenu PenthouseMk2SpecialCarbine;
    private UIMenu PenthouseMK2Bullpup;
    private UIMenu PenthouseMK2MarksmanRifle;
    private UIMenu PenthouseMK2Pistol;
    private UIMenu PenthouseMK2SMG;
    private UIMenu PenthouseMK2LMG;
    private UIMenu PenthouseMK2Carbine;
    private UIMenu PenthouseMK2AssaultRifle;
    private UIMenu PenthouseMK2Sniper;
    private MenuPool PenthouseGLmodMenuPool;
    private UIMenu PenthouseGLmainMenu;
    public int PenthouseTintscount = 32;
    public int LiveryColor;
    private Keys Key3;
    private UIMenu PenthouseMmainMenu;
    public int PenthouseMoneyVaultBought = 1;
    public float MoneyStored;
    public float Commission;
    public UIMenu PenthouseMoneyMenu;
    public Vector3 PenthouseMoneyStorageMarker = new Vector3(973.4243f, 39.94411f, 115f);
    public int currentbank;
    public bool read;
    public Blip PenthouseRange;
    public Blip PenthouseRange2;
    public Prop GunBase;
    public List<Prop> GunComp = new List<Prop>();
    public int Positions;
    public Vector3 PenthouseArcadeMoneyMarker = new Vector3(2728.24f, -374.4655f, -48.5f);
    public int PenthouseArcadeOwned;
    public int PenthouseArcadeMoneyVault;
    public int PenthouseArcadeCheck = 0;
    public int ArcadeCheck = 0;
    public int CheckPurchaseArcadeLoc;
    public bool WaitingforPlayerToAcceptArcade;
    public bool isSeated;
    public string SeatDict;
    private UIMenu weaponsMenu;
    public Vector3 GunLockerMarker = new Vector3(2714f, -354.5f, -56f);
    private UIMenu MK2Pumpshotgun;
    private UIMenu MK2SNSPistol;
    private UIMenu MK2Revolver;
    private UIMenu Mk2SpecialCarbine;
    private UIMenu MK2Bullpup;
    private UIMenu MK2MarksmanRifle;
    private UIMenu MK2Pistol;
    private UIMenu MK2SMG;
    private UIMenu MK2LMG;
    private UIMenu MK2Carbine;
    private UIMenu MK2AssaultRifle;
    private UIMenu MK2Sniper;
    private UIMenu GunlockerMenu;
    public int Tintscount = 32;
    private List<string> ClubDancerList = new List<string>();
    private ScriptSettings CarConfig;
    public int PrizeCarUnlocked;
    public List<string> SlotMachineRings = new List<string>()
    {
      "vw_prop_casino_slot_01a",
      "vw_prop_casino_slot_02a",
      "vw_prop_casino_slot_03a",
      "vw_prop_casino_slot_04a",
      "vw_prop_casino_slot_05a",
      "vw_prop_casino_slot_06a",
      "vw_prop_casino_slot_07a",
      "vw_prop_casino_slot_08a"
    };
    public UIResRectangle RectangleGUI = new UIResRectangle(new Point(0, 0), new Size(0, 0));
    public List<UIMenu> GUIMenus = new List<UIMenu>();
    public bool CreatedBlips;
    public static Prop Whiskey;
    public static Prop WhiskeyGlass;
    public static Prop Wheat;
    public float DrunkLevel;
    public int DrinkScene;
    public int DrinkType;
    public static Prop Wine;
    public static Prop WineGlass;
    public static Vector3 WinePosition;
    public static Vector3 WineGlassPosition;
    public static Vector3 WineRotation;
    public static Vector3 WineGlassRotation;
    public static int DrunkStage = 1;
    public static int WhiskeyTaskScriptStatus = -1;
    public static int WineTaskScriptStatus = -1;
    public static int WheatTaskScriptStatus = -1;
    public static List<GTA.Model> WineModels = new List<GTA.Model>()
    {
      (GTA.Model) 21833643
    };
    public static List<GTA.Model> WineGlassModels = new List<GTA.Model>()
    {
      (GTA.Model) -35679191
    };
    public static List<GTA.Model> WheatModels = new List<GTA.Model>()
    {
      (GTA.Model) 469594741
    };
    public static List<GTA.Model> WhiskeyModels = new List<GTA.Model>()
    {
      (GTA.Model) 488156118
    };
    public static List<GTA.Model> WhiskeyGlassModels = new List<GTA.Model>()
    {
      (GTA.Model) -1533900808,
      (GTA.Model) 1480049515
    };
    public static Vector3 WhiskeyPosition;
    public static Vector3 WhiskeyGlassPosition;
    public static Vector3 WhiskeyRotation;
    public static Vector3 WhiskeyGlassRotation;
    public static Vector3 WheatPosition;
    public static Vector3 WheatRotation;
    public Vector3 Offset = new Vector3(0.06f, -0.04f, -0.06f);
    public int DrunkCamTimer;
    public int BottleType;
    public List<PedHash> PossibleSwimmer = new List<PedHash>();
    public UIMenuItem StartP;
    public UIMenuItem StopP;
    public Vector3 NewMarkerRoulette;
    public int RouletteSpinScene;
    public string CurrentNum;
    public string A_roulette = "";
    public int B_roulette = 0;
    public int Scene4;
    public bool ReadyForRouletteEnd;
    public bool BYPASS_NOSAVE_OR_CRASH = true;
    public int DAYSTORESET_UPDATETIME = 12;
    public int DaysWait = 3;
    public int NextDay;
    public int NextMonth;
    public int NextYear;
    public int Now;
    public int Party_NextDay;
    public int Party_NextMonth;
    public int Party_NextYear;
    public int Party_Now;
    private int _OSMovie;
    private int OSTex;
    public string RoulleteTable = "A";
    public Vehicle TestV;
    public int ChangeTimer;
    public bool MovedChair;
    public Prop ChairProp;
    public Prop ChairProp2;
    public Prop GunLockerDoor;
    public Prop MoneyVaultDoor;
    public bool isGLOpen;
    public bool isMVOpen;
    public bool OpenGunlockerDoor;
    public bool MoneyVaultDoorOpen;
    public string ChairPropModelMain = "ex_prop_offchair_exec_01";
    public string ChairPropModelArcadeA = "ex_prop_offchair_exec_01";
    public string ChairPropModelArcadeB = "ex_prop_offchair_exec_01";
    public string ChairPropModelPenthouse = "ex_prop_offchair_exec_01";
    public Prop _8PlayerPokerGameTable1;
    public Prop _8PlayerPokerGameTable2;
    public Prop _8PlayerPokerGameTable3;
    public List<Ped> _8PlayerGamePokerPeds = new List<Ped>();
    public List<Prop> _8PlayerGamePokerProps = new List<Prop>();
    public List<Prop> _8PlayerGamePokerPotChips = new List<Prop>();
    public float _8PlayerGamePoker_PlayerBank;
    public float _8PlayerGamePoker_AI1Bank;
    public float _8PlayerGamePoker_AI2Bank;
    public float _8PlayerGamePoker_AI3Bank;
    public float _8PlayerGamePoker_AI4Bank;
    public float _8PlayerGamePoker_AI5Bank;
    public float _8PlayerGamePoker_AI6Bank;
    public float _8PlayerGamePoker_AI7Bank;
    public float _8PlayerGamePokerPot;
    public Vector3 _8PlayerGameStartMarker;
    public Vector3 _8PlayerGameExitMarker;
    public int AI1_SyncScene;
    public int AI2_SyncScene;
    public int AI3_SyncScene;
    public int AI4_SyncScene;
    public int AI5_SyncScene;
    public int AI6_SyncScene;
    public int AI7_SyncScene;
    public Ped AI_1;
    public Ped AI_2;
    public Ped AI_3;
    public Ped AI_4;
    public Ped AI_5;
    public Ped AI_6;
    public Ped AI_7;
    public bool Player_SkipTurn;
    public bool Player_Bust;
    public bool AI1_SkipTurn;
    public bool AI1_Bust;
    public bool AI2_SkipTurn;
    public bool AI2_Bust;
    public bool AI3_SkipTurn;
    public bool AI3_Bust;
    public bool AI4_SkipTurn;
    public bool AI4_Bust;
    public bool AI5_SkipTurn;
    public bool AI5_Bust;
    public bool AI6_SkipTurn;
    public bool AI6_Bust;
    public bool AI7_SkipTurn;
    public bool AI7_Bust;
    public int _8PlayerGameStage;
    public Ped _8PlayerGameDealer;
    public List<DRaC_Business.PlayerChips> PlayerChips = new List<DRaC_Business.PlayerChips>();
    public List<DRaC_Business.PlayerCards> PlayerCards = new List<DRaC_Business.PlayerCards>();
    public float LastRaiseAmmount;
    public Prop PlayerCard1;
    public Prop PlayerCard2;
    public Prop PlayerCard3;
    public float _8PlayerGamePoker_PlayerStartingBank;
    public float _8PlayerGamePoker_AI1StartingBank;
    public float _8PlayerGamePoker_AI2StartingBank;
    public float _8PlayerGamePoker_AI3StartingBank;
    public float _8PlayerGamePoker_AI4StartingBank;
    public float _8PlayerGamePoker_AI5StartingBank;
    public float _8PlayerGamePoker_AI6StartingBank;
    public float _8PlayerGamePoker_AI7StartingBank;
    public bool lookingAtCards;
    public float PlayerTotal;
    public float AI1Total;
    public float AI2Total;
    public float AI3Total;
    public float AI4Total;
    public float AI5Total;
    public float AI6Total;
    public float AI7Total;
    public int Scene2;
    public Prop ChipsSpawn;
    public Prop Deck;
    public Prop LastChip;
    public Prop CommunityCard1;
    public float CommunityCard1Value;
    public string CommunityCard1ID;
    public Prop CommunityCard2;
    public float CommunityCard2Value;
    public string CommunityCard2ID;
    public Prop CommunityCard3;
    public float CommunityCard3Value;
    public string CommunityCard3ID;
    public bool IsinBettingRound;
    public float MaxRaiseAmt;
    public int StackChip;
    public float StackChipHeight;
    public bool Playing8PlayerPoker;
    public bool CreatedInterior;
    public bool Onterrace = false;
    public Ped PenthouseBlackJackDealer;
    public Ped PenthousePokerDealer;
    public Prop PenthouseBlackJackProp;
    public Prop PenthousePokerProp;
    public Prop PenthouseBlackJackProp2;
    public Prop PenthousePokerProp2;
    public int NCStageS;
    public int NightMovie;
    public bool CleanUpS;
    public int ONscreens;
    public int NCStageS2;
    public int NightMovie2;
    public bool CleanUpS2;
    public int ONscreens2;
    public int NCStageS3;
    public int NightMovie3;
    public bool CleanUpS3;
    public int ONscreens3;
    public int SlotStage;
    public int SlotMovie;
    public bool SlotCleanUpS;
    public int SlotONscreens;
    public string MainScreensAnimTex = "CASINO_DIA_PL";
    public string PenthouseScreensAnimTex = "CASINO_SNWFLK_PL";
    public string TVScreensAnimTex = "CASINO_SNWFLK_PL";
    public static List<GTA.Model> TVModels = new List<GTA.Model>()
    {
      (GTA.Model) -240931727
    };
    public static int rendertargetid;
    public static int ex_rendertargetid;
    public static int rendertargetid2;
    public static bool TVOn = false;
    public static bool SubtitleOn = false;
    public static int TV_Volume = 0;
    public static int TV_Channel;
    public static List<int> TVChannelList = new List<int>()
    {
      0,
      1
    };
    public static Camera TVCamera;
    public Prop TV;
    public int tvscene;
    public bool CreateTv = false;
    public Prop TrailerTV;
    public bool FirstPlay;
    public Prop SlotProp1;
    public Prop SlotProp2;
    public Prop SlotProp3;
    public Vector3 uParam1;
    public float fParam2;
    public int StageA;
    public int StageB;
    public int StageC;
    public int RotateTimerA;
    public int RotateTimerB;
    public int RotateTimerC;
    public List<SlotsClass> SlotLocH = new List<SlotsClass>();
    public List<Prop> SlotMachineProps = new List<Prop>();
    public Prop CurrentSlotMachine;
    private bool FirsttimeST = false;
    public Prop ReelABase;
    public Prop ReelBBase;
    public Prop ReelCBase;
    public int SlotMachineStage;
    public string SlotDict;
    public bool SlotInUse;
    public string ALandedOn;
    public string BLandedOn;
    public string CLandedOn;
    public bool BetOne;
    public bool BetMax;
    public float BetSlot;
    public float ReelA_SpinAmt;
    public float ReelB_SpinAmt;
    public float ReelC_SpinAmt;
    public bool SpinnedReels;
    public bool FinishedReelA;
    public bool FinishedReelB;
    public bool FinishedReelC;
    public SlotsClass CurrentSlotClass;
    public float MinStartBet;
    public float SlotMultiplier;
    public List<int> SlotMachineSounds = new List<int>();
    public int wheelscene;
    public bool FinishedAnim;
    public bool FinalAnim;
    public bool GotPrize;
    public int[] scaleformsID = new int[20]
    {
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1,
      -1
    };
    public bool CreatedScales = false;
    public bool isSeated2;
    public string SeatDict2;
    public List<Vector3> SeatPos2 = new List<Vector3>();
    public List<float> Seatrot2 = new List<float>();
    public List<Vector3> DisanceVec = new List<Vector3>();
    public List<float> DisanceFloat = new List<float>();
    public Vector3 CurrentPos;
    public bool gotCurrent;
    public int SitScene1;
    public bool SwitchScene;
    public float TVRange = 12f;
    public static int ex_rendertargetid2;
    public static int rendertargetid22;
    public static bool TVOn2 = false;
    public static bool SubtitleOn2 = false;
    public static int TV_Volume2 = 0;
    public static int TV_Channel2;
    public bool GotPenthouseScreen;
    public Prop PenthouseScreen;
    public bool RenderPenthouseScreen;
    public Prop CasinoDoor;
    public int TVtype = 0;
    public int FireHandle;
    public List<Class1.PedTaskLoop> WanderingPedPoints = new List<Class1.PedTaskLoop>();
    public Ped Swimmer;
    public bool loadfirsttimedoords;
    public bool CreatedPenthouseTables;
    public Vector3 PlayerOriginPosition;
    public float PlayerOriginHeading;
    public int spawn;
    public bool SpawnedDancers;
    public List<Ped> Dancers = new List<Ped>();
    public bool PartyOn;
    public Prop Bottle;
    public Prop Glass;
    public bool PlayingDrinkAnim;
    public int minus;
    public int vect;
    public bool PlayedCutscene;
    public int scaleformloading;

    public DealerTable GetClosestDealerTable(Vector3 vec, List<DealerTable> List)
    {
      DealerTable dealerTable1 = this.PokerDealerTables[0];
      float num = 9999f;
      foreach (DealerTable dealerTable2 in List)
      {
        if ((double) World.GetDistance(vec, dealerTable2.Table.Position) < (double) num)
        {
          num = World.GetDistance(vec, dealerTable2.Table.Position);
          dealerTable1 = dealerTable2;
        }
      }
      return dealerTable1;
    }

    public Prop GetClosestTable(Vector3 vec, List<DealerTable> List)
    {
      Prop prop = this._8PlayerPokerGameTable1;
      float num = 9999f;
      foreach (DealerTable dealerTable in List)
      {
        if ((double) World.GetDistance(vec, dealerTable.Table.Position) < (double) num)
        {
          num = World.GetDistance(vec, dealerTable.Table.Position);
          prop = dealerTable.Table;
        }
      }
      return prop;
    }

    public Ped GetClosestDealer(Vector3 vec, List<DealerTable> List)
    {
      Ped ped = Game.Player.Character;
      float num = 9999f;
      foreach (DealerTable dealerTable in List)
      {
        if ((Entity) dealerTable.Dealer == (Entity) null)
          UI.Notify("L.Dealer null");
        if ((double) World.GetDistance(vec, dealerTable.Dealer.Position) < (double) num)
        {
          num = World.GetDistance(vec, dealerTable.Dealer.Position);
          ped = dealerTable.Dealer;
        }
      }
      return ped;
    }

    public string GetHostName() => this.HostName;

    public GTA.Model RequestModel(int Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public void SetPedOutfitCutscene(string MP, Ped NonCutscene)
    {
      if (MP.Equals("MP_1"))
      {
        this.CutscenePed1Comp[0] = "0_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 0).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 0).ToString();
        this.CutscenePed1Comp[1] = "1_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 1).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 1).ToString();
        this.CutscenePed1Comp[2] = "2_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 2).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 2).ToString();
        this.CutscenePed1Comp[3] = "3_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 3).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 3).ToString();
        this.CutscenePed1Comp[4] = "4_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 4).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 4).ToString();
        this.CutscenePed1Comp[5] = "5_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 5).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 5).ToString();
        this.CutscenePed1Comp[6] = "6_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 6).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 6).ToString();
        this.CutscenePed1Comp[7] = "7_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 7).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 7).ToString();
        this.CutscenePed1Comp[8] = "8_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 8).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 8).ToString();
        this.CutscenePed1Comp[9] = "9_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 9).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 9).ToString();
        this.CutscenePed1Comp[10] = "10_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 10).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 10).ToString();
        this.CutscenePed1Comp[11] = "11_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 11).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 11).ToString();
      }
      if (MP.Equals("MP_2"))
      {
        this.CutscenePed2Comp[0] = "0_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 0).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 0).ToString();
        this.CutscenePed2Comp[1] = "1_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 1).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 1).ToString();
        this.CutscenePed2Comp[2] = "2_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 2).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 2).ToString();
        this.CutscenePed2Comp[3] = "3_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 3).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 3).ToString();
        this.CutscenePed2Comp[4] = "4_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 4).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 4).ToString();
        this.CutscenePed2Comp[5] = "5_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 5).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 5).ToString();
        this.CutscenePed2Comp[6] = "6_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 6).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 6).ToString();
        this.CutscenePed2Comp[7] = "7_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 7).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 7).ToString();
        this.CutscenePed2Comp[8] = "8_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 8).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 8).ToString();
        this.CutscenePed2Comp[9] = "9_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 9).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 9).ToString();
        this.CutscenePed2Comp[10] = "10_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 10).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 10).ToString();
        this.CutscenePed2Comp[11] = "11_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 11).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 11).ToString();
      }
      if (MP.Equals("MP_3"))
      {
        this.CutscenePed3Comp[0] = "0_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 0).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 0).ToString();
        this.CutscenePed3Comp[1] = "1_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 1).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 1).ToString();
        this.CutscenePed3Comp[2] = "2_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 2).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 2).ToString();
        this.CutscenePed3Comp[3] = "3_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 3).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 3).ToString();
        this.CutscenePed3Comp[4] = "4_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 4).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 4).ToString();
        this.CutscenePed3Comp[5] = "5_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 5).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 5).ToString();
        this.CutscenePed3Comp[6] = "6_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 6).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 6).ToString();
        this.CutscenePed3Comp[7] = "7_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 7).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 7).ToString();
        this.CutscenePed3Comp[8] = "8_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 8).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 8).ToString();
        this.CutscenePed3Comp[9] = "9_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 9).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 9).ToString();
        this.CutscenePed3Comp[10] = "10_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 10).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 10).ToString();
        this.CutscenePed3Comp[11] = "11_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 11).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 11).ToString();
      }
      if (!MP.Equals("MP_4"))
        return;
      this.CutscenePed4Comp[0] = "0_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 0).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 0).ToString();
      this.CutscenePed4Comp[1] = "1_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 1).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 1).ToString();
      this.CutscenePed4Comp[2] = "2_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 2).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 2).ToString();
      this.CutscenePed4Comp[3] = "3_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 3).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 3).ToString();
      this.CutscenePed4Comp[4] = "4_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 4).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 4).ToString();
      this.CutscenePed4Comp[5] = "5_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 5).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 5).ToString();
      this.CutscenePed4Comp[6] = "6_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 6).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 6).ToString();
      this.CutscenePed4Comp[7] = "7_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 7).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 7).ToString();
      this.CutscenePed4Comp[8] = "8_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 8).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 8).ToString();
      this.CutscenePed4Comp[9] = "9_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 9).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 9).ToString();
      this.CutscenePed4Comp[10] = "10_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 10).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 10).ToString();
      this.CutscenePed4Comp[11] = "11_" + Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) NonCutscene, (InputArgument) 11).ToString() + "_" + Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) NonCutscene, (InputArgument) 11).ToString();
    }

    public void GetPedOutfitCutscene(string MP, Ped NonCutscene)
    {
      if (MP.Equals("MP_1"))
      {
        string[] strArray1 = this.CutscenePed1Comp[0].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 0, (InputArgument) int.Parse(strArray1[1]), (InputArgument) int.Parse(strArray1[2]), (InputArgument) 1);
        string[] strArray2 = this.CutscenePed1Comp[1].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 1, (InputArgument) int.Parse(strArray2[1]), (InputArgument) int.Parse(strArray2[2]), (InputArgument) 1);
        string[] strArray3 = this.CutscenePed1Comp[2].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 2, (InputArgument) int.Parse(strArray3[1]), (InputArgument) int.Parse(strArray3[2]), (InputArgument) 1);
        string[] strArray4 = this.CutscenePed1Comp[3].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 3, (InputArgument) int.Parse(strArray4[1]), (InputArgument) int.Parse(strArray4[2]), (InputArgument) 1);
        string[] strArray5 = this.CutscenePed1Comp[4].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 4, (InputArgument) int.Parse(strArray5[1]), (InputArgument) int.Parse(strArray5[2]), (InputArgument) 1);
        string[] strArray6 = this.CutscenePed1Comp[5].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 5, (InputArgument) int.Parse(strArray6[1]), (InputArgument) int.Parse(strArray6[2]), (InputArgument) 1);
        string[] strArray7 = this.CutscenePed1Comp[6].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 6, (InputArgument) int.Parse(strArray7[1]), (InputArgument) int.Parse(strArray7[2]), (InputArgument) 1);
        string[] strArray8 = this.CutscenePed1Comp[7].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 7, (InputArgument) int.Parse(strArray8[1]), (InputArgument) int.Parse(strArray8[2]), (InputArgument) 1);
        string[] strArray9 = this.CutscenePed1Comp[8].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 8, (InputArgument) int.Parse(strArray9[1]), (InputArgument) int.Parse(strArray9[2]), (InputArgument) 1);
        string[] strArray10 = this.CutscenePed1Comp[9].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 9, (InputArgument) int.Parse(strArray10[1]), (InputArgument) int.Parse(strArray10[2]), (InputArgument) 1);
        string[] strArray11 = this.CutscenePed1Comp[10].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 10, (InputArgument) int.Parse(strArray11[1]), (InputArgument) int.Parse(strArray11[2]), (InputArgument) 1);
        string[] strArray12 = this.CutscenePed1Comp[11].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 11, (InputArgument) int.Parse(strArray12[1]), (InputArgument) int.Parse(strArray12[2]), (InputArgument) 1);
      }
      if (MP.Equals("MP_2"))
      {
        string[] strArray1 = this.CutscenePed2Comp[0].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 0, (InputArgument) int.Parse(strArray1[1]), (InputArgument) int.Parse(strArray1[2]), (InputArgument) 1);
        string[] strArray2 = this.CutscenePed2Comp[1].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 1, (InputArgument) int.Parse(strArray2[1]), (InputArgument) int.Parse(strArray2[2]), (InputArgument) 1);
        string[] strArray3 = this.CutscenePed2Comp[2].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 2, (InputArgument) int.Parse(strArray3[1]), (InputArgument) int.Parse(strArray3[2]), (InputArgument) 1);
        string[] strArray4 = this.CutscenePed2Comp[3].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 3, (InputArgument) int.Parse(strArray4[1]), (InputArgument) int.Parse(strArray4[2]), (InputArgument) 1);
        string[] strArray5 = this.CutscenePed2Comp[4].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 4, (InputArgument) int.Parse(strArray5[1]), (InputArgument) int.Parse(strArray5[2]), (InputArgument) 1);
        string[] strArray6 = this.CutscenePed2Comp[5].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 5, (InputArgument) int.Parse(strArray6[1]), (InputArgument) int.Parse(strArray6[2]), (InputArgument) 1);
        string[] strArray7 = this.CutscenePed2Comp[6].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 6, (InputArgument) int.Parse(strArray7[1]), (InputArgument) int.Parse(strArray7[2]), (InputArgument) 1);
        string[] strArray8 = this.CutscenePed2Comp[7].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 7, (InputArgument) int.Parse(strArray8[1]), (InputArgument) int.Parse(strArray8[2]), (InputArgument) 1);
        string[] strArray9 = this.CutscenePed2Comp[8].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 8, (InputArgument) int.Parse(strArray9[1]), (InputArgument) int.Parse(strArray9[2]), (InputArgument) 1);
        string[] strArray10 = this.CutscenePed2Comp[9].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 9, (InputArgument) int.Parse(strArray10[1]), (InputArgument) int.Parse(strArray10[2]), (InputArgument) 1);
        string[] strArray11 = this.CutscenePed2Comp[10].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 10, (InputArgument) int.Parse(strArray11[1]), (InputArgument) int.Parse(strArray11[2]), (InputArgument) 1);
        string[] strArray12 = this.CutscenePed2Comp[11].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 11, (InputArgument) int.Parse(strArray12[1]), (InputArgument) int.Parse(strArray12[2]), (InputArgument) 1);
      }
      if (MP.Equals("MP_3"))
      {
        string[] strArray1 = this.CutscenePed2Comp[0].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 0, (InputArgument) int.Parse(strArray1[1]), (InputArgument) int.Parse(strArray1[2]), (InputArgument) 1);
        string[] strArray2 = this.CutscenePed3Comp[1].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 1, (InputArgument) int.Parse(strArray2[1]), (InputArgument) int.Parse(strArray2[2]), (InputArgument) 1);
        string[] strArray3 = this.CutscenePed3Comp[2].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 2, (InputArgument) int.Parse(strArray3[1]), (InputArgument) int.Parse(strArray3[2]), (InputArgument) 1);
        string[] strArray4 = this.CutscenePed3Comp[3].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 3, (InputArgument) int.Parse(strArray4[1]), (InputArgument) int.Parse(strArray4[2]), (InputArgument) 1);
        string[] strArray5 = this.CutscenePed3Comp[4].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 4, (InputArgument) int.Parse(strArray5[1]), (InputArgument) int.Parse(strArray5[2]), (InputArgument) 1);
        string[] strArray6 = this.CutscenePed3Comp[5].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 5, (InputArgument) int.Parse(strArray6[1]), (InputArgument) int.Parse(strArray6[2]), (InputArgument) 1);
        string[] strArray7 = this.CutscenePed3Comp[6].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 6, (InputArgument) int.Parse(strArray7[1]), (InputArgument) int.Parse(strArray7[2]), (InputArgument) 1);
        string[] strArray8 = this.CutscenePed3Comp[7].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 7, (InputArgument) int.Parse(strArray8[1]), (InputArgument) int.Parse(strArray8[2]), (InputArgument) 1);
        string[] strArray9 = this.CutscenePed3Comp[8].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 8, (InputArgument) int.Parse(strArray9[1]), (InputArgument) int.Parse(strArray9[2]), (InputArgument) 1);
        string[] strArray10 = this.CutscenePed3Comp[9].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 9, (InputArgument) int.Parse(strArray10[1]), (InputArgument) int.Parse(strArray10[2]), (InputArgument) 1);
        string[] strArray11 = this.CutscenePed3Comp[10].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 10, (InputArgument) int.Parse(strArray11[1]), (InputArgument) int.Parse(strArray11[2]), (InputArgument) 1);
        string[] strArray12 = this.CutscenePed3Comp[11].Split('_');
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 11, (InputArgument) int.Parse(strArray12[1]), (InputArgument) int.Parse(strArray12[2]), (InputArgument) 1);
      }
      if (!MP.Equals("MP_4"))
        return;
      string[] strArray13 = this.CutscenePed1Comp[0].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 0, (InputArgument) int.Parse(strArray13[1]), (InputArgument) int.Parse(strArray13[2]), (InputArgument) 1);
      string[] strArray14 = this.CutscenePed4Comp[1].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 1, (InputArgument) int.Parse(strArray14[1]), (InputArgument) int.Parse(strArray14[2]), (InputArgument) 1);
      string[] strArray15 = this.CutscenePed4Comp[2].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 2, (InputArgument) int.Parse(strArray15[1]), (InputArgument) int.Parse(strArray15[2]), (InputArgument) 1);
      string[] strArray16 = this.CutscenePed4Comp[3].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 3, (InputArgument) int.Parse(strArray16[1]), (InputArgument) int.Parse(strArray16[2]), (InputArgument) 1);
      string[] strArray17 = this.CutscenePed4Comp[4].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 4, (InputArgument) int.Parse(strArray17[1]), (InputArgument) int.Parse(strArray17[2]), (InputArgument) 1);
      string[] strArray18 = this.CutscenePed4Comp[5].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 5, (InputArgument) int.Parse(strArray18[1]), (InputArgument) int.Parse(strArray18[2]), (InputArgument) 1);
      string[] strArray19 = this.CutscenePed4Comp[6].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 6, (InputArgument) int.Parse(strArray19[1]), (InputArgument) int.Parse(strArray19[2]), (InputArgument) 1);
      string[] strArray20 = this.CutscenePed4Comp[7].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 7, (InputArgument) int.Parse(strArray20[1]), (InputArgument) int.Parse(strArray20[2]), (InputArgument) 1);
      string[] strArray21 = this.CutscenePed4Comp[8].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 8, (InputArgument) int.Parse(strArray21[1]), (InputArgument) int.Parse(strArray21[2]), (InputArgument) 1);
      string[] strArray22 = this.CutscenePed4Comp[9].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 9, (InputArgument) int.Parse(strArray22[1]), (InputArgument) int.Parse(strArray22[2]), (InputArgument) 1);
      string[] strArray23 = this.CutscenePed4Comp[10].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 10, (InputArgument) int.Parse(strArray23[1]), (InputArgument) int.Parse(strArray23[2]), (InputArgument) 1);
      string[] strArray24 = this.CutscenePed4Comp[11].Split('_');
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) NonCutscene, (InputArgument) 11, (InputArgument) int.Parse(strArray24[1]), (InputArgument) int.Parse(strArray24[2]), (InputArgument) 1);
    }

    public void PlayCutscene(string Cut)
    {
      this.CurrentCutscene = Cut;
      Function.Call(Hash._0x7A86743F475D9E09, (InputArgument) this.CurrentCutscene, (InputArgument) 0);
      if (!Function.Call<bool>(Hash._0xC59F528E9AB9F339) || this.PlayingCutscene || Function.Call<bool>(Hash._0xD3C2E180A40F031E))
        return;
      this.CutsenePed1 = Game.Player.Character;
      this.SetPedOutfitCutscene("MP_1", Game.Player.Character);
      Function.Call(Hash._0xE40C1C56DF95C2E8, (InputArgument) this.CutsenePed1, (InputArgument) "MP_1", (InputArgument) 0, (InputArgument) 0, (InputArgument) 64);
      if ((Entity) this.CutsenePed2 != (Entity) null)
      {
        this.SetPedOutfitCutscene("MP_2", this.CutsenePed2);
        Function.Call(Hash._0xE40C1C56DF95C2E8, (InputArgument) this.CutsenePed2, (InputArgument) "MP_2", (InputArgument) 0, (InputArgument) 0, (InputArgument) 64);
      }
      if ((Entity) this.CutsenePed3 != (Entity) null)
      {
        this.SetPedOutfitCutscene("MP_3", this.CutsenePed3);
        Function.Call(Hash._0xE40C1C56DF95C2E8, (InputArgument) this.CutsenePed3, (InputArgument) "MP_3", (InputArgument) 0, (InputArgument) 0, (InputArgument) 64);
      }
      if ((Entity) this.CutsenePed4 != (Entity) null)
      {
        this.SetPedOutfitCutscene("MP_2", this.CutsenePed4);
        Function.Call(Hash._0xE40C1C56DF95C2E8, (InputArgument) this.CutsenePed4, (InputArgument) "MP_4", (InputArgument) 0, (InputArgument) 0, (InputArgument) 64);
      }
      Function.Call(Hash._0x186D5CB5E7B0FF7B, (InputArgument) 0);
      Script.Wait(100);
      this.PlayingCutscene = true;
      this.GetPedOutfitCutscene("MP_1", this.CutsenePed1);
    }

    public void SetLivery(string Weapon, string Component) => Function.Call((Hash) 11521724316029606125, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component), (InputArgument) this.LiveryColor);

    public int GetLivery(string Weapon, string Component) => Function.Call<int>((Hash) 17340547693307858733, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component));

    public bool CheckWeaponCamo(Weapon Weapon)
    {
      bool flag = false;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        flag = true;
      return flag;
    }

    public void SetWeaponLivery(Weapon Weapon)
    {
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (!Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        return;
      this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
    }

    public int GetWeaponLivery(Weapon Weapon)
    {
      int num = 0;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      int livery;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
      return num;
    }

    private void PenthouseSetupWeapons()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Classic Black");
      items1.Add((object) "Classic Gray");
      items1.Add((object) "Classic Two-Tone");
      items1.Add((object) "Classic White");
      items1.Add((object) "Classic Beige");
      items1.Add((object) "Classic Green");
      items1.Add((object) "Classic Blue");
      items1.Add((object) "Classic Earth");
      items1.Add((object) "Classic Brown & Black");
      items1.Add((object) "Red Contrast");
      items1.Add((object) "Blue Contrast");
      items1.Add((object) "Yellow Contrast");
      items1.Add((object) "Orange Contrast");
      items1.Add((object) "Bold Pink");
      items1.Add((object) "Bold Purple & Yellow");
      items1.Add((object) "Bold Orange");
      items1.Add((object) "Bold Green & Purple");
      items1.Add((object) "Bold Red & Black");
      items1.Add((object) "Bold Green & Black");
      items1.Add((object) "Bold Cyan & Black");
      items1.Add((object) "Bold Yellow & Black");
      items1.Add((object) "Bold Red & White");
      items1.Add((object) "Bold Blue & White");
      items1.Add((object) "Metallic Gold");
      items1.Add((object) "Metallic Platinum");
      items1.Add((object) "Metallic Gray & Lilac");
      items1.Add((object) "Metallic Purple & Lime");
      items1.Add((object) "Metallic Red");
      items1.Add((object) "Metallic Green");
      items1.Add((object) "Metallic Blue");
      items1.Add((object) "Metallic White & Aqua");
      items1.Add((object) "Metallic Red & Yellow");
      List<object> items2 = new List<object>();
      items2.Add((object) "Grey");
      items2.Add((object) "Dark Grey");
      items2.Add((object) "Black");
      items2.Add((object) "White");
      items2.Add((object) "Blue ");
      items2.Add((object) "Cyan");
      items2.Add((object) "Aqua");
      items2.Add((object) "Cool Blue");
      items2.Add((object) "Dark Blue");
      items2.Add((object) "Royal Blue");
      items2.Add((object) "Plum");
      items2.Add((object) "Dark Purple");
      items2.Add((object) "Purple");
      items2.Add((object) "Red");
      items2.Add((object) "Wine Red");
      items2.Add((object) "Magenta");
      items2.Add((object) "Pink ");
      items2.Add((object) "Salmon");
      items2.Add((object) "Hot Pink");
      items2.Add((object) "Rust Orange ");
      items2.Add((object) "Brown");
      items2.Add((object) "Earth");
      items2.Add((object) "Orange");
      items2.Add((object) "Light Orange");
      items2.Add((object) "Dark Yellow");
      items2.Add((object) "Yellow");
      items2.Add((object) "Light Brown");
      items2.Add((object) "Lime Green");
      items2.Add((object) "Olive");
      items2.Add((object) "Moss");
      items2.Add((object) "Turquoise");
      items2.Add((object) "Dark Green");
      float CPrice = 34000f;
      List<object> Mk2Weapons = new List<object>();
      Mk2Weapons.Add((object) WeaponHash.AssaultrifleMk2);
      Mk2Weapons.Add((object) WeaponHash.BullpupRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CarbineRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CombatMGMk2);
      Mk2Weapons.Add((object) WeaponHash.HeavySniperMk2);
      Mk2Weapons.Add((object) WeaponHash.MarksmanRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.PistolMk2);
      Mk2Weapons.Add((object) WeaponHash.PumpShotgunMk2);
      Mk2Weapons.Add((object) WeaponHash.RevolverMk2);
      Mk2Weapons.Add((object) WeaponHash.SMGMk2);
      Mk2Weapons.Add((object) WeaponHash.SNSPistolMk2);
      Mk2Weapons.Add((object) WeaponHash.SpecialCarbineMk2);
      List<object> Components = new List<object>();
      Components.Add((object) WeaponComponent.AssaultRifleClip01);
      Components.Add((object) WeaponComponent.AssaultRifleClip02);
      UIMenu uiMenu1 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseweaponsMenu, "Mk2 Weapons (Advanced)");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem W = new UIMenuListItem("Weapon : ", Mk2Weapons, 0);
      uiMenu1.AddItem((UIMenuItem) W);
      UIMenuListItem C = new UIMenuListItem("Component  : ", Components, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      UIMenuItem Enable = new UIMenuItem("Enable Component : $" + CPrice.ToString("N"));
      uiMenu1.AddItem(Enable);
      UIMenuItem DIsable = new UIMenuItem("Disable Component");
      uiMenu1.AddItem(DIsable);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem1);
      UIMenuListItem WT = new UIMenuListItem("Tint ", items1, 0);
      uiMenu1.AddItem((UIMenuItem) WT);
      UIMenuItem getTintAV = new UIMenuItem("Buy Tint: $10,000");
      uiMenu1.AddItem(getTintAV);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem2);
      UIMenuListItem WT2 = new UIMenuListItem("Livery Tint ", items2, 0);
      uiMenu1.AddItem((UIMenuItem) WT2);
      UIMenuItem getTintAV2 = new UIMenuItem("Buy Livery Tint: $10,000");
      uiMenu1.AddItem(getTintAV2);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == W)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__0 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__0, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
          if (target1((CallSite) p1, obj1))
          {
            Components.Clear();
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__918.\u003C\u003Ep__2 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__2, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            foreach (WeaponComponent weaponComponent in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) weaponComponent.GetHashCode()))
                  Components.Add((object) weaponComponent);
              }
              catch
              {
              }
            }
          }
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__4.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p4 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__4;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__3, Components[C.Index]);
          string str = target2((CallSite) p4, obj2);
          if (str.Contains("Muzzle"))
          {
            CPrice = 45700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
        }
        if (item != C)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__918.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target = Class1.\u003C\u003Eo__918.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p6 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__918.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj = Class1.\u003C\u003Eo__918.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__5, Components[C.Index]);
        string str1 = target((CallSite) p6, obj);
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Sights"))
        {
          CPrice = 24700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Tracer"))
        {
          CPrice = 42700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("FMJ"))
        {
          CPrice = 73000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ArmourPiercing"))
        {
          CPrice = 63000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Incediary"))
        {
          CPrice = 49000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ClipExplosive"))
        {
          CPrice = 115450f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Grip"))
        {
          CPrice = 14080f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Supp"))
        {
          CPrice = 40250f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Clip02"))
        {
          CPrice = 60000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo01"))
        {
          CPrice = 40000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo02"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo03"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo04"))
        {
          CPrice = 45500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo05"))
        {
          CPrice = 49500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo06"))
        {
          CPrice = 75500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo07"))
        {
          CPrice = 51500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo08"))
        {
          CPrice = 53500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo09"))
        {
          CPrice = 55500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo10"))
        {
          CPrice = 60500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Independence"))
        {
          CPrice = 100500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTintAV2)
        {
          this.LiveryColor = WT2.Index;
          if (Game.Player.Character.Weapons.Current != null)
            this.SetWeaponLivery(Game.Player.Character.Weapons.Current);
        }
        if (item == getTintAV)
        {
          try
          {
            int index1 = WT.Index;
            Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.Weapons.Current.GetHashCode(), (InputArgument) index1);
            Game.Player.Character.Weapons.Current.Tint = (WeaponTint) index1;
            Game.Player.Money -= 10000;
          }
          catch (Exception ex)
          {
            UI.Notify("Error");
          }
        }
        if (item == Enable)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p8 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__7, Components[C.Index]);
          string str = target1((CallSite) p8, obj1);
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if ((double) Game.Player.Money >= (double) CPrice)
          {
            Game.Player.Money -= (int) CPrice;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__918.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__10.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool>> p10 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__10;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__918.\u003C\u003Ep__9 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__9, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
            if (target2((CallSite) p10, obj2))
            {
              if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) C.IndexToItem(C.Index).GetHashCode()))
              {
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__11 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__918.\u003C\u003Ep__11 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__918.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__11, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__12 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__918.\u003C\u003Ep__12 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__918.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__12, Game.Player.Character.Weapons.Current, Components[C.Index], true);
              }
            }
          }
        }
        if (item != DIsable)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__918.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__14.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p14 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__14;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__918.\u003C\u003Ep__13 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__13, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
        if (target3((CallSite) p14, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__19.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p19 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__19;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool, object> target2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__18.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool, object>> p18 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__18;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__17 = CallSite<Func<CallSite, System.Type, Hash, object, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Call", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (bool)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, Hash, object, object, object> target4 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__17.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, Hash, object, object, object>> p17 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__17;
          System.Type type = typeof (Function);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__15, Mk2Weapons[W.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__918.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__16, Components[C.Index]);
          object obj4 = target4((CallSite) p17, type, Hash._0x5CEE3DF569CECAB0, obj1, obj2);
          object obj5 = target2((CallSite) p18, obj4, true);
          if (target1((CallSite) p19, obj5))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__918.\u003C\u003Ep__20 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__20, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__918.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__918.\u003C\u003Ep__21 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__918.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__918.\u003C\u003Ep__21, Game.Player.Character.Weapons.Current, Components[C.Index], false);
          }
        }
      });
      UIMenu uiMenu2 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseweaponsMenu, "Scifi Weapons");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenu menu = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseweaponsMenu, "Mk2 Weapons");
      this.GUIMenus.Add(menu);
      this.GUIMenus.Add(menu);
      UIMenu uiMenu3 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseweaponsMenu, "Normal Weapons");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      List<object> items3 = new List<object>();
      for (int index = 0; index < this.PenthouseTintscount; ++index)
        items3.Add((object) index);
      this.PenthouseMK2Pumpshotgun = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Pump Shotgun");
      this.GUIMenus.Add(this.PenthouseMK2Pumpshotgun);
      this.GUIMenus.Add(this.PenthouseMK2Pumpshotgun);
      this.PenthouseMK2SNSPistol = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 SNS Pistol");
      this.GUIMenus.Add(this.PenthouseMK2SNSPistol);
      this.GUIMenus.Add(this.PenthouseMK2SNSPistol);
      this.PenthouseMK2Revolver = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Revolver");
      this.GUIMenus.Add(this.PenthouseMK2Revolver);
      this.GUIMenus.Add(this.PenthouseMK2Revolver);
      this.PenthouseMk2SpecialCarbine = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Special Carbine");
      this.GUIMenus.Add(this.PenthouseMk2SpecialCarbine);
      this.GUIMenus.Add(this.PenthouseMk2SpecialCarbine);
      this.PenthouseMK2Bullpup = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Bullpup Rifle");
      this.GUIMenus.Add(this.PenthouseMK2Bullpup);
      this.GUIMenus.Add(this.PenthouseMK2Bullpup);
      this.PenthouseMK2MarksmanRifle = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Marksmans Rifle");
      this.GUIMenus.Add(this.PenthouseMK2MarksmanRifle);
      this.GUIMenus.Add(this.PenthouseMK2MarksmanRifle);
      this.PenthouseMK2Pistol = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Pistol");
      this.GUIMenus.Add(this.PenthouseMK2Pistol);
      this.GUIMenus.Add(this.PenthouseMK2Pistol);
      this.PenthouseMK2SMG = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 SMG");
      this.GUIMenus.Add(this.PenthouseMK2SMG);
      this.GUIMenus.Add(this.PenthouseMK2SMG);
      this.PenthouseMK2LMG = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 LMG");
      this.GUIMenus.Add(this.PenthouseMK2LMG);
      this.GUIMenus.Add(this.PenthouseMK2LMG);
      this.PenthouseMK2Carbine = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Carbine");
      this.GUIMenus.Add(this.PenthouseMK2Carbine);
      this.GUIMenus.Add(this.PenthouseMK2Carbine);
      this.PenthouseMK2AssaultRifle = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Assault Rifle");
      this.GUIMenus.Add(this.PenthouseMK2AssaultRifle);
      this.GUIMenus.Add(this.PenthouseMK2AssaultRifle);
      this.PenthouseMK2Sniper = this.PenthouseGLmodMenuPool.AddSubMenu(menu, "MK2 Sniper");
      this.GUIMenus.Add(this.PenthouseMK2Sniper);
      this.GUIMenus.Add(this.PenthouseMK2Sniper);
      UIMenuItem mk2ShotgunP = new UIMenuItem("MK2 Pump Shotgun: $75,000");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2ShotgunP);
      UIMenuItem mk2Shotgunclip = new UIMenuItem("Normal Shells : $0");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunclip);
      UIMenuItem mk2Shotgunclip1 = new UIMenuItem("Dragon's Breath Shells : $65,200");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunclip1);
      UIMenuItem mk2Shotgunclip3 = new UIMenuItem("Flechette Shells: $75,140");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunclip3);
      UIMenuItem mk2Shotgunclip2 = new UIMenuItem("Steel Buckshot Shells: $96,645");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunclip2);
      UIMenuItem mk2Shotgunclip4 = new UIMenuItem("Explosive Shells: $145,850");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunclip4);
      UIMenuItem mk2Shotgunsights = new UIMenuItem("Holographic Sight: $29,260");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunsights);
      UIMenuItem mk2Shotgunsights2 = new UIMenuItem("Small Scope: $39,920");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunsights2);
      UIMenuItem mk2Shotgunsights3 = new UIMenuItem("Medium Scope: $50,785");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunsights3);
      UIMenuItem mk2Shotgunflashlight = new UIMenuItem("Flashlight: $10,500");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunflashlight);
      UIMenuItem mk2ShotgunSuppressor = new UIMenuItem("Suppressor: $45,860");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2ShotgunSuppressor);
      UIMenuItem mk2Shotgunmuzzle = new UIMenuItem("Muzzle Brake: $37,650");
      this.PenthouseMK2Pumpshotgun.AddItem(mk2Shotgunmuzzle);
      UIMenuListItem list1 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Pumpshotgun.AddItem((UIMenuItem) list1);
      UIMenuItem getTint1 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Pumpshotgun.AddItem(getTint1);
      UIMenuItem mk2Snspistol = new UIMenuItem("MK2 SNS Pistol: $35,000");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistol);
      UIMenuItem mk2Snspistolclipn = new UIMenuItem("Default Clip: $8,000");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclipn);
      UIMenuItem mk2Snspistolclipe = new UIMenuItem("Extended Clip: $18,300");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclipe);
      UIMenuItem mk2Snspistolclip1 = new UIMenuItem("Tracer Rounds: $34,320");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclip1);
      UIMenuItem mk2Snspistolclip2 = new UIMenuItem("Incendiary Rounds: $41,700");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclip2);
      UIMenuItem mk2Snspistolclip3 = new UIMenuItem("Hollow Point Rounds : $47,580");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclip3);
      UIMenuItem mk2Snspistolclip4 = new UIMenuItem("Full Metal Jacket Rounds: $62,400");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolclip4);
      UIMenuItem mk2Snspistolflash = new UIMenuItem("Flashlight: $7,500");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolflash);
      UIMenuItem mk2Snspistolscope1 = new UIMenuItem("Mounted Scope: $16,250");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolscope1);
      UIMenuItem mk2Snspistolsuppressor = new UIMenuItem("Suppressor: $28,750");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolsuppressor);
      UIMenuItem mk2Snspistolcomp = new UIMenuItem("Compensator: $21,250");
      this.PenthouseMK2SNSPistol.AddItem(mk2Snspistolcomp);
      UIMenuListItem list2 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2SNSPistol.AddItem((UIMenuItem) list2);
      UIMenuItem getTint2 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2SNSPistol.AddItem(getTint2);
      UIMenuItem mk2Revolver = new UIMenuItem("MK2 Revolver: $35,000");
      this.PenthouseMK2Revolver.AddItem(mk2Revolver);
      UIMenuItem mk2Revolverclip = new UIMenuItem("Normal Rounds: $0");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverclip);
      UIMenuItem mk2Revolverclip1 = new UIMenuItem("Tracer Rounds: $31,460");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverclip1);
      UIMenuItem mk2Revolverclip2 = new UIMenuItem("Incendiary Rounds: $38,225");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverclip2);
      UIMenuItem mk2Revolverclip3 = new UIMenuItem("Hollow Point Rounds: $43,615");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverclip3);
      UIMenuItem mk2Revolverclip4 = new UIMenuItem("Full Metal Jacket Rounds: $57,200");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverclip4);
      UIMenuItem mk2Revolversights = new UIMenuItem("Holographic Sight: $16,250");
      this.PenthouseMK2Revolver.AddItem(mk2Revolversights);
      UIMenuItem mk2Revolversights1 = new UIMenuItem("Small Scope: $25,450");
      this.PenthouseMK2Revolver.AddItem(mk2Revolversights1);
      UIMenuItem mk2Revolverflashlight = new UIMenuItem("Flashlight: $7,500");
      this.PenthouseMK2Revolver.AddItem(mk2Revolverflashlight);
      UIMenuItem mk2RevolverComp = new UIMenuItem("Compensator: $21,250");
      this.PenthouseMK2Revolver.AddItem(mk2RevolverComp);
      UIMenuListItem list3 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Revolver.AddItem((UIMenuItem) list3);
      UIMenuItem getTint3 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Revolver.AddItem(getTint3);
      UIMenuItem mk2SCarbine = new UIMenuItem("MK2 Special Carbine: $65,000");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbine);
      UIMenuItem mk2SCarbineclip = new UIMenuItem("Default Clip: $5,000");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip);
      UIMenuItem mk2SCarbineclip1 = new UIMenuItem("Extended Clip: $26,450");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip1);
      UIMenuItem mk2SCarbineclip2 = new UIMenuItem("Tracer Rounds: $61,465");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip2);
      UIMenuItem mk2SCarbineclip3 = new UIMenuItem("Incendiary Rounds : $70,950");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip3);
      UIMenuItem mk2SCarbineclip4 = new UIMenuItem("Armor Piercing Rounds : $90,750");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip4);
      UIMenuItem mk2SCarbineclip5 = new UIMenuItem("Full Metal Jacket Rounds : $104,775");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineclip5);
      UIMenuItem mk2SCarbineflash = new UIMenuItem("Flashlight: $10,500");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbineflash);
      UIMenuItem mk2SCarbinesight1 = new UIMenuItem("Holographic Sight: $19,600");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinesight1);
      UIMenuItem mk2SCarbinesight2 = new UIMenuItem("Small Scope: $23,730");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinesight2);
      UIMenuItem mk2SCarbinesight3 = new UIMenuItem("Large Scope: $34,020");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinesight3);
      UIMenuItem mk2SCarbinesupressor = new UIMenuItem("Suppressor : $40,250");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinesupressor);
      UIMenuItem mk2SCarbinemuzzle = new UIMenuItem("Muzzle : $29,750");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinemuzzle);
      UIMenuItem mk2SCarbinegrip = new UIMenuItem("Grip : $14,080");
      this.PenthouseMk2SpecialCarbine.AddItem(mk2SCarbinegrip);
      UIMenuListItem list4 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMk2SpecialCarbine.AddItem((UIMenuItem) list4);
      UIMenuItem getTint4 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMk2SpecialCarbine.AddItem(getTint4);
      UIMenuItem mk2Bullpup = new UIMenuItem("MK2 Bullpup Rifle: $60,000");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpup);
      UIMenuItem mk2Bullpupclip1 = new UIMenuItem("Default Clip : $5,000");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip1);
      UIMenuItem mk2Bullpupclip2 = new UIMenuItem("Extended Clip : $22,100");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip2);
      UIMenuItem mk2Bullpupclip3 = new UIMenuItem("Tracer Rounds : $44,350");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip3);
      UIMenuItem mk2Bullpupclip4 = new UIMenuItem("Incendiary Rounds : $52,100");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip4);
      UIMenuItem mk2Bullpupclip5 = new UIMenuItem("Armor Piercing Rounds  : $87,320");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip5);
      UIMenuItem mk2Bullpupclip6 = new UIMenuItem("Full Metal Jacket Rounds : $77,490");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupclip6);
      UIMenuItem mk2Bullpupflash = new UIMenuItem("Flashlight  : $10,500");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupflash);
      UIMenuItem mk2Bullpupsight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupsight1);
      UIMenuItem mk2Bullpupsight2 = new UIMenuItem("Small Scope : $23,730");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupsight2);
      UIMenuItem mk2Bullpupsight3 = new UIMenuItem("Medium Scope : $34,020");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupsight3);
      UIMenuItem mk2BullpupBarrel = new UIMenuItem("Heavy Barrel : $49,000");
      this.PenthouseMK2Bullpup.AddItem(mk2BullpupBarrel);
      UIMenuItem mk2BullpupGrip = new UIMenuItem("Grip : $14,080");
      this.PenthouseMK2Bullpup.AddItem(mk2BullpupGrip);
      UIMenuItem mk2Bullpupmuzzle = new UIMenuItem("Muzzle  : $29,750");
      this.PenthouseMK2Bullpup.AddItem(mk2Bullpupmuzzle);
      UIMenuItem mk2BullpupSuppressor = new UIMenuItem("Suppressor  : $40,250");
      this.PenthouseMK2Bullpup.AddItem(mk2BullpupSuppressor);
      UIMenuListItem list5 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Bullpup.AddItem((UIMenuItem) list5);
      UIMenuItem getTint5 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Bullpup.AddItem(getTint5);
      UIMenuItem mk2marksman = new UIMenuItem("MK2 Marksman Rifle : $80,000");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksman);
      UIMenuItem mk2marksmanclip1 = new UIMenuItem("Default Clip : $5,000");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip1);
      UIMenuItem mk2marksmanclip2 = new UIMenuItem("Extended Clip : $26,850");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip2);
      UIMenuItem mk2marksmanclip3 = new UIMenuItem("Tracer Rounds : $49,775");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip3);
      UIMenuItem mk2marksmanclip4 = new UIMenuItem("Incendiary Rounds : $57,295");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip4);
      UIMenuItem mk2marksmanclip5 = new UIMenuItem("Armor Piercing Rounds  : $73,560");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip5);
      UIMenuItem mk2marksmanclip6 = new UIMenuItem("Full Metal Jacket Rounds : $85,570");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanclip6);
      UIMenuItem mk2marksmanflash = new UIMenuItem("Flashlight  : $11,250");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanflash);
      UIMenuItem mk2marksmansight1 = new UIMenuItem("Holographic Sight  : $11,485");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmansight1);
      UIMenuItem mk2marksmansight2 = new UIMenuItem("Large Scope  : $17,870");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmansight2);
      UIMenuItem mk2marksmansight3 = new UIMenuItem("Zoom Scope  : $27,150");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmansight3);
      UIMenuItem mk2marksmanGrip = new UIMenuItem("Grip  : $14,080");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanGrip);
      UIMenuItem mk2marksmanmuzzle = new UIMenuItem("Muzzle  : $44,620");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanmuzzle);
      UIMenuItem mk2marksmanSuppressor = new UIMenuItem("Suppressor  : $60,375");
      this.PenthouseMK2MarksmanRifle.AddItem(mk2marksmanSuppressor);
      UIMenuListItem list6 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2MarksmanRifle.AddItem((UIMenuItem) list6);
      UIMenuItem getTint6 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2MarksmanRifle.AddItem(getTint6);
      UIMenuItem mk2pistol = new UIMenuItem("MK2 Pistol : $20,000");
      this.PenthouseMK2Pistol.AddItem(mk2pistol);
      UIMenuItem mk2pistolClip = new UIMenuItem("Default Clip : $0");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip);
      UIMenuItem mk2pistolClip1 = new UIMenuItem("Extended Clip : $15,250");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip1);
      UIMenuItem mk2pistolClip2 = new UIMenuItem("Tracer Rounds : $32,850");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip2);
      UIMenuItem mk2pistolClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip3);
      UIMenuItem mk2pistolClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip4);
      UIMenuItem mk2pistolClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.PenthouseMK2Pistol.AddItem(mk2pistolClip5);
      UIMenuItem mk2pistolSight1 = new UIMenuItem("Mounted Scope : $16,250");
      this.PenthouseMK2Pistol.AddItem(mk2pistolSight1);
      UIMenuItem mk2pistolflash = new UIMenuItem("Flashlight : $7,500");
      this.PenthouseMK2Pistol.AddItem(mk2pistolflash);
      UIMenuItem mk2pistolsupp = new UIMenuItem("Suppressor : $28,750");
      this.PenthouseMK2Pistol.AddItem(mk2pistolsupp);
      UIMenuItem mk2pistolcomp = new UIMenuItem("Compensator : $21,250");
      this.PenthouseMK2Pistol.AddItem(mk2pistolcomp);
      UIMenuListItem list7 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Pistol.AddItem((UIMenuItem) list7);
      UIMenuItem getTint7 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Pistol.AddItem(getTint7);
      UIMenuItem mk2smg = new UIMenuItem("MK2 SMG : $25,000");
      this.PenthouseMK2SMG.AddItem(mk2smg);
      UIMenuItem mk2smgclip = new UIMenuItem("Default Clip : $0");
      this.PenthouseMK2SMG.AddItem(mk2smgclip);
      UIMenuItem mk2smgclip1 = new UIMenuItem("Extended Clip : $18,300");
      this.PenthouseMK2SMG.AddItem(mk2smgclip1);
      UIMenuItem mk2smgClip2 = new UIMenuItem("Tracer Rounds : $28,600");
      this.PenthouseMK2SMG.AddItem(mk2smgClip2);
      UIMenuItem mk2smgClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.PenthouseMK2SMG.AddItem(mk2smgClip3);
      UIMenuItem mk2smgClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.PenthouseMK2SMG.AddItem(mk2smgClip4);
      UIMenuItem mk2smgClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.PenthouseMK2SMG.AddItem(mk2smgClip5);
      this.PenthouseMK2SMG.AddItem(new UIMenuItem("Flashlight : $7,500"));
      UIMenuItem mk2smgsight1 = new UIMenuItem("Holographic Sight : $15,200");
      this.PenthouseMK2SMG.AddItem(mk2smgsight1);
      UIMenuItem mk2smgsight2 = new UIMenuItem("Small Scope: $19,950");
      this.PenthouseMK2SMG.AddItem(mk2smgsight2);
      UIMenuItem mk2smgsight3 = new UIMenuItem("Holographic Sight : $24,100");
      this.PenthouseMK2SMG.AddItem(mk2smgsight3);
      UIMenuItem mk2smgsupp = new UIMenuItem("Suppressor  : $34,500");
      this.PenthouseMK2SMG.AddItem(mk2smgsupp);
      UIMenuItem mk2smgmuzzle = new UIMenuItem("Muzzle : $25,500");
      this.PenthouseMK2SMG.AddItem(mk2smgmuzzle);
      UIMenuItem mk2smgbarrel = new UIMenuItem("Barrel : $22,500");
      this.PenthouseMK2SMG.AddItem(mk2smgbarrel);
      UIMenuListItem list8 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2SMG.AddItem((UIMenuItem) list8);
      UIMenuItem getTint8 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2SMG.AddItem(getTint8);
      UIMenuItem mk2carbine = new UIMenuItem("MK2 Carbine : $35,000");
      this.PenthouseMK2Carbine.AddItem(mk2carbine);
      UIMenuItem mk2carbineClip1 = new UIMenuItem("Default Clip: $0");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip1);
      UIMenuItem mk2carbineClip2 = new UIMenuItem("Extended Clip: $25,925");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip2);
      UIMenuItem mk2carbineClip3 = new UIMenuItem("Tracer Rounds: $44,700");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip3);
      UIMenuItem mk2carbineClip4 = new UIMenuItem("Incendiary Rounds : $51,600");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip4);
      UIMenuItem mk2carbineClip5 = new UIMenuItem("Armor Piercing Rounds: $66,000 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip5);
      UIMenuItem mk2carbineClip6 = new UIMenuItem("Full Metal Jacket Rounds: $76,200 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineClip6);
      UIMenuItem mk2carbineGrip = new UIMenuItem("Grip: $14,080 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineGrip);
      UIMenuItem mk2carbineFlash = new UIMenuItem("Flashlight: $10,500 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineFlash);
      UIMenuItem mk2carbineSight1 = new UIMenuItem("Holographic Sight: $19,600  ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineSight1);
      UIMenuItem mk2carbineSight2 = new UIMenuItem("Small Scope: $23,730 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineSight2);
      UIMenuItem mk2carbineSight3 = new UIMenuItem("Large Scope: $34,020 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineSight3);
      UIMenuItem mk2carbineSupp = new UIMenuItem("Suppressor: $40,250 ");
      this.PenthouseMK2Carbine.AddItem(mk2carbineSupp);
      UIMenuListItem list9 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Carbine.AddItem((UIMenuItem) list9);
      UIMenuItem getTint9 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Carbine.AddItem(getTint9);
      UIMenuItem mk2AR = new UIMenuItem("MK2 Assault Rifle : $30,000");
      this.PenthouseMK2AssaultRifle.AddItem(mk2AR);
      UIMenuItem mk2ARClip1 = new UIMenuItem("Default Clip : $0");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip1);
      UIMenuItem mk2ARClip2 = new UIMenuItem("Extended Clip: $22,000");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip2);
      UIMenuItem mk2ARClip3 = new UIMenuItem("Tracer Rounds  : $42,700");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip3);
      UIMenuItem mk2ARClip4 = new UIMenuItem("Incendiary Rounds  : $49,400");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip4);
      UIMenuItem mk2ARClip5 = new UIMenuItem("Armor Piercing Rounds : $63,200");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip5);
      UIMenuItem mk2ARClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $73,000");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClip6);
      UIMenuItem mk2ARClipFlash = new UIMenuItem("Flashlight : $10,500");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClipFlash);
      UIMenuItem mk2ARClipSight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClipSight1);
      UIMenuItem mk2ARClipSight2 = new UIMenuItem("Small Scope : $23,730");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClipSight2);
      UIMenuItem mk2ARClipSight3 = new UIMenuItem("Large Scope : $33,000");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClipSight3);
      UIMenuItem mk2ARClipGrip = new UIMenuItem("Grip : $14,000");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARClipGrip);
      UIMenuItem mk2ARsuppressor = new UIMenuItem("Suppressor : $40,250");
      this.PenthouseMK2AssaultRifle.AddItem(mk2ARsuppressor);
      UIMenuListItem list10 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2AssaultRifle.AddItem((UIMenuItem) list10);
      UIMenuItem getTint10 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2AssaultRifle.AddItem(getTint10);
      UIMenuItem mk2lmg = new UIMenuItem("MK2 LMG : $95,000");
      this.PenthouseMK2LMG.AddItem(mk2lmg);
      UIMenuItem mk2lmgClip1 = new UIMenuItem("Default Clip : $0");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip1);
      UIMenuItem mk2lmgClip2 = new UIMenuItem("Extended Clip : $28,975");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip2);
      UIMenuItem mk2lmgClip3 = new UIMenuItem("Tracer Rounds : $57,100");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip3);
      UIMenuItem mk2lmgClip4 = new UIMenuItem("Incendiary Rounds : $64,650");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip4);
      UIMenuItem mk2lmgClip5 = new UIMenuItem("Armor Piercing Rounds : $82,550");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip5);
      UIMenuItem mk2lmgClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $94,950");
      this.PenthouseMK2LMG.AddItem(mk2lmgClip6);
      UIMenuItem mk2lmgGrip = new UIMenuItem("Grip : $20,180");
      this.PenthouseMK2LMG.AddItem(mk2lmgGrip);
      UIMenuItem mk2lmgSight1 = new UIMenuItem("Holographic Sight : $26,600");
      this.PenthouseMK2LMG.AddItem(mk2lmgSight1);
      UIMenuItem mk2lmgSight2 = new UIMenuItem("Small Scope : $36,290");
      this.PenthouseMK2LMG.AddItem(mk2lmgSight2);
      UIMenuItem mk2lmgSight3 = new UIMenuItem("Large Scope : $46,170");
      this.PenthouseMK2LMG.AddItem(mk2lmgSight3);
      UIMenuItem mk2lmgMuzzle = new UIMenuItem("Flat Muzzle Brake : $40,375");
      this.PenthouseMK2LMG.AddItem(mk2lmgMuzzle);
      UIMenuItem mk2lmgBarrel = new UIMenuItem("Heavy Barrel : $66,500");
      this.PenthouseMK2LMG.AddItem(mk2lmgBarrel);
      UIMenuListItem list11 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2LMG.AddItem((UIMenuItem) list11);
      UIMenuItem getTint11 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2LMG.AddItem(getTint11);
      UIMenuItem mk2sniper = new UIMenuItem("MK2 Heavy Sniper : $100,000");
      this.PenthouseMK2Sniper.AddItem(mk2sniper);
      UIMenuItem mk2sniperClip1 = new UIMenuItem("Default Clip : $0");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip1);
      UIMenuItem mk2sniperClip2 = new UIMenuItem("Extended Clip : $35,025");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip2);
      UIMenuItem mk2sniperClip3 = new UIMenuItem("Incendiary Rounds : $59,275");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip3);
      UIMenuItem mk2sniperClip4 = new UIMenuItem("Armor Piercing Rounds : $76,100");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip4);
      UIMenuItem mk2sniperClip5 = new UIMenuItem("Full Metal Jacket Rounds : $88,525");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip5);
      UIMenuItem mk2sniperClip6 = new UIMenuItem("Explosive Rounds : $115,450");
      this.PenthouseMK2Sniper.AddItem(mk2sniperClip6);
      UIMenuItem mk2sniperSight1 = new UIMenuItem("Zoom scope : $20.200");
      this.PenthouseMK2Sniper.AddItem(mk2sniperSight1);
      UIMenuItem mk2sniperSight2 = new UIMenuItem("Advanced Scope : $32,000");
      this.PenthouseMK2Sniper.AddItem(mk2sniperSight2);
      UIMenuItem mk2sniperSight3 = new UIMenuItem("Night Vision Scope : $57,400");
      this.PenthouseMK2Sniper.AddItem(mk2sniperSight3);
      UIMenuItem mk2sniperSight4 = new UIMenuItem("Thermal Scope : $69,000");
      this.PenthouseMK2Sniper.AddItem(mk2sniperSight4);
      UIMenuItem mk2sniperSupp = new UIMenuItem("Suppressor : $40,250");
      this.PenthouseMK2Sniper.AddItem(mk2sniperSupp);
      UIMenuItem mk2sniperMuzzle = new UIMenuItem("Bell-End Muzzle Brake : $57,790");
      this.PenthouseMK2Sniper.AddItem(mk2sniperMuzzle);
      UIMenuItem mk2sniperBarrel = new UIMenuItem("Heavy Barrel : $27,500");
      this.PenthouseMK2Sniper.AddItem(mk2sniperBarrel);
      UIMenuListItem list12 = new UIMenuListItem("Tint ", items3, 0);
      this.PenthouseMK2Sniper.AddItem((UIMenuItem) list12);
      UIMenuItem getTint12 = new UIMenuItem("Buy Tint: $10,000");
      this.PenthouseMK2Sniper.AddItem(getTint12);
      List<object> items4 = new List<object>();
      WeaponHash[] allweaponhashes = (WeaponHash[]) Enum.GetValues(typeof (WeaponHash));
      for (int index = 0; index < allweaponhashes.Length; ++index)
        items4.Add((object) allweaponhashes[index]);
      UIMenuListItem list = new UIMenuListItem("Weapon: ", items4, 0);
      uiMenu3.AddItem((UIMenuItem) list);
      UIMenuItem getWeapon = new UIMenuItem("Buy Weapon : $10000");
      uiMenu3.AddItem(getWeapon);
      UIMenuItem RayGun = new UIMenuItem("Ray Gun : $100,000");
      uiMenu2.AddItem(RayGun);
      UIMenuItem UnholyHellbringer = new UIMenuItem("UnholyHellbringer : $250,000");
      uiMenu2.AddItem(UnholyHellbringer);
      UIMenuItem Widowmaker = new UIMenuItem("Widowmaker : $1,000,000");
      uiMenu2.AddItem(Widowmaker);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getWeapon)
          return;
        WeaponHash hash = allweaponhashes[list.Index];
        int num;
        switch (hash)
        {
          case WeaponHash.HeavySniperMk2:
          case WeaponHash.AssaultrifleMk2:
          case WeaponHash.PumpShotgunMk2:
          case WeaponHash.MarksmanRifleMk2:
          case WeaponHash.SMGMk2:
          case WeaponHash.BullpupRifleMk2:
          case WeaponHash.SpecialCarbineMk2:
          case WeaponHash.PistolMk2:
          case WeaponHash.RevolverMk2:
          case WeaponHash.CombatMGMk2:
          case WeaponHash.CarbineRifleMk2:
            num = 1;
            break;
          default:
            num = hash == WeaponHash.SNSPistolMk2 ? 1 : 0;
            break;
        }
        if (num != 0)
        {
          UI.Notify("Office Assistant : Boss, this is a MKII weapon please perchase it from the MkII page");
        }
        else
        {
          Game.Player.Character.Weapons.Give(hash, 9999, true, true);
          Game.Player.Money -= 10000;
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RayGun)
        {
          if (Game.Player.Money >= 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2939590305U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: You dont have enought money for this weapon ");
        }
        if (item == UnholyHellbringer)
        {
          if (Game.Player.Money >= 250000)
          {
            Game.Player.Money -= 250000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1198256469, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: You dont have enought money for this weapon ");
        }
        if (item != Widowmaker)
          return;
        if (Game.Player.Money >= 1000000)
        {
          Game.Player.Money -= 1000000;
          Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3056410471U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: You dont have enought money for this weapon ");
      });
      this.PenthouseMK2Sniper.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint12)
        {
          int index1 = list12.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) list12.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2sniper)
        {
          if (Game.Player.Money > 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4196276776U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip2)
        {
          if (Game.Player.Money > 35025)
          {
            Game.Player.Money -= 35025;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 752418717);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip3)
        {
          if (Game.Player.Money > 59275)
          {
            Game.Player.Money -= 59275;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 247526935);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip4)
        {
          if (Game.Player.Money > 76100)
          {
            Game.Player.Money -= 76100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4164277972U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip5)
        {
          if (Game.Player.Money > 88525)
          {
            Game.Player.Money -= 88525;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1005144310);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip6)
        {
          if (Game.Player.Money > 115450)
          {
            Game.Player.Money -= 115450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2313935527U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight1)
        {
          if (Game.Player.Money > 20200)
          {
            Game.Player.Money -= 20200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2193687427U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight2)
        {
          if (Game.Player.Money > 32000)
          {
            Game.Player.Money -= 32000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3159677559U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight3)
        {
          if (Game.Player.Money > 57400)
          {
            Game.Player.Money -= 57400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3061846192U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight4)
        {
          if (Game.Player.Money > 69000)
          {
            Game.Player.Money -= 69000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 776198721);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSupp)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2890063729U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperMuzzle)
        {
          if (Game.Player.Money > 57790)
          {
            Game.Player.Money -= 57790;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1764221345);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2sniperBarrel)
          return;
        if (Game.Player.Money > 27500)
        {
          Game.Player.Money -= 27500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2425761975U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2LMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint11)
        {
          int index1 = list11.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) list11.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2lmg)
        {
          if (Game.Player.Money > 95000)
          {
            Game.Player.Money -= 95000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1227564412);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip2)
        {
          if (Game.Player.Money > 28975)
          {
            Game.Player.Money -= 28975;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 400507625);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip3)
        {
          if (Game.Player.Money > 57100)
          {
            Game.Player.Money -= 57100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 4133787461U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip4)
        {
          if (Game.Player.Money > 64650)
          {
            Game.Player.Money -= 64650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3274096058U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip5)
        {
          if (Game.Player.Money > 82550)
          {
            Game.Player.Money -= 82550;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 696788003);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip6)
        {
          if (Game.Player.Money > 94950)
          {
            Game.Player.Money -= 94950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1475288264);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgGrip)
        {
          if (Game.Player.Money > 20180)
          {
            Game.Player.Money -= 20180;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight1)
        {
          if (Game.Player.Money > 26600)
          {
            Game.Player.Money -= 26600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight2)
        {
          if (Game.Player.Money > 36290)
          {
            Game.Player.Money -= 36290;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight3)
        {
          if (Game.Player.Money > 46170)
          {
            Game.Player.Money -= 46170;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgMuzzle)
        {
          if (Game.Player.Money > 40375)
          {
            Game.Player.Money -= 40375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3113485012U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2lmgBarrel)
          return;
        if (Game.Player.Money > 66500)
        {
          Game.Player.Money -= 66500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3051509595U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2Carbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint9)
        {
          int index1 = list9.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) list9.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2carbine)
        {
          if (Game.Player.Money > 35000)
          {
            Game.Player.Money -= 35000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip1)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1283078430);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip2)
        {
          if (Game.Player.Money > 25925)
          {
            Game.Player.Money -= 25925;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1574296533);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip3)
        {
          if (Game.Player.Money > 44700)
          {
            Game.Player.Money -= 44700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 391640422);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip4)
        {
          if (Game.Player.Money > 51600)
          {
            Game.Player.Money -= 51600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1025884839);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip5)
        {
          if (Game.Player.Money > 66000)
          {
            Game.Player.Money -= 66000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 626875735);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip6)
        {
          if (Game.Player.Money > 76000)
          {
            Game.Player.Money -= 76000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1141059345);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2carbineSupp)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2205435306U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2SMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint8)
        {
          int index1 = list8.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) list8.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2smg)
        {
          if (Game.Player.Money > 25000)
          {
            Game.Player.Money -= 25000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1277460590);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgclip1)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3112393518U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip2)
        {
          if (Game.Player.Money > 32850)
          {
            Game.Player.Money -= 32850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2146055916);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3650233061U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 974903034);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip5)
        {
          if (Game.Player.Money > 52000)
          {
            Game.Player.Money -= 52000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 190476639);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight1)
        {
          if (Game.Player.Money > 15200)
          {
            Game.Player.Money -= 15200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2681951826U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight2)
        {
          if (Game.Player.Money > 19950)
          {
            Game.Player.Money -= 19950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3842157419U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight3)
        {
          if (Game.Player.Money > 24100)
          {
            Game.Player.Money -= 24100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsupp)
        {
          if (Game.Player.Money > 34500)
          {
            Game.Player.Money -= 34500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgmuzzle)
        {
          if (Game.Player.Money > 25500)
          {
            Game.Player.Money -= 25500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3113485012U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2smgbarrel)
          return;
        if (Game.Player.Money > 22500)
        {
          Game.Player.Money -= 22500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3641720545U);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2AssaultRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint10)
        {
          int index1 = list10.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) list10.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2AR)
        {
          if (Game.Player.Money > 30000)
          {
            Game.Player.Money -= 30000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2249208895U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip2)
        {
          if (Game.Player.Money > 22000)
          {
            Game.Player.Money -= 22000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3509242479U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip3)
        {
          if (Game.Player.Money > 42700)
          {
            Game.Player.Money -= 42700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4012669121U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip4)
        {
          if (Game.Player.Money > 49400)
          {
            Game.Player.Money -= 49400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4218476627U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip5)
        {
          if (Game.Player.Money > 63200)
          {
            Game.Player.Money -= 63200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2816286296U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip6)
        {
          if (Game.Player.Money > 73000)
          {
            Game.Player.Money -= 73000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1675665560);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipGrip)
        {
          if (Game.Player.Money > 14000)
          {
            Game.Player.Money -= 14000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight3)
        {
          if (Game.Player.Money > 33000)
          {
            Game.Player.Money -= 33000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2ARsuppressor)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2805810788U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2Pistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint7)
        {
          int index1 = list7.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) list7.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2pistol)
        {
          if (Game.Player.Money > 20000)
          {
            Game.Player.Money -= 20000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2499030370U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip1)
        {
          if (Game.Player.Money > 15250)
          {
            Game.Player.Money -= 15250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1591132456);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip2)
        {
          if (Game.Player.Money > 28600)
          {
            Game.Player.Money -= 28600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 634039983);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 733837882);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2248057097U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip5)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1329061674);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolSight1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolsupp)
        {
          if (Game.Player.Money > 28750)
          {
            Game.Player.Money -= 28750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1709866683);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2pistolcomp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 568543123);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2Pumpshotgun.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint1)
        {
          int index1 = list1.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) list1.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Shotgunclip4)
        {
          if (Game.Player.Money > 145000)
          {
            Game.Player.Money -= 145000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1004815965);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -845938367);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip2)
        {
          if (Game.Player.Money > 96645)
          {
            Game.Player.Money -= 96645;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1315288101);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip3)
        {
          if (Game.Player.Money > 75140)
          {
            Game.Player.Money -= 75140;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -380098265);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip1)
        {
          if (Game.Player.Money > 65200)
          {
            Game.Player.Money -= 65200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1618338827);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ShotgunP)
        {
          if (Game.Player.Money > 75000)
          {
            Game.Player.Money -= 75000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunflashlight)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights)
        {
          if (Game.Player.Money > 29320)
          {
            Game.Player.Money -= 29320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights2)
        {
          if (Game.Player.Money > 39920)
          {
            Game.Player.Money -= 39920;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights3)
        {
          if (Game.Player.Money > 50785)
          {
            Game.Player.Money -= 50785;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ShotgunSuppressor)
        {
          if (Game.Player.Money > 45860)
          {
            Game.Player.Money -= 45860;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1404903567);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Shotgunmuzzle)
          return;
        if (Game.Player.Money > 37650)
        {
          Game.Player.Money -= 37650;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1602080333);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2SNSPistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint2)
        {
          int index1 = list2.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) list2.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Snspistol)
        {
          if (Game.Player.Money > 45000)
          {
            Game.Player.Money -= 45000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipn)
        {
          if (Game.Player.Money > 8000)
          {
            Game.Player.Money -= 8000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 21392614);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipe)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -829683854);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip1)
        {
          if (Game.Player.Money > 34320)
          {
            Game.Player.Money -= 34320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1876057490);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip2)
        {
          if (Game.Player.Money > 41700)
          {
            Game.Player.Money -= 41700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -424845447);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip3)
        {
          if (Game.Player.Money > 47580)
          {
            Game.Player.Money -= 47580;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1928301566);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip4)
        {
          if (Game.Player.Money > 62400)
          {
            Game.Player.Money -= 62400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1055790298);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolcomp)
        {
          if (Game.Player.Money > 21250)
          {
            Game.Player.Money -= 21250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1434287169);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1246324211);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolscope1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1205768792);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Snspistolsuppressor)
          return;
        if (Game.Player.Money > 28750)
        {
          Game.Player.Money -= 28750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1709866683);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2Revolver.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint3)
        {
          int index1 = list3.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) list3.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Revolver)
        {
          if (Game.Player.Money > 85000)
          {
            Game.Player.Money -= 85000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -1172055874);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip1)
        {
          if (Game.Player.Money > 31460)
          {
            Game.Player.Money -= 31460;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -958864266);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip2)
        {
          if (Game.Player.Money > 38225)
          {
            Game.Player.Money -= 38225;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 15712037);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip3)
        {
          if (Game.Player.Money > 43615)
          {
            Game.Player.Money -= 43615;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 284438159);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip4)
        {
          if (Game.Player.Money > 57200)
          {
            Game.Player.Money -= 57200;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 231258687);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolversights)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolversights1)
        {
          if (Game.Player.Money > 25450)
          {
            Game.Player.Money -= 25450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverflashlight)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 899381934);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2RevolverComp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 654802123);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMk2SpecialCarbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint4)
        {
          int index1 = list4.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) list4.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2SCarbine)
        {
          if (Game.Player.Money > 65000)
          {
            Game.Player.Money -= 65000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 382112385);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip1)
        {
          if (Game.Player.Money > 26450)
          {
            Game.Player.Money -= 26450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -568352468);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip2)
        {
          if (Game.Player.Money > 61465)
          {
            Game.Player.Money -= 61465;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -2023373174);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip3)
        {
          if (Game.Player.Money > 70950)
          {
            Game.Player.Money -= 70950;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -570355066);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip4)
        {
          if (Game.Player.Money > 90750)
          {
            Game.Player.Money -= 90750;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1362433589);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip5)
        {
          if (Game.Player.Money > 104775)
          {
            Game.Player.Money -= 104775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1346235024);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -966040254);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesupressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1489156508);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinemuzzle)
        {
          if (Game.Player.Money > 29750)
          {
            Game.Player.Money -= 29750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1181482284);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2SCarbinegrip)
          return;
        if (Game.Player.Money > 14080)
        {
          Game.Player.Money -= 14080;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1654288262);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2Bullpup.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint5)
        {
          int index1 = list5.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) list5.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Bullpup)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 25766362);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip2)
        {
          if (Game.Player.Money > 22100)
          {
            Game.Player.Money -= 22100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -273676760);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip3)
        {
          if (Game.Player.Money > 44350)
          {
            Game.Player.Money -= 44350;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2111807319);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip4)
        {
          if (Game.Player.Money > 52100)
          {
            Game.Player.Money -= 52100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1449330342);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip5)
        {
          if (Game.Player.Money > 87320)
          {
            Game.Player.Money -= 87320;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -89655827);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip6)
        {
          if (Game.Player.Money > 77490)
          {
            Game.Player.Money -= 77490;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1130501904);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -944910075);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupBarrel)
        {
          if (Game.Player.Money > 49000)
          {
            Game.Player.Money -= 49000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1704640795);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1654288262);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupSuppressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2089531990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Bullpupmuzzle)
          return;
        if (Game.Player.Money > 29750)
        {
          Game.Player.Money -= 29750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1181482284);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.PenthouseMK2MarksmanRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint6)
        {
          int index1 = list6.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) list6.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2marksman)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1797182002);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip3)
        {
          if (Game.Player.Money > 49775)
          {
            Game.Player.Money -= 49775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -679861550);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip4)
        {
          if (Game.Player.Money > 57295)
          {
            Game.Player.Money -= 57295;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1842849902);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip5)
        {
          if (Game.Player.Money > 73560)
          {
            Game.Player.Money -= 73560;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -193998727);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip6)
        {
          if (Game.Player.Money > 85570)
          {
            Game.Player.Money -= 85570;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -515203373);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip2)
        {
          if (Game.Player.Money > 26850)
          {
            Game.Player.Money -= 26850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -422587990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanflash)
        {
          if (Game.Player.Money > 11250)
          {
            Game.Player.Money -= 11250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight1)
        {
          if (Game.Player.Money > 11485)
          {
            Game.Player.Money -= 11485;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight2)
        {
          if (Game.Player.Money > 17870)
          {
            Game.Player.Money -= 17870;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -966040254);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight3)
        {
          if (Game.Player.Money > 27150)
          {
            Game.Player.Money -= 27150;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1528590652);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1654288262);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanSuppressor)
        {
          if (Game.Player.Money > 60375)
          {
            Game.Player.Money -= 60375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -2089531990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2marksmanmuzzle)
          return;
        if (Game.Player.Money > 44620)
        {
          Game.Player.Money -= 44620;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1181482284);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
    }

    public void PenthousesetupMarker()
    {
      this.PenthouseRange = World.CreateBlip(this.PenthouseMoneyStorageMarker);
      this.PenthouseRange.Sprite = BlipSprite.DollarSign;
      if (this.purchaselvl >= 1)
      {
        this.PenthouseRange.Color = this.Blip_Colour;
        this.PenthouseRange.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.PenthouseRange.Color = BlipColor.White;
        this.PenthouseRange.Alpha = 0;
      }
      this.PenthouseRange.Name = "DC&R Money Vault";
      this.PenthouseRange.IsShortRange = true;
      this.PenthouseRange2 = World.CreateBlip(this.PenthouseGunLockerMarker);
      this.PenthouseRange2.Sprite = BlipSprite.MachineGun;
      if (this.purchaselvl >= 1)
      {
        this.PenthouseRange2.Color = this.Blip_Colour;
        this.PenthouseRange2.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.PenthouseRange2.Color = BlipColor.White;
        this.PenthouseRange2.Alpha = 0;
      }
      this.PenthouseRange2.Name = "DC&R Gunlocker";
      this.PenthouseRange2.IsShortRange = true;
    }

    public void PenthouseDeleteMarker()
    {
      if (this.PenthouseRange2 != (Blip) null)
        this.PenthouseRange2.Remove();
      if (!(this.PenthouseRange != (Blip) null))
        return;
      this.PenthouseRange.Remove();
    }

    public int PenthouseCheckClothes(int T, int RComp, int RDraw)
    {
      int num = 0;
      if (T == 1)
      {
        if (Function.Call<bool>(Hash._0xE825F6B6CEA7671D, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw))
          num = Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Game.Player.Character, (InputArgument) RComp);
      }
      if (T == 2)
      {
        if (Function.Call<bool>(Hash._0xE825F6B6CEA7671D, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw))
          num = Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw);
      }
      return num;
    }

    public void PenthouseSetoutfit(int i)
    {
      Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
      if (Game.Player.Character.Model != (GTA.Model) PedHash.FreemodeMale01)
        this.OldCharacter = Game.Player.Character.Model;
      Function.Call(Hash._0xAA74EC0CB0AAEA2C, (InputArgument) Game.Player.Character, (InputArgument) 1.0);
      Function.Call(Hash._0x20510814175EA477, (InputArgument) Game.Player.Character);
      GTA.Model model = new GTA.Model(PedHash.FreemodeMale01);
      model.Request(500);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(100);
        Function.Call(Hash._0x00A1CADD00108836, (InputArgument) Game.Player, (InputArgument) model.Hash);
      }
      model.MarkAsNoLongerNeeded();
      Ped character = Game.Player.Character;
      Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) -1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 17);
      bool flag = false;
      string idC = this.ID_C;
      if (i == 0)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 1)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 89, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 55, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 54, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 89, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 55, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 54, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 2 && idC.Equals("Outfit Default"))
      {
        if (!flag && !idC.Equals("Outfit Default"))
          UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num = new System.Random().Next(1, 100);
        if (num <= 25)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 38, (InputArgument) 0, (InputArgument) 1);
        if (num > 25 && num <= 50)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 112, (InputArgument) 0, (InputArgument) 1);
        if (num > 50 && num <= 75)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
        if (num > 75)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 104, (InputArgument) 25, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 68, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (i == 3)
      {
        if (idC.Equals("Blue"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Black") || idC.Equals("Outfit Default"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 4)
      {
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 13, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 15, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 5)
      {
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 13, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 15, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 6)
      {
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 134, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 147, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 167, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 113, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 90, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 286, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 135, (InputArgument) 0);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 134, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 147, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 167, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 113, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 90, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 286, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 135, (InputArgument) 0);
        }
      }
      if (i == 7)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 4, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 6, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 7, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 5, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 8)
      {
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 8, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 10, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 11, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 9, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i != 9)
        return;
      if (idC.Equals("Outfit Default"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 0, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Green"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 1, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 1, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 1, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 1, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("White"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 9, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 7, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 7, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 7, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Blue"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 3, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 3, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Black"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 10, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 10, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 10, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 10, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (!flag)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 0, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
    }

    public void PenthouseSetupMoneyMenu()
    {
      List<object> items = new List<object>();
      items.Add((object) "1");
      items.Add((object) "2");
      items.Add((object) "3");
      items.Add((object) "4");
      items.Add((object) "5");
      items.Add((object) "6");
      items.Add((object) "7");
      items.Add((object) "8");
      items.Add((object) "9");
      items.Add((object) "10");
      UIMenu uiMenu = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseMoneyMenu, "Money Options");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuListItem list5 = new UIMenuListItem("Vault: ", items, 0);
      uiMenu.AddItem((UIMenuItem) list5);
      UIMenuItem GetColor2 = new UIMenuItem("Change Bank Vault Number");
      uiMenu.AddItem(GetColor2);
      UIMenuItem WithDraw = new UIMenuItem("Withdraw");
      uiMenu.AddItem(WithDraw);
      UIMenuItem Deposit2 = new UIMenuItem("Deposit");
      uiMenu.AddItem(Deposit2);
      UIMenuItem balance = new UIMenuItem("Show Balance");
      uiMenu.AddItem(balance);
      UIMenuItem SFAB = new UIMenuItem("Show Total Account Balance");
      uiMenu.AddItem(SFAB);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SFAB)
        {
          long num1 = 0;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 1.ToString() + "]", this.MoneyStored);
          long num2 = num1 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 2.ToString() + "]", this.MoneyStored);
          long num3 = num2 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 3.ToString() + "]", this.MoneyStored);
          long num4 = num3 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 4.ToString() + "]", this.MoneyStored);
          long num5 = num4 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 5.ToString() + "]", this.MoneyStored);
          long num6 = num5 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 6.ToString() + "]", this.MoneyStored);
          long num7 = num6 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 7.ToString() + "]", this.MoneyStored);
          long num8 = num7 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 8.ToString() + "]", this.MoneyStored);
          long num9 = num8 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 9.ToString() + "]", this.MoneyStored);
          long num10 = num9 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 10.ToString() + "]", this.MoneyStored);
          UI.Notify("Money in Account ~g~$" + (num10 + (long) this.MoneyStored).ToString("N"));
        }
        if (item == GetColor2)
        {
          this.currentbank = list5.Index + 1;
          UI.Notify("Lester : Vault Changed to:  " + this.currentbank.ToString());
        }
        if (item == WithDraw)
          this.PenthouseWithdrawl();
        if (item == Deposit2)
          this.PenthouseDeposit();
        if (item != balance)
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        UI.Notify("Lester : Moeny in Vault  ~b~" + this.currentbank.ToString() + "~w~, ~g~$" + this.MoneyStored.ToString("N"));
      });
    }

    private void PenthouseDeposit()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if (int.Parse(userInput) <= Game.Player.Money)
      {
        this.MoneyStored = (float) int.Parse(userInput);
        Game.Player.Money -= int.Parse(userInput);
        float num = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored + num);
        this.Config.Save();
      }
      else
        UI.Notify("Lester : boss you dont have that amount of money to deposit: value: " + int.Parse(userInput).ToString());
    }

    private void PenthouseWithdrawl()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if ((double) int.Parse(userInput) <= (double) this.MoneyStored)
      {
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored) - (float) int.Parse(userInput);
        Game.Player.Money += int.Parse(userInput);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        this.Config.Save();
      }
      else
        UI.Notify("Lester : boss you dont have that amount of money stored to withdraw, value: " + this.MoneyStored.ToString());
    }

    public void PenthouseWareDrobe()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Save");
      items1.Add((object) "Load");
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1.ini");
      Slots.Add((object) "Slot2.ini");
      Slots.Add((object) "Slot3.ini");
      Slots.Add((object) "Slot4.ini");
      Slots.Add((object) "Slot5.ini");
      Slots.Add((object) "Slot6.ini");
      Slots.Add((object) "Slot7.ini");
      Slots.Add((object) "Slot8.ini");
      Slots.Add((object) "Slot9.ini");
      Slots.Add((object) "Slot10.ini");
      List<object> objectList = new List<object>()
      {
        (object) WeaponHash.Unarmed,
        (object) WeaponHash.Knife,
        (object) WeaponHash.Nightstick,
        (object) WeaponHash.Hammer,
        (object) WeaponHash.Hatchet,
        (object) WeaponHash.KnuckleDuster,
        (object) WeaponHash.Machete,
        (object) WeaponHash.PoolCue,
        (object) WeaponHash.Wrench,
        (object) WeaponHash.SwitchBlade,
        (object) WeaponHash.GolfClub,
        (object) WeaponHash.Flashlight
      };
      List<object> Colours = new List<object>();
      Colours.Add((object) "Outfit Default");
      Colours.Add((object) "Blue");
      Colours.Add((object) "Green");
      Colours.Add((object) "Red");
      Colours.Add((object) "Orange");
      Colours.Add((object) "Pink");
      Colours.Add((object) "Purple");
      Colours.Add((object) "White");
      Colours.Add((object) "Black");
      List<object> Outfits = new List<object>();
      Outfits.Add((object) "Soldier");
      Outfits.Add((object) "Cloaker");
      Outfits.Add((object) "Hacker");
      Outfits.Add((object) "Juggernaut");
      Outfits.Add((object) "Arena War A");
      Outfits.Add((object) "Arena War B");
      Outfits.Add((object) "Space Marine");
      Outfits.Add((object) "Commando");
      Outfits.Add((object) "Space Suit");
      Outfits.Add((object) "Tron");
      List<object> items2 = new List<object>();
      List<object> Draw = new List<object>();
      List<object> items3 = new List<object>();
      List<object> Tex = new List<object>();
      for (int index = 0; index < 999; ++index)
      {
        Tex.Add((object) index);
        Draw.Add((object) index);
        items3.Add((object) index);
        items2.Add((object) index);
      }
      List<object> items4 = new List<object>();
      items4.Add((object) " 0 FACE");
      items4.Add((object) "1 BEARD");
      items4.Add((object) "2 HAIRCUT");
      items4.Add((object) "3 SHIRT");
      items4.Add((object) "4 PANTS");
      items4.Add((object) "5 Hands / Gloves");
      items4.Add((object) "6 SHOES");
      items4.Add((object) "7 Eyes");
      items4.Add((object) "8 Accessories");
      items4.Add((object) "9 Mission Items/ Tasks");
      items4.Add((object) "10 Decals");
      items4.Add((object) "11 Collars and Inner Shirts");
      UIMenu uiMenu1 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseWoredrobeMenu, "Change Outfit");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem O = new UIMenuListItem("", Outfits, 0);
      uiMenu1.AddItem((UIMenuItem) O);
      O.Description = "While Using this outfit you will not be able to purchase anything due to being the MP male";
      UIMenuListItem C = new UIMenuListItem("Color : ", Colours, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      C.Description = "Use this Colour Whenever possible or use Default";
      UIMenuItem Set = new UIMenuItem("Wear Outfit ");
      uiMenu1.AddItem(Set);
      Set.Description = "~y~ Warning ~w~ Lag is normal while applying outfits, simple alt tab out to avoid crash";
      UIMenuItem Remove = new UIMenuItem("Remove Outift ");
      uiMenu1.AddItem(Remove);
      UIMenu uiMenu2 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseWoredrobeMenu, "Change Clothes");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenu uiMenu3 = this.PenthouseGLmodMenuPool.AddSubMenu(this.PenthouseWoredrobeMenu, "Save/Load Outfit");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      UIMenuListItem SVL = new UIMenuListItem("Function ", items1, 0);
      uiMenu3.AddItem((UIMenuItem) SVL);
      UIMenuListItem Sl = new UIMenuListItem("Slot ", Slots, 0);
      uiMenu3.AddItem((UIMenuItem) Sl);
      UIMenuItem Get = new UIMenuItem("Save");
      uiMenu3.AddItem(Get);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Get)
          return;
        string str = "";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin)
          str = "scripts//HKH191sBusinessMods//DC&R//Waredrobe//Franklin//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          str = "scripts//HKH191sBusinessMods//DC&R//Waredrobe//Michael//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Trevor)
          str = "scripts//HKH191sBusinessMods//DC&R//Waredrobe//Trevor//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeFemale01 || Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeMale01)
          str = "scripts//HKH191sBusinessMods//DC&R//Waredrobe//Mp//";
        if (SVL.Index == 0)
        {
          Ped character = Game.Player.Character;
          Get.Text = "Save";
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__1 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, Class1, object> target = Class1.\u003C\u003Eo__944.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, Class1, object>> p1 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__0 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = Class1.\u003C\u003Eo__944.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__0, str, Slots[Sl.Index]);
          target((CallSite) p1, this, obj);
          int num1 = Function.Call<int>(Hash._0x898CC20EA75BACD8, (InputArgument) character, (InputArgument) 0);
          int num2 = Function.Call<int>(Hash._0xE131A28626F81AB2, (InputArgument) character, (InputArgument) 0);
          int num3 = Function.Call<int>(Hash._0xE3DD5F2A84B42281, (InputArgument) character, (InputArgument) 0);
          this.Config.SetValue<int>("-1 HAT", "Hat_Drawable", num1);
          this.Config.SetValue<int>("-1 Hat", "Hat_Tex", num2);
          this.Config.SetValue<int>("-1 Hat", "Hat_Palette", num3);
          int num4 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 0);
          int num5 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 0);
          this.Config.SetValue<int>("0 FACE", "Head_Drawable", num4);
          this.Config.SetValue<int>("0 FACE", "Head_Palette", num5);
          int num6 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 1);
          int num7 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 1);
          this.Config.SetValue<int>("1 BEARD", "BEARD_Drawable", num6);
          this.Config.SetValue<int>("1 BEARD", "BEARD_Palette", num7);
          int num8 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 2);
          int num9 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 2);
          this.Config.SetValue<int>("2 HAIRCUT", "HAIRCUT_Drawable", num8);
          this.Config.SetValue<int>("2 HAIRCUT", "HAIRCUT_Palette", num9);
          int num10 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 3);
          int num11 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 3);
          this.Config.SetValue<int>("3 SHIRT", "SHIRT_Drawable", num10);
          this.Config.SetValue<int>("3 SHIRT", "SHIRT_Palette", num11);
          int num12 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 4);
          int num13 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 4);
          this.Config.SetValue<int>("4 PANTS", "PANTS_Drawable", num12);
          this.Config.SetValue<int>("4 PANTS", "PANTS_Palette", num13);
          int num14 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 5);
          int num15 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 5);
          this.Config.SetValue<int>("5 Hands / Gloves", "Gloves_Drawable", num14);
          this.Config.SetValue<int>("5 Hands / Gloves", "Gloves_Palette", num15);
          int num16 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 6);
          int num17 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 6);
          this.Config.SetValue<int>("6 SHOES", "SHOES_Drawable", num16);
          this.Config.SetValue<int>("6 SHOES", "SHOES_Palette", num17);
          int num18 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 7);
          int num19 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 7);
          this.Config.SetValue<int>("7 Eyes", "Eyes_Drawable", num18);
          this.Config.SetValue<int>("7 Eyes", "Eyes_Palette", num19);
          int num20 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 8);
          int num21 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 8);
          this.Config.SetValue<int>("8 Accessories", "Accessories_Drawable", num20);
          this.Config.SetValue<int>("8 Accessories", "Accessories_Palette", num21);
          int num22 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 9);
          int num23 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 9);
          this.Config.SetValue<int>("9 Mission Items/ Tasks", "Mission_Drawable", num22);
          this.Config.SetValue<int>("9 Mission Items/ Tasks", "Mission_Palette", num23);
          int num24 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 10);
          int num25 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 10);
          this.Config.SetValue<int>("10 Decals", "Decals_Drawable", num24);
          this.Config.SetValue<int>("10 Decals", "Decals_Palette", num25);
          int num26 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 11);
          int num27 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 11);
          this.Config.SetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Drawable", num26);
          this.Config.SetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Palette", num27);
          this.Config.Save();
          UI.Notify("Outfit saved!");
        }
        if (SVL.Index == 1)
        {
          Get.Text = "Load";
          Ped character = Game.Player.Character;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__3 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, Class1, object> target = Class1.\u003C\u003Eo__944.\u003C\u003Ep__3.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, Class1, object>> p3 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__3;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__2 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = Class1.\u003C\u003Eo__944.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__2, str, Slots[Sl.Index]);
          target((CallSite) p3, this, obj);
          int num1 = this.Config.GetValue<int>("0 FACE", "Head_Drawable", 0);
          int num2 = this.Config.GetValue<int>("0 FACE", "Head_Palette", 0);
          int num3 = this.Config.GetValue<int>("1 BEARD", "BEARD_Drawable", 0);
          int num4 = this.Config.GetValue<int>("1 BEARD", "BEARD_Palette", 0);
          int num5 = this.Config.GetValue<int>("2 HAIRCUT", "HAIRCUT_Drawable", 0);
          int num6 = this.Config.GetValue<int>("2 HAIRCUT", "HAIRCUT_Palette", 0);
          int num7 = this.Config.GetValue<int>("3 SHIRT", "SHIRT_Drawable", 0);
          int num8 = this.Config.GetValue<int>("3 SHIRT", "SHIRT_Palette", 0);
          int num9 = this.Config.GetValue<int>("4 PANTS", "PANTS_Drawable", 0);
          int num10 = this.Config.GetValue<int>("4 PANTS", "PANTS_Palette", 0);
          int num11 = this.Config.GetValue<int>("5 Hands / Gloves", "Gloves_Drawable", 0);
          int num12 = this.Config.GetValue<int>("5 Hands / Gloves", "Gloves_Palette", 0);
          int num13 = this.Config.GetValue<int>("6 SHOES", "SHOES_Drawable", 0);
          int num14 = this.Config.GetValue<int>("6 SHOES", "SHOES_Palette", 0);
          int num15 = this.Config.GetValue<int>("7 Eyes", "Eyes_Drawable", 0);
          int num16 = this.Config.GetValue<int>("7 Eyes", "Eyes_Palette", 0);
          int num17 = this.Config.GetValue<int>("8 Accessories", "Accessories_Drawable", 0);
          int num18 = this.Config.GetValue<int>("8 Accessories", "Accessories_Palette", 0);
          int num19 = this.Config.GetValue<int>("9 Mission Items/ Tasks", "Mission_Drawable", 0);
          int num20 = this.Config.GetValue<int>("9 Mission Items/ Tasks", "Mission_Palette", 0);
          int num21 = this.Config.GetValue<int>("10 Decals", "Decals_Drawable", 0);
          int num22 = this.Config.GetValue<int>("10 Decals", "Decals_Palette", 0);
          int num23 = this.Config.GetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Drawable", 0);
          int num24 = this.Config.GetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Palette", 0);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) num1, (InputArgument) num2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) num3, (InputArgument) num4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) num5, (InputArgument) num6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) num7, (InputArgument) num8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) num9, (InputArgument) num10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) num11, (InputArgument) num12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) num13, (InputArgument) num14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) num15, (InputArgument) num16, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) num17, (InputArgument) num18, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) num19, (InputArgument) num20, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) num21, (InputArgument) num22, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) num23, (InputArgument) num24, (InputArgument) 1);
          int num25 = this.Config.GetValue<int>("-1 HAT", "Hat_Drawable", 0);
          int num26 = this.Config.GetValue<int>("-1 Hat", "Hat_Tex", 0);
          int num27 = this.Config.GetValue<int>("-1 Hat", "Hat_Palette", 0);
          if (num25 >= 1)
            Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) num25, (InputArgument) num26, (InputArgument) num27);
          else if (num25 < 1)
            Function.Call(Hash._0xCD8A7537A9B52F06, (InputArgument) Game.Player.Character);
        }
      });
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (SVL.Index == 0)
          Get.Text = "Save";
        if (SVL.Index != 1)
          return;
        Get.Text = "Load";
      });
      UIMenuListItem Comp1 = new UIMenuListItem("", items4, 0);
      uiMenu2.AddItem((UIMenuItem) Comp1);
      UIMenuListItem Drawable = new UIMenuListItem("Item : ", items2, 0);
      uiMenu2.AddItem((UIMenuItem) Drawable);
      UIMenuListItem Texture = new UIMenuListItem("Texture : ", items3, 0);
      uiMenu2.AddItem((UIMenuItem) Texture);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Set)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Wardrobe//Weapons.ini");
          foreach (WeaponHash weaponHash in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
          {
            if (Game.Player.Character.Weapons.HasWeapon(weaponHash))
            {
              Game.Player.Character.Weapons.Select(weaponHash, false);
              this.Config.SetValue<WeaponHash>(weaponHash.ToString(), "WeaponName", weaponHash);
              WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
              this.Liv = Game.Player.Character.Weapons.Current.Tint;
              int num = 0;
              foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
              {
                try
                {
                  if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash.GetHashCode(), (InputArgument) component.GetHashCode()))
                  {
                    if (Game.Player.Character.Weapons.Current.IsComponentActive(component))
                    {
                      this.Config.SetValue<bool>(weaponHash.ToString(), "HasComponent" + num.ToString(), true);
                      this.Config.SetValue<WeaponComponent>(weaponHash.ToString(), "Component" + num.ToString(), component);
                      ++num;
                      this.Config.Save();
                    }
                    if (!Game.Player.Character.Weapons.Current.IsComponentActive(component))
                    {
                      this.Config.SetValue<bool>(weaponHash.ToString(), "HasComponent" + num.ToString(), false);
                      this.Config.SetValue<WeaponComponent>(weaponHash.ToString(), "Component" + num.ToString(), component);
                      ++num;
                      this.Config.Save();
                    }
                  }
                }
                catch
                {
                  ++num;
                  UI.Notify("~y~ Warning ~w~: Weapon : " + weaponHash.ToString() + " Failed to save");
                }
              }
              this.Config.SetValue<WeaponTint>(weaponHash.ToString(), "Tint", this.Liv);
              this.Config.Save();
            }
          }
          this.ID_O = O.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ID_C = Class1.\u003C\u003Eo__944.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__4, Colours[C.Index]);
          this.PenthouseSetoutfit(O.Index);
          UI.Notify("~y~ Warning ~w~ Lag is normal while applying outfits");
          Script.Wait(2000);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__9 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target1 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__9.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p9 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__9;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target2 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p8 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object, object> target3 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__7.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object, object>> p7 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__7;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target4 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__6.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p6 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__6;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__5 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__944.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__5, "Player is wearing outfit : ~y~", Outfits[O.Index]);
          object obj2 = target4((CallSite) p6, obj1, "~w~ with colour : ~y~");
          object obj3 = Colours[C.Index];
          object obj4 = target3((CallSite) p7, obj2, obj3);
          object obj5 = target2((CallSite) p8, obj4, "~y~");
          target1((CallSite) p9, type, obj5);
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Wardrobe//Weapons.ini");
          foreach (WeaponHash weaponHash1 in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
          {
            WeaponHash weaponHash2 = this.Config.GetValue<WeaponHash>(weaponHash1.ToString(), "WeaponName", weaponHash1);
            if (weaponHash1 == weaponHash2)
            {
              Game.Player.Character.Weapons.Give(weaponHash1, 9999, true, true);
              Game.Player.Character.Weapons.Select(weaponHash1, true);
              this.Liv = this.Config.GetValue<WeaponTint>(weaponHash1.ToString(), "Tint", this.Liv);
              WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
              Game.Player.Character.Weapons.Current.Tint = this.Liv;
              this.Comp = 0;
              foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
              {
                try
                {
                  if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash1.GetHashCode(), (InputArgument) component.GetHashCode()))
                  {
                    if (this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                    {
                      Game.Player.Character.Weapons.Current.SetComponent(component, true);
                      ++this.Comp;
                    }
                    else if (!this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                      ++this.Comp;
                  }
                }
                catch
                {
                  ++this.Comp;
                }
              }
            }
          }
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 9999);
          Game.Player.Character.Weapons.Give(WeaponHash.Unarmed, 9999, true, true);
        }
        if (item != Remove || !(Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeMale01))
          return;
        UI.Notify("taking off Outfit, this may take some time, lag spikes are normal");
        GTA.Model model = new GTA.Model(this.OldCharacter.Hash);
        model.Request(500);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(100);
          Function.Call(Hash._0x00A1CADD00108836, (InputArgument) Game.Player, (InputArgument) model.Hash);
        }
        model.MarkAsNoLongerNeeded();
        this.LoadIniFile("scripts//Juggernaut.ini");
        foreach (WeaponHash weaponHash1 in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
        {
          WeaponHash weaponHash2 = this.Config.GetValue<WeaponHash>(weaponHash1.ToString(), "WeaponName", weaponHash1);
          if (weaponHash1 == weaponHash2)
          {
            Game.Player.Character.Weapons.Give(weaponHash1, 9999, true, true);
            Game.Player.Character.Weapons.Select(weaponHash1, true);
            this.Liv = this.Config.GetValue<WeaponTint>(weaponHash1.ToString(), "Tint", this.Liv);
            WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
            Game.Player.Character.Weapons.Current.Tint = this.Liv;
            this.Comp = 0;
            foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash1.GetHashCode(), (InputArgument) component.GetHashCode()))
                {
                  if (this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                  {
                    Game.Player.Character.Weapons.Current.SetComponent(component, true);
                    ++this.Comp;
                  }
                  else if (!this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                    ++this.Comp;
                }
              }
              catch
              {
                ++this.Comp;
              }
            }
          }
        }
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 9999);
        Game.Player.Character.Weapons.Give(WeaponHash.Unarmed, 9999, true, true);
        UI.Notify("Removed Outfit!");
      });
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == O)
          this.ID_O = O.Index;
        if (item != C || C != O)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__944.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.ID_C = Class1.\u003C\u003Eo__944.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__10, Colours[C.Index]);
      });
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        try
        {
          if (item == Comp1 && (Entity) Game.Player.Character != (Entity) null)
          {
            if (Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index) > Drawable.Index)
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__11 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__11 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__11, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
            else
            {
              Drawable.Index = 0;
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__12 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__12 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__12, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
            if (Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index, (InputArgument) Drawable.Index) > Texture.Index)
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__13 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__13 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__13, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
            else
            {
              Texture.Index = 0;
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__14 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__14 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__14, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
          }
          if (item == Drawable && (Entity) Game.Player.Character != (Entity) null)
          {
            if (Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index) > Drawable.Index)
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__15 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__15 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__15, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
            else
            {
              Drawable.Index = 0;
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__16 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__944.\u003C\u003Ep__16 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__16, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
            }
          }
          if (item != Texture || !((Entity) Game.Player.Character != (Entity) null))
            return;
          if (Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index, (InputArgument) Drawable.Index) > Texture.Index)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__17 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__17, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
          }
          else
          {
            Texture.Index = 0;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__944.\u003C\u003Ep__18 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__944.\u003C\u003Ep__18 = CallSite<Action<CallSite, System.Type, Hash, Ped, int, object, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Call", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__944.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__944.\u003C\u003Ep__18, typeof (Function), Hash._0x262B14F48D29DE80, Game.Player.Character, Comp1.Index, Draw[Drawable.Index], Tex[Texture.Index], 1);
          }
        }
        catch
        {
        }
      });
    }

    public float Get_RGB(Color C, string argb)
    {
      if (argb.Equals("a"))
        return (float) C.A;
      if (argb.Equals("r"))
        return (float) C.R;
      if (argb.Equals("g"))
        return (float) C.G;
      return argb.Equals("b") ? (float) C.B : (float) byte.MaxValue;
    }

    public void DrawSpotlight2(
      Color C,
      Vector3 pos,
      Vector3 Rot,
      float range,
      float brightness,
      float roundness)
    {
      Vector3 vector3 = pos;
      vector3 = new Vector3(vector3.X, vector3.Y, vector3.Z);
      World.DrawSpotLightWithShadow(pos, new Vector3(0.0f, 90f, Rot.Z), C, range, brightness, 0.0f, 35f, 1f);
    }

    public void DrawSpotlight(
      Color C,
      Vector3 pos,
      Vector3 Rot,
      float range,
      float brightness,
      float roundness)
    {
      Vector3 vector3 = pos;
      vector3 = new Vector3(vector3.X, vector3.Y, vector3.Z);
      World.DrawSpotLightWithShadow(pos, new Vector3(0.0f, -90f, Rot.Z), C, range, brightness, 0.0f, 35f, 1f);
      World.DrawSpotLightWithShadow(pos, new Vector3(0.0f, 90f, Rot.Z), C, range, brightness, 0.0f, 35f, 1f);
    }

    public void DrawLight(Color C, Vector3 pos, float range, float brightness)
    {
      this.Get_RGB(C, "r");
      this.Get_RGB(C, "g");
      this.Get_RGB(C, "b");
      Vector3 pos1 = pos;
      pos1 = new Vector3(pos1.X, pos1.Y, pos1.Z + 1f);
      Vector3 dir = pos - pos1;
      dir.Normalize();
      World.DrawSpotLight(pos1, dir, C, range, brightness, 0.0f, 10f, 1f);
    }

    public void SetupINDArcade(int Ver, int ArcNo)
    {
      Vector3 vector3 = new Vector3(0.0f, 0.0f, 0.0f);
      float z = 0.0f;
      if (ArcNo == 1)
      {
        vector3 = Class1.ArcadePos1;
        z = this.ArcadeRot1;
      }
      if (ArcNo == 2)
      {
        vector3 = Class1.ArcadePos2;
        z = this.ArcadeRot2;
      }
      if (ArcNo == 3)
      {
        vector3 = Class1.ArcadePos3;
        z = this.ArcadeRot3;
      }
      if (ArcNo == 4)
      {
        vector3 = Class1.ArcadePos4;
        z = this.ArcadeRot4;
      }
      if (ArcNo == 5)
      {
        vector3 = Class1.ArcadePos5;
        z = this.ArcadeRot5;
      }
      if (ArcNo == 6)
      {
        vector3 = Class1.ArcadePos6;
        z = this.ArcadeRot6;
      }
      if (ArcNo == 7)
      {
        vector3 = Class1.ArcadePos7;
        z = this.ArcadeRot7;
      }
      if (ArcNo == 8)
      {
        vector3 = Class1.ArcadePos8;
        z = this.ArcadeRot8;
      }
      if (ArcNo == 9)
      {
        vector3 = Class1.ArcadePos9;
        z = this.ArcadeRot9;
      }
      if (ArcNo == 10)
      {
        vector3 = Class1.ArcadePos10;
        z = this.ArcadeRot10;
      }
      if (ArcNo == 11)
      {
        vector3 = Class1.ArcadePos11;
        z = this.ArcadeRot11;
      }
      if (ArcNo == 12)
      {
        vector3 = Class1.ArcadePos12;
        z = this.ArcadeRot12;
      }
      if (ArcNo == 13)
      {
        vector3 = Class1.ArcadePos13;
        z = this.ArcadeRot13;
      }
      if (ArcNo == 14)
      {
        vector3 = Class1.ArcadePos14;
        z = this.ArcadeRot14;
      }
      if (ArcNo == 15)
      {
        vector3 = Class1.ArcadePos15;
        z = this.ArcadeRot15;
      }
      if (ArcNo == 16)
      {
        vector3 = Class1.ArcadePos16;
        z = this.ArcadeRot16;
      }
      if (ArcNo == 17)
      {
        vector3 = Class1.ArcadePos17;
        z = this.ArcadeRot17;
      }
      if (ArcNo == 18)
      {
        vector3 = Class1.ArcadePos18;
        z = this.ArcadeRot18;
      }
      if (ArcNo == 19)
      {
        vector3 = Class1.ArcadePos19;
        z = this.ArcadeRot19;
      }
      if (ArcNo == 20)
      {
        vector3 = Class1.ArcadePos20;
        z = this.ArcadeRot20;
      }
      if (Ver == 0 && this.ArcadeProps.Count > 0)
      {
        foreach (Prop arcadeProp in this.ArcadeProps)
        {
          if ((double) World.GetDistance(arcadeProp.Position, vector3) < 0.150000005960464)
            arcadeProp.Delete();
        }
      }
      if ((uint) Ver > 0U && Ver < 14)
      {
        this.FakeArcade = World.CreateProp(this.RequestModel(this.ArcadePropNames[Ver]), vector3, new Vector3(0.0f, 0.0f, z), true, false);
        this.ArcadeProps.Add(this.FakeArcade);
        if (this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if (Ver != 4 && (double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 0.150000005960464 && (Entity) arcadeProp != (Entity) this.FakeArcade)
              arcadeProp.Delete();
            if ((Ver == 4 || Ver == 5) && (double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
              arcadeProp.Delete();
          }
        }
      }
      if (Ver == 14)
      {
        this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_01a"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
        this.ArcadeProps.Add(this.FakeArcade);
        if (this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
              arcadeProp.Delete();
          }
        }
        Vector3 offsetInWorldCoords1 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
        Vector3 offsetInWorldCoords2 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
        Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_car_01b"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop1);
        prop1.FreezePosition = true;
        Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_car_01a"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop2);
        prop2.FreezePosition = true;
        this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop1, prop2, "Car"));
      }
      if (Ver == 15)
      {
        this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_01b"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
        this.ArcadeProps.Add(this.FakeArcade);
        if (this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
              arcadeProp.Delete();
          }
        }
        Vector3 offsetInWorldCoords1 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
        Vector3 offsetInWorldCoords2 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
        Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_truck_01a"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop1);
        prop1.FreezePosition = true;
        Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_truck_01b"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop2);
        prop2.FreezePosition = true;
        this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop1, prop2, "Car"));
      }
      if (Ver != 16)
        return;
      this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_02a"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
      this.ArcadeProps.Add(this.FakeArcade);
      if (this.ArcadeProps.Count > 0)
      {
        foreach (Prop arcadeProp in this.ArcadeProps)
        {
          if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
            arcadeProp.Delete();
        }
      }
      Vector3 offsetInWorldCoords3 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
      Vector3 offsetInWorldCoords4 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
      Prop prop3 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_bike_02a"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
      this.SeconardyArcadeProps.Add(prop3);
      prop3.FreezePosition = true;
      Prop prop4 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_bike_02a"), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
      this.SeconardyArcadeProps.Add(prop4);
      prop4.FreezePosition = true;
      this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop3, prop4, "Bike"));
    }

    public void SetupFakeArcade(int Ver, int ArcNo, string arcid)
    {
      try
      {
        Vector3 vector3 = new Vector3(0.0f, 0.0f, 0.0f);
        float z = 0.0f;
        if (ArcNo == 1)
        {
          vector3 = Class1.ArcadePos1;
          z = this.ArcadeRot1;
        }
        if (ArcNo == 2)
        {
          vector3 = Class1.ArcadePos2;
          z = this.ArcadeRot2;
        }
        if (ArcNo == 3)
        {
          vector3 = Class1.ArcadePos3;
          z = this.ArcadeRot3;
        }
        if (ArcNo == 4)
        {
          vector3 = Class1.ArcadePos4;
          z = this.ArcadeRot4;
        }
        if (ArcNo == 5)
        {
          vector3 = Class1.ArcadePos5;
          z = this.ArcadeRot5;
        }
        if (ArcNo == 6)
        {
          vector3 = Class1.ArcadePos6;
          z = this.ArcadeRot6;
        }
        if (ArcNo == 7)
        {
          vector3 = Class1.ArcadePos7;
          z = this.ArcadeRot7;
        }
        if (ArcNo == 8)
        {
          vector3 = Class1.ArcadePos8;
          z = this.ArcadeRot8;
        }
        if (ArcNo == 9)
        {
          vector3 = Class1.ArcadePos9;
          z = this.ArcadeRot9;
        }
        if (ArcNo == 10)
        {
          vector3 = Class1.ArcadePos10;
          z = this.ArcadeRot10;
        }
        if (ArcNo == 11)
        {
          vector3 = Class1.ArcadePos11;
          z = this.ArcadeRot11;
        }
        if (ArcNo == 12)
        {
          vector3 = Class1.ArcadePos12;
          z = this.ArcadeRot12;
        }
        if (ArcNo == 13)
        {
          vector3 = Class1.ArcadePos13;
          z = this.ArcadeRot13;
        }
        if (ArcNo == 14)
        {
          vector3 = Class1.ArcadePos14;
          z = this.ArcadeRot14;
        }
        if (ArcNo == 15)
        {
          vector3 = Class1.ArcadePos15;
          z = this.ArcadeRot15;
        }
        if (ArcNo == 16)
        {
          vector3 = Class1.ArcadePos16;
          z = this.ArcadeRot16;
        }
        if (ArcNo == 17)
        {
          vector3 = Class1.ArcadePos17;
          z = this.ArcadeRot17;
        }
        if (ArcNo == 18)
        {
          vector3 = Class1.ArcadePos18;
          z = this.ArcadeRot18;
        }
        if (ArcNo == 19)
        {
          vector3 = Class1.ArcadePos19;
          z = this.ArcadeRot19;
        }
        if (ArcNo == 20)
        {
          vector3 = Class1.ArcadePos20;
          z = this.ArcadeRot20;
        }
        if (Ver == 0 && this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((double) World.GetDistance(arcadeProp.Position, vector3) < 0.150000005960464)
              arcadeProp.Delete();
          }
        }
        if ((uint) Ver > 0U && Ver < 14)
        {
          this.FakeArcade = World.CreateProp(this.RequestModel(this.ArcadePropNames[Ver]), vector3, new Vector3(0.0f, 0.0f, z), true, false);
          this.ArcadeProps.Add(this.FakeArcade);
          if (this.ArcadeProps.Count > 0)
          {
            foreach (Prop arcadeProp in this.ArcadeProps)
            {
              if (Ver != 4 && (double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 0.150000005960464 && (Entity) arcadeProp != (Entity) this.FakeArcade)
                arcadeProp.Delete();
              if ((Ver == 4 || Ver == 5) && (double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
                arcadeProp.Delete();
            }
          }
        }
        if (Ver == 14)
        {
          this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_01a"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
          this.ArcadeProps.Add(this.FakeArcade);
          if (this.ArcadeProps.Count > 0)
          {
            foreach (Prop arcadeProp in this.ArcadeProps)
            {
              if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
                arcadeProp.Delete();
            }
          }
          Vector3 offsetInWorldCoords1 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
          Vector3 offsetInWorldCoords2 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
          Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_car_01b"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
          this.SeconardyArcadeProps.Add(prop1);
          prop1.FreezePosition = true;
          Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_car_01a"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
          this.SeconardyArcadeProps.Add(prop2);
          prop2.FreezePosition = true;
          this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop1, prop2, "Car"));
        }
        if (Ver == 15)
        {
          this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_01b"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
          this.ArcadeProps.Add(this.FakeArcade);
          if (this.ArcadeProps.Count > 0)
          {
            foreach (Prop arcadeProp in this.ArcadeProps)
            {
              if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
                arcadeProp.Delete();
            }
          }
          Vector3 offsetInWorldCoords1 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
          Vector3 offsetInWorldCoords2 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
          Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_truck_01a"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
          this.SeconardyArcadeProps.Add(prop1);
          prop1.FreezePosition = true;
          Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_truck_01b"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
          this.SeconardyArcadeProps.Add(prop2);
          prop2.FreezePosition = true;
          this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop1, prop2, "Car"));
        }
        if (Ver != 16)
          return;
        this.FakeArcade = World.CreateProp(this.RequestModel("ch_prop_arcade_race_02a"), vector3, new Vector3(0.0f, 0.0f, z), true, false);
        this.ArcadeProps.Add(this.FakeArcade);
        if (this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((double) World.GetDistance(arcadeProp.Position, this.FakeArcade.Position) < 2.0 && (Entity) arcadeProp != (Entity) this.FakeArcade)
              arcadeProp.Delete();
          }
        }
        Vector3 offsetInWorldCoords3 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(-0.65f, 0.0f, 0.15f));
        Vector3 offsetInWorldCoords4 = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.65f, 0.0f, 0.15f));
        Prop prop3 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_bike_02a"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop3);
        prop3.FreezePosition = true;
        Prop prop4 = World.CreateProp(this.RequestModel("ch_prop_arcade_race_bike_02a"), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.FakeArcade.Rotation.Z), true, false);
        this.SeconardyArcadeProps.Add(prop4);
        prop4.FreezePosition = true;
        this.RacingArcades.Add(new RaceArcade(this.FakeArcade, prop3, prop4, "Bike"));
      }
      catch
      {
      }
    }

    public void AddArcades()
    {
      this.ArcadePos.Clear();
      this.ArcadePos.Add(new Vector3(2729.6f, -382.4f, -50f));
      this.ArcadePos.Add(new Vector3(2728.7f, -382.4f, -50f));
      this.ArcadePos.Add(new Vector3(2729.6f, -385.6f, -50f));
      this.ArcadePos.Add(new Vector3(2731.2f, -383.8f, -50f));
      foreach (Prop arcadeProp in this.ArcadeProps)
      {
        if ((Entity) arcadeProp != (Entity) null)
          this.ArcadePos.Add(arcadeProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 0.0f)));
      }
    }

    public void SetupModifications(Vehicle V)
    {
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
      System.Random random = new System.Random();
      V.SetMod(VehicleMod.Exhaust, random.Next(0, 4), true);
      V.SetMod(VehicleMod.Grille, random.Next(0, 3), true);
      V.SetMod(VehicleMod.Frame, random.Next(0, 3), true);
      V.SetMod(VehicleMod.EngineBlock, random.Next(0, 4), true);
      V.SetMod(VehicleMod.ArchCover, random.Next(0, 3), true);
      V.SetMod(VehicleMod.Tank, random.Next(0, 2), true);
      V.SetMod(VehicleMod.Struts, random.Next(0, 3), true);
      V.SetMod(VehicleMod.AirFilter, random.Next(0, 3), true);
      V.SetMod(VehicleMod.Livery, random.Next(0, 17), true);
      Function.Call(Hash._0x6AF0636DDEDCB6DD, (InputArgument) V, (InputArgument) 44, (InputArgument) random.Next(0, 1), (InputArgument) true);
      V.PrimaryColor = this.GetColor();
      V.SecondaryColor = this.GetColor();
      V.ToggleMod(VehicleToggleMod.XenonHeadlights, true);
      V.LightsOn = true;
      V.HighBeamsOn = true;
      int num = new System.Random().Next(1, 13);
      if (num == 1)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 1);
      if (num == 2)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 2);
      if (num == 3)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 3);
      if (num == 4)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 4);
      if (num == 5)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 5);
      if (num == 6)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 6);
      if (num == 7)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 7);
      if (num == 8)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 8);
      if (num == 9)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 9);
      if (num == 10)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 10);
      if (num == 11)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 11);
      if (num == 12)
        Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) 12);
      if (num != 13)
        return;
      Function.Call((Hash) 16433691881432431111, (InputArgument) V, (InputArgument) (int) byte.MaxValue);
    }

    public void SetupRivalCar(int i, Vehicle V)
    {
      Script.Wait(3);
      if (i == 0)
      {
        System.Random random1 = new System.Random();
        System.Random random2 = new System.Random();
        V.MaxSpeed = 400f;
        V.EngineTorqueMultiplier = (float) (random1.Next(15, 100) / 10);
        V.EnginePowerMultiplier = (float) (random2.Next(15, 100) / 10);
        this.SetupModifications(V);
      }
      if (i == 1)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
        V.SetMod(VehicleMod.Spoilers, 0, true);
        V.SetMod(VehicleMod.FrontWheels, 4, true);
        V.PrimaryColor = VehicleColor.MetallicPurple;
        V.SecondaryColor = VehicleColor.MetallicPurple;
        V.PearlescentColor = VehicleColor.MetallicUltraBlue;
        V.SetMod(VehicleMod.Livery, 4, true);
        V.MaxSpeed = 400f;
        V.EngineTorqueMultiplier = 1.4f;
        V.EnginePowerMultiplier = 1.4f;
      }
      if (i == 2)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
        V.SetMod(VehicleMod.Aerials, 10, true);
        V.SetMod(VehicleMod.AirFilter, 7, true);
        V.SetMod(VehicleMod.ArchCover, 5, true);
        V.SetMod(VehicleMod.Spoilers, 12, true);
        V.PrimaryColor = VehicleColor.BrushedAluminium;
        V.SecondaryColor = VehicleColor.BrushedAluminium;
        V.PearlescentColor = VehicleColor.MatteBlack;
        V.SetMod(VehicleMod.Livery, 3, true);
        V.MaxSpeed = 400f;
        V.EngineTorqueMultiplier = 2.2f;
        V.EnginePowerMultiplier = 2.4f;
      }
      if (i == 3)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
        V.SetMod(VehicleMod.Hood, 4, true);
        V.PrimaryColor = VehicleColor.MetallicBlack;
        V.SecondaryColor = VehicleColor.Chrome;
        V.PearlescentColor = VehicleColor.MetallicBlack;
        V.MaxSpeed = 400f;
        V.EngineTorqueMultiplier = 5f;
        V.EnginePowerMultiplier = 5f;
      }
      if (i == 4)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
        V.PrimaryColor = VehicleColor.MetallicTorinoRed;
        V.SecondaryColor = VehicleColor.MetallicTorinoRed;
        V.PearlescentColor = VehicleColor.MetallicBlack;
        V.MaxSpeed = 420f;
        V.EngineTorqueMultiplier = 2f;
        V.EnginePowerMultiplier = 2f;
      }
      if (i == 5)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
        V.PrimaryColor = VehicleColor.MatteBlack;
        V.SecondaryColor = VehicleColor.MatteBlack;
        V.PearlescentColor = VehicleColor.MetallicBlack;
        V.SetMod(VehicleMod.Livery, 1, true);
        V.MaxSpeed = 420f;
        V.EngineTorqueMultiplier = 2.4f;
        V.EnginePowerMultiplier = 1.3f;
      }
      if (i != 6)
        return;
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) V.Handle, (InputArgument) 0);
      V.PrimaryColor = VehicleColor.MatteBlack;
      V.SecondaryColor = VehicleColor.MatteBlack;
      V.PearlescentColor = VehicleColor.MetallicBlack;
      V.SetMod(VehicleMod.Livery, 2, true);
      V.MaxSpeed = 420f;
      V.EngineTorqueMultiplier = 4f;
      V.EnginePowerMultiplier = 2.2f;
    }

    public void SetupArcadeGame(int AGame, Vector3 ArcadePos)
    {
      if (AGame == 1)
      {
        if ((Entity) this.PLayerVehicle != (Entity) null)
          this.PLayerVehicle.Delete();
        if ((Entity) this.VtoGet != (Entity) null)
          this.VtoGet.Delete();
        if (this.VtoGetBlip != (Blip) null)
          this.VtoGetBlip.Remove();
        this.OriginalArcadePos = ArcadePos;
        Game.Player.Character.Position = new Vector3(-888f, -802f, 14f);
        UI.Notify("Drive this RC Bandito around, flipping it jumping over stuff to earn points, in the given time limit");
        this.RaceMarker = new Vector3(-888f, -802f, 14f);
        Script.Wait(200);
        if ((Entity) this.PLayerVehicle != (Entity) null)
          this.PLayerVehicle.Delete();
        this.PLayerVehicle = World.CreateVehicle((GTA.Model) "rcbandito", new Vector3(-888f, -802f, 14f), 148f);
        Game.Player.Character.SetIntoVehicle(this.PLayerVehicle, VehicleSeat.Driver);
        this.SetupRivalCar(0, this.PLayerVehicle);
        this.VtoGetBlip = World.CreateBlip(this.RaceMarker);
        this.VtoGetBlip.Name = "Start Marker";
        this.VtoGetBlip.Sprite = BlipSprite.RaceFinish;
        this.VtoGetBlip.Color = BlipColor.White;
        this.VtoGetBlip.Name = "Start Marker";
        this.StartedRace = false;
        this.TimeLeft = 80;
        Game.Player.Character.IsInvincible = true;
        this.moneytobeawarded = 0.0f;
        this.PLayerVehicle.FreezePosition = false;
        this.IsinInterior = false;
        this.CurrentArcadeGame = 1;
        this.PlayingArcadeGame = true;
      }
      if (AGame == 2)
      {
        if (this.ArcadeCamera != (Camera) null)
        {
          Game.Player.WantedLevel = 0;
          Game.Player.Character.IsInvincible = false;
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.ArcadeCamera.IsActive = false;
          this.ArcadeCamera.Destroy();
        }
        if ((Entity) this.PLayerVehicle != (Entity) null)
          this.PLayerVehicle.Delete();
        this.PLayerVehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Molotok), new Vector3(-199f, -799f, 371f), 0.0f);
        this.PLayerVehicle.FreezePosition = true;
        this.ArcadeCamera = World.CreateCamera(new Vector3(-199f, -799f, 400f), new Vector3(-90f, 0.0f, 0.0f), 100f);
        this.ArcadeCamera.IsActive = true;
        this.ArcadeCamera.FarClip = 2000f;
        Function.Call(Hash._0x11FE353CF9733E6F, (InputArgument) "instructional_buttons");
        Game.Player.Character.Position = new Vector3(-199f, -799f, 371f);
        Script.Wait(1);
        Game.Player.Character.SetIntoVehicle(this.PLayerVehicle, VehicleSeat.Driver);
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        World.RenderingCamera = this.ArcadeCamera;
        this.OriginalArcadePos = ArcadePos;
        this.StartedRace = false;
        this.TimeLeft = 160;
        Game.Player.Character.IsInvincible = true;
        this.moneytobeawarded = 0.0f;
        this.PLayerVehicle.FreezePosition = false;
        this.IsinInterior = false;
        this.CurrentArcadeGame = 2;
        this.HP = 100;
        this.EnemyTimer = 0;
        this.moneytobeawarded = 0.0f;
        this.EnemyMaxTimer = 160;
        this.PlayingArcadeGame = true;
      }
      if (AGame != 7)
        return;
      if (this.ArcadeCamera != (Camera) null)
      {
        Game.Player.WantedLevel = 0;
        Game.Player.Character.IsInvincible = false;
        Game.Player.Character.FreezePosition = false;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.ArcadeCamera.IsActive = false;
        this.ArcadeCamera.Destroy();
      }
      if ((Entity) this.PLayerVehicle != (Entity) null)
        this.PLayerVehicle.Delete();
      this.PLayerVehicle = World.CreateVehicle(this.RequestModel("FORMULA"), new Vector3(175f, -187f, 31f), 0.0f);
      this.PLayerVehicle.PlaceOnNextStreet();
      this.ArcadeCamera = World.CreateCamera(new Vector3(175f, -187f, 100f), new Vector3(-90f, 0.0f, 0.0f), 100f);
      this.ArcadeCamera.IsActive = true;
      this.ArcadeCamera.FarClip = 2000f;
      Function.Call(Hash._0x11FE353CF9733E6F, (InputArgument) "instructional_buttons");
      Game.Player.Character.Position = new Vector3(175f, -187f, 31f);
      Script.Wait(1);
      Game.Player.Character.SetIntoVehicle(this.PLayerVehicle, VehicleSeat.Driver);
      Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
      World.RenderingCamera = this.ArcadeCamera;
      this.OriginalArcadePos = ArcadePos;
      this.StartedRace = false;
      this.TimeLeft = 160;
      Game.Player.Character.IsInvincible = true;
      this.moneytobeawarded = 0.0f;
      this.PLayerVehicle.FreezePosition = false;
      this.IsinInterior = false;
      this.CurrentArcadeGame = 7;
      this.HP = 100;
      this.EnemyTimer = 0;
      this.moneytobeawarded = 0.0f;
      this.EnemyMaxTimer = 160;
      this.PlayingArcadeGame = true;
      this.Range = 100f;
      if ((Entity) this.PlayerV != (Entity) null)
        this.PlayerV.Delete();
      this.PlayerV = World.CreateVehicle(this.RequestModel("FORMULA"), new Vector3(175f, -187f, 31f), 0.0f);
      this.PlayerV.FreezePosition = true;
      this.PlayerV.PrimaryColor = VehicleColor.MetallicTorinoRed;
      this.PlayerV.SecondaryColor = VehicleColor.MetallicTorinoRed;
      this.PlayerV.Alpha = 175;
      this.PlayerV.HasCollision = false;
      foreach (Vehicle enemyV in this.EnemyVs)
      {
        if ((Entity) enemyV != (Entity) null)
          enemyV.Delete();
      }
      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Adder), this.PLayerVehicle.Position.Around(this.Range), 180f);
      vehicle.PlaceOnNextStreet();
      this.EnemyVs.Add(vehicle);
      this.NextTarget = vehicle.Position;
      foreach (Vehicle enemyV in this.EnemyVs)
      {
        if ((Entity) enemyV != (Entity) null)
          enemyV.Delete();
      }
    }

    public void CreateChipProp(Vector3 Spawn, string Name)
    {
    }

    private void SetupWeapons()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Classic Black");
      items1.Add((object) "Classic Gray");
      items1.Add((object) "Classic Two-Tone");
      items1.Add((object) "Classic White");
      items1.Add((object) "Classic Beige");
      items1.Add((object) "Classic Green");
      items1.Add((object) "Classic Blue");
      items1.Add((object) "Classic Earth");
      items1.Add((object) "Classic Brown & Black");
      items1.Add((object) "Red Contrast");
      items1.Add((object) "Blue Contrast");
      items1.Add((object) "Yellow Contrast");
      items1.Add((object) "Orange Contrast");
      items1.Add((object) "Bold Pink");
      items1.Add((object) "Bold Purple & Yellow");
      items1.Add((object) "Bold Orange");
      items1.Add((object) "Bold Green & Purple");
      items1.Add((object) "Bold Red & Black");
      items1.Add((object) "Bold Green & Black");
      items1.Add((object) "Bold Cyan & Black");
      items1.Add((object) "Bold Yellow & Black");
      items1.Add((object) "Bold Red & White");
      items1.Add((object) "Bold Blue & White");
      items1.Add((object) "Metallic Gold");
      items1.Add((object) "Metallic Platinum");
      items1.Add((object) "Metallic Gray & Lilac");
      items1.Add((object) "Metallic Purple & Lime");
      items1.Add((object) "Metallic Red");
      items1.Add((object) "Metallic Green");
      items1.Add((object) "Metallic Blue");
      items1.Add((object) "Metallic White & Aqua");
      items1.Add((object) "Metallic Red & Yellow");
      float CPrice = 34000f;
      List<object> Mk2Weapons = new List<object>();
      Mk2Weapons.Add((object) WeaponHash.AssaultrifleMk2);
      Mk2Weapons.Add((object) WeaponHash.BullpupRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CarbineRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CombatMGMk2);
      Mk2Weapons.Add((object) WeaponHash.HeavySniperMk2);
      Mk2Weapons.Add((object) WeaponHash.MarksmanRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.PistolMk2);
      Mk2Weapons.Add((object) WeaponHash.PumpShotgunMk2);
      Mk2Weapons.Add((object) WeaponHash.RevolverMk2);
      Mk2Weapons.Add((object) WeaponHash.SMGMk2);
      Mk2Weapons.Add((object) WeaponHash.SNSPistolMk2);
      Mk2Weapons.Add((object) WeaponHash.SpecialCarbineMk2);
      List<object> Components = new List<object>();
      Components.Add((object) WeaponComponent.AssaultRifleClip01);
      Components.Add((object) WeaponComponent.AssaultRifleClip02);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Mk2 Weapons (Advanced)");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem W = new UIMenuListItem("Weapon : ", Mk2Weapons, 0);
      uiMenu1.AddItem((UIMenuItem) W);
      UIMenuListItem C = new UIMenuListItem("Component  : ", Components, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      UIMenuItem Enable = new UIMenuItem("Enable Component : $" + CPrice.ToString("N"));
      uiMenu1.AddItem(Enable);
      UIMenuItem DIsable = new UIMenuItem("Disable Component");
      uiMenu1.AddItem(DIsable);
      UIMenuListItem WT = new UIMenuListItem("Tint ", items1, 0);
      uiMenu1.AddItem((UIMenuItem) WT);
      UIMenuItem getTintAV = new UIMenuItem("Buy Tint: $10,000");
      uiMenu1.AddItem(getTintAV);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == W)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__0 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__0, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
          if (target1((CallSite) p1, obj1))
          {
            Components.Clear();
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__977.\u003C\u003Ep__2 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__2, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            foreach (WeaponComponent weaponComponent in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) weaponComponent.GetHashCode()))
                  Components.Add((object) weaponComponent);
              }
              catch
              {
              }
            }
          }
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__4.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p4 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__4;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__3, Components[C.Index]);
          string str = target2((CallSite) p4, obj2);
          if (str.Contains("Muzzle"))
          {
            CPrice = 45700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
        }
        if (item != C)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__977.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target = Class1.\u003C\u003Eo__977.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p6 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__977.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj = Class1.\u003C\u003Eo__977.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__5, Components[C.Index]);
        string str1 = target((CallSite) p6, obj);
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Sights"))
        {
          CPrice = 24700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Tracer"))
        {
          CPrice = 42700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("FMJ"))
        {
          CPrice = 73000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ArmourPiercing"))
        {
          CPrice = 63000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Incediary"))
        {
          CPrice = 49000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ClipExplosive"))
        {
          CPrice = 115450f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Grip"))
        {
          CPrice = 14080f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Supp"))
        {
          CPrice = 40250f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Clip02"))
        {
          CPrice = 60000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo01"))
        {
          CPrice = 40000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo02"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo03"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo04"))
        {
          CPrice = 45500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo05"))
        {
          CPrice = 49500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo06"))
        {
          CPrice = 75500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo07"))
        {
          CPrice = 51500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo08"))
        {
          CPrice = 53500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo09"))
        {
          CPrice = 55500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo10"))
        {
          CPrice = 60500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Independence"))
        {
          CPrice = 100500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTintAV)
        {
          try
          {
            int index1 = WT.Index;
            Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.Weapons.Current.GetHashCode(), (InputArgument) index1);
            Game.Player.Character.Weapons.Current.Tint = (WeaponTint) index1;
            Game.Player.Money -= 10000;
          }
          catch (Exception ex)
          {
            UI.Notify("Error");
          }
        }
        if (item == Enable)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p8 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__7, Components[C.Index]);
          string str = target1((CallSite) p8, obj1);
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if ((double) Game.Player.Money >= (double) CPrice)
          {
            Game.Player.Money -= (int) CPrice;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__977.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__10.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool>> p10 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__10;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__977.\u003C\u003Ep__9 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__9, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
            if (target2((CallSite) p10, obj2))
            {
              if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) C.IndexToItem(C.Index).GetHashCode()))
              {
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__11 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__977.\u003C\u003Ep__11 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__977.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__11, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__12 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__977.\u003C\u003Ep__12 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__977.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__12, Game.Player.Character.Weapons.Current, Components[C.Index], true);
              }
            }
          }
        }
        if (item != DIsable)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__977.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__14.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p14 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__14;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__977.\u003C\u003Ep__13 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__13, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
        if (target3((CallSite) p14, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__19.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p19 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__19;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool, object> target2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__18.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool, object>> p18 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__18;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__17 = CallSite<Func<CallSite, System.Type, Hash, object, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Call", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (bool)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, Hash, object, object, object> target4 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__17.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, Hash, object, object, object>> p17 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__17;
          System.Type type = typeof (Function);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__15, Mk2Weapons[W.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__977.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__16, Components[C.Index]);
          object obj4 = target4((CallSite) p17, type, Hash._0x5CEE3DF569CECAB0, obj1, obj2);
          object obj5 = target2((CallSite) p18, obj4, true);
          if (target1((CallSite) p19, obj5))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__977.\u003C\u003Ep__20 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__20, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__977.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__977.\u003C\u003Ep__21 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__977.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__977.\u003C\u003Ep__21, Game.Player.Character.Weapons.Current, Components[C.Index], false);
          }
        }
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Scifi Weapons");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenu menu = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Mk2 Weapons");
      this.GUIMenus.Add(menu);
      this.GUIMenus.Add(menu);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Normal Weapons");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      List<object> items2 = new List<object>();
      for (int index = 0; index < this.Tintscount; ++index)
        items2.Add((object) index);
      this.MK2Pumpshotgun = this.modMenuPool.AddSubMenu(menu, "MK2 Pump Shotgun");
      this.GUIMenus.Add(this.MK2Pumpshotgun);
      this.GUIMenus.Add(this.MK2Pumpshotgun);
      this.MK2SNSPistol = this.modMenuPool.AddSubMenu(menu, "MK2 SNS Pistol");
      this.GUIMenus.Add(this.MK2SNSPistol);
      this.GUIMenus.Add(this.MK2SNSPistol);
      this.MK2Revolver = this.modMenuPool.AddSubMenu(menu, "MK2 Revolver");
      this.GUIMenus.Add(this.MK2Revolver);
      this.GUIMenus.Add(this.MK2Revolver);
      this.Mk2SpecialCarbine = this.modMenuPool.AddSubMenu(menu, "MK2 Special Carbine");
      this.GUIMenus.Add(this.Mk2SpecialCarbine);
      this.GUIMenus.Add(this.Mk2SpecialCarbine);
      this.MK2Bullpup = this.modMenuPool.AddSubMenu(menu, "MK2 Bullpup Rifle");
      this.GUIMenus.Add(this.MK2Bullpup);
      this.GUIMenus.Add(this.MK2Bullpup);
      this.MK2MarksmanRifle = this.modMenuPool.AddSubMenu(menu, "MK2 Marksmans Rifle");
      this.GUIMenus.Add(this.MK2MarksmanRifle);
      this.GUIMenus.Add(this.MK2MarksmanRifle);
      this.MK2Pistol = this.modMenuPool.AddSubMenu(menu, "MK2 Pistol");
      this.GUIMenus.Add(this.MK2Pistol);
      this.GUIMenus.Add(this.MK2Pistol);
      this.MK2SMG = this.modMenuPool.AddSubMenu(menu, "MK2 SMG");
      this.GUIMenus.Add(this.MK2SMG);
      this.GUIMenus.Add(this.MK2SMG);
      this.MK2LMG = this.modMenuPool.AddSubMenu(menu, "MK2 LMG");
      this.GUIMenus.Add(this.MK2LMG);
      this.GUIMenus.Add(this.MK2LMG);
      this.MK2Carbine = this.modMenuPool.AddSubMenu(menu, "MK2 Carbine");
      this.GUIMenus.Add(this.MK2Carbine);
      this.GUIMenus.Add(this.MK2Carbine);
      this.MK2AssaultRifle = this.modMenuPool.AddSubMenu(menu, "MK2 Assault Rifle");
      this.GUIMenus.Add(this.MK2AssaultRifle);
      this.GUIMenus.Add(this.MK2AssaultRifle);
      this.MK2Sniper = this.modMenuPool.AddSubMenu(menu, "MK2 Sniper");
      this.GUIMenus.Add(this.MK2Sniper);
      this.GUIMenus.Add(this.MK2Sniper);
      UIMenuItem mk2ShotgunP = new UIMenuItem("MK2 Pump Shotgun: $75,000");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunP);
      UIMenuItem mk2Shotgunclip = new UIMenuItem("Normal Shells : $0");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip);
      UIMenuItem mk2Shotgunclip1 = new UIMenuItem("Dragon's Breath Shells : $65,200");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip1);
      UIMenuItem mk2Shotgunclip3 = new UIMenuItem("Flechette Shells: $75,140");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip3);
      UIMenuItem mk2Shotgunclip2 = new UIMenuItem("Steel Buckshot Shells: $96,645");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip2);
      UIMenuItem mk2Shotgunclip4 = new UIMenuItem("Explosive Shells: $145,850");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip4);
      UIMenuItem mk2Shotgunsights = new UIMenuItem("Holographic Sight: $29,260");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights);
      UIMenuItem mk2Shotgunsights2 = new UIMenuItem("Small Scope: $39,920");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights2);
      UIMenuItem mk2Shotgunsights3 = new UIMenuItem("Medium Scope: $50,785");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights3);
      UIMenuItem mk2Shotgunflashlight = new UIMenuItem("Flashlight: $10,500");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunflashlight);
      UIMenuItem mk2ShotgunSuppressor = new UIMenuItem("Suppressor: $45,860");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunSuppressor);
      UIMenuItem mk2Shotgunmuzzle = new UIMenuItem("Muzzle Brake: $37,650");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunmuzzle);
      UIMenuListItem list1 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Pumpshotgun.AddItem((UIMenuItem) list1);
      UIMenuItem getTint1 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pumpshotgun.AddItem(getTint1);
      UIMenuItem mk2Snspistol = new UIMenuItem("MK2 SNS Pistol: $35,000");
      this.MK2SNSPistol.AddItem(mk2Snspistol);
      UIMenuItem mk2Snspistolclipn = new UIMenuItem("Default Clip: $8,000");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipn);
      UIMenuItem mk2Snspistolclipe = new UIMenuItem("Extended Clip: $18,300");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipe);
      UIMenuItem mk2Snspistolclip1 = new UIMenuItem("Tracer Rounds: $34,320");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip1);
      UIMenuItem mk2Snspistolclip2 = new UIMenuItem("Incendiary Rounds: $41,700");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip2);
      UIMenuItem mk2Snspistolclip3 = new UIMenuItem("Hollow Point Rounds : $47,580");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip3);
      UIMenuItem mk2Snspistolclip4 = new UIMenuItem("Full Metal Jacket Rounds: $62,400");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip4);
      UIMenuItem mk2Snspistolflash = new UIMenuItem("Flashlight: $7,500");
      this.MK2SNSPistol.AddItem(mk2Snspistolflash);
      UIMenuItem mk2Snspistolscope1 = new UIMenuItem("Mounted Scope: $16,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolscope1);
      UIMenuItem mk2Snspistolsuppressor = new UIMenuItem("Suppressor: $28,750");
      this.MK2SNSPistol.AddItem(mk2Snspistolsuppressor);
      UIMenuItem mk2Snspistolcomp = new UIMenuItem("Compensator: $21,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolcomp);
      UIMenuListItem list2 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2SNSPistol.AddItem((UIMenuItem) list2);
      UIMenuItem getTint2 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SNSPistol.AddItem(getTint2);
      UIMenuItem mk2Revolver = new UIMenuItem("MK2 Revolver: $35,000");
      this.MK2Revolver.AddItem(mk2Revolver);
      UIMenuItem mk2Revolverclip = new UIMenuItem("Normal Rounds: $0");
      this.MK2Revolver.AddItem(mk2Revolverclip);
      UIMenuItem mk2Revolverclip1 = new UIMenuItem("Tracer Rounds: $31,460");
      this.MK2Revolver.AddItem(mk2Revolverclip1);
      UIMenuItem mk2Revolverclip2 = new UIMenuItem("Incendiary Rounds: $38,225");
      this.MK2Revolver.AddItem(mk2Revolverclip2);
      UIMenuItem mk2Revolverclip3 = new UIMenuItem("Hollow Point Rounds: $43,615");
      this.MK2Revolver.AddItem(mk2Revolverclip3);
      UIMenuItem mk2Revolverclip4 = new UIMenuItem("Full Metal Jacket Rounds: $57,200");
      this.MK2Revolver.AddItem(mk2Revolverclip4);
      UIMenuItem mk2Revolversights = new UIMenuItem("Holographic Sight: $16,250");
      this.MK2Revolver.AddItem(mk2Revolversights);
      UIMenuItem mk2Revolversights1 = new UIMenuItem("Small Scope: $25,450");
      this.MK2Revolver.AddItem(mk2Revolversights1);
      UIMenuItem mk2Revolverflashlight = new UIMenuItem("Flashlight: $7,500");
      this.MK2Revolver.AddItem(mk2Revolverflashlight);
      UIMenuItem mk2RevolverComp = new UIMenuItem("Compensator: $21,250");
      this.MK2Revolver.AddItem(mk2RevolverComp);
      UIMenuListItem list3 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Revolver.AddItem((UIMenuItem) list3);
      UIMenuItem getTint3 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Revolver.AddItem(getTint3);
      UIMenuItem mk2SCarbine = new UIMenuItem("MK2 Special Carbine: $65,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbine);
      UIMenuItem mk2SCarbineclip = new UIMenuItem("Default Clip: $5,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip);
      UIMenuItem mk2SCarbineclip1 = new UIMenuItem("Extended Clip: $26,450");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip1);
      UIMenuItem mk2SCarbineclip2 = new UIMenuItem("Tracer Rounds: $61,465");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip2);
      UIMenuItem mk2SCarbineclip3 = new UIMenuItem("Incendiary Rounds : $70,950");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip3);
      UIMenuItem mk2SCarbineclip4 = new UIMenuItem("Armor Piercing Rounds : $90,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip4);
      UIMenuItem mk2SCarbineclip5 = new UIMenuItem("Full Metal Jacket Rounds : $104,775");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip5);
      UIMenuItem mk2SCarbineflash = new UIMenuItem("Flashlight: $10,500");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineflash);
      UIMenuItem mk2SCarbinesight1 = new UIMenuItem("Holographic Sight: $19,600");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight1);
      UIMenuItem mk2SCarbinesight2 = new UIMenuItem("Small Scope: $23,730");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight2);
      UIMenuItem mk2SCarbinesight3 = new UIMenuItem("Large Scope: $34,020");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight3);
      UIMenuItem mk2SCarbinesupressor = new UIMenuItem("Suppressor : $40,250");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesupressor);
      UIMenuItem mk2SCarbinemuzzle = new UIMenuItem("Muzzle : $29,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinemuzzle);
      UIMenuItem mk2SCarbinegrip = new UIMenuItem("Grip : $14,080");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinegrip);
      UIMenuListItem list4 = new UIMenuListItem("Tint ", items2, 0);
      this.Mk2SpecialCarbine.AddItem((UIMenuItem) list4);
      UIMenuItem getTint4 = new UIMenuItem("Buy Tint: $10,000");
      this.Mk2SpecialCarbine.AddItem(getTint4);
      UIMenuItem mk2Bullpup = new UIMenuItem("MK2 Bullpup Rifle: $60,000");
      this.MK2Bullpup.AddItem(mk2Bullpup);
      UIMenuItem mk2Bullpupclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2Bullpup.AddItem(mk2Bullpupclip1);
      UIMenuItem mk2Bullpupclip2 = new UIMenuItem("Extended Clip : $22,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip2);
      UIMenuItem mk2Bullpupclip3 = new UIMenuItem("Tracer Rounds : $44,350");
      this.MK2Bullpup.AddItem(mk2Bullpupclip3);
      UIMenuItem mk2Bullpupclip4 = new UIMenuItem("Incendiary Rounds : $52,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip4);
      UIMenuItem mk2Bullpupclip5 = new UIMenuItem("Armor Piercing Rounds  : $87,320");
      this.MK2Bullpup.AddItem(mk2Bullpupclip5);
      UIMenuItem mk2Bullpupclip6 = new UIMenuItem("Full Metal Jacket Rounds : $77,490");
      this.MK2Bullpup.AddItem(mk2Bullpupclip6);
      UIMenuItem mk2Bullpupflash = new UIMenuItem("Flashlight  : $10,500");
      this.MK2Bullpup.AddItem(mk2Bullpupflash);
      UIMenuItem mk2Bullpupsight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2Bullpup.AddItem(mk2Bullpupsight1);
      UIMenuItem mk2Bullpupsight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2Bullpup.AddItem(mk2Bullpupsight2);
      UIMenuItem mk2Bullpupsight3 = new UIMenuItem("Medium Scope : $34,020");
      this.MK2Bullpup.AddItem(mk2Bullpupsight3);
      UIMenuItem mk2BullpupBarrel = new UIMenuItem("Heavy Barrel : $49,000");
      this.MK2Bullpup.AddItem(mk2BullpupBarrel);
      UIMenuItem mk2BullpupGrip = new UIMenuItem("Grip : $14,080");
      this.MK2Bullpup.AddItem(mk2BullpupGrip);
      UIMenuItem mk2Bullpupmuzzle = new UIMenuItem("Muzzle  : $29,750");
      this.MK2Bullpup.AddItem(mk2Bullpupmuzzle);
      UIMenuItem mk2BullpupSuppressor = new UIMenuItem("Suppressor  : $40,250");
      this.MK2Bullpup.AddItem(mk2BullpupSuppressor);
      UIMenuListItem list5 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Bullpup.AddItem((UIMenuItem) list5);
      UIMenuItem getTint5 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Bullpup.AddItem(getTint5);
      UIMenuItem mk2marksman = new UIMenuItem("MK2 Marksman Rifle : $80,000");
      this.MK2MarksmanRifle.AddItem(mk2marksman);
      UIMenuItem mk2marksmanclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip1);
      UIMenuItem mk2marksmanclip2 = new UIMenuItem("Extended Clip : $26,850");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip2);
      UIMenuItem mk2marksmanclip3 = new UIMenuItem("Tracer Rounds : $49,775");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip3);
      UIMenuItem mk2marksmanclip4 = new UIMenuItem("Incendiary Rounds : $57,295");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip4);
      UIMenuItem mk2marksmanclip5 = new UIMenuItem("Armor Piercing Rounds  : $73,560");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip5);
      UIMenuItem mk2marksmanclip6 = new UIMenuItem("Full Metal Jacket Rounds : $85,570");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip6);
      UIMenuItem mk2marksmanflash = new UIMenuItem("Flashlight  : $11,250");
      this.MK2MarksmanRifle.AddItem(mk2marksmanflash);
      UIMenuItem mk2marksmansight1 = new UIMenuItem("Holographic Sight  : $11,485");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight1);
      UIMenuItem mk2marksmansight2 = new UIMenuItem("Large Scope  : $17,870");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight2);
      UIMenuItem mk2marksmansight3 = new UIMenuItem("Zoom Scope  : $27,150");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight3);
      UIMenuItem mk2marksmanGrip = new UIMenuItem("Grip  : $14,080");
      this.MK2MarksmanRifle.AddItem(mk2marksmanGrip);
      UIMenuItem mk2marksmanmuzzle = new UIMenuItem("Muzzle  : $44,620");
      this.MK2MarksmanRifle.AddItem(mk2marksmanmuzzle);
      UIMenuItem mk2marksmanSuppressor = new UIMenuItem("Suppressor  : $60,375");
      this.MK2MarksmanRifle.AddItem(mk2marksmanSuppressor);
      UIMenuListItem list6 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2MarksmanRifle.AddItem((UIMenuItem) list6);
      UIMenuItem getTint6 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2MarksmanRifle.AddItem(getTint6);
      UIMenuItem mk2pistol = new UIMenuItem("MK2 Pistol : $20,000");
      this.MK2Pistol.AddItem(mk2pistol);
      UIMenuItem mk2pistolClip = new UIMenuItem("Default Clip : $0");
      this.MK2Pistol.AddItem(mk2pistolClip);
      UIMenuItem mk2pistolClip1 = new UIMenuItem("Extended Clip : $15,250");
      this.MK2Pistol.AddItem(mk2pistolClip1);
      UIMenuItem mk2pistolClip2 = new UIMenuItem("Tracer Rounds : $32,850");
      this.MK2Pistol.AddItem(mk2pistolClip2);
      UIMenuItem mk2pistolClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2Pistol.AddItem(mk2pistolClip3);
      UIMenuItem mk2pistolClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2Pistol.AddItem(mk2pistolClip4);
      UIMenuItem mk2pistolClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2Pistol.AddItem(mk2pistolClip5);
      UIMenuItem mk2pistolSight1 = new UIMenuItem("Mounted Scope : $16,250");
      this.MK2Pistol.AddItem(mk2pistolSight1);
      UIMenuItem mk2pistolflash = new UIMenuItem("Flashlight : $7,500");
      this.MK2Pistol.AddItem(mk2pistolflash);
      UIMenuItem mk2pistolsupp = new UIMenuItem("Suppressor : $28,750");
      this.MK2Pistol.AddItem(mk2pistolsupp);
      UIMenuItem mk2pistolcomp = new UIMenuItem("Compensator : $21,250");
      this.MK2Pistol.AddItem(mk2pistolcomp);
      UIMenuListItem list7 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Pistol.AddItem((UIMenuItem) list7);
      UIMenuItem getTint7 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pistol.AddItem(getTint7);
      UIMenuItem mk2smg = new UIMenuItem("MK2 SMG : $25,000");
      this.MK2SMG.AddItem(mk2smg);
      UIMenuItem mk2smgclip = new UIMenuItem("Default Clip : $0");
      this.MK2SMG.AddItem(mk2smgclip);
      UIMenuItem mk2smgclip1 = new UIMenuItem("Extended Clip : $18,300");
      this.MK2SMG.AddItem(mk2smgclip1);
      UIMenuItem mk2smgClip2 = new UIMenuItem("Tracer Rounds : $28,600");
      this.MK2SMG.AddItem(mk2smgClip2);
      UIMenuItem mk2smgClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2SMG.AddItem(mk2smgClip3);
      UIMenuItem mk2smgClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2SMG.AddItem(mk2smgClip4);
      UIMenuItem mk2smgClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2SMG.AddItem(mk2smgClip5);
      this.MK2SMG.AddItem(new UIMenuItem("Flashlight : $7,500"));
      UIMenuItem mk2smgsight1 = new UIMenuItem("Holographic Sight : $15,200");
      this.MK2SMG.AddItem(mk2smgsight1);
      UIMenuItem mk2smgsight2 = new UIMenuItem("Small Scope: $19,950");
      this.MK2SMG.AddItem(mk2smgsight2);
      UIMenuItem mk2smgsight3 = new UIMenuItem("Holographic Sight : $24,100");
      this.MK2SMG.AddItem(mk2smgsight3);
      UIMenuItem mk2smgsupp = new UIMenuItem("Suppressor  : $34,500");
      this.MK2SMG.AddItem(mk2smgsupp);
      UIMenuItem mk2smgmuzzle = new UIMenuItem("Muzzle : $25,500");
      this.MK2SMG.AddItem(mk2smgmuzzle);
      UIMenuItem mk2smgbarrel = new UIMenuItem("Barrel : $22,500");
      this.MK2SMG.AddItem(mk2smgbarrel);
      UIMenuListItem list8 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2SMG.AddItem((UIMenuItem) list8);
      UIMenuItem getTint8 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SMG.AddItem(getTint8);
      UIMenuItem mk2carbine = new UIMenuItem("MK2 Carbine : $35,000");
      this.MK2Carbine.AddItem(mk2carbine);
      UIMenuItem mk2carbineClip1 = new UIMenuItem("Default Clip: $0");
      this.MK2Carbine.AddItem(mk2carbineClip1);
      UIMenuItem mk2carbineClip2 = new UIMenuItem("Extended Clip: $25,925");
      this.MK2Carbine.AddItem(mk2carbineClip2);
      UIMenuItem mk2carbineClip3 = new UIMenuItem("Tracer Rounds: $44,700");
      this.MK2Carbine.AddItem(mk2carbineClip3);
      UIMenuItem mk2carbineClip4 = new UIMenuItem("Incendiary Rounds : $51,600");
      this.MK2Carbine.AddItem(mk2carbineClip4);
      UIMenuItem mk2carbineClip5 = new UIMenuItem("Armor Piercing Rounds: $66,000 ");
      this.MK2Carbine.AddItem(mk2carbineClip5);
      UIMenuItem mk2carbineClip6 = new UIMenuItem("Full Metal Jacket Rounds: $76,200 ");
      this.MK2Carbine.AddItem(mk2carbineClip6);
      UIMenuItem mk2carbineGrip = new UIMenuItem("Grip: $14,080 ");
      this.MK2Carbine.AddItem(mk2carbineGrip);
      UIMenuItem mk2carbineFlash = new UIMenuItem("Flashlight: $10,500 ");
      this.MK2Carbine.AddItem(mk2carbineFlash);
      UIMenuItem mk2carbineSight1 = new UIMenuItem("Holographic Sight: $19,600  ");
      this.MK2Carbine.AddItem(mk2carbineSight1);
      UIMenuItem mk2carbineSight2 = new UIMenuItem("Small Scope: $23,730 ");
      this.MK2Carbine.AddItem(mk2carbineSight2);
      UIMenuItem mk2carbineSight3 = new UIMenuItem("Large Scope: $34,020 ");
      this.MK2Carbine.AddItem(mk2carbineSight3);
      UIMenuItem mk2carbineSupp = new UIMenuItem("Suppressor: $40,250 ");
      this.MK2Carbine.AddItem(mk2carbineSupp);
      UIMenuListItem list9 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Carbine.AddItem((UIMenuItem) list9);
      UIMenuItem getTint9 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Carbine.AddItem(getTint9);
      UIMenuItem mk2AR = new UIMenuItem("MK2 Assault Rifle : $30,000");
      this.MK2AssaultRifle.AddItem(mk2AR);
      UIMenuItem mk2ARClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2AssaultRifle.AddItem(mk2ARClip1);
      UIMenuItem mk2ARClip2 = new UIMenuItem("Extended Clip: $22,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip2);
      UIMenuItem mk2ARClip3 = new UIMenuItem("Tracer Rounds  : $42,700");
      this.MK2AssaultRifle.AddItem(mk2ARClip3);
      UIMenuItem mk2ARClip4 = new UIMenuItem("Incendiary Rounds  : $49,400");
      this.MK2AssaultRifle.AddItem(mk2ARClip4);
      UIMenuItem mk2ARClip5 = new UIMenuItem("Armor Piercing Rounds : $63,200");
      this.MK2AssaultRifle.AddItem(mk2ARClip5);
      UIMenuItem mk2ARClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $73,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip6);
      UIMenuItem mk2ARClipFlash = new UIMenuItem("Flashlight : $10,500");
      this.MK2AssaultRifle.AddItem(mk2ARClipFlash);
      UIMenuItem mk2ARClipSight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight1);
      UIMenuItem mk2ARClipSight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight2);
      UIMenuItem mk2ARClipSight3 = new UIMenuItem("Large Scope : $33,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight3);
      UIMenuItem mk2ARClipGrip = new UIMenuItem("Grip : $14,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipGrip);
      UIMenuItem mk2ARsuppressor = new UIMenuItem("Suppressor : $40,250");
      this.MK2AssaultRifle.AddItem(mk2ARsuppressor);
      UIMenuListItem list10 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2AssaultRifle.AddItem((UIMenuItem) list10);
      UIMenuItem getTint10 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2AssaultRifle.AddItem(getTint10);
      UIMenuItem mk2lmg = new UIMenuItem("MK2 LMG : $95,000");
      this.MK2LMG.AddItem(mk2lmg);
      UIMenuItem mk2lmgClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2LMG.AddItem(mk2lmgClip1);
      UIMenuItem mk2lmgClip2 = new UIMenuItem("Extended Clip : $28,975");
      this.MK2LMG.AddItem(mk2lmgClip2);
      UIMenuItem mk2lmgClip3 = new UIMenuItem("Tracer Rounds : $57,100");
      this.MK2LMG.AddItem(mk2lmgClip3);
      UIMenuItem mk2lmgClip4 = new UIMenuItem("Incendiary Rounds : $64,650");
      this.MK2LMG.AddItem(mk2lmgClip4);
      UIMenuItem mk2lmgClip5 = new UIMenuItem("Armor Piercing Rounds : $82,550");
      this.MK2LMG.AddItem(mk2lmgClip5);
      UIMenuItem mk2lmgClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $94,950");
      this.MK2LMG.AddItem(mk2lmgClip6);
      UIMenuItem mk2lmgGrip = new UIMenuItem("Grip : $20,180");
      this.MK2LMG.AddItem(mk2lmgGrip);
      UIMenuItem mk2lmgSight1 = new UIMenuItem("Holographic Sight : $26,600");
      this.MK2LMG.AddItem(mk2lmgSight1);
      UIMenuItem mk2lmgSight2 = new UIMenuItem("Small Scope : $36,290");
      this.MK2LMG.AddItem(mk2lmgSight2);
      UIMenuItem mk2lmgSight3 = new UIMenuItem("Large Scope : $46,170");
      this.MK2LMG.AddItem(mk2lmgSight3);
      UIMenuItem mk2lmgMuzzle = new UIMenuItem("Flat Muzzle Brake : $40,375");
      this.MK2LMG.AddItem(mk2lmgMuzzle);
      UIMenuItem mk2lmgBarrel = new UIMenuItem("Heavy Barrel : $66,500");
      this.MK2LMG.AddItem(mk2lmgBarrel);
      UIMenuListItem list11 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2LMG.AddItem((UIMenuItem) list11);
      UIMenuItem getTint11 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2LMG.AddItem(getTint11);
      UIMenuItem mk2sniper = new UIMenuItem("MK2 Heavy Sniper : $100,000");
      this.MK2Sniper.AddItem(mk2sniper);
      UIMenuItem mk2sniperClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2Sniper.AddItem(mk2sniperClip1);
      UIMenuItem mk2sniperClip2 = new UIMenuItem("Extended Clip : $35,025");
      this.MK2Sniper.AddItem(mk2sniperClip2);
      UIMenuItem mk2sniperClip3 = new UIMenuItem("Incendiary Rounds : $59,275");
      this.MK2Sniper.AddItem(mk2sniperClip3);
      UIMenuItem mk2sniperClip4 = new UIMenuItem("Armor Piercing Rounds : $76,100");
      this.MK2Sniper.AddItem(mk2sniperClip4);
      UIMenuItem mk2sniperClip5 = new UIMenuItem("Full Metal Jacket Rounds : $88,525");
      this.MK2Sniper.AddItem(mk2sniperClip5);
      UIMenuItem mk2sniperClip6 = new UIMenuItem("Explosive Rounds : $115,450");
      this.MK2Sniper.AddItem(mk2sniperClip6);
      UIMenuItem mk2sniperSight1 = new UIMenuItem("Zoom scope : $20.200");
      this.MK2Sniper.AddItem(mk2sniperSight1);
      UIMenuItem mk2sniperSight2 = new UIMenuItem("Advanced Scope : $32,000");
      this.MK2Sniper.AddItem(mk2sniperSight2);
      UIMenuItem mk2sniperSight3 = new UIMenuItem("Night Vision Scope : $57,400");
      this.MK2Sniper.AddItem(mk2sniperSight3);
      UIMenuItem mk2sniperSight4 = new UIMenuItem("Thermal Scope : $69,000");
      this.MK2Sniper.AddItem(mk2sniperSight4);
      UIMenuItem mk2sniperSupp = new UIMenuItem("Suppressor : $40,250");
      this.MK2Sniper.AddItem(mk2sniperSupp);
      UIMenuItem mk2sniperMuzzle = new UIMenuItem("Bell-End Muzzle Brake : $57,790");
      this.MK2Sniper.AddItem(mk2sniperMuzzle);
      UIMenuItem mk2sniperBarrel = new UIMenuItem("Heavy Barrel : $27,500");
      this.MK2Sniper.AddItem(mk2sniperBarrel);
      UIMenuListItem list12 = new UIMenuListItem("Tint ", items2, 0);
      this.MK2Sniper.AddItem((UIMenuItem) list12);
      UIMenuItem getTint12 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Sniper.AddItem(getTint12);
      List<object> items3 = new List<object>();
      WeaponHash[] allweaponhashes = (WeaponHash[]) Enum.GetValues(typeof (WeaponHash));
      for (int index = 0; index < allweaponhashes.Length; ++index)
        items3.Add((object) allweaponhashes[index]);
      UIMenuListItem list = new UIMenuListItem("Weapon: ", items3, 0);
      uiMenu3.AddItem((UIMenuItem) list);
      UIMenuItem getWeapon = new UIMenuItem("Buy Weapon : $10000");
      uiMenu3.AddItem(getWeapon);
      UIMenuItem RayGun = new UIMenuItem("Ray Gun : $100,000");
      uiMenu2.AddItem(RayGun);
      UIMenuItem UnholyHellbringer = new UIMenuItem("UnholyHellbringer : $250,000");
      uiMenu2.AddItem(UnholyHellbringer);
      UIMenuItem Widowmaker = new UIMenuItem("Widowmaker : $1,000,000");
      uiMenu2.AddItem(Widowmaker);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getWeapon)
          return;
        WeaponHash hash = allweaponhashes[list.Index];
        int num;
        switch (hash)
        {
          case WeaponHash.HeavySniperMk2:
          case WeaponHash.AssaultrifleMk2:
          case WeaponHash.PumpShotgunMk2:
          case WeaponHash.MarksmanRifleMk2:
          case WeaponHash.SMGMk2:
          case WeaponHash.BullpupRifleMk2:
          case WeaponHash.SpecialCarbineMk2:
          case WeaponHash.PistolMk2:
          case WeaponHash.RevolverMk2:
          case WeaponHash.CombatMGMk2:
          case WeaponHash.CarbineRifleMk2:
            num = 1;
            break;
          default:
            num = hash == WeaponHash.SNSPistolMk2 ? 1 : 0;
            break;
        }
        if (num != 0)
        {
          UI.Notify("Office Assistant : Boss, this is a MKII weapon please perchase it from the MkII page");
        }
        else
        {
          Game.Player.Character.Weapons.Give(hash, 9999, true, true);
          Game.Player.Money -= 10000;
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RayGun)
        {
          if (Game.Player.Money >= 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2939590305U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: You dont have enought money for this weapon ");
        }
        if (item == UnholyHellbringer)
        {
          if (Game.Player.Money >= 250000)
          {
            Game.Player.Money -= 250000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1198256469, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: You dont have enought money for this weapon ");
        }
        if (item != Widowmaker)
          return;
        if (Game.Player.Money >= 1000000)
        {
          Game.Player.Money -= 1000000;
          Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3056410471U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: You dont have enought money for this weapon ");
      });
      this.MK2Sniper.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint12)
        {
          int index1 = list12.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) list12.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2sniper)
        {
          if (Game.Player.Money > 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4196276776U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip2)
        {
          if (Game.Player.Money > 35025)
          {
            Game.Player.Money -= 35025;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 752418717);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip3)
        {
          if (Game.Player.Money > 59275)
          {
            Game.Player.Money -= 59275;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 247526935);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip4)
        {
          if (Game.Player.Money > 76100)
          {
            Game.Player.Money -= 76100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4164277972U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip5)
        {
          if (Game.Player.Money > 88525)
          {
            Game.Player.Money -= 88525;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1005144310);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperClip6)
        {
          if (Game.Player.Money > 115450)
          {
            Game.Player.Money -= 115450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2313935527U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight1)
        {
          if (Game.Player.Money > 20200)
          {
            Game.Player.Money -= 20200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2193687427U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight2)
        {
          if (Game.Player.Money > 32000)
          {
            Game.Player.Money -= 32000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3159677559U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight3)
        {
          if (Game.Player.Money > 57400)
          {
            Game.Player.Money -= 57400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3061846192U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSight4)
        {
          if (Game.Player.Money > 69000)
          {
            Game.Player.Money -= 69000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 776198721);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperSupp)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2890063729U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2sniperMuzzle)
        {
          if (Game.Player.Money > 57790)
          {
            Game.Player.Money -= 57790;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1764221345);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2sniperBarrel)
          return;
        if (Game.Player.Money > 27500)
        {
          Game.Player.Money -= 27500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2425761975U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2LMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint11)
        {
          int index1 = list11.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) list11.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2lmg)
        {
          if (Game.Player.Money > 95000)
          {
            Game.Player.Money -= 95000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1227564412);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip2)
        {
          if (Game.Player.Money > 28975)
          {
            Game.Player.Money -= 28975;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 400507625);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip3)
        {
          if (Game.Player.Money > 57100)
          {
            Game.Player.Money -= 57100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 4133787461U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip4)
        {
          if (Game.Player.Money > 64650)
          {
            Game.Player.Money -= 64650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3274096058U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip5)
        {
          if (Game.Player.Money > 82550)
          {
            Game.Player.Money -= 82550;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 696788003);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgClip6)
        {
          if (Game.Player.Money > 94950)
          {
            Game.Player.Money -= 94950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1475288264);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgGrip)
        {
          if (Game.Player.Money > 20180)
          {
            Game.Player.Money -= 20180;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight1)
        {
          if (Game.Player.Money > 26600)
          {
            Game.Player.Money -= 26600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight2)
        {
          if (Game.Player.Money > 36290)
          {
            Game.Player.Money -= 36290;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgSight3)
        {
          if (Game.Player.Money > 46170)
          {
            Game.Player.Money -= 46170;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2lmgMuzzle)
        {
          if (Game.Player.Money > 40375)
          {
            Game.Player.Money -= 40375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3113485012U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2lmgBarrel)
          return;
        if (Game.Player.Money > 66500)
        {
          Game.Player.Money -= 66500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3051509595U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2Carbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint9)
        {
          int index1 = list9.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) list9.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2carbine)
        {
          if (Game.Player.Money > 35000)
          {
            Game.Player.Money -= 35000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip1)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1283078430);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip2)
        {
          if (Game.Player.Money > 25925)
          {
            Game.Player.Money -= 25925;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1574296533);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip3)
        {
          if (Game.Player.Money > 44700)
          {
            Game.Player.Money -= 44700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 391640422);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip4)
        {
          if (Game.Player.Money > 51600)
          {
            Game.Player.Money -= 51600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1025884839);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip5)
        {
          if (Game.Player.Money > 66000)
          {
            Game.Player.Money -= 66000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 626875735);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineClip6)
        {
          if (Game.Player.Money > 76000)
          {
            Game.Player.Money -= 76000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1141059345);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2carbineSight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2carbineSupp)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2205435306U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2SMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint8)
        {
          int index1 = list8.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) list8.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2smg)
        {
          if (Game.Player.Money > 25000)
          {
            Game.Player.Money -= 25000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1277460590);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgclip1)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3112393518U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip2)
        {
          if (Game.Player.Money > 32850)
          {
            Game.Player.Money -= 32850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2146055916);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3650233061U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 974903034);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgClip5)
        {
          if (Game.Player.Money > 52000)
          {
            Game.Player.Money -= 52000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 190476639);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight1)
        {
          if (Game.Player.Money > 15200)
          {
            Game.Player.Money -= 15200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2681951826U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight2)
        {
          if (Game.Player.Money > 19950)
          {
            Game.Player.Money -= 19950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3842157419U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsight3)
        {
          if (Game.Player.Money > 24100)
          {
            Game.Player.Money -= 24100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgsupp)
        {
          if (Game.Player.Money > 34500)
          {
            Game.Player.Money -= 34500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2smgmuzzle)
        {
          if (Game.Player.Money > 25500)
          {
            Game.Player.Money -= 25500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3113485012U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2smgbarrel)
          return;
        if (Game.Player.Money > 22500)
        {
          Game.Player.Money -= 22500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3641720545U);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2AssaultRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint10)
        {
          int index1 = list10.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) list10.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2AR)
        {
          if (Game.Player.Money > 30000)
          {
            Game.Player.Money -= 30000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2249208895U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip2)
        {
          if (Game.Player.Money > 22000)
          {
            Game.Player.Money -= 22000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3509242479U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip3)
        {
          if (Game.Player.Money > 42700)
          {
            Game.Player.Money -= 42700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4012669121U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip4)
        {
          if (Game.Player.Money > 49400)
          {
            Game.Player.Money -= 49400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4218476627U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip5)
        {
          if (Game.Player.Money > 63200)
          {
            Game.Player.Money -= 63200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2816286296U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClip6)
        {
          if (Game.Player.Money > 73000)
          {
            Game.Player.Money -= 73000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1675665560);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipGrip)
        {
          if (Game.Player.Money > 14000)
          {
            Game.Player.Money -= 14000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2640679034U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight3)
        {
          if (Game.Player.Money > 33000)
          {
            Game.Player.Money -= 33000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3328927042U);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2ARsuppressor)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2805810788U);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2Pistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint7)
        {
          int index1 = list7.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) list7.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2pistol)
        {
          if (Game.Player.Money > 20000)
          {
            Game.Player.Money -= 20000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2499030370U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip1)
        {
          if (Game.Player.Money > 15250)
          {
            Game.Player.Money -= 15250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1591132456);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip2)
        {
          if (Game.Player.Money > 28600)
          {
            Game.Player.Money -= 28600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 634039983);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 733837882);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2248057097U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolClip5)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1329061674);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolSight1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2pistolsupp)
        {
          if (Game.Player.Money > 28750)
          {
            Game.Player.Money -= 28750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1709866683);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2pistolcomp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 568543123);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2Pumpshotgun.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint1)
        {
          int index1 = list1.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) list1.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Shotgunclip4)
        {
          if (Game.Player.Money > 145000)
          {
            Game.Player.Money -= 145000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1004815965);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -845938367);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip2)
        {
          if (Game.Player.Money > 96645)
          {
            Game.Player.Money -= 96645;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1315288101);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip3)
        {
          if (Game.Player.Money > 75140)
          {
            Game.Player.Money -= 75140;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -380098265);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip1)
        {
          if (Game.Player.Money > 65200)
          {
            Game.Player.Money -= 65200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1618338827);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ShotgunP)
        {
          if (Game.Player.Money > 75000)
          {
            Game.Player.Money -= 75000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunflashlight)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights)
        {
          if (Game.Player.Money > 29320)
          {
            Game.Player.Money -= 29320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights2)
        {
          if (Game.Player.Money > 39920)
          {
            Game.Player.Money -= 39920;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights3)
        {
          if (Game.Player.Money > 50785)
          {
            Game.Player.Money -= 50785;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2ShotgunSuppressor)
        {
          if (Game.Player.Money > 45860)
          {
            Game.Player.Money -= 45860;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1404903567);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Shotgunmuzzle)
          return;
        if (Game.Player.Money > 37650)
        {
          Game.Player.Money -= 37650;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1602080333);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2SNSPistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint2)
        {
          int index1 = list2.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) list2.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Snspistol)
        {
          if (Game.Player.Money > 45000)
          {
            Game.Player.Money -= 45000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipn)
        {
          if (Game.Player.Money > 8000)
          {
            Game.Player.Money -= 8000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 21392614);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipe)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -829683854);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip1)
        {
          if (Game.Player.Money > 34320)
          {
            Game.Player.Money -= 34320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1876057490);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip2)
        {
          if (Game.Player.Money > 41700)
          {
            Game.Player.Money -= 41700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -424845447);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip3)
        {
          if (Game.Player.Money > 47580)
          {
            Game.Player.Money -= 47580;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1928301566);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip4)
        {
          if (Game.Player.Money > 62400)
          {
            Game.Player.Money -= 62400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1055790298);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolcomp)
        {
          if (Game.Player.Money > 21250)
          {
            Game.Player.Money -= 21250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1434287169);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1246324211);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Snspistolscope1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1205768792);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Snspistolsuppressor)
          return;
        if (Game.Player.Money > 28750)
        {
          Game.Player.Money -= 28750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1709866683);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2Revolver.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint3)
        {
          int index1 = list3.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) list3.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Revolver)
        {
          if (Game.Player.Money > 85000)
          {
            Game.Player.Money -= 85000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -1172055874);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip1)
        {
          if (Game.Player.Money > 31460)
          {
            Game.Player.Money -= 31460;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -958864266);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip2)
        {
          if (Game.Player.Money > 38225)
          {
            Game.Player.Money -= 38225;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 15712037);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip3)
        {
          if (Game.Player.Money > 43615)
          {
            Game.Player.Money -= 43615;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 284438159);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip4)
        {
          if (Game.Player.Money > 57200)
          {
            Game.Player.Money -= 57200;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 231258687);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolversights)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolversights1)
        {
          if (Game.Player.Money > 25450)
          {
            Game.Player.Money -= 25450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Revolverflashlight)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 899381934);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2RevolverComp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 654802123);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.Mk2SpecialCarbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint4)
        {
          int index1 = list4.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) list4.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2SCarbine)
        {
          if (Game.Player.Money > 65000)
          {
            Game.Player.Money -= 65000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 382112385);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip1)
        {
          if (Game.Player.Money > 26450)
          {
            Game.Player.Money -= 26450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -568352468);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip2)
        {
          if (Game.Player.Money > 61465)
          {
            Game.Player.Money -= 61465;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -2023373174);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip3)
        {
          if (Game.Player.Money > 70950)
          {
            Game.Player.Money -= 70950;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -570355066);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip4)
        {
          if (Game.Player.Money > 90750)
          {
            Game.Player.Money -= 90750;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1362433589);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip5)
        {
          if (Game.Player.Money > 104775)
          {
            Game.Player.Money -= 104775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1346235024);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbineflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 77277509);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -966040254);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesupressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1489156508);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2SCarbinemuzzle)
        {
          if (Game.Player.Money > 29750)
          {
            Game.Player.Money -= 29750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1181482284);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2SCarbinegrip)
          return;
        if (Game.Player.Money > 14080)
        {
          Game.Player.Money -= 14080;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1654288262);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2Bullpup.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint5)
        {
          int index1 = list5.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) list5.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Bullpup)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 25766362);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip2)
        {
          if (Game.Player.Money > 22100)
          {
            Game.Player.Money -= 22100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -273676760);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip3)
        {
          if (Game.Player.Money > 44350)
          {
            Game.Player.Money -= 44350;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2111807319);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip4)
        {
          if (Game.Player.Money > 52100)
          {
            Game.Player.Money -= 52100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1449330342);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip5)
        {
          if (Game.Player.Money > 87320)
          {
            Game.Player.Money -= 87320;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -89655827);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip6)
        {
          if (Game.Player.Money > 77490)
          {
            Game.Player.Money -= 77490;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1130501904);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -944910075);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1060929921);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupBarrel)
        {
          if (Game.Player.Money > 49000)
          {
            Game.Player.Money -= 49000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1704640795);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1654288262);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2BullpupSuppressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2089531990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2Bullpupmuzzle)
          return;
        if (Game.Player.Money > 29750)
        {
          Game.Player.Money -= 29750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1181482284);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
      this.MK2MarksmanRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint6)
        {
          int index1 = list6.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) list6.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2marksman)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1797182002);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip3)
        {
          if (Game.Player.Money > 49775)
          {
            Game.Player.Money -= 49775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -679861550);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip4)
        {
          if (Game.Player.Money > 57295)
          {
            Game.Player.Money -= 57295;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1842849902);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip5)
        {
          if (Game.Player.Money > 73560)
          {
            Game.Player.Money -= 73560;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -193998727);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip6)
        {
          if (Game.Player.Money > 85570)
          {
            Game.Player.Money -= 85570;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -515203373);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip2)
        {
          if (Game.Player.Money > 26850)
          {
            Game.Player.Money -= 26850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -422587990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanflash)
        {
          if (Game.Player.Money > 11250)
          {
            Game.Player.Money -= 11250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 2076495324);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight1)
        {
          if (Game.Player.Money > 11485)
          {
            Game.Player.Money -= 11485;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1108334355);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight2)
        {
          if (Game.Player.Money > 17870)
          {
            Game.Player.Money -= 17870;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -966040254);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmansight3)
        {
          if (Game.Player.Money > 27150)
          {
            Game.Player.Money -= 27150;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1528590652);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1654288262);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item == mk2marksmanSuppressor)
        {
          if (Game.Player.Money > 60375)
          {
            Game.Player.Money -= 60375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -2089531990);
            UI.Notify("Agent 14: Have fun with your new toy");
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
        }
        if (item != mk2marksmanmuzzle)
          return;
        if (Game.Player.Money > 44620)
        {
          Game.Player.Money -= 44620;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1181482284);
          UI.Notify("Agent 14: Have fun with your new toy");
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this Weapon!");
      });
    }

    public void UpdateValues() => this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");

    private void CheckForScriptEnabled(string iniName)
    {
      try
      {
        this.ScriptConfig = ScriptSettings.Load(iniName);
        this.IsScriptEnabled = this.ScriptConfig.GetValue<bool>("Diamond Resort & Casino DLC", "Diamond Resort & Casino", this.IsScriptEnabled);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public void CreateCars(string Garage)
    {
      this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//";
      Garage = "GarageA";
      this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
      GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
      GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
      GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
      GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
      GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
      GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
      GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
      GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
      GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
      GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
      this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
      GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
      Script.Wait(100);
      if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
        this.ArcadeVeh1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), this.AVehPos_1, this.AVehRot_1);
        this.SC.Load(this.ArcadeVeh1);
        this.ArcadeVeh1.IsDriveable = false;
      }
      Script.Wait(100);
      if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
        this.ArcadeVeh2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), this.AVehPos_2, this.AVehRot_2);
        this.SC.Load(this.ArcadeVeh2);
        this.ArcadeVeh2.IsDriveable = false;
      }
      Script.Wait(100);
      if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
        this.ArcadeVeh3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), this.AVehPos_3, this.AVehRot_3);
        this.SC.Load(this.ArcadeVeh3);
        this.ArcadeVeh3.IsDriveable = false;
      }
      if (this.UnlockedGarage != 1)
        return;
      Script.Wait(100);
      if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
        this.ArcadeVeh4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), this.AVehPos_4, this.AVehRot_4);
        this.SC.Load(this.ArcadeVeh4);
        this.ArcadeVeh4.IsDriveable = false;
      }
      Script.Wait(100);
      if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
        this.ArcadeVeh5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), this.AVehPos_5, this.AVehRot_5);
        this.SC.Load(this.ArcadeVeh5);
        this.ArcadeVeh5.IsDriveable = false;
      }
      Script.Wait(100);
      if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
        this.ArcadeVeh6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), this.AVehPos_6, this.AVehRot_6);
        this.SC.Load(this.ArcadeVeh6);
        this.ArcadeVeh6.IsDriveable = false;
      }
      Script.Wait(100);
      if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
        this.ArcadeVeh7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), this.AVehPos_7, this.AVehRot_7);
        this.SC.Load(this.ArcadeVeh7);
        this.ArcadeVeh7.IsDriveable = false;
      }
      Script.Wait(100);
      if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
        this.ArcadeVeh8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), this.AVehPos_8, this.AVehRot_8);
        this.SC.Load(this.ArcadeVeh8);
        this.ArcadeVeh8.IsDriveable = false;
      }
      Script.Wait(100);
      if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
        this.ArcadeVeh9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), this.AVehPos_9, this.AVehRot_9);
        this.SC.Load(this.ArcadeVeh9);
        this.ArcadeVeh9.IsDriveable = false;
      }
      Script.Wait(100);
      if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
        this.ArcadeVeh10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), this.AVehPos_10, this.AVehRot_10);
        this.SC.Load(this.ArcadeVeh10);
        this.ArcadeVeh10.IsDriveable = false;
      }
      Script.Wait(100);
      if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
      {
        this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
        this.ArcadeVeh11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), this.AVehPos_11, this.AVehRot_11);
        this.SC.Load(this.ArcadeVeh11);
        this.ArcadeVeh11.IsDriveable = false;
      }
    }

    public void SetupArcadeGarageEnterMenu()
    {
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1");
      Slots.Add((object) "Slot2");
      Slots.Add((object) "Slot3");
      Slots.Add((object) "Slot4");
      Slots.Add((object) "Slot5");
      Slots.Add((object) "Slot6");
      Slots.Add((object) "Slot7");
      Slots.Add((object) "Slot8");
      Slots.Add((object) "Slot9");
      Slots.Add((object) "Slot10");
      Slots.Add((object) "Slot11");
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.GarageMenu, "Enter Garage");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuListItem s = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu.AddItem((UIMenuItem) s);
      UIMenuItem CarinSlot = new UIMenuItem("Car : ");
      uiMenu.AddItem(CarinSlot);
      UIMenuItem Set = new UIMenuItem("Save Current Car");
      uiMenu.AddItem(Set);
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != s)
          return;
        this.SC.LoadIniFile(this.path + "GarageA//" + s.IndexToItem(s.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
          CarinSlot.Text = this.SC.VehicleName;
        else if (this.SC.VehicleName.Equals("null"))
          CarinSlot.Text = "No car in slot";
      });
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Set)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__1.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p1 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__1;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__0, Slots[s.Index], "Slot1");
        if (target1((CallSite) p1, obj1))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__2 = CallSite<Action<CallSite, Class1, string, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__2, this, "GarageA", this.Vehicle1, Slots[s.Index]);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__4.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p4 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__4;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__3, Slots[s.Index], "Slot2");
        if (target2((CallSite) p4, obj2))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__5 = CallSite<Action<CallSite, Class1, string, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__5, this, "GarageA", this.Vehicle1, Slots[s.Index]);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__7.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p7 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__7;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__6, Slots[s.Index], "Slot3");
        if (target3((CallSite) p7, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__8 = CallSite<Action<CallSite, Class1, string, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__8, this, "GarageA", this.Vehicle1, Slots[s.Index]);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__19 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__19.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p19 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__19;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, object>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.Not, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object> target5 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__10.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object>> p10 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__10;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__9 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__9, Slots[s.Index], "Slot1");
        object obj5 = target5((CallSite) p10, obj4);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        object obj6;
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!Class1.\u003C\u003Eo__981.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__14, obj5))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__13 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object, object> target6 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__13.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object, object>> p13 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__13;
          object obj7 = obj5;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, object>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.Not, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object> target7 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__12.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object>> p12 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__12;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj8 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__11, Slots[s.Index], "Slot2");
          object obj9 = target7((CallSite) p12, obj8);
          obj6 = target6((CallSite) p13, obj7, obj9);
        }
        else
          obj6 = obj5;
        object obj10 = obj6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__981.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        object obj11;
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!Class1.\u003C\u003Eo__981.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__18, obj10))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object, object> target6 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__17.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object, object>> p17 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__17;
          object obj7 = obj10;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.Not, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object> target7 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__16.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object>> p16 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__16;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj8 = Class1.\u003C\u003Eo__981.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__15, Slots[s.Index], "Slot3");
          object obj9 = target7((CallSite) p16, obj8);
          obj11 = target6((CallSite) p17, obj7, obj9);
        }
        else
          obj11 = obj10;
        if (target4((CallSite) p19, obj11))
        {
          if (this.UnlockedGarage == 1)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__981.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__981.\u003C\u003Ep__20 = CallSite<Action<CallSite, Class1, string, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__981.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__981.\u003C\u003Ep__20, this, "GarageA", this.Vehicle1, Slots[s.Index]);
          }
          else
            UI.Notify(this.GetHostName() + " : You need to purchase Garage Slots 4 - 11, from Customize Arcade");
        }
      });
    }

    public void DestoryCars()
    {
      if ((Entity) this.ArcadeVeh1 != (Entity) null)
        this.ArcadeVeh1.Delete();
      if ((Entity) this.ArcadeVeh2 != (Entity) null)
        this.ArcadeVeh2.Delete();
      if ((Entity) this.ArcadeVeh3 != (Entity) null)
        this.ArcadeVeh3.Delete();
      if ((Entity) this.ArcadeVeh4 != (Entity) null)
        this.ArcadeVeh4.Delete();
      if ((Entity) this.ArcadeVeh5 != (Entity) null)
        this.ArcadeVeh5.Delete();
      if ((Entity) this.ArcadeVeh6 != (Entity) null)
        this.ArcadeVeh6.Delete();
      if ((Entity) this.ArcadeVeh7 != (Entity) null)
        this.ArcadeVeh7.Delete();
      if ((Entity) this.ArcadeVeh8 != (Entity) null)
        this.ArcadeVeh8.Delete();
      if ((Entity) this.ArcadeVeh9 != (Entity) null)
        this.ArcadeVeh9.Delete();
      if ((Entity) this.ArcadeVeh10 != (Entity) null)
        this.ArcadeVeh10.Delete();
      if (!((Entity) this.ArcadeVeh11 != (Entity) null))
        return;
      this.ArcadeVeh11.Delete();
    }

    public void LoadCarinToRealWorld(Vehicle V)
    {
      Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
      this.IsInArcade = false;
      currentVehicle.Position = this.ArcadeGarageEnter;
      Game.Player.Character.SetIntoVehicle(currentVehicle, VehicleSeat.Driver);
      this.DestoryCars();
      currentVehicle.Heading = 147f;
      currentVehicle.IsDriveable = true;
      this.SaveVehicle = currentVehicle;
      this.SaveVehicle.IsDriveable = true;
      this.SaveVehicle.Repair();
      this.SaveVehicle.FreezePosition = false;
      this.SetRadioOff();
    }

    public void SaveLocalcar(string G, Vehicle V, string Slot)
    {
      if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if (Game.Player.Character.CurrentVehicle.DisplayName != "RHINO" || Game.Player.Character.CurrentVehicle.DisplayName != "KHANJALI" || Game.Player.Character.CurrentVehicle.DisplayName != "CHERNOBOG")
        {
          if ((Entity) this.SaveVehicle != (Entity) null)
            this.SaveVehicle.Delete();
          string str = G;
          this.GarageNum = G;
          UI.Notify(this.path + str + "//" + Slot + ".ini");
          this.SC.LoadIniFile(this.path + str + "//" + Slot + ".ini");
          this.SC.SaveWithoutDelete();
          Script.Wait(1000);
          if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
            Game.Player.Character.CurrentVehicle.Delete();
          if (!((Entity) Game.Player.Character.LastVehicle != (Entity) null))
            return;
          Game.Player.Character.LastVehicle.Delete();
        }
        else
          this.DisplayHelpTextThisFrame("You cannot save this vehicle");
      }
      else
        this.DisplayHelpTextThisFrame("Bring a vehicle to save");
    }

    public void DeleteCarinSlot(string Slot, Vehicle V)
    {
      this.SC.LoadIniFile(this.path + "GarageA//" + Slot + ".ini");
      if (this.SC.VehicleName != "null")
      {
        if (V.DisplayName == "ZTYPE")
          Game.Player.Money += new System.Random().Next(10000000, 11000000);
        if (V.ClassType == VehicleClass.Coupes)
          Game.Player.Money += new System.Random().Next(85000, 125000);
        else if (V.ClassType == VehicleClass.Military)
          Game.Player.Money += new System.Random().Next(500000, 750000);
        else if (V.ClassType == VehicleClass.Super)
          Game.Player.Money += new System.Random().Next(345000, 400000);
        else if (V.ClassType == VehicleClass.SUVs)
          Game.Player.Money += new System.Random().Next(75000, 150000);
        else if (V.ClassType == VehicleClass.OffRoad)
          Game.Player.Money += new System.Random().Next(100000, 250000);
        else if (V.ClassType == VehicleClass.Sports)
          Game.Player.Money += new System.Random().Next(150000, 400000);
        else if (V.ClassType == VehicleClass.SportsClassics)
          Game.Player.Money += new System.Random().Next(240000, 350000);
        else if (V.ClassType == VehicleClass.Sedans)
          Game.Player.Money += new System.Random().Next(50000, 200000);
        else if (V.ClassType == VehicleClass.Muscle)
          Game.Player.Money += new System.Random().Next(225000, 300000);
        else if (V.ClassType == VehicleClass.Motorcycles)
          Game.Player.Money += new System.Random().Next(60000, 200000);
        else
          Game.Player.Money += new System.Random().Next(50000, 120000);
        UI.Notify("Office Assistant : Vehicle Sold");
      }
      if (this.SC.VehicleName == "null")
        UI.Notify("Office Assistant : There is no Vehicle in " + Slot);
      this.SC.SaveName();
      this.VehicleToDeliver = (Vehicle) null;
      V.Delete();
    }

    public void DeleteCarinSlot2(string Slot, Vehicle V)
    {
      this.SC.LoadIniFile(this.path + "GarageA//" + Slot + ".ini");
      if (this.SC.VehicleName != "null")
      {
        if (V.DisplayName == "ZTYPE")
          Game.Player.Money += new System.Random().Next(10000000, 11000000);
        if (V.ClassType == VehicleClass.Coupes)
          Game.Player.Money += new System.Random().Next(140000, 400000);
        else if (V.ClassType == VehicleClass.Military)
          Game.Player.Money += new System.Random().Next(750000, 1500000);
        else if (V.ClassType == VehicleClass.Super)
          Game.Player.Money += new System.Random().Next(640000, 900000);
        else if (V.ClassType == VehicleClass.SUVs)
          Game.Player.Money += new System.Random().Next(125000, 400000);
        else if (V.ClassType == VehicleClass.OffRoad)
          Game.Player.Money += new System.Random().Next(200000, 600000);
        else if (V.ClassType == VehicleClass.Sports)
          Game.Player.Money += new System.Random().Next(340000, 500000);
        else if (V.ClassType == VehicleClass.SportsClassics)
          Game.Player.Money += new System.Random().Next(450000, 1200000);
        else if (V.ClassType == VehicleClass.Sedans)
          Game.Player.Money += new System.Random().Next(120000, 400000);
        else if (V.ClassType == VehicleClass.Muscle)
          Game.Player.Money += new System.Random().Next(450000, 800000);
        else if (V.ClassType == VehicleClass.Motorcycles)
          Game.Player.Money += new System.Random().Next(100000, 400000);
        else
          Game.Player.Money += new System.Random().Next(100000, 320000);
        UI.Notify("Office Assistant : Vehicle Sold");
      }
      if (this.SC.VehicleName == "null")
        UI.Notify("Office Assistant : There is no Vehicle in " + Slot);
      if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin)
        UI.Notify("Buyer: Thank you Mr " + "Clinton" + " For your donation");
      if (Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
        UI.Notify("Buyer: Thank you Mr " + "De Santa" + " For your donation");
      if (Game.Player.Character.Model == (GTA.Model) PedHash.Trevor)
        UI.Notify("Buyer: Thank you Mr " + "Philips" + " For your donation");
      UI.Notify("Buyer: Calculating Bonus");
      int num = 0;
      if (V.GetMod(VehicleMod.Livery) >= 1)
        num += 10000;
      if (V.GetMod(VehicleMod.Engine) > 0)
      {
        if (V.GetMod(VehicleMod.Engine) == 1)
          num += 5000;
        if (V.GetMod(VehicleMod.Engine) == 2)
          num += 10000;
        if (V.GetMod(VehicleMod.Engine) == 3)
          num += 15000;
      }
      if (V.GetMod(VehicleMod.Transmission) > 0)
      {
        if (V.GetMod(VehicleMod.Transmission) == 1)
          num += 5000;
        if (V.GetMod(VehicleMod.Transmission) == 2)
          num += 10000;
        if (V.GetMod(VehicleMod.Transmission) == 3)
          num += 15000;
      }
      if (V.GetMod(VehicleMod.Armor) > 0)
      {
        if (V.GetMod(VehicleMod.Armor) == 1)
          num += 5000;
        if (V.GetMod(VehicleMod.Armor) == 2)
          num += 10000;
        if (V.GetMod(VehicleMod.Armor) == 3)
          num += 15000;
      }
      if (V.GetMod(VehicleMod.Brakes) > 0)
      {
        if (V.GetMod(VehicleMod.Brakes) == 1)
          num += 5000;
        if (V.GetMod(VehicleMod.Brakes) == 2)
          num += 10000;
        if (V.GetMod(VehicleMod.Brakes) == 3)
          num += 15500;
      }
      if (V.GetMod(VehicleMod.Roof) == 1 || V.GetMod(VehicleMod.Roof) == -1)
        num += 35000;
      UI.Notify("Buyer : Bonus for mods: $" + num.ToString());
      Game.Player.Money += num;
      this.SC.SaveName();
      this.DeliveringVehicle = false;
      this.VehicleToDeliver = (Vehicle) null;
      V.Delete();
    }

    public void SetupArcadeGarageBuySellMenu()
    {
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1");
      Slots.Add((object) "Slot2");
      Slots.Add((object) "Slot3");
      Slots.Add((object) "Slot4");
      Slots.Add((object) "Slot5");
      Slots.Add((object) "Slot6");
      Slots.Add((object) "Slot7");
      Slots.Add((object) "Slot8");
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.RemoveMenu2, "Sell Vehicle Option A (Worse)");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem s = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu1.AddItem((UIMenuItem) s);
      UIMenuItem CarinSlot = new UIMenuItem("Car : ");
      uiMenu1.AddItem(CarinSlot);
      UIMenuItem Delete1 = new UIMenuItem("Sell and Remove");
      uiMenu1.AddItem(Delete1);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != s)
          return;
        this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//GarageA//";
        Vehicle vehicle = (Vehicle) null;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__987.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        string str = Class1.\u003C\u003Eo__987.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__0, Slots[s.Index]);
        if (str.Equals("Slot1"))
          vehicle = this.ArcadeVeh1;
        if (str.Equals("Slot2"))
          vehicle = this.ArcadeVeh2;
        if (str.Equals("Slot3"))
          vehicle = this.ArcadeVeh3;
        if (str.Equals("Slot4"))
          vehicle = this.ArcadeVeh4;
        if (str.Equals("Slot5"))
          vehicle = this.ArcadeVeh5;
        if (str.Equals("Slot6"))
          vehicle = this.ArcadeVeh6;
        if (str.Equals("Slot7"))
          vehicle = this.ArcadeVeh7;
        if (str.Equals("Slot8"))
          vehicle = this.ArcadeVeh8;
        if (str.Equals("Slot9"))
          vehicle = this.ArcadeVeh9;
        if (str.Equals("Slot10"))
          vehicle = this.ArcadeVeh10;
        if (str.Equals("Slot11"))
          vehicle = this.ArcadeVeh11;
        if ((Entity) vehicle != (Entity) null)
          this.CarToDelete = vehicle;
        this.SC.LoadIniFile(this.path + s.IndexToItem(s.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
          CarinSlot.Text = this.SC.VehicleName;
        else if (this.SC.VehicleName.Equals("null"))
          CarinSlot.Text = "No car in slot";
      });
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//GarageA//";
        Vehicle vehicle = (Vehicle) null;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__987.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        string str = Class1.\u003C\u003Eo__987.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__1, Slots[s.Index]);
        if (str.Equals("Slot1"))
          vehicle = this.ArcadeVeh1;
        if (str.Equals("Slot2"))
          vehicle = this.ArcadeVeh2;
        if (str.Equals("Slot3"))
          vehicle = this.ArcadeVeh3;
        if (str.Equals("Slot4"))
          vehicle = this.ArcadeVeh4;
        if (str.Equals("Slot5"))
          vehicle = this.ArcadeVeh5;
        if (str.Equals("Slot6"))
          vehicle = this.ArcadeVeh6;
        if (str.Equals("Slot7"))
          vehicle = this.ArcadeVeh7;
        if (str.Equals("Slot8"))
          vehicle = this.ArcadeVeh8;
        if (str.Equals("Slot9"))
          vehicle = this.ArcadeVeh9;
        if (str.Equals("Slot10"))
          vehicle = this.ArcadeVeh10;
        if (str.Equals("Slot11"))
          vehicle = this.ArcadeVeh11;
        if (!((Entity) vehicle != (Entity) null))
          return;
        this.CarToDelete = vehicle;
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//GarageA//";
        if (item != Delete1)
          return;
        Vehicle vehicle = (Vehicle) null;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__987.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        string str = Class1.\u003C\u003Eo__987.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__2, Slots[s.Index]);
        if (str.Equals("Slot1"))
          vehicle = this.ArcadeVeh1;
        if (str.Equals("Slot2"))
          vehicle = this.ArcadeVeh2;
        if (str.Equals("Slot3"))
          vehicle = this.ArcadeVeh3;
        if (str.Equals("Slot4"))
          vehicle = this.ArcadeVeh4;
        if (str.Equals("Slot5"))
          vehicle = this.ArcadeVeh5;
        if (str.Equals("Slot6"))
          vehicle = this.ArcadeVeh6;
        if (str.Equals("Slot7"))
          vehicle = this.ArcadeVeh7;
        if (str.Equals("Slot8"))
          vehicle = this.ArcadeVeh8;
        if (str.Equals("Slot9"))
          vehicle = this.ArcadeVeh9;
        if (str.Equals("Slot10"))
          vehicle = this.ArcadeVeh10;
        if (str.Equals("Slot11"))
          vehicle = this.ArcadeVeh11;
        if ((Entity) vehicle != (Entity) null)
        {
          if (str.Equals("Slot1") || str.Equals("Slot2") || str.Equals("Slot3"))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__987.\u003C\u003Ep__3 = CallSite<Action<CallSite, Class1, object, Vehicle>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "DeleteCarinSlot", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__987.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__3, this, Slots[s.Index], vehicle);
            this.SC.LoadIniFile(this.path + str + ".ini");
            this.SC.SaveName();
          }
          if (!str.Equals("Slot1") && !str.Equals("Slot2") && !str.Equals("Slot3"))
          {
            if (this.UnlockedGarage == 1)
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__4 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__987.\u003C\u003Ep__4 = CallSite<Action<CallSite, Class1, object, Vehicle>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "DeleteCarinSlot", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__987.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__4, this, Slots[s.Index], vehicle);
              this.SC.LoadIniFile(this.path + str + ".ini");
              this.SC.SaveName();
            }
            else
              UI.Notify(this.GetHostName() + " : You need to purchase Garage Slots 4 - 11, from Customize Arcade");
          }
        }
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.RemoveMenu2, "Add vehicle in Slot");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      List<object> LogList = new List<object>();
      string[] logFile = File.ReadAllLines(this.ListPath);
      foreach (string str in logFile)
        LogList.Add((object) str);
      this.LoadIniFile(this.ListPath);
      List<object> objectList = new List<object>()
      {
        (object) "None",
        (object) "Super",
        (object) "Sport",
        (object) "Armoured",
        (object) "SportClassic",
        (object) "Compact",
        (object) "Coupe",
        (object) "Bikes",
        (object) "Offroad",
        (object) "Sedan",
        (object) "Suv",
        (object) "Vans"
      };
      UIMenuListItem Ve = new UIMenuListItem("Vehicle : ", LogList, 0);
      uiMenu2.AddItem((UIMenuItem) Ve);
      UIMenuItem VDName = new UIMenuItem("Vehicle Spawn Name  : Dukes2");
      uiMenu2.AddItem(VDName);
      UIMenuItem VName = new UIMenuItem("Vehicle Full Name  : Imponte Dukes");
      uiMenu2.AddItem(VName);
      UIMenuItem PuchaseV = new UIMenuItem("Purchase Vehicle : $0");
      uiMenu2.AddItem(PuchaseV);
      List<object> STlist = new List<object>();
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem1);
      UIMenuItem Search = new UIMenuItem("Enter Vehicle Name");
      uiMenu2.AddItem(Search);
      UIMenuListItem Ve2 = new UIMenuListItem("Vehicle : ", STlist, 0);
      uiMenu2.AddItem((UIMenuItem) Ve2);
      UIMenuItem uiMenuItem2 = new UIMenuItem("Search Term  : NULL");
      uiMenu2.AddItem(uiMenuItem2);
      UIMenuItem VDName2 = new UIMenuItem("Vehicle Spawn Name  : NULL");
      uiMenu2.AddItem(VDName2);
      UIMenuItem VName2 = new UIMenuItem("Vehicle Full Name  : NULL");
      uiMenu2.AddItem(VName2);
      UIMenuItem PuchaseV2 = new UIMenuItem("Purchase Vehicle : NULL");
      uiMenu2.AddItem(PuchaseV2);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem3);
      UIMenuListItem ListSlot = new UIMenuListItem("Slot: ", Slots, 0);
      uiMenu2.AddItem((UIMenuItem) ListSlot);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//GarageA//";
        if (item == Ve)
        {
          try
          {
            string[] separator = new string[2]{ " = ", "," };
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__5 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__987.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string[] strArray = Class1.\u003C\u003Eo__987.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__5, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
            for (int index1 = 0; index1 < strArray.Length; ++index1)
            {
              this.Price = strArray[1];
              this.Model = strArray[2];
              this.man = strArray[0];
              VDName.Text = "Vehicle Spawn Name : " + this.Model;
              VName.Text = "Vehicle Full Name  : " + this.man;
              PuchaseV.Text = "Purchase Vehicle : " + this.Price;
            }
          }
          catch
          {
          }
        }
        if (item != Ve2)
          return;
        try
        {
          string[] separator = new string[2]{ " = ", "," };
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__987.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = Class1.\u003C\u003Eo__987.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__6, STlist[Ve2.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName2.Text = "Vehicle Spawn Name : " + this.Model;
            VName2.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV2.Text = "Purchase Vehicle : " + this.Price;
          }
        }
        catch
        {
        }
      });
      string SearchTerm;
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        this.path = "scripts//HKH191sBusinessMods//DC&R//ArcadeGarage//GarageA//";
        if (item == Search)
        {
          try
          {
            if (STlist.Count > 0)
              STlist.Clear();
            SearchTerm = Game.GetUserInput(32);
            SearchTerm = SearchTerm.ToUpper();
            UI.Notify("Search Term : " + SearchTerm);
            bool flag = false;
            foreach (string str in logFile)
            {
              if (str.ToUpper().Contains(SearchTerm))
              {
                UI.Notify("Found Match");
                STlist.Add((object) str);
                flag = true;
              }
            }
            if (!flag)
            {
              UI.Notify("Found No Match");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Invalid Search Term Entered");
          }
        }
        try
        {
          this.M = (float) int.Parse(this.Price);
        }
        catch (Exception ex)
        {
        }
        if (item == PuchaseV2)
        {
          if ((double) Game.Player.Money > (double) this.M)
          {
            try
            {
              Game.Player.Money -= (int) this.M;
              this.DestoryCars();
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__7 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__987.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string str = Class1.\u003C\u003Eo__987.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__7, Slots[ListSlot.Index]);
              this.SC.LoadIniFile(this.path + str + ".ini");
              UI.Notify(this.path + str + ".ini");
              Vector3 position = Game.Player.Character.Position;
              this.SC.Save();
              this.SC.LoadIniFile(this.path + this.GarageNum + "//" + str + ".ini");
              try
              {
                Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
                this.SC.SaveName(vehicle.DisplayName);
                this.CreateCars(this.GarageNum);
                vehicle.Delete();
              }
              catch (NullReferenceException ex)
              {
                UI.Notify("~r~error ~w~ Invalid Vehicle Name!");
              }
            }
            catch (Exception ex)
            {
            }
          }
          else
            UI.Notify("Agent 14: you do not have enought money to purchase this vehicle!");
        }
        if (item != PuchaseV)
          return;
        if ((double) Game.Player.Money > (double) this.M)
        {
          try
          {
            Game.Player.Money -= (int) this.M;
            this.DestoryCars();
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__987.\u003C\u003Ep__8 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__987.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string str = Class1.\u003C\u003Eo__987.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__987.\u003C\u003Ep__8, Slots[ListSlot.Index]);
            this.SC.LoadIniFile(this.path + str + ".ini");
            UI.Notify(this.path + str + ".ini");
            Vector3 position = Game.Player.Character.Position;
            this.SC.Save();
            try
            {
              this.SC.LoadIniFile(this.path + this.GarageNum + "//" + str + ".ini");
              Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
              this.SC.SaveName(vehicle.DisplayName);
              this.CreateCars(this.GarageNum);
              vehicle.Delete();
            }
            catch (Exception ex)
            {
            }
          }
          catch (Exception ex)
          {
          }
        }
        else
          UI.Notify("Agent 14: you do not have enought money to purchase this vehicle!");
      });
    }

    public void SetRandomOutfit(Ped Dancer)
    {
      System.Random random = new System.Random();
      if (Dancer.Gender == Gender.Female)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) 4, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) != 4)
        {
          int num1 = random.Next(0, 5);
          if (num1 == 4)
          {
            int num2 = random.Next(0, 4);
            if (num2 == 0)
              num1 = 0;
            if (num2 == 1)
              num1 = 1;
            if (num2 == 2)
              num1 = 2;
            if (num2 == 3)
              num1 = 3;
            if (num2 == 4)
              num1 = 5;
          }
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) num1, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        }
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3), (InputArgument) 0, (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 4) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 5, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
      }
      if (Dancer.Gender != Gender.Male)
        return;
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 0)
      {
        int num = random.Next(0, 4);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 1)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 2)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 3)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 5)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 6)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
    }

    public void RefreshArcadeInterior()
    {
      try
      {
        this.LoadIniFile2("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        this.ArcadeOwned = this.Config.GetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
        this.ArcadeVersion = this.Config.GetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
        this.ArcadeBusinessLevel = this.Config.GetValue<int>("Arcade", "ArcadeBusinessLevel", this.ArcadeBusinessLevel);
        this.ArcadeFloodID = this.Config.GetValue<int>("Arcade", "ArcadeFloodID", this.ArcadeFloodID);
        this.ArcadeStyle = this.Config.GetValue<int>("Arcade", "ArcadeStyle", this.ArcadeStyle);
        this.MuralID = this.Config.GetValue<int>("Arcade", "MuralID", this.MuralID);
        this.PushieID = this.Config.GetValue<int>("Arcade", "PushieID", this.PushieID);
        this.NeonArtID = this.Config.GetValue<int>("Arcade", "NeonArtID", this.NeonArtID);
        this.UnlockedDilllEquipment = this.Config.GetValue<int>("Arcade", "UnlockedDilllEquipment", this.UnlockedDilllEquipment);
        this.UnlockedHackingEquipment = this.Config.GetValue<int>("Arcade", "UnlockedHackingEquipment", this.UnlockedHackingEquipment);
        this.UnlockedBreachingEquipment = this.Config.GetValue<int>("Arcade", "UnlockedBreachingEquipment", this.UnlockedBreachingEquipment);
        this.UnlockedOutfitsEquipment = this.Config.GetValue<int>("Arcade", "UnlockedOutfitsEquipment", this.UnlockedOutfitsEquipment);
        this.UnlockedPlansEquipment = this.Config.GetValue<int>("Arcade", "UnlockedPlansEquipment", this.UnlockedPlansEquipment);
        this.UnlockedGarage = this.Config.GetValue<int>("Arcade", "UnlockedGarage", this.UnlockedGarage);
        this.UnlockedGunlocker = this.Config.GetValue<int>("Arcade", "UnlockedGunlocker", this.UnlockedGunlocker);
        this.ArcadeMoneyVault = this.Config.GetValue<int>("Arcade", "ArcadeMoneyVault", this.ArcadeMoneyVault);
        this.UndergrondAreaLocked = this.Config.GetValue<int>("Arcade", "UndergrondAreaLocked", this.UndergrondAreaLocked);
        this.Arcade1Ver = this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver);
        this.Arcade2Ver = this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver);
        this.Arcade3Ver = this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver);
        this.Arcade4Ver = this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver);
        this.Arcade5Ver = this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver);
        this.Arcade6Ver = this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver);
        this.Arcade7Ver = this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver);
        this.Arcade8Ver = this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver);
        this.Arcade9Ver = this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver);
        this.Arcade10Ver = this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver);
        this.Arcade11Ver = this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver);
        this.Arcade12Ver = this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver);
        this.Arcade13Ver = this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver);
        this.Arcade14Ver = this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver);
        this.Arcade15Ver = this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver);
        this.Arcade16Ver = this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver);
        this.Arcade17Ver = this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver);
        this.Arcade18Ver = this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver);
        this.Arcade19Ver = this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver);
        this.Arcade20Ver = this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver);
        this.PlayRadioMusic = this.Config.GetValue<bool>("Arcade", "PlayRadioMusic", this.PlayRadioMusic);
        this.DefaultRadioStation = this.Config.GetValue<string>("Arcade", "DefaultRadioStation", this.DefaultRadioStation);
        this.CurrentRadioStation = this.Config.GetValue<int>("Arcade", "CurrentRadioStation", this.CurrentRadioStation);
        this.RadioOn = this.Config.GetValue<bool>("Arcade", "RadioOn", this.RadioOn);
        int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 2730.0, (InputArgument) -380.0, (InputArgument) -50.0);
        int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 2712.1, (InputArgument) -361.2773, (InputArgument) -51.867);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_07");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_08");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_09");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Cockroaches");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Drone_Parts");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Electric_Drill");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Fireman_Helmetv");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Gruppe_Sechs_Outfits");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Hacking_Device");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Plastic_Explosives");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Stealth_Outfits");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Swipe_Card_01a");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Swipe_Card_01b");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Drill_Alt");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_KeyCard_01a");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser_Alt");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_beams");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_flat");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_mirror");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict_carpet");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict_clean_up");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_streetx4");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_brawler");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_cabs");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_gunner");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_king");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_love");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_monkey");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_patriot");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_racer");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_retro");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_strife");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_teller");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_big_screen");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_constant_geometry");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_04");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_05");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_06");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_07");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_08");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_hip_light_no_neon");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_04");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_05");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_06");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_07");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_08");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_04");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_05");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_06");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_07");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_08");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_ret_light_no_neon");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_screens");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "set_plan_arcade_x4");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_bed");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_casino");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_computer");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_garage");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_hacker");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_keypad");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_mechanic");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_no_bed");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_plans");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_pre_setup");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_scribbles");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_setup");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_vault");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_wall");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_weapons");
        if (this.PushieID == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_07");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_08");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_09");
        }
        if (this.PushieID == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
        if (this.PushieID == 2)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
        }
        if (this.PushieID == 3)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
        }
        if (this.PushieID == 4)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
        }
        if (this.PushieID == 5)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
        }
        if (this.PushieID == 6)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
        }
        if (this.PushieID == 7)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_07");
        }
        if (this.PushieID == 8)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_07");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_08");
        }
        if (this.PushieID == 9)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_01");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_02");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_03");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_04");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_05");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_06");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_07");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_08");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "Entity_Set_Plushie_09");
        }
        if (this.ArcadeStyle == 0)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict_clean_up");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict");
        }
        if (this.ArcadeStyle == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_beams");
        if (this.ArcadeStyle == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_flat");
        if (this.ArcadeStyle == 3)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_ceiling_mirror");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_streetx4");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_brawler");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_cabs");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_claw");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_gunner");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_king");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_love");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_monkey");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_patriot");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_racer");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_retro");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_strife");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_trophy_teller");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_big_screen");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_constant_geometry");
        if (this.ArcadeFloodID == 0)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_arcade_set_derelict_carpet");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_01");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_02");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_03");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_04");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_05");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_06");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_07");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_floor_option_08");
        }
        if (this.ArcadeFloodID == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_01");
        if (this.ArcadeFloodID == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_02");
        if (this.ArcadeFloodID == 3)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_03");
        if (this.ArcadeFloodID == 4)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_04");
        if (this.ArcadeFloodID == 5)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_05");
        if (this.ArcadeFloodID == 6)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_06");
        if (this.ArcadeFloodID == 7)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_07");
        if (this.ArcadeFloodID == 8)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_floor_option_08");
        if (this.NeonArtID == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_hip_light_no_neon");
        if (this.NeonArtID == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_01");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_02");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_03");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_04");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_05");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_06");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_07");
        }
        if (this.NeonArtID == 8)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_01");
        if (this.NeonArtID == 7)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_02");
        if (this.NeonArtID == 6)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_03");
        if (this.NeonArtID == 5)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_04");
        if (this.NeonArtID == 4)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_05");
        if (this.NeonArtID == 3)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_06");
        if (this.NeonArtID == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_07");
        if (this.NeonArtID == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_neon_option_08");
        if (this.MuralID == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_01");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_02");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_03");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_04");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_05");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_06");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_07");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "entity_set_mural_option_08");
        }
        if (this.MuralID == 8)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_01");
        if (this.MuralID == 7)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_02");
        if (this.MuralID == 6)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_03");
        if (this.MuralID == 5)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_04");
        if (this.MuralID == 4)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_05");
        if (this.MuralID == 3)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_06");
        if (this.MuralID == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_07");
        if (this.MuralID == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_mural_option_08");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) "entity_set_ret_light_no_neon");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Cockroaches");
        if (this.UnlockedBreachingEquipment == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Hacking_Device");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Plastic_Explosives");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Swipe_Card_01a");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Swipe_Card_01bv");
        }
        if (this.UnlockedHackingEquipment == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_arcade_x4");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Drone_Parts");
        }
        if (this.UnlockedHackingEquipment == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_arcade_x4");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Drone_Parts");
        }
        if (this.UnlockedOutfitsEquipment == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_arcade_x4");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Stealth_Outfits");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Fireman_Helmet");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Gruppe_Sechs_Outfits");
        }
        if (this.UnlockedOutfitsEquipment == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Stealth_Outfits");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Fireman_Helmet");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Gruppe_Sechs_Outfits");
        }
        if (this.UnlockedDilllEquipment == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Electric_Drill");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Drill");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Drill_Alt");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_KeyCard_01a");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_vault");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser_Alt");
        }
        if (this.UnlockedDilllEquipment == 0)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Electric_Drill");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Drill");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Drill_Alt");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_KeyCard_01a");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_vault");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "Set_Plan_Vault_Laser_Alt");
        }
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "entity_set_screens");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_bed");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_computer");
        if (this.UnlockedGarage == 1)
        {
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_wall");
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_garage");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_keypad");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_mechanic");
        }
        if (this.UnlockedGarage == 0)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_wall");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_garage");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_keypad");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_mechanic");
        }
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_no_bed");
        if (this.UnlockedPlansEquipment == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_casino");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_hacker");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_plans");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_scribbles");
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_setup");
        }
        if (this.ArcadeClutter)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_pre_setup");
        if (!this.ArcadeClutter)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "set_plan_pre_setup");
        if (this.UnlockedGarage == 0 && this.UnlockedGunlocker == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) "set_plan_weapons");
        foreach (Ped arcadeInteriorPed in this.ArcadeInteriorPeds)
        {
          if ((Entity) arcadeInteriorPed != (Entity) null)
            arcadeInteriorPed.Delete();
        }
        foreach (Ped ped in this.ArcadeInteriorPeds2)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
        foreach (Prop arcadeProp in this.ArcadeProps)
        {
          if ((Entity) arcadeProp != (Entity) null)
            arcadeProp.Delete();
        }
        foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
        {
          if ((Entity) seconardyArcadeProp != (Entity) null)
            seconardyArcadeProp.Delete();
        }
        if (this.ArcadeProps.Count > 0)
        {
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((Entity) arcadeProp != (Entity) null)
              arcadeProp.Delete();
          }
        }
        foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
        {
          if ((Entity) seconardyArcadeProp != (Entity) null)
            seconardyArcadeProp.Delete();
        }
        this.RacingArcades.Clear();
        this.SetupINDArcade(this.Arcade1Ver, 1);
        this.SetupINDArcade(this.Arcade2Ver, 2);
        this.SetupINDArcade(this.Arcade3Ver, 3);
        this.SetupINDArcade(this.Arcade4Ver, 4);
        this.SetupINDArcade(this.Arcade5Ver, 5);
        this.SetupINDArcade(this.Arcade6Ver, 6);
        this.SetupINDArcade(this.Arcade7Ver, 7);
        this.SetupINDArcade(this.Arcade8Ver, 8);
        this.SetupINDArcade(this.Arcade9Ver, 9);
        this.SetupINDArcade(this.Arcade10Ver, 10);
        this.SetupINDArcade(this.Arcade11Ver, 11);
        this.SetupINDArcade(this.Arcade12Ver, 12);
        this.SetupINDArcade(this.Arcade13Ver, 13);
        this.SetupINDArcade(this.Arcade14Ver, 14);
        this.SetupINDArcade(this.Arcade15Ver, 15);
        this.SetupINDArcade(this.Arcade16Ver, 16);
        this.SetupINDArcade(this.Arcade17Ver, 17);
        this.SetupINDArcade(this.Arcade18Ver, 18);
        this.SetupINDArcade(this.Arcade19Ver, 19);
        this.SetupINDArcade(this.Arcade20Ver, 20);
        this.AddArcades();
        if ((Entity) this.Bartender != (Entity) null)
          this.Bartender.Delete();
        this.Bartender = World.CreatePed(this.RequestModel(PedHash.Bartender01SFY), new Vector3(2723.7f, -385.2f, -50f), -90f);
        this.Bartender.BlockPermanentEvents = true;
        this.Bartender.FreezePosition = true;
        this.Bartender.RelationshipGroup = 2;
        this.Bartender.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
        System.Random random = new System.Random();
        this.ClubDancerList.Add("a_m_y_clubcust_01");
        this.ClubDancerList.Add("a_m_y_clubcust_01");
        this.ClubDancerList.Add("a_m_y_clubcust_01");
        this.ClubDancerList.Add("a_f_y_clubcust_01");
        this.ClubDancerList.Add("a_f_y_clubcust_01");
        this.ClubDancerList.Add("a_f_y_clubcust_01");
        if (this.ArcadeProps.Count > 0)
        {
          for (int index = 0; index < this.ArcadeProps.Count; ++index)
          {
            Prop arcadeProp = this.ArcadeProps[index];
            if ((Entity) arcadeProp != (Entity) null)
            {
              if (random.Next(0, 100) > 10 && (arcadeProp.Model != this.RequestModel("ch_prop_arcade_race_01a") && arcadeProp.Model != this.RequestModel("ch_prop_arcade_race_01b") && arcadeProp.Model != this.RequestModel("ch_prop_arcade_race_02a")))
              {
                Ped ped = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), arcadeProp.GetOffsetInWorldCoords(new Vector3(0.0f, -0.8f, 0.0f)), arcadeProp.Heading);
                ped.BlockPermanentEvents = true;
                ped.RelationshipGroup = 2;
                ped.Task.PlayAnimation("anim_casino_a@amb@casino@games@arcadecabinet@maleleft", "idle", 8f, -1, true, -1f);
                this.ArcadeInteriorPeds.Add(ped);
              }
              Script.Wait(1);
            }
          }
        }
        if (this.RacingArcades.Count > 0)
        {
          for (int index = 0; index < this.RacingArcades.Count; ++index)
          {
            if (random.Next(0, 100) > 10)
            {
              Prop prop = this.RacingArcades[index].Base;
              if (prop.Model == this.RequestModel("ch_prop_arcade_race_01a") || prop.Model == this.RequestModel("ch_prop_arcade_race_01b"))
              {
                Ped ped1 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), this.RacingArcades[index].Seat1.GetOffsetInWorldCoords(new Vector3(0.0f, 0.0f, -0.6f)), this.RacingArcades[index].Seat1.Heading);
                ped1.BlockPermanentEvents = true;
                ped1.HasCollision = false;
                ped1.FreezePosition = true;
                ped1.RelationshipGroup = 2;
                ped1.Task.PlayAnimation("amb@code_human_in_car_idles@generic@ds@base", "base", 8f, -1, true, -1f);
                Ped ped2 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), this.RacingArcades[index].Seat2.GetOffsetInWorldCoords(new Vector3(0.0f, 0.0f, -0.6f)), this.RacingArcades[index].Seat2.Heading);
                ped2.BlockPermanentEvents = true;
                ped2.HasCollision = false;
                ped2.FreezePosition = true;
                ped2.RelationshipGroup = 2;
                ped2.Task.PlayAnimation("amb@code_human_in_car_idles@generic@ds@base", "base", 8f, -1, true, -1f);
                this.ArcadeInteriorPeds2.Add(ped2);
                this.ArcadeInteriorPeds2.Add(ped1);
                this.ArcadeCarPed.Add(ped2);
                this.ArcadeCarPed.Add(ped1);
              }
              if (prop.Model == this.RequestModel("ch_prop_arcade_race_02a"))
              {
                Ped ped1 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), this.RacingArcades[index].Seat1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.45f, -0.4f)), this.RacingArcades[index].Seat1.Heading);
                ped1.BlockPermanentEvents = true;
                ped1.HasCollision = false;
                ped1.FreezePosition = true;
                ped1.RelationshipGroup = 2;
                ped1.Task.PlayAnimation("amb@code_human_on_bike_idles@sports@front@base", "base", 8f, -1, true, -1f);
                Ped ped2 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), this.RacingArcades[index].Seat2.GetOffsetInWorldCoords(new Vector3(0.0f, -0.45f, -0.4f)), this.RacingArcades[index].Seat2.Heading);
                ped2.BlockPermanentEvents = true;
                ped2.HasCollision = false;
                ped2.FreezePosition = true;
                ped2.RelationshipGroup = 2;
                ped2.Task.PlayAnimation("amb@code_human_on_bike_idles@sports@front@base", "base", 8f, -1, true, -1f);
                this.ArcadeInteriorPeds2.Add(ped2);
                this.ArcadeInteriorPeds2.Add(ped1);
                this.ArcadeBikePed.Add(ped2);
                this.ArcadeBikePed.Add(ped1);
              }
            }
            Script.Wait(1);
          }
        }
        Ped ped3 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), new Vector3(2727.15f, -387.4f, -50.5f), 173f);
        ped3.BlockPermanentEvents = true;
        ped3.RelationshipGroup = 2;
        ped3.Task.StartScenario("WORLD_HUMAN_PARTYING", ped3.Position);
        this.ArcadeInteriorPeds2.Add(ped3);
        Ped ped4 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), new Vector3(2725.8f, -386.3f, -50.5f), 89f);
        ped4.BlockPermanentEvents = true;
        ped4.RelationshipGroup = 2;
        ped4.Task.StartScenario("WORLD_HUMAN_PARTYING", ped4.Position);
        this.ArcadeInteriorPeds2.Add(ped4);
        Ped ped5 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), new Vector3(2725.299f, -383.89f, -49.9f), 89f);
        ped5.BlockPermanentEvents = true;
        ped5.RelationshipGroup = 2;
        ped5.FreezePosition = true;
        ped5.Task.PlayAnimation("anim_casino_b@amb@casino@games@roulette@ped_female@seat_1@engaged@01b@idles", "idle_a", 8f, -1, true, -1f);
        this.ArcadeInteriorPeds2.Add(ped5);
        Ped ped6 = World.CreatePed(this.RequestModel(this.ClubDancerList[random.Next(0, this.ClubDancerList.Count)]), new Vector3(2738.109f, -380.8021f, -49.9f), -102f);
        ped6.BlockPermanentEvents = true;
        ped6.RelationshipGroup = 2;
        ped6.FreezePosition = true;
        ped6.Task.PlayAnimation("anim@amb@office@seating@male@var_e@base@", "base", 8f, -1, true, -1f);
        this.ArcadeInteriorPeds2.Add(ped6);
      }
      catch
      {
      }
      if (this.Config.GetValue<bool>("Arcade", "RadioOn", this.RadioOn))
      {
        this.SetRadioOff();
        this.SetRadioOn();
      }
      if (this.Config.GetValue<bool>("Arcade", "RadioOn", this.RadioOn))
        return;
      this.SetRadioOff();
    }

    public void SetRadioOff()
    {
      Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
      Function.Call(Hash._0xBF286C554784F3DF, (InputArgument) true);
      Function.Call(Hash._0x1098355A16064BB3, (InputArgument) false);
      Function.Call(Hash._0xF7F26C6E9CC9EBB8, (InputArgument) false);
      this.RefreshingRadio = false;
    }

    public void SetRadioOn()
    {
      Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
      string[] strArray = this.DefaultRadioStation.Split('_');
      int num = 1;
      try
      {
        num = int.Parse(strArray[0]);
      }
      catch
      {
      }
      Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
      Function.Call(Hash._0xBF286C554784F3DF, (InputArgument) true);
      Function.Call(Hash._0x1098355A16064BB3, (InputArgument) true);
      Function.Call(Hash._0xF7F26C6E9CC9EBB8, (InputArgument) true);
      Function.Call(Hash._0xA619B168B8A8570F, (InputArgument) num);
    }

    public void AddRatioStations()
    {
      this.RadioStat.Add("Los Santos Rock Radio");
      this.RadioStat.Add("Non-Stop-Pop FM");
      this.RadioStat.Add("Radio Los Santos");
      this.RadioStat.Add("Channel X");
      this.RadioStat.Add("West Coast Talk Radio");
      this.RadioStat.Add("Rebel Radio");
      this.RadioStat.Add("Soulwax FM");
      this.RadioStat.Add("East Los FM");
      this.RadioStat.Add("West Coast Classics");
      this.RadioStat.Add("Blue Ark");
      this.RadioStat.Add("World Wide FM");
      this.RadioStat.Add("FlyLo FM");
      this.RadioStat.Add("The Lowdown 91.1");
      this.RadioStat.Add("The Lab");
      this.RadioStat.Add("Radio Mirror Park");
      this.RadioStat.Add("Space 103.2");
      this.RadioStat.Add("Vinewood Boulevard Radio");
      this.RadioStat.Add("Blonded Los Santos 97.8 FM");
      this.RadioStat.Add("Los Santos Underground Radio");
      this.RadioStat.Add("IFruit Radio");
      this.RadioStat.Add("Self Radio");
    }

    public void ArcadeInteriorOptions()
    {
      float StyleCost = 0.0f;
      float MuralCost = 0.0f;
      float NeonArtCost = 0.0f;
      float FloorCost = 0.0f;
      float PushieCost = 0.0f;
      List<object> objectList = new List<object>()
      {
        (object) "Los Santos Rock Radio",
        (object) "Non-Stop-Pop FM",
        (object) "Radio Los Santos",
        (object) "Channel X",
        (object) "West Coast Talk Radio",
        (object) "Rebel Radio",
        (object) "Soulwax FM",
        (object) "East Los FM",
        (object) "West Coast Classics",
        (object) "Blue Ark",
        (object) "World Wide FM",
        (object) "FlyLo FM",
        (object) "The Lowdown 91.1",
        (object) "The Lab",
        (object) "Radio Mirror Park",
        (object) "Space 103.2",
        (object) "Vinewood Boulevard Radio",
        (object) "Blonded Los Santos 97.8 FM",
        (object) "Los Santos Underground Radio",
        (object) "Self Radio"
      };
      List<object> TF = new List<object>();
      TF.Add((object) false);
      TF.Add((object) true);
      float ArcadesPrice = 0.0f;
      List<object> ArcadeCosts = new List<object>();
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      ArcadeCosts.Add((object) 0);
      List<object> ArcadeMachineCosts = new List<object>();
      ArcadeMachineCosts.Add((object) 0);
      ArcadeMachineCosts.Add((object) 95000);
      ArcadeMachineCosts.Add((object) 125000);
      ArcadeMachineCosts.Add((object) 225000);
      ArcadeMachineCosts.Add((object) 217000);
      ArcadeMachineCosts.Add((object) 200000);
      ArcadeMachineCosts.Add((object) 213000);
      ArcadeMachineCosts.Add((object) 67000);
      ArcadeMachineCosts.Add((object) 137000);
      ArcadeMachineCosts.Add((object) 140000);
      ArcadeMachineCosts.Add((object) 92000);
      ArcadeMachineCosts.Add((object) 176000);
      ArcadeMachineCosts.Add((object) 234000);
      ArcadeMachineCosts.Add((object) 244000);
      ArcadeMachineCosts.Add((object) 422000);
      ArcadeMachineCosts.Add((object) 440000);
      ArcadeMachineCosts.Add((object) 454000);
      List<object> items1 = new List<object>();
      items1.Add((object) "Derelict");
      items1.Add((object) "Exposed Hipster");
      items1.Add((object) "Total Focus");
      items1.Add((object) "Take A Shine");
      List<object> items2 = new List<object>();
      items2.Add((object) "Naked");
      items2.Add((object) "Another Realm");
      items2.Add((object) "All The Colors");
      items2.Add((object) "Wireframed");
      items2.Add((object) "Spray Forever");
      items2.Add((object) "Racing Stripes");
      items2.Add((object) "Pixelated Thought");
      items2.Add((object) "So Kawaii");
      items2.Add((object) "O Edgy");
      List<object> items3 = new List<object>();
      items3.Add((object) "Naked");
      items3.Add((object) "Mighty Sword");
      items3.Add((object) "Penatrator");
      items3.Add((object) "LS Nights");
      items3.Add((object) "Game Over");
      items3.Add((object) "Emulator");
      items3.Add((object) "BFFL");
      items3.Add((object) "Crotch Rocket");
      items3.Add((object) "Adult Content");
      List<object> items4 = new List<object>();
      items4.Add((object) "Naked");
      items4.Add((object) "Prim and Proper");
      items4.Add((object) "Scale Up");
      items4.Add((object) "Yay Rainbow");
      items4.Add((object) "The Lab");
      items4.Add((object) "Intergalactic");
      items4.Add((object) "Understated Stars");
      items4.Add((object) "Super Fun Playthings");
      items4.Add((object) "Thunderclap");
      List<object> items5 = new List<object>();
      items5.Add((object) "Naked");
      items5.Add((object) "Plushie 1");
      items5.Add((object) "Plushie 2");
      items5.Add((object) "Plushie 3");
      items5.Add((object) "Plushie 4");
      items5.Add((object) "Plushie 5");
      items5.Add((object) "Plushie 6");
      items5.Add((object) "Plushie 7");
      items5.Add((object) "Plushie 8");
      items5.Add((object) "Plushie 9");
      List<object> ArcadeMachines = new List<object>();
      ArcadeMachines.Add((object) "None");
      ArcadeMachines.Add((object) "Arcade : Claw");
      ArcadeMachines.Add((object) "Arcade : Degenatron");
      ArcadeMachines.Add((object) "Arcade : Fortune");
      ArcadeMachines.Add((object) "Arcade : Gunslinger");
      ArcadeMachines.Add((object) "Arcade : Love");
      ArcadeMachines.Add((object) "Arcade : Space");
      ArcadeMachines.Add((object) "Arcade : Street A");
      ArcadeMachines.Add((object) "Arcade : Street B");
      ArcadeMachines.Add((object) "Arcade : Street C");
      ArcadeMachines.Add((object) "Arcade : Street D");
      ArcadeMachines.Add((object) "Arcade : Street E");
      ArcadeMachines.Add((object) "Arcade : Invade");
      ArcadeMachines.Add((object) "Arcade : Wizard");
      ArcadeMachines.Add((object) "Arcade : Race & Chase : Street Legal");
      ArcadeMachines.Add((object) "Arcade : Race & Chase : Get Truckin");
      ArcadeMachines.Add((object) "Arcade : Race & Chase : Crotch Rockets");
      float Cost = 0.0f;
      UIMenu menu = this.modMenuPool.AddSubMenu(this.ArcadeC, "Arcade Customization");
      this.GUIMenus.Add(menu);
      this.GUIMenus.Add(menu);
      UIMenuListItem ST = new UIMenuListItem("Style : ", items1, 0);
      menu.AddItem((UIMenuItem) ST);
      UIMenuListItem F = new UIMenuListItem("Floor : ", items4, 0);
      menu.AddItem((UIMenuItem) F);
      UIMenuListItem M = new UIMenuListItem("Mural : ", items2, 0);
      menu.AddItem((UIMenuItem) M);
      UIMenuListItem P = new UIMenuListItem("Pushie : ", items5, 0);
      menu.AddItem((UIMenuItem) P);
      UIMenuListItem NA = new UIMenuListItem("Neon Art : ", items3, 0);
      menu.AddItem((UIMenuItem) NA);
      UIMenuItem Buy = new UIMenuItem("Buy " + Cost.ToString("N"));
      menu.AddItem(Buy);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      menu.AddItem(uiMenuItem1);
      UIMenuItem UArea = new UIMenuItem("Underground Area : $2,600,000");
      menu.AddItem(UArea);
      UIMenuItem AMV = new UIMenuItem("Arcade Money Vault: $1,000,000");
      menu.AddItem(AMV);
      UIMenuItem uiMenuItem2 = new UIMenuItem("------------Underground Area Required-----------");
      menu.AddItem(uiMenuItem2);
      UIMenuItem UGarage = new UIMenuItem("Garage Slots 4 - 11 : $600,000");
      menu.AddItem(UGarage);
      UIMenuItem UGunlocker = new UIMenuItem("Gunlocker : $1,000,000");
      menu.AddItem(UGunlocker);
      UIMenuItem UDrill = new UIMenuItem("Drilling Equipment : $450,000");
      menu.AddItem(UDrill);
      UIMenuItem UHack = new UIMenuItem("Hacking Equipment : $250,000");
      menu.AddItem(UHack);
      UIMenuItem UBreaching = new UIMenuItem("Breaching Equipment : $250,000");
      menu.AddItem(UBreaching);
      UIMenuItem UOutfits = new UIMenuItem("Heist Outfits : $150,000");
      menu.AddItem(UOutfits);
      UIMenuItem UPlans = new UIMenuItem("Heist Plans : $50,000");
      menu.AddItem(UPlans);
      UIMenuItem SetClutterOnoff = new UIMenuItem("Set Clutter On/Off");
      menu.AddItem(SetClutterOnoff);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      menu.AddItem(uiMenuItem3);
      UIMenuItem uiMenuItem4 = new UIMenuItem("-----------------------------------------------------------");
      menu.AddItem(uiMenuItem4);
      this.ArcadeBuyMenu = this.modMenuPool.AddSubMenu(menu, "Buy More Arcade Machines");
      this.GUIMenus.Add(this.ArcadeBuyMenu);
      this.GUIMenus.Add(this.ArcadeBuyMenu);
      UIMenuItem GetARC = new UIMenuItem("Get Arcade Machines Active");
      this.ArcadeBuyMenu.AddItem(GetARC);
      UIMenuListItem Arc1 = new UIMenuListItem("Arcade 1 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc1);
      UIMenuListItem Arc2 = new UIMenuListItem("Arcade 2 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc2);
      UIMenuListItem Arc3 = new UIMenuListItem("Arcade 3 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc3);
      UIMenuListItem Arc4 = new UIMenuListItem("Arcade 4 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc4);
      UIMenuListItem Arc5 = new UIMenuListItem("Arcade 5 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc5);
      UIMenuListItem Arc6 = new UIMenuListItem("Arcade 6 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc6);
      UIMenuListItem Arc7 = new UIMenuListItem("Arcade 7 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc7);
      UIMenuListItem Arc8 = new UIMenuListItem("Arcade 8 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc8);
      UIMenuListItem Arc9 = new UIMenuListItem("Arcade 9 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc9);
      UIMenuListItem Arc10 = new UIMenuListItem("Arcade 10 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc10);
      UIMenuListItem Arc11 = new UIMenuListItem("Arcade 11 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc11);
      UIMenuListItem Arc12 = new UIMenuListItem("Arcade 12 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc12);
      UIMenuListItem Arc13 = new UIMenuListItem("Arcade 13 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc13);
      UIMenuListItem Arc14 = new UIMenuListItem("Arcade 14 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc14);
      UIMenuListItem Arc15 = new UIMenuListItem("Arcade 15 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc15);
      UIMenuListItem Arc16 = new UIMenuListItem("Arcade 16 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc16);
      UIMenuListItem Arc17 = new UIMenuListItem("Arcade 17 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc17);
      UIMenuListItem Arc18 = new UIMenuListItem("Arcade 18 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc18);
      UIMenuListItem Arc19 = new UIMenuListItem("Arcade 19 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc19);
      UIMenuListItem Arc20 = new UIMenuListItem("Arcade 20 Game : ", ArcadeMachines, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) Arc20);
      UIMenuListItem RA = new UIMenuListItem("Replace When Arcade : None : ", TF, 0);
      this.ArcadeBuyMenu.AddItem((UIMenuItem) RA);
      RA.Description = "If true, for the choosen spot, will replace the existing arcade with no arcade, turn off to save money";
      UIMenuItem SetARC = new UIMenuItem("Buy Arcade Machines ~g~$" + ArcadesPrice.ToString("N"));
      this.ArcadeBuyMenu.AddItem(SetARC);
      this.ArcadeBuyMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == GetARC)
        {
          Arc1.Index = this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver);
          Arc2.Index = this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver);
          Arc3.Index = this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver);
          Arc4.Index = this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver);
          Arc5.Index = this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver);
          Arc6.Index = this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver);
          Arc7.Index = this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver);
          Arc8.Index = this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver);
          Arc9.Index = this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver);
          Arc10.Index = this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver);
          Arc11.Index = this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver);
          Arc12.Index = this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver);
          Arc13.Index = this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver);
          Arc14.Index = this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver);
          Arc15.Index = this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver);
          Arc16.Index = this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver);
          Arc17.Index = this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver);
          Arc18.Index = this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver);
          Arc19.Index = this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver);
          Arc20.Index = this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver);
        }
        ArcadeCosts[0] = Arc1.Index == 0 || Arc1.Index == this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver) ? (object) 0 : ArcadeMachineCosts[Arc1.Index];
        ArcadeCosts[1] = Arc2.Index == 0 || Arc2.Index == this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver) ? (object) 0 : ArcadeMachineCosts[Arc2.Index];
        ArcadeCosts[2] = Arc3.Index == 0 || Arc3.Index == this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver) ? (object) 0 : ArcadeMachineCosts[Arc3.Index];
        ArcadeCosts[3] = Arc4.Index == 0 || Arc4.Index == this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver) ? (object) 0 : ArcadeMachineCosts[Arc4.Index];
        ArcadeCosts[4] = Arc5.Index == 0 || Arc5.Index == this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver) ? (object) 0 : ArcadeMachineCosts[Arc5.Index];
        ArcadeCosts[5] = Arc6.Index == 0 || Arc6.Index == this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver) ? (object) 0 : ArcadeMachineCosts[Arc6.Index];
        ArcadeCosts[6] = Arc7.Index == 0 || Arc7.Index == this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver) ? (object) 0 : ArcadeMachineCosts[Arc7.Index];
        ArcadeCosts[7] = Arc8.Index == 0 || Arc8.Index == this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver) ? (object) 0 : ArcadeMachineCosts[Arc8.Index];
        ArcadeCosts[8] = Arc9.Index == 0 || Arc9.Index == this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver) ? (object) 0 : ArcadeMachineCosts[Arc9.Index];
        ArcadeCosts[9] = Arc10.Index == 0 || Arc10.Index == this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver) ? (object) 0 : ArcadeMachineCosts[Arc10.Index];
        ArcadeCosts[10] = Arc11.Index == 0 || Arc1.Index == this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver) ? (object) 0 : ArcadeMachineCosts[Arc11.Index];
        ArcadeCosts[11] = Arc12.Index == 0 || Arc12.Index == this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver) ? (object) 0 : ArcadeMachineCosts[Arc12.Index];
        ArcadeCosts[12] = Arc13.Index == 0 || Arc13.Index == this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver) ? (object) 0 : ArcadeMachineCosts[Arc13.Index];
        ArcadeCosts[13] = Arc14.Index == 0 || Arc14.Index == this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver) ? (object) 0 : ArcadeMachineCosts[Arc14.Index];
        ArcadeCosts[14] = Arc15.Index == 0 || Arc15.Index == this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver) ? (object) 0 : ArcadeMachineCosts[Arc15.Index];
        ArcadeCosts[15] = Arc16.Index == 0 || Arc16.Index == this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver) ? (object) 0 : ArcadeMachineCosts[Arc16.Index];
        ArcadeCosts[16] = Arc17.Index == 0 || Arc17.Index == this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver) ? (object) 0 : ArcadeMachineCosts[Arc17.Index];
        ArcadeCosts[17] = Arc18.Index == 0 || Arc18.Index == this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver) ? (object) 0 : ArcadeMachineCosts[Arc18.Index];
        ArcadeCosts[18] = Arc19.Index == 0 || Arc19.Index == this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver) ? (object) 0 : ArcadeMachineCosts[Arc19.Index];
        ArcadeCosts[19] = Arc20.Index == 0 || Arc20.Index == this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver) ? (object) 0 : ArcadeMachineCosts[Arc20.Index];
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__19 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, float> target1 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__19.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, float>> p19 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__19;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target2 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__18.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p18 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__18;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__17 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target3 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__17.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p17 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__17;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target4 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__16.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p16 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__16;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__15 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target5 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__15.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p15 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__15;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target6 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__14.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p14 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__14;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target7 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__13.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p13 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__13;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__12 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target8 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__12.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p12 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__12;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__11 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target9 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__11.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p11 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__11;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target10 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__10.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p10 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__10;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__9 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target11 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__9.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p9 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__9;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target12 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__8.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p8 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__8;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target13 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__7.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p7 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__7;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target14 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p6 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target15 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__5.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p5 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__5;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target16 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__4.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p4 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__4;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target17 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__3.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p3 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__3;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target18 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__2.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p2 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__2;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target19 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__1.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p1 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__1;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__0, ArcadeCosts[0], ArcadeCosts[1]);
        object obj2 = ArcadeCosts[2];
        object obj3 = target19((CallSite) p1, obj1, obj2);
        object obj4 = ArcadeCosts[3];
        object obj5 = target18((CallSite) p2, obj3, obj4);
        object obj6 = ArcadeCosts[4];
        object obj7 = target17((CallSite) p3, obj5, obj6);
        object obj8 = ArcadeCosts[5];
        object obj9 = target16((CallSite) p4, obj7, obj8);
        object obj10 = ArcadeCosts[6];
        object obj11 = target15((CallSite) p5, obj9, obj10);
        object obj12 = ArcadeCosts[7];
        object obj13 = target14((CallSite) p6, obj11, obj12);
        object obj14 = ArcadeCosts[8];
        object obj15 = target13((CallSite) p7, obj13, obj14);
        object obj16 = ArcadeCosts[9];
        object obj17 = target12((CallSite) p8, obj15, obj16);
        object obj18 = ArcadeCosts[10];
        object obj19 = target11((CallSite) p9, obj17, obj18);
        object obj20 = ArcadeCosts[11];
        object obj21 = target10((CallSite) p10, obj19, obj20);
        object obj22 = ArcadeCosts[12];
        object obj23 = target9((CallSite) p11, obj21, obj22);
        object obj24 = ArcadeCosts[13];
        object obj25 = target8((CallSite) p12, obj23, obj24);
        object obj26 = ArcadeCosts[14];
        object obj27 = target7((CallSite) p13, obj25, obj26);
        object obj28 = ArcadeCosts[15];
        object obj29 = target6((CallSite) p14, obj27, obj28);
        object obj30 = ArcadeCosts[16];
        object obj31 = target5((CallSite) p15, obj29, obj30);
        object obj32 = ArcadeCosts[17];
        object obj33 = target4((CallSite) p16, obj31, obj32);
        object obj34 = ArcadeCosts[18];
        object obj35 = target3((CallSite) p17, obj33, obj34);
        object obj36 = ArcadeCosts[19];
        object obj37 = target2((CallSite) p18, obj35, obj36);
        ArcadesPrice = target1((CallSite) p19, obj37);
        SetARC.Text = "Buy Arcade Machines ~g~$" + ArcadesPrice.ToString("N");
        if (item != SetARC)
          return;
        if ((double) Game.Player.Character.Money <= (double) ArcadesPrice)
        {
          Game.Player.Money -= (int) ArcadesPrice;
          this.Arcade1Ver = Arc1.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__23 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target20 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__23.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p23 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__23;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj38 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__20, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj39;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__22, obj38))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj39 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__21, obj38, this.Arcade1Ver != this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver));
          }
          else
            obj39 = obj38;
          if (target20((CallSite) p23, obj39))
            this.Config.SetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver);
          this.Arcade2Ver = Arc2.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__27 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target21 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__27.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p27 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__27;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj40 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__24, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__26 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj41;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__26, obj40))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj41 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__25, obj40, this.Arcade2Ver != this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver));
          }
          else
            obj41 = obj40;
          if (target21((CallSite) p27, obj41))
            this.Config.SetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver);
          this.Arcade3Ver = Arc3.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__31 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__31 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target22 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__31.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p31 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__31;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__28 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj42 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__28.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__28, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__30 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__30 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj43;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__30.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__30, obj42))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__29 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__29 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj43 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__29.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__29, obj42, this.Arcade3Ver != this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver));
          }
          else
            obj43 = obj42;
          if (target22((CallSite) p31, obj43))
            this.Config.SetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver);
          this.Arcade4Ver = Arc4.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__35 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__35 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target23 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__35.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p35 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__35;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__32 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj44 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__32.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__32, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__34 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__34 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj45;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__34.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__34, obj44))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__33 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__33 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj45 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__33.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__33, obj44, this.Arcade4Ver != this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver));
          }
          else
            obj45 = obj44;
          if (target23((CallSite) p35, obj45))
            this.Config.SetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver);
          this.Arcade5Ver = Arc5.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__39 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__39 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target24 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__39.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p39 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__39;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__36 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__36 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj46 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__36.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__36, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__38 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__38 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj47;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__38.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__38, obj46))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__37 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__37 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj47 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__37.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__37, obj46, this.Arcade5Ver != this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver));
          }
          else
            obj47 = obj46;
          if (target24((CallSite) p39, obj47))
            this.Config.SetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver);
          this.Arcade6Ver = Arc6.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__43 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__43 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target25 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__43.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p43 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__43;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__40 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__40 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj48 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__40.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__40, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__42 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__42 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj49;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__42.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__42, obj48))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__41 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__41 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj49 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__41.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__41, obj48, this.Arcade6Ver != this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver));
          }
          else
            obj49 = obj48;
          if (target25((CallSite) p43, obj49))
            this.Config.SetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver);
          this.Arcade7Ver = Arc7.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__47 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__47 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target26 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__47.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p47 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__47;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__44 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__44 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj50 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__44.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__44, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__46 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__46 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj51;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__46.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__46, obj50))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__45 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__45 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj51 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__45.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__45, obj50, this.Arcade7Ver != this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver));
          }
          else
            obj51 = obj50;
          if (target26((CallSite) p47, obj51))
            this.Config.SetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver);
          this.Arcade8Ver = Arc8.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__51 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__51 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target27 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__51.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p51 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__51;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__48 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__48 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj52 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__48.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__48, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__50 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__50 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj53;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__50.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__50, obj52))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__49 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__49 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj53 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__49.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__49, obj52, this.Arcade8Ver != this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver));
          }
          else
            obj53 = obj52;
          if (target27((CallSite) p51, obj53))
            this.Config.SetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver);
          this.Arcade9Ver = Arc9.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__55 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__55 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target28 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__55.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p55 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__55;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__52 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__52 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj54 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__52.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__52, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__54 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__54 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj55;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__54.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__54, obj54))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__53 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__53 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj55 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__53.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__53, obj54, this.Arcade9Ver != this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver));
          }
          else
            obj55 = obj54;
          if (target28((CallSite) p55, obj55))
            this.Config.SetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver);
          this.Arcade10Ver = Arc10.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__59 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__59 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target29 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__59.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p59 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__59;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__56 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__56 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj56 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__56.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__56, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__58 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__58 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj57;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__58.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__58, obj56))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__57 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__57 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj57 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__57.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__57, obj56, this.Arcade10Ver != this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver));
          }
          else
            obj57 = obj56;
          if (target29((CallSite) p59, obj57))
            this.Config.SetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver);
          this.Arcade11Ver = Arc11.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__63 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__63 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target30 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__63.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p63 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__63;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__60 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__60 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj58 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__60.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__60, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__62 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__62 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj59;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__62.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__62, obj58))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__61 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__61 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj59 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__61.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__61, obj58, this.Arcade11Ver != this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver));
          }
          else
            obj59 = obj58;
          if (target30((CallSite) p63, obj59))
            this.Config.SetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver);
          this.Arcade12Ver = Arc12.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__67 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__67 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target31 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__67.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p67 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__67;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__64 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__64 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj60 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__64.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__64, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__66 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__66 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj61;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__66.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__66, obj60))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__65 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__65 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj61 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__65.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__65, obj60, this.Arcade12Ver != this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver));
          }
          else
            obj61 = obj60;
          if (target31((CallSite) p67, obj61))
            this.Config.SetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver);
          this.Arcade13Ver = Arc13.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__71 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__71 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target32 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__71.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p71 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__71;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__68 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__68 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj62 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__68.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__68, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__70 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__70 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj63;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__70.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__70, obj62))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__69 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__69 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj63 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__69.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__69, obj62, this.Arcade13Ver != this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver));
          }
          else
            obj63 = obj62;
          if (target32((CallSite) p71, obj63))
            this.Config.SetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver);
          this.Arcade14Ver = Arc14.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__75 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__75 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target33 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__75.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p75 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__75;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__72 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__72 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj64 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__72.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__72, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__74 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__74 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj65;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__74.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__74, obj64))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__73 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__73 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj65 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__73.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__73, obj64, this.Arcade14Ver != this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver));
          }
          else
            obj65 = obj64;
          if (target33((CallSite) p75, obj65))
            this.Config.SetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver);
          this.Arcade15Ver = Arc15.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__79 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__79 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target34 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__79.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p79 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__79;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__76 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__76 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj66 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__76.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__76, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__78 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__78 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj67;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__78.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__78, obj66))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__77 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__77 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj67 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__77.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__77, obj66, this.Arcade15Ver != this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver));
          }
          else
            obj67 = obj66;
          if (target34((CallSite) p79, obj67))
            this.Config.SetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver);
          this.Arcade16Ver = Arc16.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__83 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__83 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target35 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__83.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p83 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__83;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__80 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__80 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj68 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__80.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__80, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__82 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__82 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj69;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__82.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__82, obj68))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__81 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__81 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj69 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__81.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__81, obj68, this.Arcade16Ver != this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver));
          }
          else
            obj69 = obj68;
          if (target35((CallSite) p83, obj69))
            this.Config.SetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver);
          this.Arcade17Ver = Arc17.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__87 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__87 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target36 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__87.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p87 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__87;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__84 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__84 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj70 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__84.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__84, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__86 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__86 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj71;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__86.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__86, obj70))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__85 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__85 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj71 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__85.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__85, obj70, this.Arcade17Ver != this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver));
          }
          else
            obj71 = obj70;
          if (target36((CallSite) p87, obj71))
            this.Config.SetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver);
          this.Arcade18Ver = Arc18.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__91 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__91 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target37 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__91.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p91 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__91;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__88 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__88 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj72 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__88.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__88, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__90 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__90 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj73;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__90.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__90, obj72))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__89 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__89 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj73 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__89.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__89, obj72, this.Arcade18Ver != this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver));
          }
          else
            obj73 = obj72;
          if (target37((CallSite) p91, obj73))
            this.Config.SetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver);
          this.Arcade19Ver = Arc19.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__95 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__95 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target38 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__95.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p95 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__95;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__92 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__92 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj74 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__92.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__92, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__94 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__94 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj75;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__94.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__94, obj74))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__93 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__93 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj75 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__93.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__93, obj74, this.Arcade19Ver != this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver));
          }
          else
            obj75 = obj74;
          if (target38((CallSite) p95, obj75))
            this.Config.SetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver);
          this.Arcade20Ver = Arc20.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__99 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__99 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target39 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__99.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p99 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__99;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__96 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__96 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj76 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__96.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__96, TF[RA.Index], true);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__98 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__98 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          object obj77;
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          if (!Class1.\u003C\u003Eo__994.\u003C\u003Ep__98.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__98, obj76))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__97 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__97 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            obj77 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__97.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__97, obj76, this.Arcade20Ver != this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver));
          }
          else
            obj77 = obj76;
          if (target39((CallSite) p99, obj77))
            this.Config.SetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver);
          else
            this.Config.SetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver);
          this.Config.Save();
          foreach (Prop arcadeProp in this.ArcadeProps)
          {
            if ((Entity) arcadeProp != (Entity) null)
              arcadeProp.Delete();
          }
          foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
          {
            if ((Entity) seconardyArcadeProp != (Entity) null)
              seconardyArcadeProp.Delete();
          }
          this.RacingArcades.Clear();
          UI.Notify(this.GetHostName() + " : Arcades have been Set");
          this.RefreshArcadeInterior();
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
      });
      this.ArcadeBuyMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
        {
          if ((Entity) seconardyArcadeProp != (Entity) null)
            seconardyArcadeProp.Delete();
        }
        ArcadeCosts[0] = Arc1.Index == 0 || Arc1.Index == this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver) ? (object) 0 : ArcadeMachineCosts[Arc1.Index];
        ArcadeCosts[1] = Arc2.Index == 0 || Arc2.Index == this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver) ? (object) 0 : ArcadeMachineCosts[Arc2.Index];
        ArcadeCosts[2] = Arc3.Index == 0 || Arc3.Index == this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver) ? (object) 0 : ArcadeMachineCosts[Arc3.Index];
        ArcadeCosts[3] = Arc4.Index == 0 || Arc4.Index == this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver) ? (object) 0 : ArcadeMachineCosts[Arc4.Index];
        ArcadeCosts[4] = Arc5.Index == 0 || Arc5.Index == this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver) ? (object) 0 : ArcadeMachineCosts[Arc5.Index];
        ArcadeCosts[5] = Arc6.Index == 0 || Arc6.Index == this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver) ? (object) 0 : ArcadeMachineCosts[Arc6.Index];
        ArcadeCosts[6] = Arc7.Index == 0 || Arc7.Index == this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver) ? (object) 0 : ArcadeMachineCosts[Arc7.Index];
        ArcadeCosts[7] = Arc8.Index == 0 || Arc8.Index == this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver) ? (object) 0 : ArcadeMachineCosts[Arc8.Index];
        ArcadeCosts[8] = Arc9.Index == 0 || Arc9.Index == this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver) ? (object) 0 : ArcadeMachineCosts[Arc9.Index];
        ArcadeCosts[9] = Arc10.Index == 0 || Arc10.Index == this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver) ? (object) 0 : ArcadeMachineCosts[Arc10.Index];
        ArcadeCosts[10] = Arc11.Index == 0 || Arc1.Index == this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver) ? (object) 0 : ArcadeMachineCosts[Arc11.Index];
        ArcadeCosts[11] = Arc12.Index == 0 || Arc12.Index == this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver) ? (object) 0 : ArcadeMachineCosts[Arc12.Index];
        ArcadeCosts[12] = Arc13.Index == 0 || Arc13.Index == this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver) ? (object) 0 : ArcadeMachineCosts[Arc13.Index];
        ArcadeCosts[13] = Arc14.Index == 0 || Arc14.Index == this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver) ? (object) 0 : ArcadeMachineCosts[Arc14.Index];
        ArcadeCosts[14] = Arc15.Index == 0 || Arc15.Index == this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver) ? (object) 0 : ArcadeMachineCosts[Arc15.Index];
        ArcadeCosts[15] = Arc16.Index == 0 || Arc16.Index == this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver) ? (object) 0 : ArcadeMachineCosts[Arc16.Index];
        ArcadeCosts[16] = Arc17.Index == 0 || Arc17.Index == this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver) ? (object) 0 : ArcadeMachineCosts[Arc17.Index];
        ArcadeCosts[17] = Arc18.Index == 0 || Arc18.Index == this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver) ? (object) 0 : ArcadeMachineCosts[Arc18.Index];
        ArcadeCosts[18] = Arc19.Index == 0 || Arc19.Index == this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver) ? (object) 0 : ArcadeMachineCosts[Arc19.Index];
        ArcadeCosts[19] = Arc20.Index == 0 || Arc20.Index == this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver) ? (object) 0 : ArcadeMachineCosts[Arc20.Index];
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__119 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__119 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, float> target1 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__119.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, float>> p119 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__119;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__118 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__118 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target2 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__118.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p118 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__118;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__117 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__117 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target3 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__117.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p117 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__117;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__116 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__116 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target4 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__116.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p116 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__116;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__115 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__115 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target5 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__115.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p115 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__115;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__114 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__114 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target6 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__114.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p114 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__114;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__113 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__113 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target7 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__113.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p113 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__113;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__112 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__112 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target8 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__112.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p112 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__112;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__111 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__111 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target9 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__111.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p111 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__111;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__110 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__110 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target10 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__110.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p110 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__110;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__109 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__109 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target11 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__109.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p109 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__109;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__108 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__108 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target12 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__108.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p108 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__108;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__107 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__107 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target13 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__107.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p107 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__107;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__106 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__106 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target14 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__106.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p106 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__106;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__105 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__105 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target15 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__105.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p105 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__105;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__104 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__104 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target16 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__104.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p104 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__104;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__103 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__103 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target17 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__103.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p103 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__103;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__102 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__102 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target18 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__102.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p102 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__102;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__101 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__101 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target19 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__101.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p101 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__101;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__100 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__100 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__994.\u003C\u003Ep__100.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__100, ArcadeCosts[0], ArcadeCosts[1]);
        object obj2 = ArcadeCosts[2];
        object obj3 = target19((CallSite) p101, obj1, obj2);
        object obj4 = ArcadeCosts[3];
        object obj5 = target18((CallSite) p102, obj3, obj4);
        object obj6 = ArcadeCosts[4];
        object obj7 = target17((CallSite) p103, obj5, obj6);
        object obj8 = ArcadeCosts[5];
        object obj9 = target16((CallSite) p104, obj7, obj8);
        object obj10 = ArcadeCosts[6];
        object obj11 = target15((CallSite) p105, obj9, obj10);
        object obj12 = ArcadeCosts[7];
        object obj13 = target14((CallSite) p106, obj11, obj12);
        object obj14 = ArcadeCosts[8];
        object obj15 = target13((CallSite) p107, obj13, obj14);
        object obj16 = ArcadeCosts[9];
        object obj17 = target12((CallSite) p108, obj15, obj16);
        object obj18 = ArcadeCosts[10];
        object obj19 = target11((CallSite) p109, obj17, obj18);
        object obj20 = ArcadeCosts[11];
        object obj21 = target10((CallSite) p110, obj19, obj20);
        object obj22 = ArcadeCosts[12];
        object obj23 = target9((CallSite) p111, obj21, obj22);
        object obj24 = ArcadeCosts[13];
        object obj25 = target8((CallSite) p112, obj23, obj24);
        object obj26 = ArcadeCosts[14];
        object obj27 = target7((CallSite) p113, obj25, obj26);
        object obj28 = ArcadeCosts[15];
        object obj29 = target6((CallSite) p114, obj27, obj28);
        object obj30 = ArcadeCosts[16];
        object obj31 = target5((CallSite) p115, obj29, obj30);
        object obj32 = ArcadeCosts[17];
        object obj33 = target4((CallSite) p116, obj31, obj32);
        object obj34 = ArcadeCosts[18];
        object obj35 = target3((CallSite) p117, obj33, obj34);
        object obj36 = ArcadeCosts[19];
        object obj37 = target2((CallSite) p118, obj35, obj36);
        ArcadesPrice = target1((CallSite) p119, obj37);
        SetARC.Text = "Buy Arcade Machines ~g~$" + ArcadesPrice.ToString("N");
        if (item == Arc1)
        {
          this.CurrentArcade = 1;
          this.CurrentArcadeValue = Arc1.Index;
        }
        if (item == Arc2)
        {
          this.CurrentArcade = 2;
          this.CurrentArcadeValue = Arc2.Index;
        }
        if (item == Arc3)
        {
          this.CurrentArcade = 3;
          this.CurrentArcadeValue = Arc3.Index;
        }
        if (item == Arc4)
        {
          this.CurrentArcade = 4;
          this.CurrentArcadeValue = Arc4.Index;
        }
        if (item == Arc5)
        {
          this.CurrentArcade = 5;
          this.CurrentArcadeValue = Arc5.Index;
        }
        if (item == Arc6)
        {
          this.CurrentArcade = 6;
          this.CurrentArcadeValue = Arc6.Index;
        }
        if (item == Arc7)
        {
          this.CurrentArcade = 7;
          this.CurrentArcadeValue = Arc7.Index;
        }
        if (item == Arc8)
        {
          this.CurrentArcade = 8;
          this.CurrentArcadeValue = Arc8.Index;
        }
        if (item == Arc9)
        {
          this.CurrentArcade = 9;
          this.CurrentArcadeValue = Arc9.Index;
        }
        if (item == Arc10)
        {
          this.CurrentArcade = 10;
          this.CurrentArcadeValue = Arc10.Index;
        }
        if (item == Arc11)
        {
          this.CurrentArcade = 11;
          this.CurrentArcadeValue = Arc11.Index;
        }
        if (item == Arc12)
        {
          this.CurrentArcade = 12;
          this.CurrentArcadeValue = Arc12.Index;
        }
        if (item == Arc13)
        {
          this.CurrentArcade = 13;
          this.CurrentArcadeValue = Arc13.Index;
        }
        if (item == Arc14)
        {
          this.CurrentArcade = 14;
          this.CurrentArcadeValue = Arc14.Index;
        }
        if (item == Arc15)
        {
          this.CurrentArcade = 15;
          this.CurrentArcadeValue = Arc15.Index;
        }
        if (item == Arc16)
        {
          this.CurrentArcade = 16;
          this.CurrentArcadeValue = Arc16.Index;
        }
        if (item == Arc17)
        {
          this.CurrentArcade = 17;
          this.CurrentArcadeValue = Arc17.Index;
        }
        if (item == Arc18)
        {
          this.CurrentArcade = 18;
          this.CurrentArcadeValue = Arc18.Index;
        }
        if (item == Arc19)
        {
          this.CurrentArcade = 19;
          this.CurrentArcadeValue = Arc19.Index;
        }
        if (item == Arc20)
        {
          this.CurrentArcade = 20;
          this.CurrentArcadeValue = Arc20.Index;
        }
        if (!this.BuyingArcades)
        {
          try
          {
            foreach (Ped arcadeInteriorPed in this.ArcadeInteriorPeds)
            {
              if ((Entity) arcadeInteriorPed != (Entity) null)
                arcadeInteriorPed.Delete();
            }
            foreach (Ped ped in this.ArcadeInteriorPeds2)
            {
              if ((Entity) ped != (Entity) null)
                ped.Delete();
            }
            foreach (Prop arcadeProp in this.ArcadeProps)
            {
              if ((Entity) arcadeProp != (Entity) null)
                arcadeProp.Delete();
            }
            foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
            {
              if ((Entity) seconardyArcadeProp != (Entity) null)
                seconardyArcadeProp.Delete();
            }
            if (this.ArcadeProps.Count > 0)
            {
              foreach (Prop arcadeProp in this.ArcadeProps)
              {
                if ((Entity) arcadeProp != (Entity) null)
                  arcadeProp.Delete();
              }
            }
            foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
            {
              if ((Entity) seconardyArcadeProp != (Entity) null)
                seconardyArcadeProp.Delete();
            }
            this.ArcadePos.Clear();
            this.RacingArcades.Clear();
            this.BuyingArcades = true;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__120 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__994.\u003C\u003Ep__120 = CallSite<Action<CallSite, Class1, int, int, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SetupFakeArcade", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__120.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__120, this, this.CurrentArcadeValue, 1, ArcadeMachines[this.CurrentArcadeValue]);
            this.ArcadeBuyCam = World.CreateCamera(this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 1f)), this.FakeArcade.Rotation, 60f);
            this.ArcadeBuyCam.IsActive = true;
            this.ArcadeBuyCam.FarClip = 2000f;
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
            World.RenderingCamera = this.ArcadeBuyCam;
          }
          catch
          {
            UI.Notify("Error on Cam Create");
          }
        }
        if (!this.BuyingArcades)
          return;
        try
        {
          foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
          {
            if ((Entity) seconardyArcadeProp != (Entity) null)
              seconardyArcadeProp.Delete();
          }
          this.RacingArcades.Clear();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__994.\u003C\u003Ep__121 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__994.\u003C\u003Ep__121 = CallSite<Action<CallSite, Class1, int, int, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SetupFakeArcade", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__994.\u003C\u003Ep__121.Target((CallSite) Class1.\u003C\u003Eo__994.\u003C\u003Ep__121, this, this.CurrentArcadeValue, this.CurrentArcade, ArcadeMachines[this.CurrentArcadeValue]);
          this.ArcadeBuyCam.Position = this.FakeArcade.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 1f));
          this.ArcadeBuyCam.Rotation = this.FakeArcade.Rotation;
        }
        catch
        {
          UI.Notify("Error on Cam move");
        }
      });
      menu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SetClutterOnoff)
        {
          if (!this.ArcadeClutter)
          {
            this.ArcadeClutter = true;
            this.Config.SetValue<bool>("Arcade", "ArcadeClutter", this.ArcadeClutter);
            this.Config.Save();
            this.RefreshArcadeInterior();
            UI.Notify(this.GetHostName() + " : Underground Clutter Has been added");
          }
          else if (this.ArcadeClutter)
          {
            this.ArcadeClutter = false;
            this.Config.SetValue<bool>("Arcade", "ArcadeClutter", this.ArcadeClutter);
            this.Config.Save();
            this.RefreshArcadeInterior();
            UI.Notify(this.GetHostName() + " : Underground Clutter Has been removed");
          }
        }
        if (item == UHack)
        {
          if (Game.Player.Character.Money <= 250000)
          {
            Game.Player.Money -= 250000;
            this.UnlockedHackingEquipment = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedHackingEquipment", this.UnlockedHackingEquipment);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UArea)
        {
          if (Game.Player.Character.Money <= 2600000)
          {
            Game.Player.Money -= 2600000;
            this.UndergrondAreaLocked = 1;
            this.Config.SetValue<int>("Arcade", "UndergrondAreaLocked", this.UndergrondAreaLocked);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UGarage)
        {
          if (Game.Player.Character.Money <= 600000)
          {
            Game.Player.Money -= 600000;
            this.UnlockedGarage = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedGarage", this.UnlockedGarage);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UGunlocker)
        {
          if (Game.Player.Character.Money <= 1000000)
          {
            Game.Player.Money -= 1000000;
            this.UnlockedGunlocker = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedGunlocker", this.UnlockedGunlocker);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UBreaching)
        {
          if (Game.Player.Character.Money <= 250000)
          {
            Game.Player.Money -= 250000;
            this.UnlockedBreachingEquipment = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedBreachingEquipment", this.UnlockedBreachingEquipment);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UPlans)
        {
          if (Game.Player.Character.Money <= 50000)
          {
            Game.Player.Money -= 50000;
            this.UnlockedPlansEquipment = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedPlansEquipment", this.UnlockedPlansEquipment);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UOutfits)
        {
          if (Game.Player.Character.Money <= 150000)
          {
            Game.Player.Money -= 150000;
            this.UnlockedOutfitsEquipment = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedOutfitsEquipment", this.UnlockedOutfitsEquipment);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == UDrill)
        {
          if (Game.Player.Character.Money <= 450000)
          {
            Game.Player.Money -= 450000;
            this.UnlockedDilllEquipment = 1;
            this.Config.SetValue<int>("Arcade", "UnlockedDilllEquipment", this.UnlockedDilllEquipment);
            this.Config.Save();
            this.RefreshArcadeInterior();
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
        }
        if (item == AMV)
        {
          if (this.ArcadeMoneyVault == 0)
          {
            if (Game.Player.Character.Money <= 1000000)
            {
              Game.Player.Money -= 1000000;
              this.ArcadeMoneyVault = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeMoneyVault", this.ArcadeMoneyVault);
              this.Config.Save();
              this.RefreshArcadeInterior();
            }
            else
              UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
          }
          else
            UI.Notify(this.GetHostName() + " : You already have this Arcade Upgrade");
        }
        StyleCost = ST.Index < 1 ? 0.0f : (float) (155000 * (int) (1.25 * (double) ST.Index));
        FloorCost = F.Index < 1 ? 0.0f : (float) (125000 * (int) (1.15 * (double) F.Index));
        MuralCost = M.Index < 1 ? 0.0f : (float) (325000 * (int) (1.25 * (double) M.Index));
        NeonArtCost = NA.Index < 1 ? 0.0f : (float) (155000 * (int) (1.25 * (double) NA.Index));
        PushieCost = P.Index < 1 ? 0.0f : (float) (225000 * (int) (1.25 * (double) M.Index));
        Cost = StyleCost + NeonArtCost + MuralCost + FloorCost + PushieCost;
        Buy.Text = "Buy " + Cost.ToString("N");
        if (item != Buy)
          return;
        if ((double) Game.Player.Character.Money <= (double) Cost)
        {
          Game.Player.Money -= (int) Cost;
          this.ArcadeFloodID = F.Index;
          this.Config.SetValue<int>("Arcade", "ArcadeFloodID", this.ArcadeFloodID);
          this.MuralID = M.Index;
          this.Config.SetValue<int>("Arcade", "MuralID", this.MuralID);
          this.PushieID = P.Index;
          this.Config.SetValue<int>("Arcade", "PushieID", this.PushieID);
          this.ArcadeStyle = ST.Index;
          this.Config.SetValue<int>("Arcade", "ArcadeStyle", this.ArcadeStyle);
          this.NeonArtID = NA.Index;
          this.Config.SetValue<int>("Arcade", "NeonArtID", this.NeonArtID);
          this.Config.Save();
          this.RefreshArcadeInterior();
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this Arcade Upgrade");
      });
      menu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        StyleCost = ST.Index < 1 ? 0.0f : (float) (155000 * (int) (1.25 * (double) ST.Index));
        NeonArtCost = NA.Index < 1 ? 0.0f : (float) (155000 * (int) (1.25 * (double) NA.Index));
        FloorCost = F.Index < 1 ? 0.0f : (float) (125000 * (int) (1.15 * (double) F.Index));
        MuralCost = M.Index < 1 ? 0.0f : (float) (325000 * (int) (1.25 * (double) M.Index));
        PushieCost = P.Index < 1 ? 0.0f : (float) (225000 * (int) (1.25 * (double) M.Index));
        Cost = StyleCost + NeonArtCost + MuralCost + FloorCost + PushieCost;
        Buy.Text = "Buy " + Cost.ToString("N");
      });
    }

    public void ArcadeMissionsMethod()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.ArcadeMissions, "Arcade Missions");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Mission1 = new UIMenuItem("Arcade Supply");
      uiMenu.AddItem(Mission1);
      UIMenuItem Mission2 = new UIMenuItem("Dress to kill");
      uiMenu.AddItem(Mission2);
      UIMenuItem Mission4 = new UIMenuItem("Drone Striker");
      uiMenu.AddItem(Mission4);
      UIMenuItem Mission5 = new UIMenuItem("Retro Ride");
      uiMenu.AddItem(Mission5);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Mission1)
        {
          if (this.ArcadeMissionBlip != (Blip) null)
            this.ArcadeMissionBlip.Remove();
          if (this.ArcadeMissionBlip1 != (Blip) null)
            this.ArcadeMissionBlip1.Remove();
          if (this.ArcadeMissionBlip2 != (Blip) null)
            this.ArcadeMissionBlip2.Remove();
          if (this.ArcadeMissionBlip3 != (Blip) null)
            this.ArcadeMissionBlip3.Remove();
          foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
          {
            if ((Entity) arcadeMissionProp != (Entity) null)
              arcadeMissionProp.Delete();
          }
          foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
          {
            if ((Entity) arcadeMissionVehicle != (Entity) null)
              arcadeMissionVehicle.Delete();
          }
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
              arcadeMissionPed.Delete();
          }
          this.ArcadeMissionProps.Clear();
          this.ArcadeMissionVehicles.Clear();
          this.ArcadeMissionPeds.Clear();
          foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
          {
            if ((Entity) arcadeMissionProp != (Entity) null)
              arcadeMissionProp.Delete();
          }
          foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
          {
            if ((Entity) arcadeMissionVehicle != (Entity) null)
              arcadeMissionVehicle.Delete();
          }
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
              arcadeMissionPed.Delete();
          }
          Vehicle vehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), new Vector3(397.99f, -1642.313f, 29f), 20f);
          this.ArcadeMissionVehicles.Add(vehicle1);
          Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_arcade_collect_01a"), vehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f)), vehicle1.Rotation, false, false);
          this.ArcadeMissionProps.Add(prop1);
          this.ArcadeHauler1 = vehicle1;
          this.ArcadeHauler1Cargo = prop1;
          this.ArcadeHauler1.SetNoCollision((Entity) this.ArcadeHauler1Cargo, true);
          this.ArcadeHauler1Cargo.SetNoCollision((Entity) Game.Player.Character, true);
          this.ArcadeHauler1.Heading = -39f;
          this.ArcadeHauler1Cargo.HasCollision = false;
          Vehicle vehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), new Vector3(402.8f, -1646.585f, 29f), 20f);
          this.ArcadeMissionVehicles.Add(vehicle2);
          Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_arcade_collect_01a"), vehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f)), vehicle2.Rotation, false, false);
          this.ArcadeMissionProps.Add(prop2);
          this.ArcadeHauler2 = vehicle2;
          this.ArcadeHauler2Cargo = prop2;
          this.ArcadeHauler2.SetNoCollision((Entity) this.ArcadeHauler2Cargo, true);
          this.ArcadeHauler2Cargo.SetNoCollision((Entity) Game.Player.Character, true);
          this.ArcadeHauler2.Heading = -39f;
          this.ArcadeHauler2Cargo.HasCollision = false;
          Vehicle vehicle3 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), new Vector3(407.52f, -1650.34f, 29f), 20f);
          this.ArcadeMissionVehicles.Add(vehicle3);
          Prop prop3 = World.CreateProp(this.RequestModel("ch_prop_arcade_collect_01a"), vehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f)), vehicle3.Rotation, false, false);
          this.ArcadeMissionProps.Add(prop3);
          this.ArcadeHauler3 = vehicle3;
          this.ArcadeHauler3Cargo = prop3;
          this.ArcadeHauler3.SetNoCollision((Entity) this.ArcadeHauler3Cargo, true);
          this.ArcadeHauler3Cargo.SetNoCollision((Entity) Game.Player.Character, true);
          this.ArcadeHauler3.Heading = -39f;
          this.ArcadeHauler3Cargo.HasCollision = false;
          this.ArcadeMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), new Vector3(394.9142f, -1633.74f, 29f), -133f));
          this.ArcadeMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), new Vector3(383.026f, -1611.713f, 29f), -139f));
          this.ArcadeMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), new Vector3(373.55f, -1616.74f, 29f), -120f));
          this.ArcadeMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), new Vector3(417.2f, -1650.74f, 29f), 67f));
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "Cop");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) arcadeMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) arcadeMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) arcadeMissionPed, (InputArgument) 1);
              arcadeMissionPed.Task.FightAgainst(Game.Player.Character);
              arcadeMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
            }
          }
          if (this.ArcadeMissionBlip != (Blip) null)
            this.ArcadeMissionBlip.Remove();
          this.ArcadeMissionBlip = World.CreateBlip(new Vector3(402.8f, -1646.585f, 29f));
          this.ArcadeMissionBlip.Sprite = BlipSprite.CargoBusinessBattle;
          this.ArcadeMissionBlip.Color = BlipColor.Yellow;
          this.ArcadeMissionBlip.Name = "Steal Flatbed Trucks";
          UI.Notify(this.GetHostName() + " : The LSPD have seized, Semi's carry vital Arcade Machines, steal them and return them to the Arcade");
          this.Missionnum = 141;
          this.VehicleSetup = true;
          this.ArcadeMissionComplete = false;
        }
        if (item == Mission2)
        {
          if (this.ArcadeMissionBlip != (Blip) null)
            this.ArcadeMissionBlip.Remove();
          if (this.ArcadeMissionBlip1 != (Blip) null)
            this.ArcadeMissionBlip1.Remove();
          if (this.ArcadeMissionBlip2 != (Blip) null)
            this.ArcadeMissionBlip2.Remove();
          if (this.ArcadeMissionBlip3 != (Blip) null)
            this.ArcadeMissionBlip3.Remove();
          foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
          {
            if ((Entity) arcadeMissionProp != (Entity) null)
              arcadeMissionProp.Delete();
          }
          foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
          {
            if ((Entity) arcadeMissionVehicle != (Entity) null)
              arcadeMissionVehicle.Delete();
          }
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
              arcadeMissionPed.Delete();
          }
          this.ArcadeMissionProps.Clear();
          this.ArcadeMissionVehicles.Clear();
          this.ArcadeMissionPeds.Clear();
          Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Speedo2), new Vector3(222.3784f, 209.9477f, 104f), 20f);
          vehicle.Heading = 101f;
          this.ArcadeMissionVehicles.Add(vehicle);
          vehicle.AddBlip();
          vehicle.CurrentBlip.Sprite = BlipSprite.TargetBusinessBattle;
          vehicle.CurrentBlip.Color = BlipColor.Red;
          vehicle.CurrentBlip.Name = "Attackers Vehicle";
          GTA.Model model1 = (GTA.Model) PedHash.Pogo01;
          Vector3 position1 = vehicle.Position;
          Vector3 position2 = position1.Around(5f);
          Ped ped1 = World.CreatePed(model1, position2);
          ped1.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped1);
          GTA.Model model2 = (GTA.Model) PedHash.Zombie01;
          position1 = vehicle.Position;
          Vector3 position3 = position1.Around(5f);
          Ped ped2 = World.CreatePed(model2, position3);
          ped2.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped2);
          GTA.Model model3 = (GTA.Model) PedHash.Pogo01;
          position1 = vehicle.Position;
          Vector3 position4 = position1.Around(5f);
          Ped ped3 = World.CreatePed(model3, position4);
          ped3.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped3);
          GTA.Model model4 = (GTA.Model) PedHash.Zombie01;
          position1 = vehicle.Position;
          Vector3 position5 = position1.Around(5f);
          Ped ped4 = World.CreatePed(model4, position5);
          ped4.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped4);
          GTA.Model model5 = (GTA.Model) PedHash.MovAlien01;
          position1 = vehicle.Position;
          Vector3 position6 = position1.Around(5f);
          Ped ped5 = World.CreatePed(model5, position6);
          ped5.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped5);
          GTA.Model model6 = (GTA.Model) PedHash.MovAlien01;
          position1 = vehicle.Position;
          Vector3 position7 = position1.Around(5f);
          Ped ped6 = World.CreatePed(model6, position7);
          ped6.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped6);
          GTA.Model model7 = (GTA.Model) PedHash.Orleans;
          position1 = vehicle.Position;
          Vector3 position8 = position1.Around(5f);
          Ped ped7 = World.CreatePed(model7, position8);
          ped7.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped7);
          GTA.Model model8 = (GTA.Model) PedHash.MovieStar;
          position1 = vehicle.Position;
          Vector3 position9 = position1.Around(5f);
          Ped ped8 = World.CreatePed(model8, position9);
          ped8.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
          this.ArcadeMissionPeds.Add(ped8);
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) arcadeMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) arcadeMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) arcadeMissionPed, (InputArgument) 1);
              arcadeMissionPed.Task.FightAgainst(Game.Player.Character);
              arcadeMissionPed.AddBlip();
              arcadeMissionPed.CurrentBlip.Sprite = BlipSprite.Beast;
              arcadeMissionPed.CurrentBlip.Color = BlipColor.Yellow;
              arcadeMissionPed.CurrentBlip.Name = "Bank Robber";
            }
          }
          this.ArcadeMissionComplete = false;
          UI.Notify(this.GetHostName() + " : Weve gotten reports of Cartoon characters attacking people near the Pacific Standard bank, go an eliminate all hostiles");
          this.Missionnum = 241;
          this.VehicleSetup = true;
        }
        if (item == Mission4)
        {
          if (this.ArcadeMissionBlip != (Blip) null)
            this.ArcadeMissionBlip.Remove();
          if (this.ArcadeMissionBlip1 != (Blip) null)
            this.ArcadeMissionBlip1.Remove();
          if (this.ArcadeMissionBlip2 != (Blip) null)
            this.ArcadeMissionBlip2.Remove();
          if (this.ArcadeMissionBlip3 != (Blip) null)
            this.ArcadeMissionBlip3.Remove();
          foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
          {
            if ((Entity) arcadeMissionProp != (Entity) null)
              arcadeMissionProp.Delete();
          }
          foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
          {
            if ((Entity) arcadeMissionVehicle != (Entity) null)
              arcadeMissionVehicle.Delete();
          }
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
              arcadeMissionPed.Delete();
          }
          this.ArcadeMissionProps.Clear();
          this.ArcadeMissionVehicles.Clear();
          this.ArcadeMissionPeds.Clear();
          this.ArcadeRandomLoc = new Vector3(-427.61f, -774.72f, 129f).Around(200f);
          Vehicle vehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Havok), this.ArcadeRandomLoc.Around(50f), 20f);
          vehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
          this.ArcadeMissionVehicles.Add(vehicle1);
          this.ArcadeMissionPeds.Add(vehicle1.GetPedOnSeat(VehicleSeat.Driver));
          vehicle1.SetMod(VehicleMod.Roof, 0, true);
          Prop prop1 = World.CreateProp(this.RequestModel("ch_prop_casino_drone_02a"), vehicle1.Position, vehicle1.Rotation, false, false);
          prop1.SetNoCollision((Entity) vehicle1, true);
          prop1.LodDistance = 3000;
          vehicle1.SetNoCollision((Entity) prop1, true);
          this.ArcadeMissionProps.Add(prop1);
          vehicle1.Position = new Vector3(vehicle1.Position.X, vehicle1.Position.Y, World.GetGroundHeight(vehicle1.Position) + 500f);
          vehicle1.IsVisible = false;
          vehicle1.AddBlip();
          vehicle1.CurrentBlip.Sprite = BlipSprite.HelicopterAnimated;
          vehicle1.CurrentBlip.Color = BlipColor.Blue4;
          vehicle1.CurrentBlip.Name = "Destroy LSPD Drone";
          Vehicle vehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.Havok), this.ArcadeRandomLoc.Around(50f), 20f);
          vehicle2.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
          this.ArcadeMissionVehicles.Add(vehicle2);
          this.ArcadeMissionPeds.Add(vehicle2.GetPedOnSeat(VehicleSeat.Driver));
          vehicle2.SetMod(VehicleMod.Roof, 0, true);
          Prop prop2 = World.CreateProp(this.RequestModel("ch_prop_casino_drone_02a"), vehicle2.Position, vehicle2.Rotation, false, false);
          prop2.SetNoCollision((Entity) vehicle2, true);
          vehicle2.SetNoCollision((Entity) prop2, true);
          prop2.LodDistance = 3000;
          this.ArcadeMissionProps.Add(prop2);
          vehicle2.Position = new Vector3(vehicle2.Position.X, vehicle2.Position.Y, World.GetGroundHeight(vehicle2.Position) + 500f);
          vehicle2.IsVisible = false;
          vehicle2.AddBlip();
          vehicle2.CurrentBlip.Sprite = BlipSprite.HelicopterAnimated;
          vehicle2.CurrentBlip.Color = BlipColor.Blue4;
          vehicle2.CurrentBlip.Name = "Destroy LSPD Drone";
          Vehicle vehicle3 = World.CreateVehicle(this.RequestModel(VehicleHash.Havok), this.ArcadeRandomLoc.Around(50f), 20f);
          vehicle3.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
          this.ArcadeMissionVehicles.Add(vehicle3);
          this.ArcadeMissionPeds.Add(vehicle3.GetPedOnSeat(VehicleSeat.Driver));
          vehicle3.SetMod(VehicleMod.Roof, 0, true);
          Prop prop3 = World.CreateProp(this.RequestModel("ch_prop_casino_drone_02a"), vehicle3.Position, vehicle3.Rotation, false, false);
          prop3.SetNoCollision((Entity) vehicle3, true);
          vehicle3.SetNoCollision((Entity) prop3, true);
          prop3.LodDistance = 3000;
          this.ArcadeMissionProps.Add(prop3);
          vehicle3.Position = new Vector3(vehicle3.Position.X, vehicle3.Position.Y, World.GetGroundHeight(vehicle3.Position) + 500f);
          vehicle3.IsVisible = false;
          vehicle3.AddBlip();
          vehicle3.CurrentBlip.Sprite = BlipSprite.HelicopterAnimated;
          vehicle3.CurrentBlip.Color = BlipColor.Blue4;
          vehicle3.CurrentBlip.Name = "Destroy LSPD Drone";
          foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
          {
            if ((Entity) arcadeMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) arcadeMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) arcadeMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) arcadeMissionPed, (InputArgument) 1);
              arcadeMissionPed.Task.FightAgainst(Game.Player.Character);
            }
          }
          this.ArcadeMissionComplete = false;
          UI.Notify(this.GetHostName() + " : the LSPD are on to us!, they have sent 3 small airborne drones to our Arcade, Destory them!");
          this.Missionnum = 441;
          this.VehicleSetup = true;
        }
        if (item != Mission5)
          return;
        if (this.ArcadeMissionBlip != (Blip) null)
          this.ArcadeMissionBlip.Remove();
        if (this.ArcadeMissionBlip1 != (Blip) null)
          this.ArcadeMissionBlip1.Remove();
        if (this.ArcadeMissionBlip2 != (Blip) null)
          this.ArcadeMissionBlip2.Remove();
        if (this.ArcadeMissionBlip3 != (Blip) null)
          this.ArcadeMissionBlip3.Remove();
        foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
        {
          if ((Entity) arcadeMissionProp != (Entity) null)
            arcadeMissionProp.Delete();
        }
        foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
        {
          if ((Entity) arcadeMissionVehicle != (Entity) null)
            arcadeMissionVehicle.Delete();
        }
        foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
        {
          if ((Entity) arcadeMissionPed != (Entity) null)
            arcadeMissionPed.Delete();
        }
        this.ArcadeMissionProps.Clear();
        this.ArcadeMissionVehicles.Clear();
        this.ArcadeMissionPeds.Clear();
        this.ArcadeRandomLoc = new Vector3(-427.61f, -774.72f, 129f).Around(200f);
        Vehicle vehicle4 = World.CreateVehicle(this.RequestModel(VehicleHash.Cheetah2), this.ArcadeRandomLoc.Around(50f), 20f);
        vehicle4.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
        this.ArcadeMissionVehicles.Add(vehicle4);
        this.ArcadeMissionPeds.Add(vehicle4.GetPedOnSeat(VehicleSeat.Driver));
        vehicle4.PlaceOnNextStreet();
        vehicle4.AddBlip();
        vehicle4.CurrentBlip.Sprite = BlipSprite.SportsCar;
        vehicle4.CurrentBlip.Color = BlipColor.Yellow;
        vehicle4.CurrentBlip.Name = "Steal Vehicle";
        this.RetreiveVehicle1 = vehicle4;
        Vehicle vehicle5 = World.CreateVehicle(this.RequestModel(VehicleHash.Infernus2), this.ArcadeRandomLoc.Around(50f), 20f);
        vehicle5.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
        this.ArcadeMissionVehicles.Add(vehicle5);
        this.ArcadeMissionPeds.Add(vehicle5.GetPedOnSeat(VehicleSeat.Driver));
        vehicle5.PlaceOnNextStreet();
        vehicle5.AddBlip();
        vehicle5.CurrentBlip.Sprite = BlipSprite.SportsCar;
        vehicle5.CurrentBlip.Color = BlipColor.Yellow;
        vehicle5.CurrentBlip.Name = "Steal Vehicle";
        this.RetreiveVehicle2 = vehicle5;
        Vehicle vehicle6 = World.CreateVehicle(this.RequestModel(VehicleHash.Deluxo), this.ArcadeRandomLoc.Around(50f), 20f);
        vehicle6.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Autoshop01SMM));
        this.ArcadeMissionVehicles.Add(vehicle6);
        this.ArcadeMissionPeds.Add(vehicle6.GetPedOnSeat(VehicleSeat.Driver));
        vehicle6.PlaceOnNextStreet();
        vehicle6.AddBlip();
        vehicle6.CurrentBlip.Sprite = BlipSprite.SportsCar;
        vehicle6.CurrentBlip.Color = BlipColor.Yellow;
        vehicle6.CurrentBlip.Name = "Steal Vehicle";
        this.RetreiveVehicle3 = vehicle6;
        foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
        {
          if ((Entity) arcadeMissionPed != (Entity) null)
            arcadeMissionPed.Task.FleeFrom(Game.Player.Character);
        }
        this.RetreivedVehicle1 = false;
        this.RetreivedVehicle2 = false;
        this.RetreivedVehicle3 = false;
        this.ArcadeMissionComplete = false;
        UI.Notify(this.GetHostName() + " : We have spotted 3 Retro Cars!, steal them and return them to the Arcade Garage, for a reward");
        this.Missionnum = 541;
        this.VehicleSetup = true;
      });
    }

    public int CheckArcadeOwned() => this.ArcadeOwned;

    public Vector3 GetArcadeLoc()
    {
      Vector3 vector3 = new Vector3(0.0f, 0.0f, 0.0f);
      this.LoadIniFile2("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      if ((uint) this.ArcadeOwned > 0U)
      {
        if (this.Arcade != (Blip) null)
          this.Arcade.Remove();
        if (this.ArcadeVersion == 1)
        {
          this.ArcadeGarageEnter = new Vector3(-239.8f, 6230.6f, 30.7f);
          this.ArcadeBusinessEnter = new Vector3(-248.5227f, 6211.846f, 30.7f);
        }
        if (this.ArcadeVersion == 2)
        {
          this.ArcadeGarageEnter = new Vector3(1712.3f, 4756.4f, 40.5f);
          this.ArcadeBusinessEnter = new Vector3(1694.762f, 4785.07f, 40.5f);
        }
        if (this.ArcadeVersion == 3)
        {
          this.ArcadeGarageEnter = new Vector3(723.3f, -822.1f, 23.2f);
          this.ArcadeBusinessEnter = new Vector3(759.1611f, -815.9539f, 25.2f);
        }
        if (this.ArcadeVersion == 4)
        {
          this.ArcadeGarageEnter = new Vector3(-104.6f, -1776.4f, 28.1f);
          this.ArcadeBusinessEnter = new Vector3(-116.6468f, -1772.006f, 28.5f);
        }
        if (this.ArcadeVersion == 5)
        {
          this.ArcadeGarageEnter = new Vector3(-1288.7f, -274.6f, 37.8f);
          this.ArcadeBusinessEnter = new Vector3(-1269.125f, -305.5237f, 36f);
        }
        if (this.ArcadeVersion == 6)
        {
          this.ArcadeGarageEnter = new Vector3(-618.2f, 282.6f, 80.5f);
          this.ArcadeBusinessEnter = new Vector3(-599.4969f, 279.7799f, 80.5f);
        }
      }
      return this.ArcadeGarageEnter;
    }

    public Class1(bool Loc)
    {
      this.LoadIniFile2("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
    }

    public Class1()
    {
      this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
      if (!this.IsScriptEnabled)
        return;
      this.Allstocks = new AllStocks();
      this.LoadIniFile2("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.CreateBanner();
      this.Setup();
      this.Aborted += new EventHandler(this.OnShutdown);
      this.Tick += new EventHandler(this.OnTick);
      this.Interval = 1;
      this.AddSeatPos();
      this.ReReadIni();
      this.DrinkPosPent.Add(new Vector3(944.2045f, 14.49989f, 115f));
      this.DrinkPosRot.Add(-125f);
      this.DrinkPosPent.Add(new Vector3(977.7616f, 69.39769f, 115f));
      this.DrinkPosRot.Add(-31f);
      this.DrinkPosPent.Add(new Vector3(1115.319f, 209.0317f, -50.5f));
      this.DrinkPosRot.Add(104f);
      this.DrinkPosPent.Add(new Vector3(958.1388f, 69.27679f, 111.8f));
      this.DrinkPosRot.Add(104f);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_0_dlc_casino_main_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_2_dlc_casino_garage_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_4_dlc_casino_carpark_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_penthouse");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_carpark");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_main");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_garage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_0_dlc_casino_main_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_2_dlc_casino_garage_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_4_dlc_casino_carpark_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_penthouse");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_carpark");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_main");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_garage");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_9_dlc_casino_shaft_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_8_dlc_tunnel_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_6_dlc_casino_vault_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_5_dlc_casino_loading_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_4_dlc_casino_hotel_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_3_dlc_casino_back_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_2_dlc_plan_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_1_dlc_arcade_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ch_int_placement_ch_interior_0_dlc_casino_heist_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_9_dlc_casino_shaft_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_8_dlc_tunnel_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_6_dlc_casino_vault_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_5_dlc_casino_loading_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_4_dlc_casino_hotel_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_3_dlc_casino_back_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_2_dlc_plan_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_1_dlc_arcade_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ch_int_placement_ch_interior_0_dlc_casino_heist_milo_");
      Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 1100.0, (InputArgument) 220.0, (InputArgument) -50.0);
      Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 1380.0, (InputArgument) 200.0, (InputArgument) -50.0);
      Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 1295.0, (InputArgument) 230.0, (InputArgument) -50.0);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364, (InputArgument) 70.29476, (InputArgument) 115.1641);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Bar_Clutter");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_1");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_2");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_after");
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Spa == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
      if (this.Penthouse_Spa == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
      if (this.Penthouse_Media == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Media == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_PokerDealer == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Dealer", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_PokerDealer == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer", (InputArgument) this.Penthouse_Colour);
      if (this.Penthouse_Arcade == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
      if (this.Penthouse_Arcade == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
      if (this.Penthouse_BarLight == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
      if (this.Penthouse_BarLight == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
      if (this.Penthouse_BarLight == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
      Prop[] nearbyProps = World.GetNearbyProps(new Vector3(975.3f, 53.8f, 116f), 5f);
      if ((uint) nearbyProps.Length > 0U)
      {
        foreach (Prop prop in nearbyProps)
        {
          if ((Entity) prop != (Entity) null)
            prop.Delete();
        }
      }
    }

    private void SaveCarToFile(string iniName)
    {
      try
      {
        this.CarConfig = ScriptSettings.Load(iniName);
        if (!File.Exists("scripts//HKH191sBusinessMods//DC&R//PrizeCar//" + this.PrizeCarDisplayName + ".ini"))
        {
          File.Create("scripts//HKH191sBusinessMods//DC&R//PrizeCar//" + this.PrizeCarDisplayName + ".ini");
          this.CarConfig = ScriptSettings.Load(iniName);
          this.PrizeCarUnlocked = 0;
          this.CarConfig.SetValue<int>("Vehicle", "Unlocked", this.PrizeCarUnlocked);
          this.CarConfig.Save();
        }
        try
        {
          this.PrizeCarUnlocked = this.CarConfig.GetValue<int>("Vehicle", "Unlocked", this.PrizeCarUnlocked);
        }
        catch
        {
          this.PrizeCarUnlocked = 0;
          this.CarConfig.SetValue<int>("Vehicle", "Unlocked", this.PrizeCarUnlocked);
          this.CarConfig.Save();
        }
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    private void LoadIniFile(string iniName)
    {
      try
      {
        this.Config = ScriptSettings.Load(iniName);
        this.Key1 = this.Config.GetValue<Keys>("Configurations", "Key1", this.Key1);
        this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
        this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
        this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
        this.HostName = this.Config.GetValue<string>("Misc", "HostName", this.HostName);
        this.Blip_Colour = this.Config.GetValue<BlipColor>("Misc", "Blip_Colour", this.Blip_Colour);
        this.Uicolour = this.Config.GetValue<string>("Misc", "Uicolour", this.Uicolour);
        this.MarkerColorString = this.Config.GetValue<string>("Misc", "MarkerColor", this.MarkerColorString);
        this.MainScreensAnimTex = this.Config.GetValue<string>("Misc", "MainScreensAnimTex", this.MainScreensAnimTex);
        this.PenthouseScreensAnimTex = this.Config.GetValue<string>("Misc", "PenthouseScreensAnimTex", this.PenthouseScreensAnimTex);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1004.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1004.\u003C\u003Ep__0 = CallSite<Func<CallSite, ScriptSettings, string, string, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetValue", (IEnumerable<System.Type>) new System.Type[1]
          {
            typeof (object)
          }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.AssistantPedModel = Class1.\u003C\u003Eo__1004.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1004.\u003C\u003Ep__0, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
        this.AssistantPedModelType = this.Config.GetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
        if (this.MarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.MarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.MarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.MarkerColorString.Contains("ARGB"))
          this.MarkerColor = Color.FromName(this.MarkerColorString);
        this.Casino_level = this.Config.GetValue<int>("Setup", "Casinoi_Upgrade_Level", this.Casino_level);
        this.Chips_Amount = this.Config.GetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Mp = this.Config.GetValue<float>("Setup", "Chips_Multiplier", this.Mp);
        this.ThraxUnlocked = this.Config.GetValue<int>("Setup", "ThraxUnlocked", this.ThraxUnlocked);
        this.Dis_Unlocked = this.Config.GetValue<int>("Setup", "Dis_Unlocked", this.Dis_Unlocked);
        this.Penthouse_Style = this.Config.GetValue<int>("Penthouse", "Penthouse_Style", this.Penthouse_Style);
        this.Penthouse_Media = this.Config.GetValue<int>("Penthouse", "Penthouse_Media", this.Penthouse_Media);
        this.Penthouse_Spa = this.Config.GetValue<int>("Penthouse", "Penthouse_Spa", this.Penthouse_Spa);
        this.Penthouse_Bar = this.Config.GetValue<int>("Penthouse", "Penthouse_Bar", this.Penthouse_Bar);
        this.Penthouse_Colour = this.Config.GetValue<int>("Penthouse", "Penthouse_Colour", this.Penthouse_Colour);
        this.Penthouse_Arcade = this.Config.GetValue<int>("Penthouse", "Penthouse_Arcade", this.Penthouse_Arcade);
        this.Penthouse_BarLight = this.Config.GetValue<int>("Penthouse", "Penthouse_BarLight", this.Penthouse_BarLight);
        this.Penthouse_PokerDealer = this.Config.GetValue<int>("Penthouse", "Penthouse_PokerDealer", this.Penthouse_PokerDealer);
        this.Penthouse_ExtraBedroom = this.Config.GetValue<int>("Penthouse", "Penthouse_ExtraBedroom", this.Penthouse_ExtraBedroom);
        this.PedType = this.Config.GetValue<int>("Penthouse", "PedType", this.PedType);
        this.PedType2 = this.Config.GetValue<int>("Penthouse", "TerracePedType", this.PedType2);
        this.PartyPedChance = this.Config.GetValue<int>("Penthouse", "PartyPedChance", this.PartyPedChance);
        this.PoolPedChance = this.Config.GetValue<int>("Penthouse", "PoolPedChance", this.PoolPedChance);
        this.SunbatherPedChamce = this.Config.GetValue<int>("Penthouse", "SunbatherPedChamce", this.SunbatherPedChamce);
        this.BarPeds = this.Config.GetValue<bool>("Interior Peds", "BarPeds", this.BarPeds);
        this.SlotPeds = this.Config.GetValue<bool>("Interior Peds", "SlotPeds", this.SlotPeds);
        this.MiscPedsEnabled = this.Config.GetValue<bool>("Interior Peds", "MiscPedsEnabled", this.MiscPedsEnabled);
        this.MainPeds = this.Config.GetValue<bool>("Interior Peds", "MainPeds", this.MainPeds);
        this.RandomWanderPeds = this.Config.GetValue<bool>("Interior Peds", "RandomWanderPeds", this.RandomWanderPeds);
        this.MainWanderPeds = this.Config.GetValue<bool>("Interior Peds", "MainWanderPeds", this.MainWanderPeds);
        this.PlayerDeck = this.Config.GetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
        this.EliteDeckUnlocked = this.Config.GetValue<int>("CardDeck", "EliteDeckUnlocked", this.EliteDeckUnlocked);
        this.TMDUnlocked = this.Config.GetValue<int>("CardDeck -TMD", "TMDUnlocked", this.TMDUnlocked);
        this.TMD_UseNormalDeckCards = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseNormalDeckCards", this.TMD_UseNormalDeckCards);
        this.TMD_UseEliteDeckCards = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseEliteDeckCards", this.TMD_UseEliteDeckCards);
        this.TMD_UseAce = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseAce", this.TMD_UseAce);
        this.TMD_UseKing = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseKing", this.TMD_UseKing);
        this.TMD_UseQueen = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseQueen", this.TMD_UseQueen);
        this.TMD_UseJack = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseJack", this.TMD_UseJack);
        this.TMD_Use02 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use02", this.TMD_Use02);
        this.TMD_Use03 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use03", this.TMD_Use03);
        this.TMD_Use04 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use04", this.TMD_Use04);
        this.TMD_Use05 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use05", this.TMD_Use05);
        this.TMD_Use06 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use06", this.TMD_Use06);
        this.TMD_Use07 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use07", this.TMD_Use07);
        this.TMD_Use08 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use08", this.TMD_Use08);
        this.TMD_Use09 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use09", this.TMD_Use09);
        this.TMD_Use10 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use10", this.TMD_Use10);
        this.TMD_Dealer = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Dealer", this.TMD_Dealer);
        this.ArcadeOwned = -1;
        this.ArcadeOwned = this.Config.GetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
        this.ArcadeVersion = this.Config.GetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
        this.ArcadeBusinessLevel = this.Config.GetValue<int>("Arcade", "ArcadeBusinessLevel", this.ArcadeBusinessLevel);
        this.ArcadeFloodID = this.Config.GetValue<int>("Arcade", "ArcadeFloodID", this.ArcadeFloodID);
        this.ArcadeStyle = this.Config.GetValue<int>("Arcade", "ArcadeStyle", this.ArcadeStyle);
        this.MuralID = this.Config.GetValue<int>("Arcade", "MuralID", this.MuralID);
        this.PushieID = this.Config.GetValue<int>("Arcade", "PushieID", this.PushieID);
        this.NeonArtID = this.Config.GetValue<int>("Arcade", "NeonArtID", this.NeonArtID);
        this.ArcadeClutter = this.Config.GetValue<bool>("Arcade", "ArcadeClutter", this.ArcadeClutter);
        this.UnlockedDilllEquipment = this.Config.GetValue<int>("Arcade", "UnlockedDilllEquipment", this.UnlockedDilllEquipment);
        this.UnlockedHackingEquipment = this.Config.GetValue<int>("Arcade", "UnlockedHackingEquipment", this.UnlockedHackingEquipment);
        this.UnlockedBreachingEquipment = this.Config.GetValue<int>("Arcade", "UnlockedBreachingEquipment", this.UnlockedBreachingEquipment);
        this.UnlockedOutfitsEquipment = this.Config.GetValue<int>("Arcade", "UnlockedOutfitsEquipment", this.UnlockedOutfitsEquipment);
        this.UnlockedPlansEquipment = this.Config.GetValue<int>("Arcade", "UnlockedPlansEquipment", this.UnlockedPlansEquipment);
        this.UnlockedGarage = this.Config.GetValue<int>("Arcade", "UnlockedGarage", this.UnlockedGarage);
        this.UnlockedGunlocker = this.Config.GetValue<int>("Arcade", "UnlockedGunlocker", this.UnlockedGunlocker);
        this.ArcadeMoneyVault = this.Config.GetValue<int>("Arcade", "ArcadeMoneyVault", this.ArcadeMoneyVault);
        this.UndergrondAreaLocked = this.Config.GetValue<int>("Arcade", "UndergrondAreaLocked", this.UndergrondAreaLocked);
        this.Arcade1Ver = this.Config.GetValue<int>("Arcade", "Arcade1Ver", this.Arcade1Ver);
        this.Arcade2Ver = this.Config.GetValue<int>("Arcade", "Arcade2Ver", this.Arcade2Ver);
        this.Arcade3Ver = this.Config.GetValue<int>("Arcade", "Arcade3Ver", this.Arcade3Ver);
        this.Arcade4Ver = this.Config.GetValue<int>("Arcade", "Arcade4Ver", this.Arcade4Ver);
        this.Arcade5Ver = this.Config.GetValue<int>("Arcade", "Arcade5Ver", this.Arcade5Ver);
        this.Arcade6Ver = this.Config.GetValue<int>("Arcade", "Arcade6Ver", this.Arcade6Ver);
        this.Arcade7Ver = this.Config.GetValue<int>("Arcade", "Arcade7Ver", this.Arcade7Ver);
        this.Arcade8Ver = this.Config.GetValue<int>("Arcade", "Arcade8Ver", this.Arcade8Ver);
        this.Arcade9Ver = this.Config.GetValue<int>("Arcade", "Arcade9Ver", this.Arcade9Ver);
        this.Arcade10Ver = this.Config.GetValue<int>("Arcade", "Arcade10Ver", this.Arcade10Ver);
        this.Arcade11Ver = this.Config.GetValue<int>("Arcade", "Arcade11Ver", this.Arcade11Ver);
        this.Arcade12Ver = this.Config.GetValue<int>("Arcade", "Arcade12Ver", this.Arcade12Ver);
        this.Arcade13Ver = this.Config.GetValue<int>("Arcade", "Arcade13Ver", this.Arcade13Ver);
        this.Arcade14Ver = this.Config.GetValue<int>("Arcade", "Arcade14Ver", this.Arcade14Ver);
        this.Arcade15Ver = this.Config.GetValue<int>("Arcade", "Arcade15Ver", this.Arcade15Ver);
        this.Arcade16Ver = this.Config.GetValue<int>("Arcade", "Arcade16Ver", this.Arcade16Ver);
        this.Arcade17Ver = this.Config.GetValue<int>("Arcade", "Arcade17Ver", this.Arcade17Ver);
        this.Arcade18Ver = this.Config.GetValue<int>("Arcade", "Arcade18Ver", this.Arcade18Ver);
        this.Arcade19Ver = this.Config.GetValue<int>("Arcade", "Arcade19Ver", this.Arcade19Ver);
        this.Arcade20Ver = this.Config.GetValue<int>("Arcade", "Arcade20Ver", this.Arcade20Ver);
        this.PlayRadioMusic = this.Config.GetValue<bool>("Arcade", "PlayRadioMusic", this.PlayRadioMusic);
        this.DefaultRadioStation = this.Config.GetValue<string>("Arcade", "DefaultRadioStation", this.DefaultRadioStation);
        this.CurrentRadioStation = this.Config.GetValue<int>("Arcade", "CurrentRadioStation", this.CurrentRadioStation);
        this.RadioOn = this.Config.GetValue<bool>("Arcade", "RadioOn", this.RadioOn);
        this.ChairPropModelMain = this.Config.GetValue<string>("Chair Model", "ChairPropModelMain", this.ChairPropModelMain);
        this.ChairPropModelArcadeA = this.Config.GetValue<string>("Chair Model", "ChairPropModelArcadeA", this.ChairPropModelArcadeA);
        this.ChairPropModelArcadeB = this.Config.GetValue<string>("Chair Model", "ChairPropModelArcadeB", this.ChairPropModelArcadeB);
        this.ChairPropModelPenthouse = this.Config.GetValue<string>("Chair Model", "ChairPropModelPenthouse", this.ChairPropModelPenthouse);
        if ((uint) this.ArcadeOwned > 0U)
        {
          if (this.Arcade != (Blip) null)
            this.Arcade.Remove();
          if (this.ArcadeVersion == 1)
          {
            this.ArcadeGarageEnter = new Vector3(-239.8f, 6230.6f, 30.7f);
            this.ArcadeBusinessEnter = new Vector3(-248.5227f, 6211.846f, 30.7f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
          if (this.ArcadeVersion == 2)
          {
            this.ArcadeGarageEnter = new Vector3(1712.3f, 4756.4f, 40.5f);
            this.ArcadeBusinessEnter = new Vector3(1694.762f, 4785.07f, 40.5f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
          if (this.ArcadeVersion == 3)
          {
            this.ArcadeGarageEnter = new Vector3(723.3f, -822.1f, 23.2f);
            this.ArcadeBusinessEnter = new Vector3(759.1611f, -815.9539f, 25.2f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
          if (this.ArcadeVersion == 4)
          {
            this.ArcadeGarageEnter = new Vector3(-104.6f, -1776.4f, 28.1f);
            this.ArcadeBusinessEnter = new Vector3(-116.6468f, -1772.006f, 28.5f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
          if (this.ArcadeVersion == 5)
          {
            this.ArcadeGarageEnter = new Vector3(-1288.7f, -274.6f, 37.8f);
            this.ArcadeBusinessEnter = new Vector3(-1269.125f, -305.5237f, 36f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
          if (this.ArcadeVersion == 6)
          {
            this.ArcadeGarageEnter = new Vector3(-618.2f, 282.6f, 80.5f);
            this.ArcadeBusinessEnter = new Vector3(-599.4969f, 279.7799f, 80.5f);
            this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
            this.Arcade.Sprite = BlipSprite.RCWorkshop;
            this.Arcade.Color = this.Blip_Colour;
            this.Arcade.Name = "Arcade Subbusiness";
            this.Arcade.IsShortRange = true;
          }
        }
        this.ArtPropName_1 = this.Config.GetValue<string>("Art", "ArtPropName_1", this.ArtPropName_1);
        this.ArtPropName_2 = this.Config.GetValue<string>("Art", "ArtPropName_2", this.ArtPropName_2);
        this.ArtPropName_3 = this.Config.GetValue<string>("Art", "ArtPropName_3", this.ArtPropName_3);
        this.ArtPropName_4 = this.Config.GetValue<string>("Art", "ArtPropName_4", this.ArtPropName_4);
        this.ArtPropName_5 = this.Config.GetValue<string>("Art", "ArtPropName_5", this.ArtPropName_5);
        this.ArtPropName_6 = this.Config.GetValue<string>("Art", "ArtPropName_6", this.ArtPropName_6);
        this.ArtPropName_7 = this.Config.GetValue<string>("Art", "ArtPropName_7", this.ArtPropName_7);
        this.ArtPropName_8 = this.Config.GetValue<string>("Art", "ArtPropName_8", this.ArtPropName_8);
        this.ArtPropName_9 = this.Config.GetValue<string>("Art", "ArtPropName_9", this.ArtPropName_9);
        this.ArtPropName_10 = this.Config.GetValue<string>("Art", "ArtPropName_10", this.ArtPropName_10);
        this.ArtPropName_11 = this.Config.GetValue<string>("Art", "ArtPropName_11", this.ArtPropName_11);
        this.ArtPropName_12 = this.Config.GetValue<string>("Art", "ArtPropName_12", this.ArtPropName_12);
        this.ArtPropName_13 = this.Config.GetValue<string>("Art", "ArtPropName_13", this.ArtPropName_13);
        this.ArtPropName_14 = this.Config.GetValue<string>("Art", "ArtPropName_14", this.ArtPropName_14);
        try
        {
          for (int index = 0; index < 100; ++index)
            this.CustomTerracePeds.Add(this.Config.GetValue<PedHash>("Terrace-CustomPeds", "CustomPed_" + index.ToString(), PedHash.PornDudesCutscene));
        }
        catch
        {
        }
        this.MaxRaiseAmt = this.Config.GetValue<float>("8PlayerPoker", "MaxRaiseAmt", this.MaxRaiseAmt);
        this._8PlayerGamePoker_PlayerStartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_PlayerStartingBank);
        this._8PlayerGamePoker_AI1StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI1StartingBank);
        this._8PlayerGamePoker_AI2StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI2StartingBank);
        this._8PlayerGamePoker_AI3StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI3StartingBank);
        this._8PlayerGamePoker_AI4StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI4StartingBank);
        this._8PlayerGamePoker_AI5StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI5StartingBank);
        this._8PlayerGamePoker_AI6StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI6StartingBank);
        this._8PlayerGamePoker_AI7StartingBank = this.Config.GetValue<float>("8PlayerPoker", "StartingBank", this._8PlayerGamePoker_AI7StartingBank);
        this.maxstocks = 10 * this.purchaselvl;
        float num = (float) (125000 * this.purchaselvl) / 0.75f;
        this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
        this.increaseGain = num;
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Main.ini Failed To Load.");
      }
    }

    private void LoadIniFile2(string iniName)
    {
      try
      {
        this.Config2 = ScriptSettings.Load(iniName);
        try
        {
          this.NextDay = this.Config2.GetValue<int>("Setup", "NextDay", this.NextDay);
          this.NextMonth = this.Config2.GetValue<int>("Setup", "NextMonth", this.NextMonth);
          this.NextYear = this.Config2.GetValue<int>("Setup", "NextYear", this.NextYear);
          this.DaysWait = this.Config2.GetValue<int>("Setup", "DaysWait", this.DaysWait);
          this.BYPASS_NOSAVE_OR_CRASH = this.Config2.GetValue<bool>("Setup", "BYPASS_NOSAVE_OR_CRASH", this.BYPASS_NOSAVE_OR_CRASH);
          this.DAYSTORESET_UPDATETIME = this.Config2.GetValue<int>("Setup", "DAYSTORESET_UPDATETIME", this.DAYSTORESET_UPDATETIME);
          this.SpinsPerIncrease = this.Config2.GetValue<int>("Setup", "SpinsPerIncrease", this.SpinsPerIncrease);
          this.MaxSpins = this.Config2.GetValue<int>("Setup", "MaxSpins", this.MaxSpins);
        }
        catch (Exception ex)
        {
          this.NextDay = 10;
          this.Config2.SetValue<int>("Setup", "NextDay", this.NextDay);
          this.NextMonth = 10;
          this.Config2.SetValue<int>("Setup", "NextMonth", this.NextMonth);
          this.NextYear = 2010;
          this.Config2.SetValue<int>("Setup", "NextYear", this.NextYear);
          this.DaysWait = 3;
          this.Config2.SetValue<int>("Setup", "DaysWait", this.DaysWait);
          this.BYPASS_NOSAVE_OR_CRASH = true;
          this.Config2.SetValue<bool>("Setup", "BYPASS_NOSAVE_OR_CRASH", this.BYPASS_NOSAVE_OR_CRASH);
          this.DAYSTORESET_UPDATETIME = 12;
          this.Config2.SetValue<int>("Setup", "DAYSTORESET_UPDATETIME", this.DAYSTORESET_UPDATETIME);
          this.MaxSpins = 3;
          this.Config2.SetValue<int>("Setup", "MaxSpins", this.MaxSpins);
          this.SpinsPerIncrease = this.MaxSpins;
          this.Config2.SetValue<int>("Setup", "SpinsPerIncrease", this.SpinsPerIncrease);
          this.Config2.Save();
        }
        ScriptSettings config2 = this.Config2;
        this.BusinessUpgradeIncreaseGain = this.Config2.GetValue<float>("Prices", "BusinessUpgradeIncreaseGain", this.BusinessUpgradeIncreaseGain);
        this.BusinessUpgradeBasePrice = this.Config2.GetValue<float>("Prices", "BusinessUpgradeBasePrice", this.BusinessUpgradeBasePrice);
        this.IncreaseStockMinAmount = this.Config2.GetValue<float>("Prices", "IncreaseStockMinAmount", this.IncreaseStockMinAmount);
        this.IncreaseStockMaxAmount = this.Config2.GetValue<float>("Prices", "IncreaseStockMaxAmount", this.IncreaseStockMaxAmount);
        this.DecreaseStockMinAmount = this.Config2.GetValue<float>("Prices", "DecreaseStockMinAmount", this.DecreaseStockMinAmount);
        this.DecreaseStockMaxAmount = this.Config2.GetValue<float>("Prices", "DecreaseStockMaxAmount", this.DecreaseStockMaxAmount);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public void SetBanner(UIMenu menu) => menu.SetBannerType(this.RectangleGUI);

    public void CreateBanner()
    {
      this.RectangleGUI = new UIResRectangle();
      this.RectangleGUI.Color = Color.FromArgb((int) byte.MaxValue, 0, 0, 0);
    }

    private void Setup()
    {
      this.AddArcades();
      this.PLocations.Add((object) this.Art_POSITION1);
      this.PLocations.Add((object) this.Art_POSITION2);
      this.PLocations.Add((object) this.Art_POSITION3);
      this.PLocations.Add((object) this.Art_POSITION4);
      this.PLocations.Add((object) this.Art_POSITION5);
      this.PLocations.Add((object) this.Art_POSITION6);
      this.PLocations.Add((object) this.Art_POSITION7);
      this.PLocations.Add((object) this.Art_POSITION8);
      this.PLocations.Add((object) this.Art_POSITION9);
      this.PLocations.Add((object) this.Art_POSITION10);
      this.IsSittinginCeoSeat2 = false;
      this.IsSittinginCeoSeat = false;
      this.waittime = this.Allstocks.waittime;
      this.MarkerEnter = new Vector3(924.76f, 46.53f, 80.2f);
      this.MarkerExit = new Vector3(1089.677f, 205.8681f, -50f);
      this.CarSpawn = new Vector3(915.0286f, 51.88765f, 80f);
      this.VehicleSpawn = new Vector3(-36f, -939.158f, 29.5f);
      this.modMenuPool = new MenuPool();
      this.mainMenu = new UIMenu("DC&R Business", "Select an Option");
      this.GUIMenus.Add(this.mainMenu);
      this.modMenuPool.Add(this.mainMenu);
      this.MainStuffMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Purchase Options");
      this.GUIMenus.Add(this.MainStuffMenu);
      this.GUIMenus.Add(this.MainStuffMenu);
      this.methgarage = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Purchase Options");
      this.GUIMenus.Add(this.methgarage);
      this.GUIMenus.Add(this.methgarage);
      this.ProductStock = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Product Options");
      this.GUIMenus.Add(this.ProductStock);
      this.GUIMenus.Add(this.ProductStock);
      this.SpecialMissions = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Missions (Missions)");
      this.GUIMenus.Add(this.SpecialMissions);
      this.GUIMenus.Add(this.SpecialMissions);
      this.Garage = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Garage");
      this.GUIMenus.Add(this.Garage);
      this.GUIMenus.Add(this.Garage);
      this.ChipsMenu = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Chips Menu");
      this.GUIMenus.Add(this.ChipsMenu);
      this.GUIMenus.Add(this.ChipsMenu);
      this.Misc = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Misc");
      this.GUIMenus.Add(this.Misc);
      this.GUIMenus.Add(this.Misc);
      this.Chips_Menu = this.modMenuPool.AddSubMenu(this.mainMenu, "Arcade Chip Options");
      this.GUIMenus.Add(this.Chips_Menu);
      this.GUIMenus.Add(this.Chips_Menu);
      this.Casino_Menu = this.modMenuPool.AddSubMenu(this.mainMenu, "Membership Options");
      this.GUIMenus.Add(this.Casino_Menu);
      this.GUIMenus.Add(this.Casino_Menu);
      this.Pent_Menu = this.modMenuPool.AddSubMenu(this.mainMenu, "Penthouse Options");
      this.GUIMenus.Add(this.Pent_Menu);
      this.GUIMenus.Add(this.Pent_Menu);
      this.ArtMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Penthouse Options");
      this.GUIMenus.Add(this.ArtMenu);
      this.GUIMenus.Add(this.ArtMenu);
      this.DrinksMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Drinks");
      this.GUIMenus.Add(this.DrinksMenu);
      this.GUIMenus.Add(this.DrinksMenu);
      this.RaceMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Start");
      this.GUIMenus.Add(this.RaceMenu);
      this.GUIMenus.Add(this.RaceMenu);
      this.RemoveMenu2 = this.modMenuPool.AddSubMenu(this.mainMenu, "Remove A Vehicle");
      this.GUIMenus.Add(this.RemoveMenu2);
      this.GUIMenus.Add(this.RemoveMenu2);
      this.GarageMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Enter Garage");
      this.GUIMenus.Add(this.GarageMenu);
      this.GUIMenus.Add(this.GarageMenu);
      this.ArcadeC = this.modMenuPool.AddSubMenu(this.mainMenu, "Customize Arcade");
      this.GUIMenus.Add(this.ArcadeC);
      this.GUIMenus.Add(this.ArcadeC);
      this.ArcadeMissions = this.modMenuPool.AddSubMenu(this.ArcadeC, "Arcade Missions");
      this.GUIMenus.Add(this.ArcadeMissions);
      this.GUIMenus.Add(this.ArcadeMissions);
      this.GunlockerMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Customize Weapons");
      this.GUIMenus.Add(this.GunlockerMenu);
      this.GUIMenus.Add(this.GunlockerMenu);
      this.SetupRaceMenu();
      this.MiscMenu();
      this.Drinks();
      this.PenthouseOptions();
      this.Setupbuisness();
      this.SetupGarage();
      this.SetupProduct();
      this.CHipsM();
      this.SetupGames();
      this.CasinoOptions();
      this.ChipsOptions();
      this.SetupSpecialMissions();
      this.SetupArtMenu();
      this.SetupWeapons();
      this.ArcadeMissionsMethod();
      this.ArcadeInteriorOptions();
      this.SetupArcadeGarageEnterMenu();
      this.SetupArcadeGarageBuySellMenu();
      this.AddRatioStations();
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerEnter) < 50.0)
      {
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) this.Design);
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.392, (InputArgument) -621.0451, (InputArgument) 168.8204));
      }
      this.DropPoint.Add(new Vector3(966f, -126f, 74f));
      this.DropPoint.Add(new Vector3(200f, 383f, 107f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-1539f, -76f, 53f));
      this.DropPoint.Add(new Vector3(-2077f, -313f, 12f));
      this.DropPoint.Add(new Vector3(-1451f, -364f, 43f));
      this.DropPoint.Add(new Vector3(-587f, -1112f, 22f));
      this.DropPoint.Add(new Vector3(102.6f, 6634.6f, 30f));
      this.DropPoint.Add(new Vector3(-172.8f, 6452.8f, 29f));
      this.DropPoint.Add(new Vector3(-265.1f, 6335.5f, 30f));
      this.DropPoint.Add(new Vector3(-697.3f, 5772.9f, 15f));
      this.DropPoint.Add(new Vector3(-575.2f, 5335.6f, 68f));
      this.DropPoint.Add(new Vector3(35.9f, 6284.5f, 29f));
      this.DropPoint.Add(new Vector3(1724f, 6399.4f, 31f));
      this.DropPoint.Add(new Vector3(2467.7f, 4961.9f, 43f));
      this.DropPoint.Add(new Vector3(2104.9f, 4767.5f, 39f));
      this.DropPoint.Add(new Vector3(1501.6f, 3763.7f, 31f));
      this.DropPoint.Add(new Vector3(1374.5f, 3602.9f, 33f));
      this.DropPoint.Add(new Vector3(1689.4f, 3310.9f, 39f));
      this.DropPoint.Add(new Vector3(1989f, 3032f, 46f));
      this.DropPoint.Add(new Vector3(2320.1f, 2499.5f, 45f));
      this.DropPoint.Add(new Vector3(2365.2f, 2644.9f, 45f));
      this.DropPoint.Add(new Vector3(2411.1f, 3058.2f, 46f));
      this.DropPoint.Add(new Vector3(2812.8f, 1589.4f, 22f));
      this.DropPoint.Add(new Vector3(-1567.1f, 2770.7f, 15f));
      this.DropPoint.Add(new Vector3(-1911.4f, 2061f, 138f));
      this.DropPoint.Add(new Vector3(-310.8f, 2739.6f, 65f));
      this.DropPoint.Add(new Vector3(-288.5f, 2568.7f, 70f));
      this.DropPoint.Add(new Vector3(-85.6f, 2805.1f, 51f));
      this.DropPoint.Add(new Vector3(42.2f, 2786f, 56f));
      this.DropPoint.Add(new Vector3(216.7f, 2462.3f, 54f));
      this.SeatPos.Add(new Vector3(960.0099f, 42.7899f, 114.8f));
      this.SeatRot.Add(-36f);
      this.SeatPos.Add(new Vector3(961.0356f, 48.80322f, 114.8f));
      this.SeatRot.Add(-125f);
      this.SeatPos.Add(new Vector3(964.3204f, 51.48433f, 114.8f));
      this.SeatRot.Add(136f);
      this.SeatPos.Add(new Vector3(968.1276f, 70.33726f, 114.8f));
      this.SeatRot.Add(-32f);
      this.SeatPos.Add(new Vector3(965.5015f, 73.36767f, 114.8f));
      this.SeatRot.Add(-123f);
      this.SeatPos.Add(new Vector3(973.2695f, 82.62019f, 114.8f));
      this.SeatRot.Add(147f);
      this.SeatPos.Add(new Vector3(947.4011f, 23.77968f, 114.8f));
      this.SeatRot.Add(-38f);
      this.SeatPos.Add(new Vector3(950.9106f, 18.32446f, 114.8f));
      this.SeatRot.Add(32f);
      this.SeatPos.Add(new Vector3(953.0781f, 19.32988f, 114.8f));
      this.SeatRot.Add(-3f);
      this.SeatPos.Add(new Vector3(955.3398f, 18.84087f, 114.8f));
      this.SeatRot.Add(-20f);
      this.SeatPos.Add(new Vector3(940.7246f, 1.32643f, 114.8f));
      this.SeatRot.Add(68f);
      this.SeatPos.Add(new Vector3(942.3015f, 1.3715f, 114.8f));
      this.SeatRot.Add(-113f);
      this.SeatPos.Add(new Vector3(943.754f, -1.332707f, 114.8f));
      this.SeatRot.Add(-12f);
      this.SeatPos.Add(new Vector3(947.7684f, -0.6601002f, 114.8f));
      this.SeatRot.Add(29f);
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.WordrobePositions.Add(new Vector3(975.0374f, 64.997f, 115f));
      this.WordrobePositions.Add(new Vector3(977.4243f, 78.65495f, 115f));
      this.WordrobePositions.Add(new Vector3(959.9096f, 23.66869f, 115f));
      this.WordrobePositions.Add(new Vector3(984.4489f, 60.29456f, 115f));
      this.SHowerPositions.Add(new Vector3(979.4085f, 72.11459f, 115f));
      this.SHowerPositions.Add(new Vector3(981.0888f, 71.34532f, 115f));
      this.PenthouseGunLockerMarker = new Vector3(972.0834f, 40.92828f, 115f);
      this.PenthouseGLmodMenuPool = new MenuPool();
      this.All = new UIMenu("Select an Option", "Select an Option");
      this.GUIMenus.Add(this.All);
      this.PenthouseGLmodMenuPool.Add(this.All);
      this.PenthouseGLmainMenu = new UIMenu("Gunlocker", "Select an Option");
      this.GUIMenus.Add(this.PenthouseGLmainMenu);
      this.PenthouseGLmodMenuPool.Add(this.PenthouseGLmainMenu);
      this.PenthouseweaponsMenu = this.PenthouseGLmodMenuPool.AddSubMenu(this.All, "Weapons");
      this.GUIMenus.Add(this.PenthouseweaponsMenu);
      this.GUIMenus.Add(this.PenthouseweaponsMenu);
      this.PenthouseWoredrobeMainMenu = new UIMenu("Wardrobe", "Select an Option");
      this.GUIMenus.Add(this.PenthouseWoredrobeMainMenu);
      this.PenthouseGLmodMenuPool.Add(this.PenthouseWoredrobeMainMenu);
      this.PenthouseWoredrobeMenu = this.PenthouseGLmodMenuPool.AddSubMenu(this.All, "Change Clothes");
      this.GUIMenus.Add(this.PenthouseWoredrobeMenu);
      this.GUIMenus.Add(this.PenthouseWoredrobeMenu);
      this.currentbank = 1;
      this.PenthouseMmainMenu = new UIMenu("DC&R", "Select an Option");
      this.GUIMenus.Add(this.PenthouseMmainMenu);
      this.PenthouseGLmodMenuPool.Add(this.PenthouseMmainMenu);
      this.PenthouseMoneyMenu = this.PenthouseGLmodMenuPool.AddSubMenu(this.All, "Money Options");
      this.GUIMenus.Add(this.PenthouseMoneyMenu);
      this.GUIMenus.Add(this.PenthouseMoneyMenu);
      this.PenthouseSetupMoneyMenu();
      this.PenthouseSetupWeapons();
      this.PenthouseWareDrobe();
      this.PenthousesetupMarker();
      this.SetupMarker();
      for (int index = 0; index < this.GUIMenus.Count<UIMenu>(); ++index)
        this.SetBanner(this.GUIMenus[index]);
    }

    private void SetupMarker()
    {
      this.CreatedBlips = false;
      this.TowerBlip = World.CreateBlip(this.MarkerEnter);
      this.TowerBlip.Sprite = BlipSprite.Casino;
      if (this.purchaselvl >= 1)
      {
        this.TowerBlip.Color = this.Blip_Colour;
        this.TowerBlip.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.TowerBlip.Color = BlipColor.White;
        this.TowerBlip.Alpha = 0;
      }
      this.TowerBlip.Name = "Diamond Casino & Resort";
      this.TowerBlip.IsShortRange = true;
      if (this.Casino_level < 3)
        return;
      this.GarageBlip = World.CreateBlip(this.WherehouseMarker);
      this.GarageBlip.Sprite = BlipSprite.Garage;
      this.GarageBlip.Name = "DC&R Garage";
      this.GarageBlip.Color = this.Blip_Colour;
      this.GarageBlip.IsShortRange = true;
      if (this.purchaselvl >= 1)
      {
        this.GarageBlip.Sprite = BlipSprite.Garage;
        this.GarageBlip.Name = "DC&R Garage";
        this.GarageBlip.Color = this.Blip_Colour;
        this.GarageBlip.IsShortRange = true;
        this.GarageBlip.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.GarageBlip.Sprite = BlipSprite.Garage;
        this.GarageBlip.Name = "DC&R Garage";
        this.GarageBlip.Color = this.Blip_Colour;
        this.GarageBlip.IsShortRange = true;
        this.GarageBlip.Alpha = 0;
      }
    }

    public void ReReadIni() => this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");

    public void RefreshPenthouse()
    {
      try
      {
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364, (InputArgument) 70.29476, (InputArgument) 115.1641));
      }
      catch
      {
      }
      try
      {
        int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364, (InputArgument) 70.29476, (InputArgument) 115.1641);
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Bar_Clutter");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_03");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_1");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_2");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_after");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_GUEST_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_LOUNGE_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_OFFICE_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_CINE_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_SPA_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_BAR_BLOCKER");
      }
      catch
      {
      }
      try
      {
        int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364, (InputArgument) 70.29476, (InputArgument) 115.1641);
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
        if (this.Penthouse_Style == 0)
          Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
        if (this.Penthouse_Style == 1)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 2)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 3)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 4)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 5)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 6)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 7)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 8)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Style == 9)
        {
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
          if ((uint) this.Penthouse_Style > 0U)
          {
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09", (InputArgument) this.Penthouse_Colour);
            Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) this.Penthouse_Colour);
          }
        }
        if (this.Penthouse_Spa == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
        if (this.Penthouse_Spa == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
        if (this.Penthouse_Media == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
        Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open", (InputArgument) this.Penthouse_Colour);
        if (this.Penthouse_Media == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
        Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed", (InputArgument) this.Penthouse_Colour);
        if (this.Penthouse_PokerDealer == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
        Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Dealer", (InputArgument) this.Penthouse_Colour);
        if (this.Penthouse_PokerDealer == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
        Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer", (InputArgument) this.Penthouse_Colour);
        if (this.Penthouse_Arcade == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
        if (this.Penthouse_Arcade == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
        if (this.Penthouse_BarLight == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
        if (this.Penthouse_BarLight == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
        if (this.Penthouse_BarLight == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
        if (this.Penthouse_ExtraBedroom == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_GUEST_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_LOUNGE_BLOCKER");
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_OFFICE_BLOCKER");
        if (this.Penthouse_Media == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_CINE_BLOCKER");
        if (this.Penthouse_Spa == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_SPA_BLOCKER");
        if (this.Penthouse_Bar == 0)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_BAR_BLOCKER");
      }
      catch
      {
      }
      try
      {
        Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364, (InputArgument) 70.29476, (InputArgument) 115.1641);
      }
      catch
      {
      }
      try
      {
        Prop[] nearbyProps = World.GetNearbyProps(new Vector3(975.3f, 53.8f, 116f), 5f);
        if ((uint) nearbyProps.Length > 0U)
        {
          foreach (Prop prop in nearbyProps)
          {
            if ((Entity) prop != (Entity) null)
              prop.Delete();
          }
        }
      }
      catch
      {
      }
      try
      {
        foreach (Prop artProp in this.ArtProps)
        {
          if ((Entity) artProp != (Entity) null)
            artProp.Delete();
        }
        if (this.RemoveArt)
          ;
        if ((Entity) this.CurrentArtProp != (Entity) null)
          this.CurrentArtProp.Delete();
        if (this.RemoveArt)
          this.RemoveArt = false;
      }
      catch
      {
        UI.Notify("Error on 6");
      }
      try
      {
        bool flag = false;
        int num1 = 0;
        for (int index = 0; index < this.SculptLoc.Count; ++index)
        {
          this.Config.GetValue<string>("Art", "SculptPropName_" + index.ToString(), "null");
          this.Config.GetValue<int>("Art", "SculptPropRotationZ_" + index.ToString(), 0);
          try
          {
            int num2 = this.Config.GetValue<int>("Art", "SculptPropRotationZ_" + index.ToString(), 0);
            string Prop = this.Config.GetValue<string>("Art", "SculptPropName_" + index.ToString(), "null");
            if (!Prop.Equals("null") && !Prop.Equals("None"))
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__1014.\u003C\u003Ep__0 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__1014.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              Vector3 position = Class1.\u003C\u003Eo__1014.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1014.\u003C\u003Ep__0, this.SculptLoc[index]);
              position = new Vector3(position.X, position.Y, position.Z - 0.025f);
              Prop prop = World.CreateProp(this.RequestModel(Prop), position, true, false);
              prop.Rotation = new Vector3(0.0f, 0.0f, (float) num2);
              prop.FreezePosition = true;
              this.ArtProps.Add(prop);
            }
          }
          catch
          {
            ++num1;
            flag = true;
            UI.Notify("(~b~1~w~) Error, Found New Item " + index.ToString() + ",(~b~2~w~)Repairing Ini file, this may take some time");
            this.Config.SetValue<string>("Art", "SculptPropName_" + index.ToString(), "null");
            this.Config.SetValue<int>("Art", "SculptPropRotationZ_" + index.ToString(), 0);
            this.Config.Save();
          }
        }
        if (flag)
          UI.Notify("(~b~1~w~) Ini Repair Complete, (~b~2~w~) Found " + num1.ToString() + " Missing Files");
      }
      catch
      {
      }
      try
      {
        if (!this.ArtPropName_1.Equals("null") && !this.ArtPropName_1.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_1), this.Art_POSITION1, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, -33f);
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_2.Equals("null") && !this.ArtPropName_2.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_2), this.Art_POSITION2, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 146f);
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_3.Equals("null") && !this.ArtPropName_3.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_3), this.Art_POSITION3, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 146f);
          prop.GetOffsetInWorldCoords(new Vector3(-0.8f, 0.2f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_4.Equals("null") && !this.ArtPropName_4.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_4), this.Art_POSITION4, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 146f);
          prop.GetOffsetInWorldCoords(new Vector3(-0.8f, 0.2f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_5.Equals("null") && !this.ArtPropName_5.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_5), this.Art_POSITION5, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 146f);
          prop.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_6.Equals("null") && !this.ArtPropName_6.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_6), this.Art_POSITION6, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 61f);
          prop.GetOffsetInWorldCoords(new Vector3(0.0f, -0.8f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_7.Equals("null") && !this.ArtPropName_7.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_7), this.Art_POSITION7, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 61f);
          prop.GetOffsetInWorldCoords(new Vector3(0.0f, -0.8f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_8.Equals("null") && !this.ArtPropName_8.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_8), this.Art_POSITION8, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, -33f);
          prop.GetOffsetInWorldCoords(new Vector3(0.0f, -0.05f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_9.Equals("null") && !this.ArtPropName_9.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_9), this.Art_POSITION9, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, -33f);
          prop.GetOffsetInWorldCoords(new Vector3(0.0f, -0.02f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (!this.ArtPropName_10.Equals("null") && !this.ArtPropName_10.Equals("None"))
        {
          Prop prop = World.CreateProp(this.RequestModel(this.ArtPropName_10), this.Art_POSITION10, true, false);
          prop.Rotation = new Vector3(0.0f, 0.0f, 55f);
          prop.GetOffsetInWorldCoords(new Vector3(-0.8f, 0.2f, 0.0f));
          prop.FreezePosition = true;
          this.ArtProps.Add(prop);
        }
        if (this.ArtPropName_11.Equals("null") || this.ArtPropName_11.Equals("None"))
          return;
        Prop prop1 = World.CreateProp(this.RequestModel(this.ArtPropName_11), this.Art_POSITION11, true, false);
        prop1.Rotation = new Vector3(0.0f, 0.0f, 55f);
        prop1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.1f, 0.0f));
        prop1.FreezePosition = true;
        this.ArtProps.Add(prop1);
      }
      catch
      {
      }
    }

    public void DeletePentInterior()
    {
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364f, (InputArgument) 70.29476f, (InputArgument) 115.1641);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Bar_Clutter");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "Set_Pent_Clutter_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_1");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_2");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num, (InputArgument) "set_pent_bar_party_after");
    }

    public void ActiveInterior(
      int Style,
      int Spa,
      int Media,
      int PokerDealer,
      int Arcade,
      int ExtraBedroom,
      int Bar,
      int Colour)
    {
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_1_dlc_casino_apart_milo_");
      int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 976.6364f, (InputArgument) 70.29476f, (InputArgument) 115.1641);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Tint_Shell", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_01", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_02", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_03", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_04", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_05", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_06", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_07", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_08", (InputArgument) Colour);
      if (Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Pattern_09", (InputArgument) Colour);
      if (Spa == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Open");
      if (Spa == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Spa_Bar_Closed");
      if (Media == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Open");
      if (Media == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Media_Bar_Closed");
      if (PokerDealer == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Dealer");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_Dealer", (InputArgument) Colour);
      if (PokerDealer == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer");
      Function.Call((Hash) 3590001984630001091, (InputArgument) num, (InputArgument) "Set_Pent_NoDealer", (InputArgument) Colour);
      if (Arcade == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Retro");
      if (Arcade == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_Arcade_Modern");
      if (this.Penthouse_BarLight == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_0");
      if (this.Penthouse_BarLight == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_01");
      if (this.Penthouse_BarLight == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_light_02");
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "set_pent_bar_party_0");
      if (ExtraBedroom == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_GUEST_BLOCKER");
      if (Media == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_CINE_BLOCKER");
      if (Spa == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_SPA_BLOCKER");
      if (Bar != 0)
        return;
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num, (InputArgument) "Set_Pent_BAR_BLOCKER");
    }

    public void AttemptSpawn()
    {
      try
      {
      }
      catch
      {
        UI.Notify("~r~ Error on Load, Attempting again!");
        this.AttemptAgain();
      }
    }

    public void AttemptAgain()
    {
      Script.Wait(1000);
      this.AttemptSpawn();
    }

    public void GrabArtWork()
    {
      this.PaintProp.Add((object) "vw_prop_vw_wallart_01a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_02a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_03a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_04a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_05a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_06a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_07a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_08a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_09a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_10a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_11a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_12a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_14a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_15a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_16a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_17a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_18a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_19a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_20a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_21a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_22a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_23a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_24a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_25a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_26a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_28a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_29a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_30a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_31a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_32a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_33a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_34a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_35a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_36a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_37a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_38a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_39a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_40a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_41a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_42a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_43a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_44a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_46a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_47a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_48a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_49a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_50a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_51a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_52a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_53a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_54a_01a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_55a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_56a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_57a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_58a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_59a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_60a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_61a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_62a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_63a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_64a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_65a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_66a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_67a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_68a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_69a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_70a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_71a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_72a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_73a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_74a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_75a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_76a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_77a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_78a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_79a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_80a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_81a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_82a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_83a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_84a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_85a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_86a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_87a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_88a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_89a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_90a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_91a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_92a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_93a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_94a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_95a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_96a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_97a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_98a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_99a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_100a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_101a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_102a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_103a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_104a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_105a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_106a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_107a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_108a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_109a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_110a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_111a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_112a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_113a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_114a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_115a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_116a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_117a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_118a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_123a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_124a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_125a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_126a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_127a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_128a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_129a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_130a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_131a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_132a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_133a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_134a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_135a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_136a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_137a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_138a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_139a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_140a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_141a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_142a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_143a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_144a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_145a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_146a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_147a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_150a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151b");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151c");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151d");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151e");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_151f");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_152a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_153a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_154a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_155a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_156a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_157a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_158a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_159a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_160a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_161a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_162a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_163a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_164a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_165a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_166a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_167a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_168a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_169a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_170a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_171a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_172a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_173a");
      this.PaintProp.Add((object) "vw_prop_vw_wallart_174a");
    }

    public void GrabArtWork2()
    {
      this.SculptProp.Add((object) "vw_prop_casino_art_concrete_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_concrete_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_console_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_console_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_05a");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_05b");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_05c");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_09a");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_09b");
      this.SculptProp.Add((object) "vw_prop_casino_art_miniature_09c");
      this.SculptProp.Add((object) "vw_prop_casino_art_sculpture_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_sculpture_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_sculpture_02b");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_02b");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_03a");
      this.SculptProp.Add((object) "vw_prop_casino_art_skull_03b");
      this.SculptProp.Add((object) "vw_prop_casino_art_statue_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_statue_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_bird_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_03a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_04a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_05a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_06a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_07a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_08a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_09a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_10a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_11a");
      this.SculptProp.Add((object) "vw_prop_casino_art_car_12a");
      this.SculptProp.Add((object) "vw_prop_casino_art_cherries_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_deer_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_dog_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_egg_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_figurines_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_figurines_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_grenade_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_grenade_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_grenade_01c");
      this.SculptProp.Add((object) "vw_prop_casino_art_grenade_01d");
      this.SculptProp.Add((object) "vw_prop_casino_art_guitar_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_gun_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_gun_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_head_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_head_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_head_01c");
      this.SculptProp.Add((object) "vw_prop_casino_art_head_01d");
      this.SculptProp.Add((object) "vw_prop_casino_art_lampf_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_lampm_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_lollipop_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03a_a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03a_b");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03a_c");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03b");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03b_a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03b_b");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_03b_c");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_04a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_04b");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_04c");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_05a");
      this.SculptProp.Add((object) "vw_prop_casino_art_mod_06a");
      this.SculptProp.Add((object) "vw_prop_casino_art_pill_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_pill_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_pill_01c");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_03a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_04a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_05a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_06a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_07a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_08a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_09a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_10a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_11a");
      this.SculptProp.Add((object) "vw_prop_casino_art_plant_12a");
      this.SculptProp.Add((object) "vw_prop_casino_art_sh_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_statue_04a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_03a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_04a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_05a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_06a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_07a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_08a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_09a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_10a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_11a");
      this.SculptProp.Add((object) "vw_prop_casino_art_vase_12a");
      this.SculptProp.Add((object) "vw_prop_vw_plant_int_03a");
      this.SculptProp.Add((object) "vw_prop_art_football_01a");
      this.SculptProp.Add((object) "vw_prop_art_mic_01a");
      this.SculptProp.Add((object) "vw_prop_art_pug_01a");
      this.SculptProp.Add((object) "vw_prop_art_pug_01b");
      this.SculptProp.Add((object) "vw_prop_art_pug_02a");
      this.SculptProp.Add((object) "vw_prop_art_pug_02b");
      this.SculptProp.Add((object) "vw_prop_art_pug_03a");
      this.SculptProp.Add((object) "vw_prop_art_pug_03b");
      this.SculptProp.Add((object) "vw_prop_art_resin_balls_01a");
      this.SculptProp.Add((object) "vw_prop_art_resin_guns_01a");
      this.SculptProp.Add((object) "vw_prop_art_wall_segment_01a");
      this.SculptProp.Add((object) "vw_prop_art_wall_segment_02a");
      this.SculptProp.Add((object) "vw_prop_art_wall_segment_02b");
      this.SculptProp.Add((object) "vw_prop_art_wall_segment_03a");
      this.SculptProp.Add((object) "vw_prop_art_wings_01a");
      this.SculptProp.Add((object) "vw_prop_art_wings_01b");
      this.SculptProp.Add((object) "vw_prop_book_stack_01a");
      this.SculptProp.Add((object) "vw_prop_book_stack_01b");
      this.SculptProp.Add((object) "vw_prop_book_stack_01c");
      this.SculptProp.Add((object) "vw_prop_book_stack_02a");
      this.SculptProp.Add((object) "vw_prop_book_stack_02b");
      this.SculptProp.Add((object) "vw_prop_book_stack_02c");
      this.SculptProp.Add((object) "vw_prop_book_stack_03a");
      this.SculptProp.Add((object) "vw_prop_book_stack_03b");
      this.SculptProp.Add((object) "vw_prop_book_stack_03c");
      this.SculptProp.Add((object) "vw_prop_casino_art_basketball_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_basketball_02a");
      this.SculptProp.Add((object) "vw_prop_flowers_potted_01a");
      this.SculptProp.Add((object) "vw_prop_flowers_potted_02a");
      this.SculptProp.Add((object) "vw_prop_flowers_potted_03a");
      this.SculptProp.Add((object) "vw_prop_flowers_vase_01a");
      this.SculptProp.Add((object) "vw_prop_flowers_vase_02a");
      this.SculptProp.Add((object) "vw_prop_flowers_vase_03a");
      this.SculptProp.Add((object) "vw_prop_miniature_yacht_01a");
      this.SculptProp.Add((object) "vw_prop_miniature_yacht_01b");
      this.SculptProp.Add((object) "vw_prop_miniature_yacht_01c");
      this.SculptProp.Add((object) "vw_prop_plaque_01a");
      this.SculptProp.Add((object) "vw_prop_plaque_02a");
      this.SculptProp.Add((object) "vw_prop_plaque_02b");
      this.SculptProp.Add((object) "vw_prop_toy_sculpture_01a");
      this.SculptProp.Add((object) "vw_prop_toy_sculpture_02a");
      this.SculptProp.Add((object) "vw_prop_vw_pogo_gold_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_absman_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_bottle_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_bowling_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_bowling_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_bowling_02a");
      this.SculptProp.Add((object) "vw_prop_casino_art_ego_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_horse_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_horse_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_horse_01c");
      this.SculptProp.Add((object) "vw_prop_casino_art_panther_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_panther_01b");
      this.SculptProp.Add((object) "vw_prop_casino_art_panther_01c");
      this.SculptProp.Add((object) "vw_prop_casino_art_rocket_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_v_01a");
      this.SculptProp.Add((object) "vw_prop_casino_art_v_01b");
      this.SculptProp.Add((object) "ba_prop_battle_champ_closed");
      this.SculptProp.Add((object) "ba_prop_battle_champ_closed_02");
      this.SculptProp.Add((object) "ba_prop_battle_champ_closed_03");
      this.SculptProp.Add((object) "ba_prop_battle_champ_open");
      this.SculptProp.Add((object) "ba_prop_battle_champ_open_02");
      this.SculptProp.Add((object) "ba_prop_battle_champ_open_03");
      this.SculptProp.Add((object) "ba_prop_battle_cuffs");
      this.SculptProp.Add((object) "ba_prop_battle_trophy_battler");
      this.SculptProp.Add((object) "ba_prop_battle_trophy_dancer");
      this.SculptProp.Add((object) "ba_prop_battle_trophy_no1");
      this.SculptProp.Add((object) "xs_prop_arena_champ_closed");
      this.SculptProp.Add((object) "xs_prop_arena_champ_open");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_double_01a");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_double_01b");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_double_01c");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_single_01a");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_single_01b");
      this.SculptProp.Add((object) "xs_prop_arena_trophy_single_01c");
      this.SculptProp.Add((object) "xs_prop_trophy_bandito_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_carfire_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_carstack_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_champ_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_cup_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_drone_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_firepit_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_flags_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_flipper_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_goldbag_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_imperator_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_mines_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_pegasus_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_presents_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_rc_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_shunt_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_spinner_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_telescope_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_tower_01a");
      this.SculptProp.Add((object) "xs_prop_trophy_wrench_01a");
      this.SculptProp.Add((object) "p_ld_heist_bag_s_1");
      this.SculptProp.Add((object) "prop_gold_bar");
      this.SculptProp.Add((object) "prop_jewel_02a");
      this.SculptProp.Add((object) "prop_jewel_02b");
      this.SculptProp.Add((object) "prop_jewel_02c");
      this.SculptProp.Add((object) "prop_jewel_03a");
      this.SculptProp.Add((object) "prop_jewel_03b");
      this.SculptProp.Add((object) "prop_jewel_04a");
      this.SculptProp.Add((object) "prop_jewel_04b");
      this.SculptProp.Add((object) "p_watch_01");
      this.SculptProp.Add((object) "p_watch_02");
      this.SculptProp.Add((object) "p_watch_03");
      this.SculptProp.Add((object) "p_watch_04");
      this.SculptProp.Add((object) "p_watch_05");
      this.SculptProp.Add((object) "p_watch_06");
      this.SculptProp.Add((object) "prop_idol_01_error");
      this.SculptProp.Add((object) "ex_prop_exec_award_bronze");
      this.SculptProp.Add((object) "ex_prop_exec_award_diamond");
      this.SculptProp.Add((object) "ex_prop_exec_award_gold");
      this.SculptProp.Add((object) "ex_prop_exec_award_plastic");
      this.SculptProp.Add((object) "ex_prop_exec_award_silver");
      this.SculptProp.Add((object) "ex_cash_pile_01");
      this.SculptProp.Add((object) "vw_prop_casino_cards_01");
      this.SculptProp.Add((object) "vw_prop_casino_cards_02");
      this.SculptProp.Add((object) "vw_prop_casino_cards_single");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_02");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_03");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_04");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_05");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_06");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_07");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_08");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_ace");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_jack");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_king");
      this.SculptProp.Add((object) "vw_prop_cas_card_club_queen");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_02");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_03");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_04");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_05");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_06");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_07");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_08");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_09");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_10");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_ace");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_jack");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_king");
      this.SculptProp.Add((object) "vw_prop_cas_card_dia_queen");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_02");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_03");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_04");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_05");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_06");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_07");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_08");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_09");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_10");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_ace");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_jack");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_king");
      this.SculptProp.Add((object) "vw_prop_cas_card_hrt_queen");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_02");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_03");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_04");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_05");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_06");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_07");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_08");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_09");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_10");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_ace");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_jack");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_king");
      this.SculptProp.Add((object) "vw_prop_cas_card_spd_queen");
      this.SculptProp.Add((object) "vw_prop_vw_3card_01a");
      this.SculptProp.Add((object) "vw_prop_vw_card_case_01a");
      this.SculptProp.Add((object) "vw_prop_vw_casino_cards_01");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_02a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_03a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_04a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_05a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_06a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_07a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_08a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_09a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_10a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_a_a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_j_a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_k_a");
      this.SculptProp.Add((object) "vw_prop_vw_club_char_q_a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_02a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_03a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_04a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_05a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_06a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_07a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_08a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_09a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_10a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_a_a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_j_a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_k_a");
      this.SculptProp.Add((object) "vw_prop_vw_dia_char_q_a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_02a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_03a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_04a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_05a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_06a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_07a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_08a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_09a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_10a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_a_a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_j_a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_k_a");
      this.SculptProp.Add((object) "vw_prop_vw_hrt_char_q_a");
      this.SculptProp.Add((object) "vw_prop_vw_jo_char_01a");
      this.SculptProp.Add((object) "vw_prop_vw_jo_char_02a");
      this.SculptProp.Add((object) "vw_prop_vw_key_card_01a");
      this.SculptProp.Add((object) "vw_prop_vw_lux_card_01a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_02a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_03a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_04a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_05a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_06a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_07a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_08a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_09a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_10a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_a_a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_j_a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_k_a");
      this.SculptProp.Add((object) "vw_prop_vw_spd_char_q_a");
      this.SculptProp.Add((object) "vw_prop_chip_1kdollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_1kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_5kdollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_5kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_10dollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_10dollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_10kdollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_10kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_50dollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_50dollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_100dollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_100dollar_x1");
      this.SculptProp.Add((object) "vw_prop_chip_500dollar_st");
      this.SculptProp.Add((object) "vw_prop_chip_500dollar_x1");
      this.SculptProp.Add((object) "vw_prop_plaq_1kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_plaq_5kdollar_st");
      this.SculptProp.Add((object) "vw_prop_plaq_5kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_plaq_10kdollar_st");
      this.SculptProp.Add((object) "vw_prop_plaq_10kdollar_x1");
      this.SculptProp.Add((object) "vw_prop_vw_chips_pile_01a");
      this.SculptProp.Add((object) "vw_prop_vw_chips_pile_02a");
      this.SculptProp.Add((object) "vw_prop_vw_chips_pile_03a");
      this.SculptProp.Add((object) "vw_prop_vw_coin_01a");
      this.SculptProp.Add((object) "vw_prop_casino_champset");
      this.SculptProp.Add((object) "vw_prop_vw_colle_alien");
      this.SculptProp.Add((object) "vw_prop_vw_colle_beast");
      this.SculptProp.Add((object) "vw_prop_vw_colle_imporage");
      this.SculptProp.Add((object) "vw_prop_vw_colle_pogo");
      this.SculptProp.Add((object) "vw_prop_vw_colle_prbubble");
      this.SculptProp.Add((object) "vw_prop_vw_colle_rsrcomm");
      this.SculptProp.Add((object) "vw_prop_vw_colle_rsrgeneric");
      this.SculptProp.Add((object) "vw_prop_vw_colle_sasquatch");
      this.SculptProp.Add((object) "p_gcase_s");
      this.SculptProp.Add((object) "p_laptop_02_s");
      this.SculptProp.Add((object) "p_mr_raspberry_01_s");
      this.SculptProp.Add((object) "vw_prop_vw_v_blueprt_01a");
      this.SculptProp.Add((object) "prop_acc_guitar_01");
      this.SculptProp.Add((object) "prop_acc_guitar_01_d1");
      this.SculptProp.Add((object) "vw_prop_vw_chip_carrier_01a");
      this.SculptProp.Add((object) "apa_mp_h_acc_bottle_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_bottle_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_bowl_ceramic_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_box_trinket_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_box_trinket_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_candles_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_candles_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_candles_04");
      this.SculptProp.Add((object) "apa_mp_h_acc_candles_05");
      this.SculptProp.Add((object) "apa_mp_h_acc_candles_06");
      this.SculptProp.Add((object) "apa_mp_h_acc_coffeemachine_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_head_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_plate_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_plate_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_sculpt_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_sculpt_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_dec_sculpt_03");
      this.SculptProp.Add((object) "apa_mp_h_acc_drink_tray_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_fruitbowl_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_fruitbowl_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_jar_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_jar_03");
      this.SculptProp.Add((object) "apa_mp_h_acc_jar_04");
      this.SculptProp.Add((object) "apa_mp_h_acc_phone_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_plant_palm_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_plant_tall_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_pot_pouri_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_scent_sticks_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_tray_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_04");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_05");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_06");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_flowers_01");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_flowers_02");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_flowers_03");
      this.SculptProp.Add((object) "apa_mp_h_acc_vase_flowers_04");
    }

    public void SetupArtMenu()
    {
      this.SculptLoc.Add((object) new Vector3(971.4469f, 71.12376f, 116.2449f));
      this.SculptLoc.Add((object) new Vector3(973.4052f, 69.97559f, 116.2449f));
      this.SculptLoc.Add((object) new Vector3(972.6075f, 70.53499f, 116.2449f));
      this.SculptLoc.Add((object) new Vector3(968.3544f, 72.30743f, 115.6902f));
      this.SculptLoc.Add((object) new Vector3(976.5177f, 80.23362f, 116.1382f));
      this.SculptLoc.Add((object) new Vector3(969.4531f, 77.62489f, 115.6971f));
      this.SculptLoc.Add((object) new Vector3(976.4003f, 80.65188f, 116.1382f));
      this.SculptLoc.Add((object) new Vector3(977.8342f, 70.76744f, 116.1382f));
      this.SculptLoc.Add((object) new Vector3(971.9137f, 81.98214f, 116.1122f));
      this.SculptLoc.Add((object) new Vector3(972.9839f, 75.56157f, 115.6972f));
      this.SculptLoc.Add((object) new Vector3(983.1158f, 67.49692f, 116.0922f));
      this.SculptLoc.Add((object) new Vector3(984.2914f, 66.72982f, 116.0922f));
      this.SculptLoc.Add((object) new Vector3(974.4702f, 41.89836f, 116.0019f));
      this.SculptLoc.Add((object) new Vector3(966.2922f, 42.10915f, 116.1383f));
      this.SculptLoc.Add((object) new Vector3(974.5083f, 63.8875f, 115.6616f));
      this.SculptLoc.Add((object) new Vector3(965.8897f, 41.60423f, 116.1383f));
      this.SculptLoc.Add((object) new Vector3(964.7979f, 39.74314f, 116.1482f));
      this.SculptLoc.Add((object) new Vector3(966.9099f, 8229f * (float) System.Math.PI / 601f, 115.8882f));
      this.SculptLoc.Add((object) new Vector3(965.3593f, 39.1421f, 116.1482f));
      this.SculptLoc.Add((object) new Vector3(974.4998f, 49.53851f, 116.1383f));
      this.SculptLoc.Add((object) new Vector3(978.0218f, 46.56517f, 115.9923f));
      this.SculptLoc.Add((object) new Vector3(976.4994f, 46.86512f, 115.9922f));
      this.SculptLoc.Add((object) new Vector3(976.5798f, 46.46362f, 115.9922f));
      this.SculptLoc.Add((object) new Vector3(976.8693f, 46.68201f, 115.9922f));
      this.SculptLoc.Add((object) new Vector3(979.0563f, 69.87373f, 116.1382f));
      this.SculptLoc.Add((object) new Vector3(945.124f, 14.89447f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(948.8206f, 17.97805f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(940.6143f, 10.60696f, 116.0452f));
      this.SculptLoc.Add((object) new Vector3(947.098f, 17.37584f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(946.713f, 17.43841f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(947.0009f, 17.54459f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(944.1304f, 13.74309f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(946.6449f, 17.10868f, 116.2324f));
      this.SculptLoc.Add((object) new Vector3(954.0463f, 32.15368f, 115.7886f));
      this.SculptLoc.Add((object) new Vector3(956.1825f, 39.25602f, 115.9771f));
      this.SculptLoc.Add((object) new Vector3(953.3879f, 31.41343f, 116.3413f));
      this.SculptLoc.Add((object) new Vector3(947.5201f, 25.55083f, 115.6968f));
      this.SculptLoc.Add((object) new Vector3(966.8933f, 35.24205f, 116.0023f));
      this.SculptLoc.Add((object) new Vector3(968.6607f, 36.26171f, 116.1769f));
      this.SculptLoc.Add((object) new Vector3(989.285f, 66.46245f, 116.1385f));
      this.SculptLoc.Add((object) new Vector3(989.1791f, 65.0499f, 116.5328f));
      this.SculptLoc.Add((object) new Vector3(989.5279f, 66.66537f, 116.1352f));
      this.SculptLoc.Add((object) new Vector3(989.285f, 66.46245f, 116.1385f));
      this.SculptLoc.Add((object) new Vector3(984.8004f, 68.36877f, 116.1383f));
      this.SculptLoc.Add((object) new Vector3(961.1185f, 42.7681f, 115.7886f));
      this.SculptLoc.Add((object) new Vector3(960.9095f, 47.88779f, 115.7886f));
      this.SculptLoc.Add((object) new Vector3(970.9131f, 41.73798f, 116.1388f));
      this.SculptLoc.Add((object) new Vector3(989.5279f, 66.66537f, 116.1352f));
      this.SculptLoc.Add((object) new Vector3(970.9131f, 41.73798f, 116.1388f));
    }

    public void SetupRaceMenu()
    {
      List<object> items = new List<object>();
      items.Add((object) "Vehicle A");
      items.Add((object) "Vehicle B");
      items.Add((object) "Vehicle C");
      items.Add((object) "Vehicle D");
      items.Add((object) "Vehicle E");
      items.Add((object) "Vehicle F");
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.RaceMenu, "Race to Win");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuListItem BCar = new UIMenuListItem("Vehicle To WIn : ", items, 0);
      uiMenu.AddItem((UIMenuItem) BCar);
      BCar.Description = "The Vehicle that you think will win the 3 Lap race";
      UIMenuItem CBet = new UIMenuItem("Enter Bet Amount : Current " + this.RaceBet.ToString("N"));
      uiMenu.AddItem(CBet);
      UIMenuItem uiMenuItem = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem);
      UIMenuItem Stallodds = new UIMenuItem("Stall Odds : 1/2");
      uiMenu.AddItem(Stallodds);
      UIMenuItem StallR = new UIMenuItem("Stall Repair Time : 6s");
      uiMenu.AddItem(StallR);
      UIMenuItem MaxSpeed = new UIMenuItem("Max Speed : 435Kph");
      uiMenu.AddItem(MaxSpeed);
      UIMenuItem PayoutMp = new UIMenuItem("Payout Multiplier : x1");
      uiMenu.AddItem(PayoutMp);
      UIMenuItem Start = new UIMenuItem("Start Race");
      uiMenu.AddItem(Start);
      UIMenuItem Cancel = new UIMenuItem("Cancel Race");
      uiMenu.AddItem(Cancel);
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (BCar.Index == 0)
        {
          this.SpectateCar = this.VehicleA;
          Stallodds.Text = "Stall Odds : 1/2";
          StallR.Text = "Stall Repair Time: 4s";
          MaxSpeed.Text = "Max Speed : 435Kph";
          PayoutMp.Text = "Payout Multiplier : x1";
        }
        if (BCar.Index == 1)
        {
          this.SpectateCar = this.VehicleB;
          Stallodds.Text = "Stall Odds : 1/3";
          StallR.Text = "Stall Repair Time: 5s";
          MaxSpeed.Text = "Max Speed : 423Kph";
          PayoutMp.Text = "Payout Multiplier : x2";
        }
        if (BCar.Index == 2)
        {
          this.SpectateCar = this.VehicleC;
          Stallodds.Text = "Stall Odds : 1/6";
          StallR.Text = "Stall Repair Time: 6s";
          MaxSpeed.Text = "Max Speed : 415Kph";
          PayoutMp.Text = "Payout Multiplier : x3";
        }
        if (BCar.Index == 3)
        {
          this.SpectateCar = this.VehicleD;
          Stallodds.Text = "Stall Odds : 1/8";
          StallR.Text = "Stall Repair Time: 7s";
          MaxSpeed.Text = "Max Speed : 408Kph";
          PayoutMp.Text = "Payout Multiplier : x4";
        }
        if (BCar.Index == 4)
        {
          this.SpectateCar = this.VehicleE;
          Stallodds.Text = "Stall Odds : 1/16";
          StallR.Text = "Stall Repair Time: 8s";
          MaxSpeed.Text = "Max Speed : 392Kph";
          PayoutMp.Text = "Payout Multiplier : x6";
        }
        if (BCar.Index != 5)
          return;
        this.SpectateCar = this.VehicleF;
        Stallodds.Text = "Stall Odds : 1/28";
        StallR.Text = "Stall Repair Time: 9s";
        MaxSpeed.Text = "Max Speed : 387Kph";
        PayoutMp.Text = "Payout Multiplier : x8";
      });
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == CBet)
        {
          try
          {
            float num = float.Parse(Game.GetUserInput(WindowTitle.CELL_EMAIL_BODE, 5));
            if ((double) num < (double) this.Chips_Amount)
            {
              this.RaceBet = num;
              CBet.Text = "Enter Bet Amount : Current " + this.RaceBet.ToString("N");
            }
            else
            {
              CBet.Text = "Enter Bet Amount : Current Bet Exceeded Chips";
              this.DisplayHelpTextThisFrame("The Bet Exceeds your avaliable Chips");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Player did not enter a vaiid bet");
          }
        }
        if (item == Cancel)
        {
          if (this.RaceCam != (Camera) null)
          {
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
            this.RaceCam.IsActive = false;
            this.RaceCam.Destroy();
          }
          this.IsInbettingRace = false;
          this.modMenuPool.CloseAllMenus();
          Game.Player.Character.Position = this.RaceSTMarker;
          this.IsinInterior = true;
          this.StartR = false;
          this.inRace = false;
          if ((Entity) this.VehicleA != (Entity) null)
          {
            if ((Entity) this.VehicleA.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleA.Delete();
          }
          if ((Entity) this.VehicleB != (Entity) null)
          {
            if ((Entity) this.VehicleB.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleB.Delete();
          }
          if ((Entity) this.VehicleC != (Entity) null)
          {
            if ((Entity) this.VehicleC.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleC.Delete();
          }
          if ((Entity) this.VehicleD != (Entity) null)
          {
            if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleD.Delete();
          }
          if ((Entity) this.VehicleE != (Entity) null)
          {
            if ((Entity) this.VehicleE.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleE.Delete();
          }
          if ((Entity) this.VehicleF != (Entity) null)
          {
            if ((Entity) this.VehicleF.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
              this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).Delete();
            this.VehicleF.Delete();
          }
          this.StartedRace = false;
          this.FinishedRace = true;
          this.CheckpointRace = false;
          this.Race = 0;
          this.CarsFinished = 0;
          foreach (Blip checkPointBlip in this.CheckPointBlips)
          {
            if (checkPointBlip != (Blip) null)
              checkPointBlip.Remove();
          }
          this.Race = 0;
        }
        if (item != Start)
          return;
        this.StopCounter = false;
        this.IsInbettingRace = true;
        this.ACheck = 0;
        this.BCheck = 0;
        this.CCheck = 0;
        this.DCheck = 0;
        this.ECheck = 0;
        this.FCheck = 0;
        this.VehicleA_max = 435;
        this.VehicleB_max = 423;
        this.VehicleC_max = 415;
        this.VehicleD_max = 408;
        this.VehicleE_max = 398;
        this.VehicleF_max = 487;
        if (this.RaceCam != (Camera) null)
        {
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.RaceCam.IsActive = false;
          this.RaceCam.Destroy();
          if (BCar.Index == 0)
          {
            this.SpectateCar = this.VehicleA;
            this.MpValue = 1;
          }
          if (BCar.Index == 1)
          {
            this.SpectateCar = this.VehicleB;
            this.MpValue = 2;
          }
          if (BCar.Index == 2)
          {
            this.SpectateCar = this.VehicleC;
            this.MpValue = 3;
          }
          if (BCar.Index == 3)
          {
            this.SpectateCar = this.VehicleD;
            this.MpValue = 4;
          }
          if (BCar.Index == 4)
          {
            this.SpectateCar = this.VehicleE;
            this.MpValue = 6;
          }
          if (BCar.Index == 5)
          {
            this.SpectateCar = this.VehicleF;
            this.MpValue = 8;
          }
          this.RaceCam = World.CreateCamera(new Vector3(this.SpectateCar.Position.X, this.SpectateCar.Position.Y, this.SpectateCar.Position.Z + 5f), new Vector3(-90f, 0.0f, -33f), 100f);
          this.RaceCam.IsActive = true;
          this.RaceCam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.RaceCam;
          this.CamActive = true;
          this.modMenuPool.CloseAllMenus();
        }
        this.checkpoint = 0;
        Script.Wait(1000);
        UI.Notify("Ready!");
        Script.Wait(1000);
        UI.Notify("Set! ");
        Script.Wait(1000);
        UI.Notify("Go!");
        System.Random random1 = new System.Random();
        this.StartedRace = true;
        this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleA, this.CheckpointPos[this.ACheck], 20f, (float) this.VehicleA_max);
        this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleB, this.CheckpointPos[this.BCheck], 20f, (float) this.VehicleB_max);
        this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleC, this.CheckpointPos[this.CCheck], 20f, (float) this.VehicleC_max);
        this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleD, this.CheckpointPos[this.DCheck], 20f, (float) this.VehicleD_max);
        this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleE, this.CheckpointPos[this.ECheck], 20f, (float) this.VehicleE_max);
        this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicleF, this.CheckpointPos[this.FCheck], 20f, (float) this.VehicleF_max);
        this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).DrivingStyle = DrivingStyle.Rushed;
        this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleA_max;
        this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleB_max;
        this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleC_max;
        this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleD_max;
        this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleE_max;
        this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).MaxDrivingSpeed = (float) this.VehicleF_max;
        this.CarsFinished = 0;
        this.Position = 4;
        foreach (Vector3 checkpointPo in this.CheckpointPos)
        {
          World.DrawMarker(MarkerType.VerticalCylinder, checkpointPo, Vector3.Zero, Vector3.Zero, new Vector3(4f, 4f, 1f), Color.Lime);
          Blip blip = World.CreateBlip(checkpointPo);
          blip.Sprite = BlipSprite.TransformCheckpoint;
          blip.Name = "Checkpoint";
          blip.Color = this.Blip_Colour;
          blip.IsShortRange = true;
          this.CheckPointBlips.Add(blip);
          this.NextCheckpoint = 0;
        }
        this.VehicleA.AddBlip();
        this.VehicleA.CurrentBlip.Sprite = BlipSprite.Simeon;
        this.VehicleA.CurrentBlip.Name = "Vehicle A";
        this.VehicleA.CurrentBlip.Color = BlipColor.Yellow;
        this.CheckPointBlips.Add(this.VehicleA.CurrentBlip);
        this.VehicleB.AddBlip();
        this.VehicleB.CurrentBlip.Sprite = BlipSprite.FIB;
        this.VehicleB.CurrentBlip.Name = "Vehicle B";
        this.VehicleB.CurrentBlip.Color = BlipColor.Blue;
        this.CheckPointBlips.Add(this.VehicleB.CurrentBlip);
        this.VehicleC.AddBlip();
        this.VehicleC.CurrentBlip.Sprite = BlipSprite.Chinese;
        this.VehicleC.CurrentBlip.Name = "Vehicle C";
        this.VehicleC.CurrentBlip.Color = BlipColor.Red;
        this.CheckPointBlips.Add(this.VehicleC.CurrentBlip);
        this.VehicleD.AddBlip();
        this.VehicleD.CurrentBlip.Sprite = BlipSprite.Devin;
        this.VehicleD.CurrentBlip.Name = "Vehicle D";
        this.VehicleD.CurrentBlip.Color = BlipColor.Yellow2;
        this.CheckPointBlips.Add(this.VehicleD.CurrentBlip);
        this.VehicleE.AddBlip();
        this.VehicleE.CurrentBlip.Sprite = BlipSprite.Epsilon;
        this.VehicleE.CurrentBlip.Name = "Vehicle E";
        this.VehicleE.CurrentBlip.Color = BlipColor.Red2;
        this.CheckPointBlips.Add(this.VehicleE.CurrentBlip);
        this.VehicleF.AddBlip();
        this.VehicleF.CurrentBlip.Sprite = BlipSprite.Franklin;
        this.VehicleF.CurrentBlip.Name = "Vehicle F";
        this.VehicleF.CurrentBlip.Color = BlipColor.Blue2;
        this.CheckPointBlips.Add(this.VehicleF.CurrentBlip);
        this.inRace = true;
        System.Random random2 = new System.Random();
        float num1 = (float) random2.Next(0, 200);
        float num2 = (float) random2.Next(1, 300);
        float num3 = (float) random2.Next(1, 600);
        float num4 = (float) random2.Next(1, 800);
        float num5 = (float) random2.Next(0, 1600);
        float num6 = (float) random2.Next(0, 2800);
        this.VehicleA_stalltime = 0.0f;
        this.VehicleB_stalltime = 0.0f;
        this.VehicleC_stalltime = 0.0f;
        this.VehicleD_stalltime = 0.0f;
        this.VehicleE_stalltime = 0.0f;
        this.VehicleF_stalltime = 0.0f;
        if ((double) num1 < 100.0)
        {
          if ((Entity) this.VehicleA == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle A has Stalled on the Start line!");
          this.VehicleA.FreezePosition = true;
          this.VehicleA.IsDriveable = false;
        }
        if ((double) num2 < 100.0)
        {
          if ((Entity) this.VehicleB == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle B has Stalled on the Start line!");
          this.VehicleB.FreezePosition = true;
          this.VehicleB.IsDriveable = false;
        }
        if ((double) num3 < 100.0)
        {
          if ((Entity) this.VehicleC == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle C has Stalled on the Start line!");
          this.VehicleC.FreezePosition = true;
          this.VehicleC.IsDriveable = false;
        }
        if ((double) num4 < 100.0)
        {
          if ((Entity) this.VehicleD == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle D has Stalled on the Start line!");
          this.VehicleD.FreezePosition = true;
          this.VehicleD.IsDriveable = false;
        }
        if ((double) num5 < 100.0)
        {
          if ((Entity) this.VehicleE == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle E has Stalled on the Start line!");
          this.VehicleE.FreezePosition = true;
          this.VehicleE.IsDriveable = false;
        }
        if ((double) num6 < 100.0)
        {
          if ((Entity) this.VehicleF == (Entity) this.SpectateCar)
            UI.Notify(this.GetHostName() + "Bad luck your vehicle has stalled on the start line");
          else
            UI.Notify(this.GetHostName() + "Vehicle F has Stalled on the Start line!");
          this.VehicleF.FreezePosition = true;
          this.VehicleF.IsDriveable = false;
        }
        float num7 = (float) random1.Next(0, 50);
        if (this.VehicleA.IsDriveable)
          this.VehicleA.Speed = num7;
        float num8 = (float) random1.Next(0, 50);
        if (this.VehicleB.IsDriveable)
          this.VehicleB.Speed = num8;
        float num9 = (float) random1.Next(0, 50);
        if (this.VehicleC.IsDriveable)
          this.VehicleC.Speed = num9;
        float num10 = (float) random1.Next(0, 50);
        if (this.VehicleD.IsDriveable)
          this.VehicleD.Speed = num10;
        float num11 = (float) random1.Next(0, 50);
        if (this.VehicleE.IsDriveable)
          this.VehicleE.Speed = num11;
        float num12 = (float) random1.Next(0, 50);
        if (this.VehicleF.IsDriveable)
          this.VehicleF.Speed = num12;
      });
    }

    public void SetPedOutfit(Ped ped)
    {
      System.Random random = new System.Random();
      int num1 = random.Next(1, 9);
      if (num1 == 1)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num6 = random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) num6, (InputArgument) 1);
      }
      if (num1 == 2)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 1, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 1, (InputArgument) 0, (InputArgument) 1);
      }
      if (num1 == 3)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num6 = random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) num6, (InputArgument) 1);
      }
      if (num1 == 4)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 1, (InputArgument) 2, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num6 = random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) num6, (InputArgument) 1);
      }
      if (num1 == 5)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 1, (InputArgument) 2, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 1, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num6 = random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) num6, (InputArgument) 1);
      }
      if (num1 == 6)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
      }
      if (num1 == 7)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
      }
      if (num1 == 8)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num2 = random.Next(0, 5);
        int num3 = random.Next(0, 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num2, (InputArgument) num3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 1, (InputArgument) 2, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 1, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num4 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num4, (InputArgument) 0, (InputArgument) 1);
        int num5 = random.Next(0, 2);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) num5, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        random.Next(0, 1);
        Script.Wait(1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
      }
      if (num1 != 9)
        return;
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 0, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      int num7 = random.Next(0, 5);
      int num8 = random.Next(0, 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 2, (InputArgument) num7, (InputArgument) num8, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 3, (InputArgument) 1, (InputArgument) 2, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 4, (InputArgument) 1, (InputArgument) 0, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      int num9 = random.Next(0, 2);
      Script.Wait(1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 7, (InputArgument) num9, (InputArgument) 0, (InputArgument) 1);
      random.Next(0, 2);
      Script.Wait(1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 9, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      random.Next(0, 1);
      Script.Wait(1);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) ped, (InputArgument) 11, (InputArgument) 0, (InputArgument) 1, (InputArgument) 1);
    }

    public void WhiskeyMethod()
    {
      try
      {
        switch (Class1.WhiskeyTaskScriptStatus)
        {
          case 0:
            this.Bottle.IsVisible = false;
            this.Glass.IsVisible = false;
            Class1.WhiskeyTaskScriptStatus = 1;
            break;
          case 1:
            Class1.Whiskey = this.Bottle;
            Class1.WhiskeyGlass = this.Glass;
            Class1.WhiskeyPosition = Class1.Whiskey.Position;
            Class1.WhiskeyRotation = Class1.Whiskey.Rotation;
            Class1.WhiskeyTaskScriptStatus = 2;
            break;
          case 2:
            Game.Player.Character.Task.PlayAnimation("mp_safehousewhiskey@", "enter", 2f, 15500, false, -1f);
            Script.Wait(1500);
            this.Bottle.IsVisible = true;
            if (this.BottleType == 0)
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), this.Offset, new Vector3(-60f, 0.0f, 0.0f));
            if (this.BottleType == 1)
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            else if (this.BottleType == 2)
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            else if (this.BottleType == 3)
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            else if (this.BottleType == 4)
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            else
              Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            Class1.WhiskeyTaskScriptStatus = 3;
            break;
          case 3:
            if (Class1.Whiskey.IsAttachedTo((Entity) Game.Player.Character))
            {
              Script.Wait(2000);
              Class1.WhiskeyGlass.Position = Class1.Whiskey.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, 0.0f));
              Class1.WhiskeyGlass.IsVisible = true;
              Class1.WhiskeyGlassPosition = Class1.WhiskeyGlass.Position;
              Class1.WhiskeyGlassRotation = Class1.WhiskeyGlass.Rotation;
              Script.Wait(1000);
              Class1.WhiskeyGlass.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.IK_L_Hand), new Vector3(0.1f, 0.0f, 0.04f), new Vector3(-100f, 10f, 0.0f));
              Script.Wait(2000);
              Class1.Whiskey.Detach();
              Class1.Whiskey.Position = Class1.WhiskeyPosition;
              Class1.Whiskey.Rotation = Class1.WhiskeyRotation;
              Class1.WhiskeyTaskScriptStatus = 4;
              Class1.Whiskey.IsVisible = false;
              break;
            }
            break;
          case 4:
            if (Class1.WhiskeyGlass.IsAttachedTo((Entity) Game.Player.Character))
            {
              Script.Wait(4000);
              Class1.WhiskeyGlass.Detach();
              Class1.WhiskeyGlass.Position = Class1.WhiskeyGlassPosition;
              Class1.WhiskeyGlass.Rotation = Class1.WhiskeyGlassRotation;
              Class1.WhiskeyTaskScriptStatus = 5;
              this.DrunkLevel += 2f;
              break;
            }
            break;
          case 5:
            if (Class1.DrunkStage == 1)
              ++Class1.DrunkStage;
            Class1.WhiskeyTaskScriptStatus = -1;
            this.Bottle.Delete();
            this.Glass.Delete();
            break;
        }
        if (!Game.Player.IsDead && !Game.Player.Character.IsRagdoll)
          return;
        Class1.Whiskey.Detach();
        Class1.WhiskeyGlass.Detach();
        Class1.Whiskey.Position = Class1.WhiskeyPosition;
        Class1.Whiskey.Rotation = Class1.WhiskeyRotation;
        Class1.WhiskeyGlass.Position = Class1.WhiskeyGlassPosition;
        Class1.WhiskeyGlass.Rotation = Class1.WhiskeyGlassRotation;
        Class1.WhiskeyTaskScriptStatus = -1;
      }
      catch (Exception ex)
      {
      }
    }

    public void WineMethod()
    {
      try
      {
        Ped character = Game.Player.Character;
        switch (Class1.WineTaskScriptStatus)
        {
          case 0:
            this.Bottle.IsVisible = false;
            this.Glass.IsVisible = false;
            Class1.Wine = this.Bottle;
            Class1.WineGlass = this.Glass;
            Class1.WineTaskScriptStatus = 1;
            break;
          case 1:
            Class1.WinePosition = Class1.Wine.Position;
            Class1.WineRotation = Class1.Wine.Rotation;
            Class1.WineTaskScriptStatus = 2;
            break;
          case 2:
            Game.Player.Character.Task.PlayAnimation("mp_safehousewine@", "drinking_wine", 2f, 15500, false, -1f);
            Script.Wait(1000);
            this.Bottle.IsVisible = true;
            Class1.Wine.AttachTo((Entity) character, character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.13f, 0.05f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            Class1.WineTaskScriptStatus = 3;
            break;
          case 3:
            if (Class1.Wine.IsAttachedTo((Entity) character))
            {
              Class1.WineGlassPosition = Class1.WineGlass.Position;
              Class1.WineGlassRotation = Class1.WineGlass.Rotation;
              Script.Wait(500);
              this.Glass.IsVisible = true;
              Class1.WineGlass.AttachTo((Entity) character, character.GetBoneIndex(Bone.PH_L_Hand), new Vector3(0.1f, 0.0f, 0.04f), new Vector3(-100f, 10f, 0.0f));
              Class1.WineTaskScriptStatus = 4;
              ++this.DrunkLevel;
              break;
            }
            break;
          case 4:
            if (Class1.WineGlass.IsAttachedTo((Entity) character))
            {
              Script.Wait(5000);
              Class1.Wine.Detach();
              this.Bottle.IsVisible = false;
              Class1.Wine.Position = Class1.WinePosition;
              Class1.Wine.Rotation = Class1.WineRotation;
              Script.Wait(9000);
              this.Glass.IsVisible = false;
              Class1.WineGlass.Detach();
              Class1.WineGlass.Position = Class1.WineGlassPosition;
              Class1.WineGlass.Rotation = Class1.WineGlassRotation;
              Class1.WineTaskScriptStatus = 5;
              break;
            }
            break;
          case 5:
            Class1.WineTaskScriptStatus = -1;
            break;
        }
        if (!Game.Player.IsDead && !Game.Player.Character.IsRagdoll)
          return;
        Class1.Wine.Detach();
        Class1.WineGlass.Detach();
        Class1.Wine.Position = Class1.WinePosition;
        Class1.Wine.Rotation = Class1.WineRotation;
        Class1.WineGlass.Position = Class1.WineGlassPosition;
        Class1.WineGlass.Rotation = Class1.WineGlassRotation;
        Class1.WineTaskScriptStatus = -1;
      }
      catch
      {
      }
    }

    public void Drinks()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.DrinksMenu, nameof (Drinks));
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem DrinkA = new UIMenuItem("Pisswasser                                               $25");
      uiMenu.AddItem(DrinkA);
      UIMenuItem DrinkB = new UIMenuItem("Vodka Shot                                              $75");
      uiMenu.AddItem(DrinkB);
      UIMenuItem DrinkC = new UIMenuItem("The Mount Whiskey Shot                       $250");
      uiMenu.AddItem(DrinkC);
      UIMenuItem DrinkD = new UIMenuItem("Richard's Whiskey Shot                       $1,000");
      uiMenu.AddItem(DrinkD);
      UIMenuItem DrinkE = new UIMenuItem("Macbeth Whiskey Shot                       $5,000");
      uiMenu.AddItem(DrinkE);
      UIMenuItem DrinkF = new UIMenuItem("Bleuter'd Champaine Slver                $30,000");
      uiMenu.AddItem(DrinkF);
      UIMenuItem DrinkG = new UIMenuItem("Bleuter'd Champaine Gold                $50,000");
      uiMenu.AddItem(DrinkG);
      UIMenuItem DrinkH = new UIMenuItem("Bleuter'd Champaine Diamond        $150,000");
      uiMenu.AddItem(DrinkH);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == DrinkH)
        {
          if (Game.Player.Money >= 150000)
          {
            Game.Player.Money -= 150000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed_03"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 5f, 4500, AnimationFlags.UpperBodyOnly, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item == DrinkG)
        {
          if (Game.Player.Money >= 50000)
          {
            Game.Player.Money -= 50000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed_02"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 5f, 4500, AnimationFlags.UpperBodyOnly, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item == DrinkF)
        {
          if (Game.Player.Money >= 30000)
          {
            Game.Player.Money -= 30000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 5f, 4500, AnimationFlags.UpperBodyOnly, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item == DrinkE)
        {
          if (Game.Player.Money >= 5000)
          {
            Class1.WineTaskScriptStatus = 0;
            Class1.WhiskeyTaskScriptStatus = 0;
            Game.Player.Money -= 5000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 3;
            this.modMenuPool.CloseAllMenus();
            this.BottleType = 1;
            this.DrunkLevel += 9f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(" : You do not have enough money for this Drink!");
        }
        if (item == DrinkD)
        {
          if (Game.Player.Money >= 1000)
          {
            Class1.WineTaskScriptStatus = 0;
            Class1.WhiskeyTaskScriptStatus = 0;
            Game.Player.Money -= 1000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 3;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 12f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item == DrinkC)
        {
          if (Game.Player.Money >= 250)
          {
            Class1.WineTaskScriptStatus = 0;
            Class1.WhiskeyTaskScriptStatus = 0;
            Game.Player.Money -= 250;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 1;
            this.BottleType = 1;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 14f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item == DrinkB)
        {
          if (Game.Player.Money >= 75)
          {
            Class1.WineTaskScriptStatus = 0;
            Class1.WhiskeyTaskScriptStatus = 0;
            Game.Player.Money -= 75;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_vodka_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 0;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 16f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify("You do not have enough money for this Drink!");
        }
        if (item != DrinkA)
          return;
        if (Game.Player.Money >= 25)
        {
          Class1.WineTaskScriptStatus = 0;
          Class1.WhiskeyTaskScriptStatus = 0;
          Game.Player.Money -= 25;
          Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
          Prop prop = World.CreateProp(this.RequestModel("prop_sh_beer_pissh_01"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
          prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
          this.Champaine = prop;
          this.Champ.Add(prop);
          Class1.WhiskeyTaskScriptStatus = 0;
          this.Bottle = this.Champaine;
          this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
          this.IsDrinking = true;
          this.Effect = 0;
          this.modMenuPool.CloseAllMenus();
          this.DrunkLevel += 6f;
          if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
          if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
          if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
        }
        else
          UI.Notify("You do not have enough money for this Drink!");
      });
    }

    public void CHipsM()
    {
      float Chips = 10f;
      float Money = 10f;
      List<object> Cash = new List<object>();
      List<object> Multi = new List<object>();
      Multi.Add((object) 1.0);
      Multi.Add((object) 1.05);
      Multi.Add((object) 1.1);
      Multi.Add((object) 1.15);
      Multi.Add((object) 1.2);
      Multi.Add((object) 1.25);
      Multi.Add((object) 1.3);
      Multi.Add((object) 1.35);
      Multi.Add((object) 1.4);
      Multi.Add((object) 1.45);
      Multi.Add((object) 1.5);
      Multi.Add((object) 1.55);
      Multi.Add((object) 1.6);
      Multi.Add((object) 1.65);
      Multi.Add((object) 1.7);
      Multi.Add((object) 1.75);
      Multi.Add((object) 1.8);
      Multi.Add((object) 1.95);
      Multi.Add((object) 2.0);
      Cash.Add((object) 10);
      Cash.Add((object) 50);
      Cash.Add((object) 100);
      Cash.Add((object) 500);
      Cash.Add((object) 1000);
      Cash.Add((object) 5000);
      Cash.Add((object) 10000);
      Cash.Add((object) 100000);
      Cash.Add((object) 1000000);
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.ChipsMenu, "Chips for Money");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Buy = new UIMenuItem("Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N"));
      uiMenu.AddItem(Buy);
      UIMenuListItem list = new UIMenuListItem("Chips Amount : ", Cash, 0);
      uiMenu.AddItem((UIMenuItem) list);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem1);
      UIMenuListItem C_Mp = new UIMenuListItem("Multiplier : ", Multi, 0);
      uiMenu.AddItem((UIMenuItem) C_Mp);
      UIMenuItem C_CMP = new UIMenuItem("Change Chips Multiplier");
      uiMenu.AddItem(C_CMP);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem2);
      List<object> Chip = new List<object>();
      Chip.Add((object) 10);
      Chip.Add((object) 50);
      Chip.Add((object) 100);
      Chip.Add((object) 500);
      Chip.Add((object) 1000);
      Chip.Add((object) 5000);
      Chip.Add((object) 10000);
      Chip.Add((object) 25000);
      Chip.Add((object) 50000);
      Chip.Add((object) 75000);
      Chip.Add((object) 100000);
      Chip.Add((object) 125000);
      Chip.Add((object) 150000);
      Chip.Add((object) 300000);
      UIMenuListItem C4M = new UIMenuListItem("Amount : ", Chip, 0);
      uiMenu.AddItem((UIMenuItem) C4M);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__4 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1057.\u003C\u003Ep__4 = CallSite<Func<CallSite, System.Type, object, UIMenuItem>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, System.Type, object, UIMenuItem> target1 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__4.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, System.Type, object, UIMenuItem>> p4 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__4;
      System.Type type1 = typeof (UIMenuItem);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__3 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1057.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, object, object> target2 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__3.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, object, object>> p3 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__3;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__1 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1057.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, string, object> target3 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__1.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, string, object>> p1 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__1;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1057.\u003C\u003Ep__0 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj1 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__0, "Exchange ", Chip[C4M.Index]);
      object obj2 = target3((CallSite) p1, obj1, "c Chips for $ ");
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__2 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1057.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, float, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Multiply, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj3 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__2, Chip[C4M.Index], this.Mp);
      object obj4 = target2((CallSite) p3, obj2, obj3);
      UIMenuItem C_C4M = target1((CallSite) p4, type1, obj4);
      uiMenu.AddItem(C_C4M);
      UIMenuItem C_C4M2 = new UIMenuItem("Exchange " + this.Chips_Amount.ToString() + "c Chips for $ " + ((float) this.Chips_Amount * this.Mp).ToString());
      uiMenu.AddItem(C_C4M2);
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        UIMenuItem uiMenuItem3 = C_C4M;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__9 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target4 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__9.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p9 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__9;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__8.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p8 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__8;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target6 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p6 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__5 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__5, "Exchange ", Chip[C4M.Index]);
        object obj6 = target6((CallSite) p6, obj5, "c Chips for $ ");
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, float, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Multiply, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj7 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__7, Chip[C4M.Index], this.Mp);
        object obj8 = target5((CallSite) p8, obj6, obj7);
        string str = target4((CallSite) p9, obj8);
        uiMenuItem3.Text = str;
      });
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == C_C4M2)
        {
          if (this.Chips_Amount >= 0)
          {
            Game.Player.Money += (int) ((double) this.Chips_Amount * (double) this.Mp);
            this.Chips_Amount = 0;
            this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
            this.Config.Save();
            C_C4M2.Text = "Exchange " + this.Chips_Amount.ToString() + "c Chips for Money";
            UI.Notify(this.GetHostName() + " : Sold all Chips");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have that amount of Chips");
        }
        if (item == C_C4M)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target4 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__12.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p12 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__12;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, int, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.GreaterThanOrEqual, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, int, object> target5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__11.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, int, object>> p11 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__11;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__10 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Subtract, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__10, this.Chips_Amount, Chip[C4M.Index]);
          object obj6 = target5((CallSite) p11, obj5, 0);
          if (target4((CallSite) p12, obj6))
          {
            Player player = Game.Player;
            int money = player.Money;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__14 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, int> target6 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__14.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, int>> p14 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__14;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, float, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Multiply, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj7 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__13, Chip[C4M.Index], this.Mp);
            int num = target6((CallSite) p14, obj7);
            player.Money = money + num;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__16 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, int> target7 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__16.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, int>> p16 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__16;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__15 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.SubtractAssign, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj8 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__15, this.Chips_Amount, Chip[C4M.Index]);
            this.Chips_Amount = target7((CallSite) p16, obj8);
            this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
            this.Config.Save();
            C_C4M2.Text = "Exchange " + this.Chips_Amount.ToString() + "c Chips for Money";
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__19 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Action<CallSite, System.Type, object> target8 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__19.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Action<CallSite, System.Type, object>> p19 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__19;
            System.Type type2 = typeof (UI);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__18 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target9 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__18.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p18 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__18;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1057.\u003C\u003Ep__17 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj9 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__17, this.GetHostName() + " : Sold ", Chip[C4M.Index]);
            object obj10 = target9((CallSite) p18, obj9, " worth of Chips");
            target8((CallSite) p19, type2, obj10);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have that amount of Chips");
        }
        if (item == C_CMP)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (float), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.Mp = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__20, Multi[C_Mp.Index]);
          this.Config.SetValue<float>("Setup", "Chips_Multiplier", this.Mp);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__22 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target4 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__22.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p22 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__22;
          System.Type type2 = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__21 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__21, this.GetHostName() + " : Cjips Multiplier changed to : ", Multi[C_Mp.Index]);
          target4((CallSite) p22, type2, obj5);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__23 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Chips = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__23, Cash[list.Index]);
        Money = Chips * this.Mp;
        Buy.Text = "Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N");
        if (item != Buy)
          return;
        if ((double) Game.Player.Money >= (double) Money)
        {
          Game.Player.Money -= (int) Money;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__25 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, int> target4 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__25.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, int>> p25 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__25;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__24 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.AddAssign, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__24, this.Chips_Amount, Cash[list.Index]);
          this.Chips_Amount = target4((CallSite) p25, obj5);
          this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__28 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__28 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target5 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__28.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p28 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__28;
          System.Type type2 = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__27 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target6 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__27.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p27 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__27;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__26 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1057.\u003C\u003Ep__26 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj6 = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__26, this.GetHostName() + " : Successfuly purchased ", Cash[list.Index]);
          object obj7 = target6((CallSite) p27, obj6, " Chips");
          target5((CallSite) p28, type2, obj7);
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this amount of chips");
      });
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1057.\u003C\u003Ep__29 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1057.\u003C\u003Ep__29 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Chips = Class1.\u003C\u003Eo__1057.\u003C\u003Ep__29.Target((CallSite) Class1.\u003C\u003Eo__1057.\u003C\u003Ep__29, Cash[list.Index]);
        Money = Chips * this.Mp;
        Buy.Text = "Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N");
      });
    }

    public string GetRandomDealerModel()
    {
      string str = "";
      int num = new System.Random().Next(0, 100);
      if (num < 50)
        str = "s_m_y_casino_01";
      if (num > 50)
        str = "s_f_y_casino_01";
      Script.Wait(1);
      return str;
    }

    public void PlayAnim(Ped p, int Gender)
    {
      try
      {
        System.Random random = new System.Random();
        int num1 = random.Next(1, 5);
        p.FreezePosition = true;
        p.AlwaysKeepTask = true;
        if (Gender == 1)
        {
          if (num1 == 1)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 2)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_02@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_02@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_02@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_02@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 3)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_03@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_03@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_03@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_03@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 4)
            p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_04@", "base", 8f, -1, true, -1f);
          if (num1 == 5)
            p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_05@", "base", 8f, -1, true, -1f);
        }
        if (Gender == 2)
        {
          if (num1 == 1)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_01@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_01@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_01@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_01@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 2)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_02@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_02@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_02@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_02@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 3)
          {
            int num2 = random.Next(1, 4);
            if (num2 == 1)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_03@", "base", 8f, -1, true, -1f);
            if (num2 == 2)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_03@", "base_a", 8f, -1, true, -1f);
            if (num2 == 3)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_03@", "base_b", 8f, -1, true, -1f);
            if (num2 == 4)
              p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_03@", "base_c", 8f, -1, true, -1f);
          }
          if (num1 == 4)
            p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_05@", "base", 8f, -1, true, -1f);
          if (num1 == 5)
            p.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@male@variation_05@", "base", 8f, -1, true, -1f);
        }
        this.Peds2.Add(p);
        p = (Ped) null;
        Script.Wait(10);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Error ~w~ : Somthing went wrong with the DC&R Business, this is normal on first time load, contact ~g~HKH191~ for more info");
      }
    }

    public void AddPeds()
    {
      try
      {
        this.PossibleSwimmer.Clear();
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      }
      catch
      {
        UI.Notify("Error On Stage 1");
      }
      try
      {
      }
      catch
      {
        UI.Notify("Error On Stage 2");
      }
      try
      {
        foreach (Ped ped in this.Peds2)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
      }
      catch
      {
        UI.Notify("Error On Stage 3");
      }
      try
      {
        if (this.PedType != 0)
          ;
      }
      catch
      {
        UI.Notify("Error On Stage 4");
      }
      try
      {
        if (this.PedType == 1)
        {
          System.Random random = new System.Random();
          int num1 = random.Next(1, 100);
          if (num1 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), this.jacuzziSeat2, this.J_rot2), 2);
          else if (num1 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat2, this.J_rot2), 1);
          Script.Wait(1);
          this.IsinHottub = false;
          int num2 = random.Next(1, 100);
          if (num2 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat3, this.J_rot3), 2);
          else if (num2 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat3, this.J_rot3), 1);
          Script.Wait(1);
          int num3 = random.Next(1, 100);
          if (num3 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat4, this.J_rot4), 2);
          else if (num3 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat4, this.J_rot4), 1);
          Script.Wait(1);
          int num4 = random.Next(1, 100);
          if (num4 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat5, this.J_rot5), 2);
          else if (num4 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat5, this.J_rot5), 1);
          Script.Wait(1);
          int num5 = random.Next(1, 100);
          if (num5 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat6, this.J_rot6), 2);
          else if (num5 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat6, this.J_rot6), 1);
          Script.Wait(1);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
        }
      }
      catch
      {
        UI.Notify("Error On Stage 5");
      }
      try
      {
        if (this.PedType == 2)
        {
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat2, this.J_rot2), 1);
          Script.Wait(1);
          this.IsinHottub = false;
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat3, this.J_rot3), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat4, this.J_rot4), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat5, this.J_rot5), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat6, this.J_rot6), 1);
          Script.Wait(1);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
        }
      }
      catch
      {
        UI.Notify("Error On Stage 6");
      }
      try
      {
        if (this.PedType == 3)
        {
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat2, this.J_rot2), 1);
          Script.Wait(1);
          this.IsinHottub = false;
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat3, this.J_rot3), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat4, this.J_rot4), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat5, this.J_rot5), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AFY), this.jacuzziSeat6, this.J_rot6), 1);
          Script.Wait(1);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AFY);
        }
      }
      catch
      {
        UI.Notify("Error On Stage 7");
      }
      try
      {
        if (this.PedType == 5)
        {
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat2, this.J_rot2), 1);
          Script.Wait(1);
          this.IsinHottub = false;
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat3, this.J_rot3), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat4, this.J_rot4), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat5, this.J_rot5), 1);
          Script.Wait(1);
          this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat6, this.J_rot6), 1);
          Script.Wait(1);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
        }
      }
      catch
      {
        UI.Notify("Error On Stage 8");
      }
      try
      {
        if (this.PedType == 5)
        {
          System.Random random = new System.Random();
          int num1 = random.Next(1, 100);
          if (num1 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat2, this.J_rot2), 2);
          else if (num1 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat2, this.J_rot2), 1);
          Script.Wait(1);
          this.IsinHottub = false;
          int num2 = random.Next(1, 100);
          if (num2 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat3, this.J_rot3), 2);
          else if (num2 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat3, this.J_rot3), 1);
          Script.Wait(1);
          int num3 = random.Next(1, 100);
          if (num3 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat4, this.J_rot4), 2);
          else if (num3 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat4, this.J_rot4), 1);
          Script.Wait(1);
          int num4 = random.Next(1, 100);
          if (num4 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat5, this.J_rot5), 2);
          else if (num4 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat5, this.J_rot5), 1);
          Script.Wait(1);
          int num5 = random.Next(1, 100);
          if (num5 < 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Beach01AMM), this.jacuzziSeat6, this.J_rot6), 2);
          else if (num5 > 50)
            this.PlayAnim(World.CreatePed(this.RequestModel(PedHash.Topless01AFY), this.jacuzziSeat6, this.J_rot6), 1);
          Script.Wait(1);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
          this.PossibleSwimmer.Add(PedHash.Topless01AFY);
          this.PossibleSwimmer.Add(PedHash.Beach01AMM);
        }
      }
      catch
      {
        UI.Notify("Error On Stage 9");
      }
      try
      {
        if ((uint) this.PedType2 > 0U)
        {
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          this.PossibleSwimmer.Add(this.GetpedModel2(this.PedType));
          Ped ped1 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(953.3083f, 55.07329f, 110.5f), -120f);
          ped1.FreezePosition = true;
          if (ped1.Gender == Gender.Female)
            this.PlayAnim(ped1, 1);
          else if (ped1.Gender == Gender.Male)
            this.PlayAnim(ped1, 2);
          Ped ped2 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(953.311f, 52.398f, 110.5f), -36f);
          ped2.FreezePosition = true;
          if (ped2.Gender == Gender.Female)
            this.PlayAnim(ped2, 1);
          else if (ped2.Gender == Gender.Male)
            this.PlayAnim(ped2, 2);
          Ped ped3 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(955.2153f, 52.89155f, 110.5f), 62f);
          ped3.FreezePosition = true;
          if (ped3.Gender == Gender.Female)
            this.PlayAnim(ped3, 1);
          else if (ped3.Gender == Gender.Male)
            this.PlayAnim(ped3, 2);
          Ped ped4 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(940.9825f, 33.0413f, 110.5f), -25f);
          ped4.FreezePosition = true;
          if (ped4.Gender == Gender.Female)
            this.PlayAnim(ped4, 1);
          else if (ped4.Gender == Gender.Male)
            this.PlayAnim(ped4, 2);
          Ped ped5 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(942.0065f, 35.54335f, 110.5f), 141f);
          ped5.FreezePosition = true;
          if (ped5.Gender == Gender.Female)
            this.PlayAnim(ped5, 1);
          else if (ped5.Gender == Gender.Male)
            this.PlayAnim(ped5, 2);
          Ped ped6 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(940.6028f, 34.68548f, 110.5f), -127f);
          ped6.FreezePosition = true;
          if (ped6.Gender == Gender.Female)
            this.PlayAnim(ped6, 1);
          else if (ped6.Gender == Gender.Male)
            this.PlayAnim(ped6, 2);
          Ped ped7 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(942.8467f, 33.18393f, 110.5f), 51f);
          ped7.FreezePosition = true;
          if (ped7.Gender == Gender.Female)
            this.PlayAnim(ped7, 1);
          else if (ped7.Gender == Gender.Male)
            this.PlayAnim(ped7, 2);
          Ped ped8 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(934.5349f, 24.71686f, 110.5f), -127f);
          ped8.FreezePosition = true;
          if (ped8.Gender == Gender.Female)
            this.PlayAnim(ped8, 1);
          else if (ped8.Gender == Gender.Male)
            this.PlayAnim(ped8, 2);
          Ped ped9 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(936.165f, 25.40634f, 110.5f), 145f);
          ped9.FreezePosition = true;
          if (ped9.Gender == Gender.Female)
            this.PlayAnim(ped9, 1);
          else if (ped9.Gender == Gender.Male)
            this.PlayAnim(ped9, 2);
          Ped ped10 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(936.542f, 23.40832f, 110.5f), 50f);
          ped10.FreezePosition = true;
          if (ped10.Gender == Gender.Female)
            this.PlayAnim(ped10, 1);
          else if (ped10.Gender == Gender.Male)
            this.PlayAnim(ped10, 2);
          Ped ped11 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(935.2886f, 22.94011f, 110.5f), -36f);
          ped11.FreezePosition = true;
          if (ped11.Gender == Gender.Female)
            this.PlayAnim(ped11, 1);
          else if (ped11.Gender == Gender.Male)
            this.PlayAnim(ped11, 2);
          Ped ped12 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(947.1208f, 42.71227f, 110.5f), -39f);
          ped12.FreezePosition = true;
          if (ped12.Gender == Gender.Female)
            this.PlayAnim(ped12, 1);
          else if (ped12.Gender == Gender.Male)
            this.PlayAnim(ped12, 2);
          Ped ped13 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(946.7648f, 44.66558f, 110.5f), -110f);
          ped13.FreezePosition = true;
          if (ped13.Gender == Gender.Female)
            this.PlayAnim(ped13, 1);
          else if (ped13.Gender == Gender.Male)
            this.PlayAnim(ped13, 2);
          Ped ped14 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(949.2073f, 43.63372f, 110.5f), 61f);
          ped14.FreezePosition = true;
          if (ped14.Gender == Gender.Female)
            this.PlayAnim(ped14, 1);
          else if (ped14.Gender == Gender.Male)
            this.PlayAnim(ped14, 2);
          System.Random random = new System.Random();
          random.Next(0, 100);
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(921.5018f, 12.25483f, 111f), 152f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(915.2754f, 11.18526f, 111f), 148f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(912.9713f, 12.28778f, 111f), 130f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(915.5112f, 22.36289f, 111f), 151f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(916.7951f, 21.65291f, 111f), 142f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(932.4772f, 3.29761f, 111.8f), 59f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(931.7728f, 2.344149f, 111.8f), 59f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(908.9769f, 13.32108f, 111.8f), -135f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(909.8641f, 14.7124f, 111.8f), -107f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PoolPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(911.2299f, 17.0978f, 111.6f), -133f);
            ped15.FreezePosition = true;
            if (ped15.Gender == Gender.Female)
              this.PlayAnim(ped15, 1);
            else if (ped15.Gender == Gender.Male)
              this.PlayAnim(ped15, 2);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(957.655f, 53.03374f, 111.6f), -125f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(959.2653f, 55.53594f, 111.6f), -121f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(956.4926f, 50.66952f, 111.6f), -161f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(954.621f, 48.17428f, 111.6f), -90f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(951.3824f, 43.31479f, 111.6f), -97f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(950.2207f, 41.03412f, 111.6f), -170f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(948.5749f, 38.27188f, 111.6f), -92f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(946.7883f, 36.35806f, 111.6f), -166f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(945.3374f, 33.7608f, 111.6f), -94f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(939.468f, 25.97402f, 111.6f), -148f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(936.361f, 19.49258f, 111.6f), -99f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(933.9913f, 30.51657f, 111.2f), 163f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(935.5774f, 29.05956f, 111.6f), 38f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(933.9769f, 28.98641f, 111.6f), -21f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(939.7352f, 42.60273f, 111.2f), 41f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(939.3006f, 41.71557f, 111.2f), 83f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(947.8397f, 52.24321f, 111.2f), -52f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(949.8629f, 52.18896f, 111.6f), 125f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(948.2167f, 53.71968f, 111.6f), -178f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(915.6156f, 39.01409f, 110.2f), 21f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(914.2751f, 39.03038f, 110.2f), -55f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(915.8612f, 40.56638f, 110.6f), 150f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(918.8865f, 54.37997f, 110.6f), -72f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(920.8691f, 53.79646f, 110.6f), 26f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(919.7262f, 56.98275f, 110.2f), -157f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(911.275f, 51.34739f, 110.2f), 28f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(910.2062f, 50.94262f, 110.2f), 3f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(909.1746f, 51.04686f, 110.2f), -24f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("anim@amb@yacht@jacuzzi@seated@female@variation_01@", "base_c", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(914.95f, 59.79315f, 110.6f), 24f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(913.1617f, 60.00733f, 110.6f), -164f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          int num = random.Next(0, 100);
          if (num < this.PartyPedChance)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel(this.PedType2)), new Vector3(913.2501f, 62.30947f, 110.6f), -138f);
            ped15.FreezePosition = true;
            ped15.Task.StartScenario("WORLD_HUMAN_PARTYING", ped15.Position);
            this.Peds2.Add(ped15);
          }
          if (num < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(930.5168f, 25.97536f, 111.95f), -133f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(943.1041f, 45.63772f, 111.95f), -129f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(944.0278f, 60.01755f, 113.4f), -129f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(937.7003f, 50.1327f, 113.4f), -129f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(937.2131f, 50.67082f, 113.4f), -129f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          if (random.Next(0, 100) < this.SunbatherPedChamce)
          {
            Ped ped15 = World.CreatePed(this.RequestModel(this.GetpedModel2(this.PedType)), new Vector3(925.7509f, 30.42949f, 113.4f), -129f);
            ped15.FreezePosition = true;
            ped15.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
            this.Peds2.Add(ped15);
          }
          foreach (Ped ped15 in this.Peds2)
          {
            if ((Entity) ped15 != (Entity) null)
            {
              Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped15, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped15, (InputArgument) 17, (InputArgument) 1);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped15, (InputArgument) 1);
              Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped15, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped15, (InputArgument) 17, (InputArgument) 1);
              ped15.RelationshipGroup = 1;
              ped15.AlwaysKeepTask = true;
            }
          }
        }
      }
      catch
      {
        UI.Notify("Error On Stage 10");
      }
      try
      {
        if ((Entity) this.Swimmer != (Entity) null)
          this.Swimmer.Delete();
      }
      catch (Exception ex)
      {
        UI.Notify("Error On Stage 11");
      }
      try
      {
        if ((uint) this.PedType > 0U)
        {
          this.Swimmer = World.CreatePed(this.RequestModel(this.PossibleSwimmer[new System.Random().Next(0, this.PossibleSwimmer.Count)]), new Vector3(928.94f, 0.399f, 111f));
          this.Swimmer.Task.GoTo(new Vector3(912.354f, 10.8f, 112f), false);
          this.Swimmer.BlockPermanentEvents = true;
          this.Swimmer.AlwaysKeepTask = true;
          this.Swimmer.DrownsInWater = false;
        }
      }
      catch (Exception ex)
      {
        UI.Notify("Error On Stage 12");
      }
      try
      {
        this.Peds2.Add(this.Swimmer);
        this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(945.3591f, 13.48792f, 115f), 52f);
        this.ped.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
        this.Peds2.Add(this.ped);
        this.SetPedOutfit(this.ped);
      }
      catch (Exception ex)
      {
        UI.Notify("Error On Stage 13");
      }
      try
      {
        this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(958.8818f, 71.53243f, 111f), 154f);
        this.SetPedOutfit(this.ped);
        this.Peds2.Add(this.ped);
        this.ped.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
      }
      catch (Exception ex)
      {
      }
    }

    public PedHash GetpedModel2(int p)
    {
      PedHash pedHash = PedHash.Topless01AFY;
      int num = new System.Random().Next(1, 100);
      if (p == 1)
      {
        if (num < 50)
          pedHash = PedHash.Beach01AMM;
        else if (num > 50)
          pedHash = PedHash.Beach01AFY;
      }
      if (p == 2)
        pedHash = PedHash.Beach01AMM;
      if (p == 3)
        pedHash = PedHash.Beach01AFY;
      if (p == 4)
        pedHash = PedHash.Topless01AFY;
      if (p == 5)
      {
        if (num < 50)
          pedHash = PedHash.Beach01AMM;
        else if (num > 50)
          pedHash = PedHash.Topless01AFY;
      }
      if (p == 6)
      {
        System.Random random = new System.Random();
        if (this.CustomTerracePeds.Count > 0)
        {
          int index = random.Next(0, this.CustomTerracePeds.Count);
          Script.Wait(1);
          pedHash = this.CustomTerracePeds[index];
        }
        else if (this.CustomTerracePeds.Count <= 0)
        {
          if (num < 50)
            pedHash = PedHash.Beach01AMM;
          else if (num > 50)
            pedHash = PedHash.Topless01AFY;
        }
      }
      return pedHash;
    }

    public PedHash GetpedModel(int p)
    {
      PedHash pedHash = PedHash.Topless01AFY;
      int num = new System.Random().Next(1, 100);
      if (p == 1)
      {
        if (num < 50)
          pedHash = PedHash.Beach01AMM;
        else if (num > 50)
          pedHash = PedHash.Beach01AFY;
      }
      if (p == 2)
        pedHash = PedHash.Beach01AMM;
      if (p == 3)
        pedHash = PedHash.Beach01AFY;
      if (p == 4)
        pedHash = PedHash.Topless01AFY;
      if (p == 5)
      {
        if (num < 50)
          pedHash = PedHash.Beach01AMM;
        else if (num > 50)
          pedHash = PedHash.Topless01AFY;
      }
      if (p == 6)
      {
        System.Random random = new System.Random();
        if (this.CustomTerracePeds.Count > 0)
        {
          int index = random.Next(0, this.CustomTerracePeds.Count);
          Script.Wait(1);
          pedHash = this.CustomTerracePeds[index];
        }
        else if (this.CustomTerracePeds.Count <= 0)
        {
          if (num < 50)
            pedHash = PedHash.Beach01AMM;
          else if (num > 50)
            pedHash = PedHash.Topless01AFY;
        }
      }
      return pedHash;
    }

    public void MiscMenu()
    {
      List<object> TF = new List<object>();
      TF.Add((object) true);
      TF.Add((object) false);
      List<object> ChNC = new List<object>();
      ChNC.Add((object) 100);
      ChNC.Add((object) 95);
      ChNC.Add((object) 90);
      ChNC.Add((object) 85);
      ChNC.Add((object) 80);
      ChNC.Add((object) 75);
      ChNC.Add((object) 70);
      ChNC.Add((object) 65);
      ChNC.Add((object) 60);
      ChNC.Add((object) 55);
      ChNC.Add((object) 50);
      ChNC.Add((object) 45);
      ChNC.Add((object) 40);
      ChNC.Add((object) 35);
      ChNC.Add((object) 30);
      ChNC.Add((object) 25);
      ChNC.Add((object) 20);
      ChNC.Add((object) 15);
      ChNC.Add((object) 10);
      List<object> items1 = new List<object>();
      items1.Add((object) "None");
      items1.Add((object) "Male & Female");
      items1.Add((object) "Male");
      items1.Add((object) "Female");
      items1.Add((object) "Female - Topless");
      items1.Add((object) "Male & Female - Topless");
      List<object> items2 = new List<object>();
      items2.Add((object) "None");
      items2.Add((object) "Male & Female");
      items2.Add((object) "Male");
      items2.Add((object) "Female");
      items2.Add((object) "Female - Topless");
      items2.Add((object) "Male & Female - Topless");
      items2.Add((object) "Custom - From Ini");
      List<object> BColour = new List<object>();
      BColour.Add((object) BlipColor.Green);
      BColour.Add((object) BlipColor.Blue);
      BColour.Add((object) BlipColor.Yellow);
      BColour.Add((object) BlipColor.Red);
      BColour.Add((object) BlipColor.Purple);
      BColour.Add((object) BlipColor.Pink);
      List<object> MColour = new List<object>();
      MColour.Add((object) "Green");
      MColour.Add((object) "Blue");
      MColour.Add((object) "Yellow");
      MColour.Add((object) "Red");
      MColour.Add((object) "Purple");
      MColour.Add((object) "Pink");
      List<object> UiColour = new List<object>();
      UiColour.Add((object) "   g   ");
      UiColour.Add((object) "   b   ");
      UiColour.Add((object) "   y  ");
      UiColour.Add((object) "   r   ");
      UiColour.Add((object) "   p   ");
      UiColour.Add((object) "   m   ");
      List<object> Tex = new List<object>();
      Tex.Add((object) "CASINO_DIA_PL");
      Tex.Add((object) "CASINO_DIA_SLW_PL");
      Tex.Add((object) "CASINO_HLW_PL");
      Tex.Add((object) "CASINO_WIN_PL");
      Tex.Add((object) "CASINO_WIN_SLW_PL");
      Tex.Add((object) "PL_WEB_CAS");
      Tex.Add((object) "CASINO_SNWFLK_PL");
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.Misc, "Misc");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuListItem MC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu.AddItem((UIMenuItem) MC);
      UIMenuListItem BC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu.AddItem((UIMenuItem) BC);
      UIMenuItem uiMenuItem1 = new UIMenuItem("Current Host : " + this.GetHostName());
      uiMenu.AddItem(uiMenuItem1);
      UIMenuItem SetHN = new UIMenuItem("Set Host Name");
      uiMenu.AddItem(SetHN);
      UIMenuListItem uiC = new UIMenuListItem("UI Color : ", UiColour, 0);
      uiMenu.AddItem((UIMenuItem) uiC);
      UIMenuItem Setall = new UIMenuItem("Save All");
      uiMenu.AddItem(Setall);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem2);
      UIMenuListItem PedO = new UIMenuListItem("Jacuzzi Peds  : ", items1, 0);
      uiMenu.AddItem((UIMenuItem) PedO);
      UIMenuItem ChangePeds = new UIMenuItem("Change peds in Jacuzzi");
      uiMenu.AddItem(ChangePeds);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem3);
      UIMenuListItem PedO2 = new UIMenuListItem("Terrace Peds : ", items2, 0);
      uiMenu.AddItem((UIMenuItem) PedO2);
      UIMenuItem ChangePeds2 = new UIMenuItem("Change peds in Terrace Area");
      uiMenu.AddItem(ChangePeds2);
      UIMenuItem uiMenuItem4 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem4);
      UIMenuListItem PoolPeds = new UIMenuListItem("Party Peds Chance : ", ChNC, 0);
      uiMenu.AddItem((UIMenuItem) PoolPeds);
      UIMenuItem ChangePoolPeds = new UIMenuItem("Change Party Peds Chance");
      uiMenu.AddItem(ChangePoolPeds);
      UIMenuItem uiMenuItem5 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem5);
      UIMenuListItem PartyPeds = new UIMenuListItem("Pool Peds Chance : ", ChNC, 0);
      uiMenu.AddItem((UIMenuItem) PartyPeds);
      UIMenuItem ChangePartyPeds = new UIMenuItem("Change Pool Peds Chance");
      uiMenu.AddItem(ChangePartyPeds);
      UIMenuItem uiMenuItem6 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem6);
      UIMenuListItem Enable_BarPedsT = new UIMenuListItem("Bar Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_BarPedsT);
      UIMenuItem Enable_BarPeds = new UIMenuItem("Change Bar Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_BarPeds);
      Enable_BarPeds.Description = "Disable/Enable Any Ped that is at the Bar Area";
      UIMenuItem uiMenuItem7 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem7);
      UIMenuListItem Enable_SlotPedsT = new UIMenuListItem("Slot Machine Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_SlotPedsT);
      UIMenuItem Enable_SlotPeds = new UIMenuItem("Change Slot Machine Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_SlotPeds);
      Enable_SlotPeds.Description = "Disable/Enable Any Ped that is using Slot Machine";
      UIMenuItem uiMenuItem8 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem8);
      UIMenuListItem Enable_MainPedsT = new UIMenuListItem("Main Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_MainPedsT);
      UIMenuItem Enable_MainPeds = new UIMenuItem("Change Main Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_MainPeds);
      Enable_MainPeds.Description = "Disable/Enable Any Ped that is related to the Diamond Casino Update";
      UIMenuItem uiMenuItem9 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem9);
      UIMenuListItem Enable_RandomWPedsT = new UIMenuListItem("Random Wander Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_RandomWPedsT);
      UIMenuItem Enable_RandomWPeds = new UIMenuItem("Random Wander Main Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_RandomWPeds);
      Enable_RandomWPeds.Description = "Disable/Enable Any Ped that is wandering around that is a random ped model";
      UIMenuItem uiMenuItem10 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem10);
      UIMenuListItem Enable_MWPedsT = new UIMenuListItem("Main Wander Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_MWPedsT);
      UIMenuItem Enable_MWPeds = new UIMenuItem("Main Wander Main Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_MWPeds);
      Enable_MWPeds.Description = "Disable/Enable Any Ped that is wandering around that is not a random ped model";
      UIMenuItem uiMenuItem11 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem11);
      UIMenuListItem Enable_McPedsT = new UIMenuListItem("Misc Peds Enabled : ", TF, 0);
      uiMenu.AddItem((UIMenuItem) Enable_McPedsT);
      UIMenuItem Enable_McPeds = new UIMenuItem("Misc Peds Enabled/Disabled");
      uiMenu.AddItem(Enable_McPeds);
      Enable_MWPeds.Description = "Disable/Enable Any Ped that is standing around in the Casino Interior";
      UIMenuItem uiMenuItem12 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem12);
      UIMenuListItem MST = new UIMenuListItem("Texture : ", Tex, 0);
      uiMenu.AddItem((UIMenuItem) MST);
      UIMenuItem SetMainText = new UIMenuItem("Set Main Screen Texture");
      uiMenu.AddItem(SetMainText);
      UIMenuItem SetPenthouseText = new UIMenuItem("Set Penthouse Screen Texture");
      uiMenu.AddItem(SetPenthouseText);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SetPenthouseText)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.PenthouseScreensAnimTex = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__0, Tex[MST.Index]);
          this.Config.SetValue<string>("Misc", "PenthouseScreensAnimTex", this.PenthouseScreensAnimTex);
          this.Config.Save();
          UI.Notify("Penthouse Screen Texture has changed, No need to reload mods");
          this.NCStageS = 0;
          this.NCStageS2 = 0;
          this.NCStageS3 = 0;
          this.DeleteNComputerscreens1Penthouse();
          this.DeleteNComputerscreensPenthouse();
          this.CreateNComputerScreensPenthouse();
        }
        if (item == SetMainText)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MainScreensAnimTex = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__1, Tex[MST.Index]);
          this.Config.SetValue<string>("Misc", "MainScreensAnimTex", this.MainScreensAnimTex);
          this.Config.Save();
          UI.Notify("Main Screen Texture has changed, No need to reload mods");
          this.NCStageS = 0;
          this.NCStageS2 = 0;
          this.DeleteNComputerscreens1Main();
          this.DeleteNComputerscreens1Penthouse();
        }
        if (item == Enable_McPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MiscPedsEnabled = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__2, TF[Enable_McPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "MiscPedsEnabled", this.MiscPedsEnabled);
          this.Config.Save();
          UI.Notify("Misc Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == Enable_BarPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.BarPeds = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__3, TF[Enable_BarPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "BarPeds", this.BarPeds);
          this.Config.Save();
          UI.Notify("Bar Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == Enable_MainPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MainPeds = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__4, TF[Enable_MainPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "MainPeds", this.MainPeds);
          this.Config.Save();
          UI.Notify("Main Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == Enable_MWPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MainWanderPeds = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__5, TF[Enable_MWPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "MainWanderPeds", this.MainWanderPeds);
          this.Config.Save();
          UI.Notify("Main Wandering Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == Enable_RandomWPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.RandomWanderPeds = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__6, TF[Enable_RandomWPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "RandomWanderPeds", this.RandomWanderPeds);
          this.Config.Save();
          UI.Notify("Random Wandering Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == Enable_SlotPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.SlotPeds = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__7, TF[Enable_SlotPedsT.Index]);
          this.Config.SetValue<bool>("Interior Peds", "SlotPeds", this.SlotPeds);
          this.Config.Save();
          UI.Notify("Slot Machine Ped Settings have changed, this will not take effect until the mod has reloaded");
        }
        if (item == ChangePartyPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (int), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.PartyPedChance = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__8, ChNC[PartyPeds.Index]);
          this.Config.SetValue<int>("Penthouse", "PartyPedChance", this.PartyPedChance);
          this.Config.Save();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.AddPeds();
          UI.Notify(this.GetHostName() + " : Changed Party Peds Chance ");
        }
        if (item == ChangePoolPeds)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1064.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (int), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.PoolPedChance = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__9, ChNC[PoolPeds.Index]);
          this.Config.SetValue<int>("Penthouse", "PoolPedChance", this.PoolPedChance);
          this.Config.Save();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.AddPeds();
          UI.Notify(this.GetHostName() + " : Changed Pool Peds Chance ");
        }
        if (item == ChangePeds2)
        {
          this.PedType2 = PedO2.Index;
          this.Config.SetValue<int>("Penthouse", "TerracePedType", this.PedType2);
          this.Config.Save();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.AddPeds();
          UI.Notify(this.GetHostName() + " : Changed Peds on Terrace ");
        }
        if (item == ChangePeds)
        {
          this.PedType = PedO.Index;
          this.Config.SetValue<int>("Penthouse", "PedType", this.PedType);
          this.Config.Save();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.AddPeds();
          UI.Notify(this.GetHostName() + " : Changed Peds in Penthouse Hottub ");
        }
        if (item == SetHN)
        {
          this.HostName = Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 16);
          this.Config.SetValue<string>("Misc", "HostName", this.HostName);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Hi im your new boss!");
        }
        if (item != Setall)
          return;
        this.Config.SetValue<string>("Misc", "HostName", this.HostName);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1064.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.Blip_Colour = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__10, BColour[BC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "Blip_Colour", this.Blip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__11 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1064.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.Uicolour = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__11, UiColour[uiC.Index]);
        this.Config.SetValue<string>("Misc", "Uicolour", this.Uicolour);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1064.\u003C\u003Ep__12 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1064.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MarkerColorString = Class1.\u003C\u003Eo__1064.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__1064.\u003C\u003Ep__12, MColour[MC.Index]);
        this.Config.SetValue<string>("Misc", "MarkerColor", this.MarkerColorString);
        this.Config.Save();
        UI.Notify(this.GetHostName() + " : Settings Changed they will take effect when you reload the mod!");
      });
    }

    public void PenthouseOptions()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.SetupArtMenu();
      this.GrabArtWork2();
      this.GrabArtWork();
      float Cost = 0.0f;
      float StyleCost = 0.0f;
      float BarCost = 0.0f;
      float SpaCost = 0.0f;
      float MediaCost = 0.0f;
      float ExtraB_Cost = 0.0f;
      float PDcost = 0.0f;
      List<object> TF = new List<object>();
      TF.Add((object) false);
      TF.Add((object) true);
      List<object> items1 = new List<object>();
      items1.Add((object) "Blank");
      items1.Add((object) "Art Deco");
      items1.Add((object) "Art Nouveau");
      items1.Add((object) "Classical");
      items1.Add((object) "Traditional");
      items1.Add((object) "Imperial");
      items1.Add((object) "Pop");
      items1.Add((object) "Latin");
      items1.Add((object) "Natural");
      items1.Add((object) "Intricate");
      List<object> items2 = new List<object>();
      items2.Add((object) "No Bar");
      items2.Add((object) "Bar Included");
      List<object> items3 = new List<object>();
      items3.Add((object) "No Spa");
      items3.Add((object) "Spa Included");
      List<object> items4 = new List<object>();
      items4.Add((object) "No Media Room");
      items4.Add((object) "Media Room Included");
      List<object> items5 = new List<object>();
      items5.Add((object) "No Extra Room");
      items5.Add((object) "Extra Room Included");
      List<object> items6 = new List<object>();
      items6.Add((object) "Bar Light 1");
      items6.Add((object) "Bar Light 2");
      items6.Add((object) "Bar Light 3");
      List<object> items7 = new List<object>();
      items7.Add((object) "No Poker/Blackjack Dealer");
      items7.Add((object) "Poker/Blackjack Dealer Included");
      List<object> items8 = new List<object>();
      items8.Add((object) "Retro Arcade");
      items8.Add((object) "Modern Arcade");
      List<object> items9 = new List<object>();
      items9.Add((object) "Multicolor");
      items9.Add((object) "Timeless");
      items9.Add((object) "Vibrent");
      items9.Add((object) "Sharp");
      this.submenu14s = this.modMenuPool.AddSubMenu(this.Pent_Menu, "Art Options");
      this.GUIMenus.Add(this.submenu14s);
      this.GUIMenus.Add(this.submenu14s);
      this.submenu13s = this.modMenuPool.AddSubMenu(this.submenu14s, "Sculpture Options");
      this.GUIMenus.Add(this.submenu13s);
      this.GUIMenus.Add(this.submenu13s);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.Pent_Menu, "Party Options");
      this.GUIMenus.Add(uiMenu1);
      this.StartP = new UIMenuItem("Start Party : $20,000");
      uiMenu1.AddItem(this.StartP);
      this.StopP = new UIMenuItem("~m~Stop Party~w~");
      uiMenu1.AddItem(this.StopP);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == this.StartP && !this.PartyOn && Game.Player.Money >= 20000)
        {
          this.Party_GetDateRelative();
          Game.Player.Money -= 20000;
          this.StartP.Text = "~m~Start Party : $20,000";
          this.StopP.Text = "Stop Party~w~";
          Game.FadeScreenOut(2500);
          Script.Wait(3500);
          this.PartyOn = true;
          Script.Wait(3500);
          Game.FadeScreenIn(2500);
          UI.Notify(this.GetHostName() + " Party Will end in 24 hours!");
        }
        if (item != this.StopP || !this.PartyOn)
          return;
        this.StartP.Text = "Start Party : $20,000";
        this.StopP.Text = "~m~Stop Party~w~";
        Game.FadeScreenOut(2500);
        Script.Wait(3500);
        this.PartyOn = false;
        Script.Wait(3500);
        Game.FadeScreenIn(2500);
      });
      UIMenuListItem s = new UIMenuListItem("Sculpture : ", this.SculptProp, 0);
      this.submenu13s.AddItem((UIMenuItem) s);
      UIMenuListItem loc2 = new UIMenuListItem("Location : ", this.SculptLoc, 0);
      this.submenu13s.AddItem((UIMenuItem) loc2);
      this.submenu13s.AddItem(new UIMenuItem("Rotate Object press Q/E"));
      UIMenuItem Buysculpt = new UIMenuItem("Place Scultpture : $100,000");
      this.submenu13s.AddItem(Buysculpt);
      UIMenuItem RES = new UIMenuItem("Remove All Scultpture ");
      this.submenu13s.AddItem(RES);
      RES.Description = "This May cause the game to freeze for a second, please be patient";
      Buysculpt.Description = "Sculpture positions are Marked in Red";
      this.submenu13s.AddItem(new UIMenuItem("-----------------------------------------------------------"));
      UIMenuListItem Pevart2 = new UIMenuListItem("Preview Design : ", TF, 0);
      this.submenu13s.AddItem((UIMenuItem) Pevart2);
      this.submenu13s.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if ((item == s || item == loc2) && this.CamActive && this.ArtPropCam != (Camera) null)
        {
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.ArtPropCam.IsActive = false;
          this.ArtPropCam.Destroy();
          this.CamActive = true;
          this.ArtPropCam = World.CreateCamera(this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 0.0f)), new Vector3(0.0f, 0.0f, 0.0f), 100f);
          this.ArtPropCam.IsActive = true;
          this.ArtPropCam.FarClip = 2000f;
          Vector3 vector3 = this.ArtPropCam.Position - this.CurrentArtProp.Position;
          vector3.Normalize();
          this.ArtPropCam.Rotation = vector3;
          Game.Player.Character.Position = this.ArtPropCam.Position;
          Game.Player.Character.IsVisible = false;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.ArtPropCam;
        }
        if (item == s || item == loc2)
        {
          if ((Entity) this.CurrentArtProp != (Entity) null)
            this.CurrentArtProp.Delete();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, Prop>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Prop), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, Prop> target1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__2.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, Prop>> p2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__2;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__1 = CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "CreateProp", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[5]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, object, object, bool, bool, object> target2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>> p1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__1;
          System.Type type = typeof (World);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__0 = CallSite<Func<CallSite, Class1, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__0, this, this.SculptProp[s.Index]);
          object obj2 = this.SculptLoc[loc2.Index];
          object obj3 = target2((CallSite) p1, type, obj1, obj2, true, false);
          this.CurrentArtProp = target1((CallSite) p2, obj3);
          this.CurrentArtProp.FreezePosition = true;
          UI.Notify("Painting ID " + (loc2.Index + 1).ToString());
        }
        if (item != Pevart2)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__4.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__4;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__3, TF[Pevart2.Index], true);
        if (target3((CallSite) p4, obj4) && (Entity) this.CurrentArtProp != (Entity) null && !this.CamActive)
        {
          Game.Player.Character.IsVisible = false;
          this.CamActive = true;
          Vector3 rotation = Game.Player.Character.Position - this.CurrentArtProp.Position;
          rotation.Normalize();
          this.ArtPropCam = World.CreateCamera(this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 0.0f)), rotation, 100f);
          this.ArtPropCam.IsActive = true;
          this.ArtPropCam.FarClip = 2000f;
          Game.Player.Character.Position = this.ArtPropCam.Position;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.ArtPropCam;
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p6 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__5, TF[Pevart2.Index], false);
        if (target4((CallSite) p6, obj5) && this.CamActive)
        {
          this.CamActive = false;
          if (this.ArtPropCam != (Camera) null)
          {
            Game.Player.Character.IsVisible = true;
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
            this.ArtPropCam.IsActive = false;
            this.ArtPropCam.Destroy();
          }
        }
      });
      this.submenu13s.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RES)
        {
          foreach (Prop artProp in this.ArtProps)
          {
            if ((Entity) artProp != (Entity) null)
              artProp.Delete();
          }
          for (int index1 = 0; index1 < this.SculptLoc.Count; ++index1)
          {
            try
            {
              this.Config.SetValue<string>("Art", "SculptPropName_" + index1.ToString(), "null");
              this.Config.SetValue<int>("Art", "SculptPropRotationZ_" + index1.ToString(), 0);
              this.Config.Save();
            }
            catch
            {
              UI.Notify("(~b~1~w~) Error, Found New Item " + index1.ToString() + ",(~b~2~w~)Repairing Ini file, this may take some time");
              this.Config.SetValue<string>("Art", "SculptPropName_" + index1.ToString(), "null");
              this.Config.SetValue<int>("Art", "SculptPropRotationZ_" + index1.ToString(), 0);
              this.Config.Save();
            }
            this.RefreshPenthouse();
            UI.Notify(this.GetHostName() + " : All Sculptures Removed");
          }
        }
        if (item != Buysculpt)
          return;
        if (Game.Player.Money > 100000)
        {
          this.RemoveArt = true;
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          Game.Player.Money -= 100000;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__7 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (string)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__7, this.Config, "Art", "SculptPropName_" + loc2.Index.ToString(), this.SculptProp[s.Index]);
          this.Config.SetValue<int>("Art", "SculptPropRotationZ_" + loc2.Index.ToString(), (int) this.CurrentArtProp.Rotation.Z);
          this.Config.Save();
          this.RemoveArt = true;
          this.RefreshPenthouse();
        }
        else
          UI.Notify("you do not have enough for this painting");
      });
      this.submenu12s = this.modMenuPool.AddSubMenu(this.submenu14s, "Painting Options");
      this.GUIMenus.Add(this.submenu12s);
      this.GUIMenus.Add(this.submenu12s);
      this.submenu12s.AddItem(new UIMenuItem("-----------------------Paintings--------------------------"));
      UIMenuListItem p = new UIMenuListItem("Painting : ", this.PaintProp, 0);
      this.submenu12s.AddItem((UIMenuItem) p);
      UIMenuListItem loc = new UIMenuListItem("Location : ", this.PLocations, 0);
      this.submenu12s.AddItem((UIMenuItem) loc);
      UIMenuItem Buyart = new UIMenuItem("Put up Artwork : $100,000");
      this.submenu12s.AddItem(Buyart);
      UIMenuItem REP = new UIMenuItem("Remove All Paintings ");
      this.submenu12s.AddItem(REP);
      REP.Description = "This May cause the game to freeze for a second, please be patient";
      Buyart.Description = "Painting positions are Marked in Green";
      this.submenu12s.AddItem(new UIMenuItem("-----------------------------------------------------------"));
      UIMenuListItem Pevart = new UIMenuListItem("Preview Design : ", TF, 0);
      this.submenu12s.AddItem((UIMenuItem) Pevart);
      this.submenu12s.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if ((item == loc || item == loc2) && this.CamActive && this.ArtPropCam != (Camera) null)
        {
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.ArtPropCam.IsActive = false;
          this.ArtPropCam.Destroy();
          this.CamActive = true;
          this.ArtPropCam = World.CreateCamera(this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 1f)), new Vector3(0.0f, 0.0f, 0.0f), 100f);
          this.ArtPropCam.IsActive = true;
          this.ArtPropCam.FarClip = 2000f;
          Vector3 vector3 = this.ArtPropCam.Position - this.CurrentArtProp.Position;
          vector3.Normalize();
          this.ArtPropCam.Rotation = vector3;
          Game.Player.Character.Position = this.ArtPropCam.Position;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.ArtPropCam;
        }
        if (item == s || item == loc2)
        {
          if ((Entity) this.CurrentArtProp != (Entity) null)
            this.CurrentArtProp.Delete();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, Prop>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Prop), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, Prop> target1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__10.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, Prop>> p10 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__10;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__9 = CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "CreateProp", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[5]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, object, object, bool, bool, object> target2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__9.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>> p9 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__9;
          System.Type type = typeof (World);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__8 = CallSite<Func<CallSite, Class1, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__8, this, this.SculptProp[s.Index]);
          object obj2 = this.SculptLoc[loc2.Index];
          object obj3 = target2((CallSite) p9, type, obj1, obj2, true, false);
          this.CurrentArtProp = target1((CallSite) p10, obj3);
          this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 0.0f));
          this.CurrentArtProp.FreezePosition = true;
          UI.Notify("Painting ID " + (loc.Index + 1).ToString());
        }
        if (item == p || item == loc)
        {
          if ((Entity) this.CurrentArtProp != (Entity) null)
            this.CurrentArtProp.Delete();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__13 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, Prop>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Prop), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, Prop> target1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__13.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, Prop>> p13 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__13;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__12 = CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "CreateProp", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[5]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, object, object, bool, bool, object> target2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__12.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, object, object, bool, bool, object>> p12 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__12;
          System.Type type = typeof (World);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__11 = CallSite<Func<CallSite, Class1, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__11, this, this.PaintProp[p.Index]);
          object plocation = this.PLocations[loc.Index];
          object obj2 = target2((CallSite) p12, type, obj1, plocation, true, false);
          this.CurrentArtProp = target1((CallSite) p13, obj2);
          this.CurrentArtProp.FreezePosition = true;
          UI.Notify("Painting ID " + (loc.Index + 1).ToString());
          if (loc.Index == 0)
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, -31f);
          if (loc.Index == 1)
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 150f);
          if (loc.Index == 2)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, 0.6f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 150f);
          }
          if (loc.Index == 3)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, 0.6f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 150f);
          }
          if (loc.Index == 4)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, 0.3f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 139f);
          }
          if (loc.Index == 5)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 59f);
          }
          if (loc.Index == 6)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 59f);
          }
          if (loc.Index == 7)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -0.02f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, -33f);
          }
          if (loc.Index == 8)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.6f, 0.0f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, -33f);
          }
          if (loc.Index == 9)
          {
            this.CurrentArtProp.Position = this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -0.04f, 0.0f));
            this.CurrentArtProp.Rotation = new Vector3(0.0f, 0.0f, 55f);
          }
        }
        if (item != Pevart)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__15 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__15.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p15 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__15;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__14, TF[Pevart.Index], true);
        if (target3((CallSite) p15, obj4) && (Entity) this.CurrentArtProp != (Entity) null && !this.CamActive)
        {
          this.CamActive = true;
          Vector3 rotation = Game.Player.Character.Position - this.CurrentArtProp.Position;
          rotation.Normalize();
          this.ArtPropCam = World.CreateCamera(this.CurrentArtProp.GetOffsetInWorldCoords(new Vector3(0.0f, -1f, 1f)), rotation, 100f);
          this.ArtPropCam.IsActive = true;
          this.ArtPropCam.FarClip = 2000f;
          Game.Player.Character.Position = this.ArtPropCam.Position;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.ArtPropCam;
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__17 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__17.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p17 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__17;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__16, TF[Pevart.Index], false);
        if (target4((CallSite) p17, obj5) && this.CamActive)
        {
          this.CamActive = false;
          if (this.ArtPropCam != (Camera) null)
          {
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
            this.ArtPropCam.IsActive = false;
            this.ArtPropCam.Destroy();
          }
        }
      });
      this.submenu12s.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == REP)
        {
          foreach (Prop artProp in this.ArtProps)
          {
            if ((Entity) artProp != (Entity) null)
              artProp.Delete();
          }
          this.ArtPropName_1 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_1", this.ArtPropName_1);
          this.Config.Save();
          this.ArtPropName_2 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_2", this.ArtPropName_2);
          this.Config.Save();
          this.ArtPropName_3 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_3", this.ArtPropName_3);
          this.Config.Save();
          this.ArtPropName_4 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_4", this.ArtPropName_4);
          this.Config.Save();
          this.ArtPropName_5 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_5", this.ArtPropName_5);
          this.Config.Save();
          this.ArtPropName_6 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_6", this.ArtPropName_6);
          this.Config.Save();
          this.ArtPropName_7 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_7", this.ArtPropName_7);
          this.Config.Save();
          this.ArtPropName_8 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_8", this.ArtPropName_8);
          this.Config.Save();
          this.ArtPropName_9 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_9", this.ArtPropName_9);
          this.Config.Save();
          this.ArtPropName_10 = "null";
          this.Config.SetValue<string>("Art", "ArtPropName_10", this.ArtPropName_10);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : removed all Paintings");
          this.RefreshPenthouse();
        }
        if (item != Buyart)
          return;
        if (Game.Player.Money > 100000)
        {
          this.RemoveArt = true;
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          UI.Notify("P " + p.Index.ToString());
          if (loc.Index == 0)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__18 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__18, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_1", this.ArtPropName_1);
            this.Config.Save();
          }
          if (loc.Index == 1)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__19, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_2", this.ArtPropName_2);
            this.Config.Save();
          }
          if (loc.Index == 2)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_3 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__20, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_3", this.ArtPropName_3);
            this.Config.Save();
          }
          if (loc.Index == 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_4 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__21, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_4", this.ArtPropName_4);
            this.Config.Save();
          }
          if (loc.Index == 4)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__22 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_5 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__22, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_5", this.ArtPropName_5);
            this.Config.Save();
          }
          if (loc.Index == 5)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__23 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_6 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__23, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_6", this.ArtPropName_6);
            this.Config.Save();
          }
          if (loc.Index == 6)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__24 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_7 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__24, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_7", this.ArtPropName_7);
            this.Config.Save();
          }
          if (loc.Index == 7)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_8 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__25, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_8", this.ArtPropName_8);
            this.Config.Save();
          }
          if (loc.Index == 8)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__26 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_9 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__26, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_9", this.ArtPropName_9);
            this.Config.Save();
          }
          if (loc.Index == 9)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__27 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1067.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ArtPropName_10 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__27.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__27, this.PaintProp[p.Index]);
            this.Config.SetValue<string>("Art", "ArtPropName_10", this.ArtPropName_10);
            this.Config.Save();
          }
          Game.Player.Money -= 100000;
          this.ArtProps.Add(this.CurrentArtProp);
          this.RemoveArt = true;
          this.RefreshPenthouse();
          this.CurrentArtProp = (Prop) null;
        }
        else
          UI.Notify("you do not have enough for this painting");
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.Pent_Menu, "Penthouse");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem S = new UIMenuListItem("Style : ", items1, 0);
      uiMenu2.AddItem((UIMenuItem) S);
      UIMenuListItem B = new UIMenuListItem("Bar : ", items2, 0);
      uiMenu2.AddItem((UIMenuItem) B);
      UIMenuListItem Sp = new UIMenuListItem("Spa : ", items3, 0);
      uiMenu2.AddItem((UIMenuItem) Sp);
      UIMenuListItem M = new UIMenuListItem("Media Room  : ", items4, 0);
      uiMenu2.AddItem((UIMenuItem) M);
      UIMenuListItem EB = new UIMenuListItem("Extra Bedroom : ", items5, 0);
      uiMenu2.AddItem((UIMenuItem) EB);
      UIMenuListItem BL = new UIMenuListItem("Bar Light : ", items6, 0);
      uiMenu2.AddItem((UIMenuItem) BL);
      UIMenuListItem PD = new UIMenuListItem("Poker Dealer: ", items7, 0);
      uiMenu2.AddItem((UIMenuItem) PD);
      UIMenuListItem A = new UIMenuListItem("Arcade : ", items8, 0);
      uiMenu2.AddItem((UIMenuItem) A);
      UIMenuListItem C = new UIMenuListItem("Colour : ", items9, 0);
      uiMenu2.AddItem((UIMenuItem) C);
      UIMenuItem Buy = new UIMenuItem("Buy " + Cost.ToString("N"));
      uiMenu2.AddItem(Buy);
      UIMenuItem uiMenuItem = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem);
      UIMenuListItem Pev = new UIMenuListItem("Preview Design : ", TF, 0);
      uiMenu2.AddItem((UIMenuItem) Pev);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        BarCost = B.Index != 1 ? 0.0f : 700000f;
        SpaCost = Sp.Index != 1 ? 0.0f : 600000f;
        ExtraB_Cost = EB.Index != 1 ? 0.0f : 200000f;
        PDcost = PD.Index != 1 ? 0.0f : 1065000f;
        MediaCost = M.Index != 1 ? 0.0f : 200000f;
        StyleCost = S.Index < 1 ? 0.0f : (float) (240000 * (int) (1.35 * (double) S.Index));
        Cost = BarCost + SpaCost + ExtraB_Cost + PDcost + MediaCost + StyleCost;
        Buy.Text = "Buy " + Cost.ToString("N");
        if (item != Buy)
          return;
        if ((double) Game.Player.Character.Money <= (double) Cost)
        {
          if (this.IsBuying)
          {
            this.IsBuying = false;
            this.RunCutscene();
          }
          Game.Player.Money -= (int) Cost;
          this.Penthouse_Style = S.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Style", this.Penthouse_Style);
          this.Penthouse_Media = M.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Media", this.Penthouse_Media);
          this.Penthouse_Spa = Sp.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Spa", this.Penthouse_Spa);
          this.Penthouse_Bar = B.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Bar", this.Penthouse_Bar);
          this.Penthouse_Colour = C.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Colour", this.Penthouse_Colour);
          this.Penthouse_Arcade = A.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_Arcade", this.Penthouse_Arcade);
          this.Penthouse_BarLight = BL.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_BarLight", this.Penthouse_BarLight);
          this.Penthouse_PokerDealer = PD.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_PokerDealer", this.Penthouse_PokerDealer);
          this.Penthouse_ExtraBedroom = EB.Index;
          this.Config.SetValue<int>("Penthouse", "Penthouse_ExtraBedroom", this.Penthouse_ExtraBedroom);
          this.Config.Save();
          this.RefreshPenthouse();
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this Penthouse");
      });
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__29 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__29 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__29.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p29 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__29;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__28 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1067.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__28.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__28, TF[Pev.Index], true);
        if (target1((CallSite) p29, obj1))
        {
          this.DeletePentInterior();
          this.ActiveInterior(S.Index, Sp.Index, M.Index, PD.Index, A.Index, EB.Index, B.Index, C.Index);
          this.ActiveInt = true;
        }
        if (item == Pev)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__31 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__31 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__31.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p31 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__31;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__30 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__30 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__30.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__30, TF[Pev.Index], false);
          if (target2((CallSite) p31, obj2))
          {
            this.DeletePentInterior();
            this.RefreshPenthouse();
            this.ActiveInt = false;
          }
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__33 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__33 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__33.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p33 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__33;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1067.\u003C\u003Ep__32 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1067.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj3 = Class1.\u003C\u003Eo__1067.\u003C\u003Ep__32.Target((CallSite) Class1.\u003C\u003Eo__1067.\u003C\u003Ep__32, TF[Pev.Index], true);
          if (target3((CallSite) p33, obj3))
          {
            this.DeletePentInterior();
            this.ActiveInterior(S.Index, Sp.Index, M.Index, PD.Index, A.Index, EB.Index, B.Index, C.Index);
            this.ActiveInt = true;
          }
        }
        BarCost = B.Index != 1 ? 0.0f : 700000f;
        SpaCost = Sp.Index != 1 ? 0.0f : 600000f;
        ExtraB_Cost = EB.Index != 1 ? 0.0f : 200000f;
        PDcost = PD.Index != 1 ? 0.0f : 1065000f;
        MediaCost = M.Index != 1 ? 0.0f : 200000f;
        StyleCost = S.Index < 1 ? 0.0f : (float) (240000 * (int) (1.35 * (double) S.Index));
        Cost = BarCost + SpaCost + ExtraB_Cost + PDcost + MediaCost + StyleCost;
        Buy.Text = "Buy " + Cost.ToString("N");
      });
    }

    public void CasinoOptions()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.Casino_Menu, "Memberships");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Basic = new UIMenuItem("Basic Membership : $500");
      uiMenu.AddItem(Basic);
      Basic.Description = "Basic Membership, No Penthouse, No rooftop access, No garage, no Busines access, used for playing the games";
      UIMenuItem Business = new UIMenuItem("Business Membership : $1,500,000");
      uiMenu.AddItem(Business);
      Business.Description = "Business Membership, No Penthouse, No rooftop access, No garage, full Business access starting on business level 1";
      UIMenuItem Vip = new UIMenuItem("VIP Membership : $6,000,000");
      uiMenu.AddItem(Vip);
      Vip.Description = "Vip Membership, Full Penthouse, Full rooftop access, 35 car garage, full Business access starting on business level 1";
      UIMenuItem VipPlus = new UIMenuItem("VIP+  Membership : $12,000,000");
      uiMenu.AddItem(VipPlus);
      VipPlus.Description = "Vip Membership, Full Penthouse, Full rooftop access, 35 car garage, full Business access starting on business level 10";
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Basic)
        {
          if (this.Casino_level == 0)
          {
            if (Game.Player.Money >= 500)
            {
              Game.Player.Money -= 500;
              this.purchaselvl = 1;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Casino_level = 1;
              this.Config.SetValue<int>("Setup", "Casinoi_Upgrade_Level", this.Casino_level);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Successfuly Purchased ~p~Basic~w~ Membership, Enjoy your Stay");
              this.RunCutscene();
            }
            else
              UI.Notify(this.GetHostName() + " : You do not have enough money for this!");
          }
          else
            UI.Notify(this.GetHostName() + " : You either all ready own this membership or a higher membership");
        }
        if (item == Business)
        {
          if (this.Casino_level <= 1)
          {
            if (Game.Player.Money >= 1500000)
            {
              Game.Player.Money -= 1500000;
              this.purchaselvl = 1;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Casino_level = 2;
              this.Config.SetValue<int>("Setup", "Casinoi_Upgrade_Level", this.Casino_level);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Successfuly Purchased ~p~Business~w~ Membership, Enjoy your Stay");
              this.RunCutscene();
            }
            else
              UI.Notify(this.GetHostName() + " : You do not have enough money for this!");
          }
          else
            UI.Notify(this.GetHostName() + " : You either all ready own this membership or a higher membership");
        }
        if (item == Vip)
        {
          if (this.Casino_level <= 2)
          {
            if (Game.Player.Money >= 6000000)
            {
              Game.Player.Money -= 6000000;
              this.purchaselvl = 1;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Casino_level = 3;
              this.Config.SetValue<int>("Setup", "Casinoi_Upgrade_Level", this.Casino_level);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Successfuly Purchased ~p~Vip~w~ Membership, Enjoy your Stay");
              this.modMenuPool.CloseAllMenus();
              this.IsBuying = true;
              if (!this.Pent_Menu.Visible)
                this.Pent_Menu.Visible = !this.Pent_Menu.Visible;
            }
            else
              UI.Notify(this.GetHostName() + " : You do not have enough money for this!");
          }
          else
            UI.Notify(this.GetHostName() + " : You either all ready own this membership or a higher membership");
        }
        if (item != VipPlus)
          return;
        if (this.Casino_level <= 3)
        {
          if (Game.Player.Money >= 12000000)
          {
            Game.Player.Money -= 12000000;
            this.purchaselvl = 10;
            this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            this.Casino_level = 4;
            this.Config.SetValue<int>("Setup", "Casinoi_Upgrade_Level", this.Casino_level);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : Successfuly Purchased ~p~Vip+~w~ Membership, Enjoy your Stay");
            this.modMenuPool.CloseAllMenus();
            this.IsBuying = true;
            if (!this.Pent_Menu.Visible)
              this.Pent_Menu.Visible = !this.Pent_Menu.Visible;
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this!");
        }
        else
          UI.Notify(this.GetHostName() + " : You either all ready own this membership or a higher membership");
      });
    }

    public void ChipsOptions()
    {
      float Chips = 10f;
      float Money = 10f;
      List<object> Cash = new List<object>();
      Cash.Add((object) 10);
      Cash.Add((object) 50);
      Cash.Add((object) 100);
      Cash.Add((object) 500);
      Cash.Add((object) 1000);
      Cash.Add((object) 5000);
      Cash.Add((object) 10000);
      Cash.Add((object) 100000);
      Cash.Add((object) 1000000);
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.Chips_Menu, "Chips for Money");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Buy = new UIMenuItem("Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N"));
      uiMenu.AddItem(Buy);
      UIMenuListItem list = new UIMenuListItem("Chips Amount : ", Cash, 0);
      uiMenu.AddItem((UIMenuItem) list);
      List<object> Chip = new List<object>();
      Chip.Add((object) 10);
      Chip.Add((object) 50);
      Chip.Add((object) 100);
      Chip.Add((object) 500);
      Chip.Add((object) 1000);
      Chip.Add((object) 5000);
      Chip.Add((object) 10000);
      Chip.Add((object) 25000);
      Chip.Add((object) 50000);
      Chip.Add((object) 75000);
      Chip.Add((object) 100000);
      Chip.Add((object) 125000);
      Chip.Add((object) 150000);
      Chip.Add((object) 300000);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu.AddItem(uiMenuItem1);
      UIMenuListItem C4M = new UIMenuListItem("Amount : ", Chip, 0);
      uiMenu.AddItem((UIMenuItem) C4M);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__2 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1069.\u003C\u003Ep__2 = CallSite<Func<CallSite, System.Type, object, UIMenuItem>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, System.Type, object, UIMenuItem> target1 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__2.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, System.Type, object, UIMenuItem>> p2 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__2;
      System.Type type1 = typeof (UIMenuItem);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__1 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1069.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, string, object> target2 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__1.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, string, object>> p1 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__1;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1069.\u003C\u003Ep__0 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj1 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__0, "Exchange ", Chip[C4M.Index]);
      object obj2 = target2((CallSite) p1, obj1, "c Chips for Money");
      UIMenuItem C_C4M = target1((CallSite) p2, type1, obj2);
      uiMenu.AddItem(C_C4M);
      UIMenuItem C_C4M2 = new UIMenuItem("Exchange " + this.Chips_Amount.ToString() + "c Chips for Money");
      uiMenu.AddItem(C_C4M2);
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        UIMenuItem uiMenuItem2 = C_C4M;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1069.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__5.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p5 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__5;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1069.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target4 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__4.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p4 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__4;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1069.\u003C\u003Ep__3 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__3, "Exchange ", Chip[C4M.Index]);
        object obj4 = target4((CallSite) p4, obj3, "c Chips for Money");
        string str = target3((CallSite) p5, obj4);
        uiMenuItem2.Text = str;
      });
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == C_C4M2)
        {
          if (this.Chips_Amount >= 0)
          {
            Game.Player.Money += this.Chips_Amount;
            this.Chips_Amount = 0;
            this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
            this.Config.Save();
            C_C4M2.Text = "Exchange " + this.Chips_Amount.ToString() + "c Chips for Money";
            UI.Notify(this.GetHostName() + " : Sold all Chips");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have that amount of Chips");
        }
        if (item == C_C4M)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p8 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, int, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.GreaterThanOrEqual, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, int, object> target4 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__7.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, int, object>> p7 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__7;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__6 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Subtract, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__6, this.Chips_Amount, Chip[C4M.Index]);
          object obj4 = target4((CallSite) p7, obj3, 0);
          if (target3((CallSite) p8, obj4))
          {
            Player player1 = Game.Player;
            Player player2 = player1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, int> target5 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__10.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, int>> p10 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__10;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__9 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.AddAssign, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj5 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__9, player1.Money, Chip[C4M.Index]);
            int num = target5((CallSite) p10, obj5);
            player2.Money = num;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__12 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, int> target6 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__12.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, int>> p12 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__12;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__11 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__11 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.SubtractAssign, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj6 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__11, this.Chips_Amount, Chip[C4M.Index]);
            this.Chips_Amount = target6((CallSite) p12, obj6);
            this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
            this.Config.Save();
            C_C4M2.Text = "Exchange " + this.Chips_Amount.ToString() + "c Chips for Money";
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__15 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Action<CallSite, System.Type, object> target7 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__15.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Action<CallSite, System.Type, object>> p15 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__15;
            System.Type type2 = typeof (UI);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__14 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target8 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__14.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p14 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__14;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1069.\u003C\u003Ep__13 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj7 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__13, this.GetHostName() + " : Sold ", Chip[C4M.Index]);
            object obj8 = target8((CallSite) p14, obj7, " worth of Chips");
            target7((CallSite) p15, type2, obj8);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have that amount of Chips");
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1069.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Chips = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__16, Cash[list.Index]);
        Money = Chips * this.Mp;
        Buy.Text = "Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N");
        if (item != Buy)
          return;
        if ((double) Game.Player.Money >= (double) Money)
        {
          Game.Player.Money -= (int) Money;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, int> target3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__18.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, int>> p18 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__18;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__17 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.AddAssign, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj3 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__17, this.Chips_Amount, Cash[list.Index]);
          this.Chips_Amount = target3((CallSite) p18, obj3);
          this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__21 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target4 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__21.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p21 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__21;
          System.Type type2 = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target5 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__20.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p20 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__20;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1069.\u003C\u003Ep__19 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj4 = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__19, this.GetHostName() + " : Successfuly purchased ", Cash[list.Index]);
          object obj5 = target5((CallSite) p20, obj4, " Chips");
          target4((CallSite) p21, type2, obj5);
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this amount of chips");
      });
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1069.\u003C\u003Ep__22 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1069.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Chips = Class1.\u003C\u003Eo__1069.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__1069.\u003C\u003Ep__22, Cash[list.Index]);
        Money = Chips * this.Mp;
        Buy.Text = "Buy : " + Chips.ToString("N") + "c : $" + Money.ToString("N");
      });
    }

    public void ShowIncrease()
    {
      UI.Notify("Level: " + this.purchaselvl.ToString());
      UI.Notify("Max Stocks: " + this.maxstocks.ToString());
      UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
      UI.Notify("Mission Gain: " + this.profitMargin.ToString() + "%");
      UI.Notify("Stock Value: $" + this.stocksvalue.ToString("N"));
    }

    public VehicleHash RandomVehicleFun()
    {
      int num = new System.Random().Next(1, 13);
      if (num == 1)
        this.RandomVehicle = VehicleHash.Baller;
      if (num == 2)
        this.RandomVehicle = VehicleHash.Dominator;
      if (num == 3)
        this.RandomVehicle = VehicleHash.Dukes;
      if (num == 4)
        this.RandomVehicle = VehicleHash.Comet2;
      if (num == 5)
        this.RandomVehicle = VehicleHash.SabreGT;
      if (num == 6)
        this.RandomVehicle = VehicleHash.Schafter2;
      if (num == 7)
        this.RandomVehicle = VehicleHash.Stalion;
      if (num == 8)
        this.RandomVehicle = VehicleHash.Taco;
      if (num == 9)
        this.RandomVehicle = VehicleHash.Voltic;
      if (num == 10)
        this.RandomVehicle = VehicleHash.XLS;
      if (num == 11)
        this.RandomVehicle = VehicleHash.Vader;
      if (num == 12)
        this.RandomVehicle = VehicleHash.Sultan;
      if (num == 13)
        this.RandomVehicle = VehicleHash.Sanchez;
      if (num > 13)
        this.RandomVehicle = VehicleHash.Chino;
      return this.RandomVehicle;
    }

    public Vector3 Randomlocation()
    {
      System.Random random = new System.Random();
      int num = random.Next(1, 13);
      if (num == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (num == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (num == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (num == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (num == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (num == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (num == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (num == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (num == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (num == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (num == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (num == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      if (num > 13)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      return this.VehicleSpawn;
    }

    public VehicleColor GetColor()
    {
      List<object> objectList = new List<object>();
      VehicleColor[] values = (VehicleColor[]) Enum.GetValues(typeof (VehicleColor));
      for (int index = 0; index < values.Length; ++index)
        objectList.Add((object) values[index]);
      int index1 = new System.Random().Next(1, values.Length);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1073.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1073.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, VehicleColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleColor), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return Class1.\u003C\u003Eo__1073.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1073.\u003C\u003Ep__0, objectList[index1]);
    }

    public float GetTableHeight_Cards(int Table)
    {
      float num = 0.0f;
      if (Table < 4)
        num = 0.9f;
      if (Table == 4)
        num = 0.41f;
      return num;
    }

    public float GetTableHeight_Chips(int Table)
    {
      float num = 0.0f;
      if (Table < 4)
        num = 0.3f;
      if (Table == 4)
        num = 0.6f;
      return num;
    }

    private void SetupSpecialMissions()
    {
      UIMenu menu = this.modMenuPool.AddSubMenu(this.SpecialMissions, "Normal Missions");
      this.GUIMenus.Add(menu);
      this.GUIMenus.Add(menu);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(menu, "Property Investment");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem Pi1 = new UIMenuItem("Vinewood Hills");
      uiMenu1.AddItem(Pi1);
      UIMenuItem Pi2 = new UIMenuItem("Sandy Shores");
      uiMenu1.AddItem(Pi2);
      UIMenuItem Pi3 = new UIMenuItem("Paleto Bay");
      uiMenu1.AddItem(Pi3);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Pi3)
        {
          if ((Entity) this.Plane != (Entity) null)
            this.Plane.Delete();
          if (this.PlaneBlip != (Blip) null)
            this.PlaneBlip.Remove();
          if (this.LocationBlip != (Blip) null)
            this.LocationBlip.Remove();
          this.Spawn = new Vector3(-1057.46f, -3490.06f, 15f);
          this.DevMission = 3;
          this.MissionMarker = this.GetLocation(this.DevMission);
          this.shipmentsDElivered = 0;
          this.DeliveryMissionOn = true;
          this.Plane = World.CreateVehicle((GTA.Model) VehicleHash.Stunt, this.Spawn);
          this.PlaneBlip = World.CreateBlip(this.Spawn);
          this.PlaneBlip.Sprite = BlipSprite.Plane;
          this.PlaneBlip.Color = this.Blip_Colour;
          this.PlaneBlip.Name = "Delivery Vehicle";
          this.PlaneBlip.ShowRoute = true;
          this.LocationBlip = World.CreateBlip(this.MissionMarker);
          this.LocationBlip.Sprite = BlipSprite.Briefcase2;
          this.LocationBlip.Color = BlipColor.White;
          this.LocationBlip.Name = "Delivery Point";
          UI.Notify(this.GetHostName() + " Ha ha, we need to do a little bit of advertising, so to speak, you in, ah of course your in, take the Malard At LSIA and deliver fliers around the city");
        }
        if (item == Pi2)
        {
          if ((Entity) this.Plane != (Entity) null)
            this.Plane.Delete();
          if (this.PlaneBlip != (Blip) null)
            this.PlaneBlip.Remove();
          if (this.LocationBlip != (Blip) null)
            this.LocationBlip.Remove();
          this.Spawn = new Vector3(-1057.46f, -3490.06f, 15f);
          this.DevMission = 2;
          this.MissionMarker = this.GetLocation(this.DevMission);
          this.shipmentsDElivered = 0;
          this.DeliveryMissionOn = true;
          this.Plane = World.CreateVehicle((GTA.Model) VehicleHash.Stunt, this.Spawn);
          this.PlaneBlip = World.CreateBlip(this.Spawn);
          this.PlaneBlip.Sprite = BlipSprite.Plane;
          this.PlaneBlip.Color = this.Blip_Colour;
          this.PlaneBlip.Name = "Delivery Vehicle";
          this.PlaneBlip.ShowRoute = true;
          this.LocationBlip = World.CreateBlip(this.MissionMarker);
          this.LocationBlip.Sprite = BlipSprite.Briefcase2;
          this.LocationBlip.Color = BlipColor.White;
          this.LocationBlip.Name = "Delivery Point";
          UI.Notify(this.GetHostName() + " Ha ha, we need to do a little bit of advertising, so to speak, you in, ah of course your in, take the Malard At LSIA and deliver fliers around the city");
        }
        if (item != Pi1)
          return;
        if ((Entity) this.Plane != (Entity) null)
          this.Plane.Delete();
        if (this.PlaneBlip != (Blip) null)
          this.PlaneBlip.Remove();
        if (this.LocationBlip != (Blip) null)
          this.LocationBlip.Remove();
        this.Spawn = new Vector3(-1057.46f, -3490.06f, 15f);
        this.DevMission = 1;
        this.MissionMarker = this.GetLocation(this.DevMission);
        this.shipmentsDElivered = 0;
        this.DeliveryMissionOn = true;
        this.Plane = World.CreateVehicle((GTA.Model) VehicleHash.Stunt, this.Spawn);
        this.PlaneBlip = World.CreateBlip(this.Spawn);
        this.PlaneBlip.Sprite = BlipSprite.Plane;
        this.PlaneBlip.Color = this.Blip_Colour;
        this.PlaneBlip.Name = "Delivery Vehicle";
        this.PlaneBlip.ShowRoute = true;
        this.LocationBlip = World.CreateBlip(this.MissionMarker);
        this.LocationBlip.Sprite = BlipSprite.Briefcase2;
        this.LocationBlip.Color = BlipColor.White;
        this.LocationBlip.Name = "Delivery Point";
        UI.Notify(this.GetHostName() + " Ha ha, we need to do a little bit of advertising, so to speak, you in, ah of course your in, take the Malard At LSIA and deliver fliers around the city");
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(menu, "Going the Mile");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem Gtm1 = new UIMenuItem("LSIA");
      uiMenu2.AddItem(Gtm1);
      UIMenuItem Gtm2 = new UIMenuItem("Sandy Shores");
      uiMenu2.AddItem(Gtm2);
      UIMenuItem Gtm3 = new UIMenuItem("Paleto Bay");
      uiMenu2.AddItem(Gtm3);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Gtm1)
        {
          foreach (Vehicle vehicle in this.EnemyVeh)
          {
            if ((Entity) vehicle != (Entity) null)
              vehicle.Delete();
          }
          foreach (Ped ped in this.EnemyAi)
          {
            if ((Entity) ped != (Entity) null)
              ped.Delete();
          }
          if (this.LocationBlip != (Blip) null)
            this.LocationBlip.Remove();
          this.Missionnum = 14;
          this.VehicleSetup = true;
          this.MissionMarker = new Vector3(-879.1581f, -2298.858f, 4.5f);
          this.LocationBlip = World.CreateBlip(this.MissionMarker);
          this.LocationBlip.Sprite = BlipSprite.Briefcase2;
          this.LocationBlip.Color = this.Blip_Colour;
          this.LocationBlip.Name = "Delivery Point";
          UI.Notify(this.GetHostName() + " We need you to, uh, run a little supply Mission to Paleto Bay, take any vehicle and get to the location alive ");
        }
        if (item == Gtm2)
        {
          foreach (Vehicle vehicle in this.EnemyVeh)
          {
            if ((Entity) vehicle != (Entity) null)
              vehicle.Delete();
          }
          foreach (Ped ped in this.EnemyAi)
          {
            if ((Entity) ped != (Entity) null)
              ped.Delete();
          }
          if (this.LocationBlip != (Blip) null)
            this.LocationBlip.Remove();
          this.Missionnum = 14;
          this.VehicleSetup = true;
          this.MissionMarker = new Vector3(1996.598f, 3061.879f, 45.5f);
          this.LocationBlip = World.CreateBlip(this.MissionMarker);
          this.LocationBlip.Sprite = BlipSprite.Briefcase2;
          this.LocationBlip.Color = this.Blip_Colour;
          this.LocationBlip.Name = "Delivery Point";
          UI.Notify(this.GetHostName() + " We need you to, uh, run a little supply Mission to Sandy Shores, take any vehicle and get to the location alive ");
        }
        if (item != Gtm3)
          return;
        foreach (Vehicle vehicle in this.EnemyVeh)
        {
          if ((Entity) vehicle != (Entity) null)
            vehicle.Delete();
        }
        foreach (Ped ped in this.EnemyAi)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
        if (this.LocationBlip != (Blip) null)
          this.LocationBlip.Remove();
        this.Missionnum = 14;
        this.VehicleSetup = true;
        this.MissionMarker = new Vector3(59.44542f, 6380.147f, 29.5f);
        this.LocationBlip = World.CreateBlip(this.MissionMarker);
        this.LocationBlip.Sprite = BlipSprite.Briefcase2;
        this.LocationBlip.Color = this.Blip_Colour;
        this.LocationBlip.Name = "Delivery Point";
        UI.Notify(this.GetHostName() + " We need you to, uh, run a little supply Mission to LSIA, take any vehicle and get to the location alive ");
      });
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(menu, "Mission 3");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(this.SpecialMissions, "Special Missions");
      this.GUIMenus.Add(uiMenu4);
      this.GUIMenus.Add(uiMenu4);
      UIMenuItem Race1 = new UIMenuItem("Play To Win");
      uiMenu4.AddItem(Race1);
      UIMenuItem Race2 = new UIMenuItem("Bad Beaf ");
      uiMenu4.AddItem(Race2);
      UIMenuItem Race3 = new UIMenuItem("Cashing Out");
      uiMenu4.AddItem(Race3);
      UIMenuItem uiMenuItem = new UIMenuItem("One Armed Bandit (Comming Soon)");
      uiMenu4.AddItem(uiMenuItem);
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Race3)
        {
          if ((Entity) this.TargetPed != (Entity) null)
            this.TargetPed.Delete();
          if ((Entity) this.Avery != (Entity) null)
            this.Avery.Delete();
          if ((Entity) this.Pilot != (Entity) null)
            this.Pilot.Delete();
          if ((Entity) this.TargetPed != (Entity) null)
            this.TargetPed.Delete();
          this.TriggeredEscape = false;
          if ((Entity) this.EscapeHeli != (Entity) null)
            this.EscapeHeli.Delete();
          if ((Entity) this.PatrolCar != (Entity) null)
            this.PatrolCar.Delete();
          foreach (Ped ped in this.Guard)
          {
            if ((Entity) ped != (Entity) null)
              ped.Delete();
          }
          UI.Notify(this.GetHostName() + " : It's time to put an end to this madness with Avery, Go to his propperty just outside of LS, and Assasinate him, dont let him escape!");
          UI.Notify("Avery is protected by his guards, who circle the propperty, being stealthy take them out, one by one, to not alert Avery ");
          this.PatrolNodes.Clear();
          this.PatrolNodes2.Clear();
          this.PatrolNodes.Add(new Vector3(1426.422f, 1072.205f, 113f));
          this.PatrolNodes.Add(new Vector3(1426.947f, 1118.224f, 113f));
          this.PatrolNodes.Add(new Vector3(1442.159f, 1128.451f, 113f));
          this.PatrolNodes.Add(new Vector3(1476.234f, 1128.913f, 113f));
          this.PatrolNodes.Add(new Vector3(1474.329f, 1180.191f, 113f));
          this.PatrolNodes.Add(new Vector3(1474.329f, 1180.191f, 113f));
          this.PatrolNodes.Add(new Vector3(1437.031f, 1177.996f, 113f));
          this.PatrolNodes.Add(new Vector3(1431.622f, 1049.913f, 113f));
          foreach (Vector3 patrolNode in this.PatrolNodes)
          {
            System.Random random = new System.Random();
            for (int index1 = 0; index1 < random.Next(2, 5); ++index1)
              this.PatrolNodes2.Add(patrolNode.Around(60f));
          }
          foreach (Vector3 vector3 in this.PatrolNodes2)
            this.PatrolNodes.Add(vector3);
          int num1 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "PRIVATE_SECURITY");
          foreach (Vector3 patrolNode in this.PatrolNodes)
          {
            Ped ped = World.CreatePed(this.RequestModel(PedHash.MerryWeatherCutscene), patrolNode);
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped, (InputArgument) num1);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
            ped.Weapons.Give(WeaponHash.CarbineRifleMk2, 9999, true, true);
            ped.Task.WanderAround(ped.Position, 100f);
            ped.AddBlip();
            ped.CurrentBlip.Sprite = BlipSprite.Enemy;
            ped.CurrentBlip.Name = "Avery Guard";
            ped.CurrentBlip.Color = BlipColor.Red;
            Script.Wait(1);
            this.Guard.Add(ped);
          }
          this.PatrolNodes.Clear();
          this.PatrolNodes.Add(new Vector3(1452.946f, 1120.418f, 114f));
          this.PatrolNodes.Add(new Vector3(1457.026f, 1119.037f, 114f));
          this.PatrolNodes.Add(new Vector3(1465.21f, 1105.891f, 114f));
          this.PatrolNodes.Add(new Vector3(1453.958f, 1104.383f, 114f));
          this.EscapeHeli = World.CreateVehicle((GTA.Model) VehicleHash.Frogger, new Vector3(1458.108f, 1112.802f, 114f), 90f);
          this.EscapeHeli.IsInvincible = true;
          this.EscapeHeli.IsVisible = true;
          foreach (Vector3 patrolNode in this.PatrolNodes)
          {
            System.Random random = new System.Random();
            Ped ped = World.CreatePed(this.RequestModel(PedHash.MerryWeatherCutscene), patrolNode.Around(30f));
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped, (InputArgument) num1);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
            ped.Weapons.Give(WeaponHash.CarbineRifleMk2, 9999, true, true);
            ped.Task.GuardCurrentPosition();
            ped.AddBlip();
            ped.CurrentBlip.Sprite = BlipSprite.Enemy;
            ped.CurrentBlip.Name = "Avery Guard";
            ped.CurrentBlip.Color = BlipColor.Red;
            Script.Wait(1);
            this.Guard.Add(ped);
          }
          this.Avery = World.CreatePed(this.RequestModel("csb_avery"), new Vector3(1457.819f, 1114.861f, 114f), 97f);
          Ped avery = this.Avery;
          int num2 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "PRIVATE_SECURITY");
          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) avery, (InputArgument) num2);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) avery, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) avery, (InputArgument) 1);
          avery.Task.GuardCurrentPosition();
          avery.AddBlip();
          avery.CurrentBlip.Sprite = BlipSprite.Juggernaut;
          avery.CurrentBlip.Name = "Avery Duggman";
          avery.CurrentBlip.Color = BlipColor.Yellow;
          Script.Wait(1);
          this.Pilot = World.CreatePed(this.RequestModel(PedHash.MerryWeatherCutscene), new Vector3(1455.189f, 1114.967f, 114f), -119f);
          Ped pilot = this.Pilot;
          int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "PRIVATE_SECURITY");
          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) pilot, (InputArgument) num3);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) pilot, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) pilot, (InputArgument) 1);
          pilot.Weapons.Give(WeaponHash.CarbineRifleMk2, 9999, true, true);
          pilot.Task.GuardCurrentPosition();
          pilot.AddBlip();
          pilot.CurrentBlip.Sprite = BlipSprite.Enemy;
          pilot.CurrentBlip.Name = "Avery Guard";
          pilot.CurrentBlip.Color = BlipColor.Red;
          Script.Wait(1);
          this.Missionnum = 17;
          this.VehicleSetup = true;
        }
        if (item == Race2)
        {
          this.EnemiesKilled = 0;
          if ((Entity) this.TankerA != (Entity) null)
            this.TankerA.Delete();
          this.Missionnum = 16;
          this.VehicleSetup = true;
          UI.Notify(this.GetHostName() + " : Avery Duggman has Launched an attack on the Diamond Casino & Resort in retaliation to you blowing up his assets, kill all the attackers");
          this.TankerA = World.CreateVehicle((GTA.Model) VehicleHash.Cargobob, new Vector3(913.7707f, 58.54882f, 111f), 15f);
          this.TankerA.OpenDoor(VehicleDoor.FrontLeftDoor, false, true);
          foreach (Ped ped in this.Peds2)
          {
            if ((Entity) ped != (Entity) null)
              ped.Delete();
          }
        }
        if (item == Race1)
        {
          this.Missionnum = 15;
          this.VehicleSetup = true;
          if ((Entity) this.TankerA != (Entity) null)
            this.TankerA.Delete();
          if ((Entity) this.TankerB != (Entity) null)
            this.TankerB.Delete();
          if ((Entity) this.TankerC != (Entity) null)
            this.TankerC.Delete();
          if ((Entity) this.TankerD != (Entity) null)
            this.TankerD.Delete();
          if ((Entity) this.TankerE != (Entity) null)
            this.TankerE.Delete();
          if ((Entity) this.TankerF != (Entity) null)
            this.TankerF.Delete();
          if ((Entity) this.TankerG != (Entity) null)
            this.TankerG.Delete();
          if ((Entity) this.TankerH != (Entity) null)
            this.TankerH.Delete();
          this.TankerA = World.CreateVehicle((GTA.Model) VehicleHash.Tanker, new Vector3(-1065.129f, -2018.915f, 12f), 138f);
          this.TankerB = World.CreateVehicle((GTA.Model) VehicleHash.Tanker, new Vector3(121.4683f, -2190.054f, 5f), -130f);
          GTA.Model model1 = (GTA.Model) VehicleHash.Hauler;
          Vector3 position1 = this.TankerB.Position;
          Vector3 position2 = position1.Around(50f);
          this.TankerE = World.CreateVehicle(model1, position2);
          Function.Call(Hash._0x3C7D42D58F770B54, (InputArgument) this.TankerE, (InputArgument) this.TankerB, (InputArgument) 10);
          this.TankerC = World.CreateVehicle((GTA.Model) VehicleHash.Tanker, new Vector3(-42.65265f, -2211.849f, 8f), -165f);
          GTA.Model model2 = (GTA.Model) VehicleHash.Hauler;
          position1 = this.TankerC.Position;
          Vector3 position3 = position1.Around(50f);
          this.TankerF = World.CreateVehicle(model2, position3);
          Function.Call(Hash._0x3C7D42D58F770B54, (InputArgument) this.TankerF, (InputArgument) this.TankerC, (InputArgument) 10);
          this.TankerD = World.CreateVehicle((GTA.Model) VehicleHash.Tanker, new Vector3(315.0544f, -2833.041f, 5f), -91f);
          GTA.Model model3 = (GTA.Model) VehicleHash.Hauler;
          position1 = this.TankerD.Position;
          Vector3 position4 = position1.Around(50f);
          this.TankerH = World.CreateVehicle(model3, position4);
          Function.Call(Hash._0x3C7D42D58F770B54, (InputArgument) this.TankerH, (InputArgument) this.TankerD, (InputArgument) 10);
          UI.Notify(this.GetHostName() + " : Avery Duggman has been causing Problems again, we need to send a clear message, go destroy this Oil Tanks around the City");
          this.TankerA.AddBlip();
          this.TankerA.CurrentBlip.Sprite = BlipSprite.TargetBusinessBattle;
          this.TankerA.CurrentBlip.Color = BlipColor.Red;
          this.TankerA.CurrentBlip.Name = "Avery Oil Tanker";
          this.TankerB.AddBlip();
          this.TankerB.CurrentBlip.Sprite = BlipSprite.TargetBusinessBattle;
          this.TankerB.CurrentBlip.Color = BlipColor.Red;
          this.TankerB.CurrentBlip.Name = "Avery Oil Tanker";
          this.TankerC.AddBlip();
          this.TankerC.CurrentBlip.Sprite = BlipSprite.TargetBusinessBattle;
          this.TankerC.CurrentBlip.Color = BlipColor.Red;
          this.TankerC.CurrentBlip.Name = "Avery Oil Tanker";
          this.TankerD.AddBlip();
          this.TankerD.CurrentBlip.Sprite = BlipSprite.TargetBusinessBattle;
          this.TankerD.CurrentBlip.Color = BlipColor.Red;
          this.TankerD.CurrentBlip.Name = "Avery Oil Tanker";
        }
        if (item == Race2)
        {
          this.Missionnum = 16;
          this.VehicleSetup = true;
        }
        if (item != Race3)
          return;
        this.Missionnum = 17;
        this.VehicleSetup = true;
      });
    }

    private void ChooseVehicle(int i)
    {
      if (i == 1)
      {
        this.carid = "Mogul";
        this.VehicleMissioncar = World.CreateVehicle(new GTA.Model(-749299473), this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i == 2)
      {
        this.carid = "Cuban 800";
        this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Cuban800, this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i == 3)
      {
        this.carid = "Duster";
        this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Duster, this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i != 4)
        return;
      this.carid = "Mammatus";
      this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Mammatus, this.VehicleLocation);
      this.VehicleMissioncar.PlaceOnGround();
    }

    public void GetVehicle(GTA.Model V, Vector3 S, float R)
    {
      if ((Entity) this.AirVehicle != (Entity) null)
      {
        this.AirVehicle.Delete();
        this.AirVehicle = World.CreateVehicle(V, S, R);
        if (this.AirVehicle.Model.IsCar)
        {
          UI.Notify(this.GetHostName() + " : your " + this.AirVehicle.FriendlyName + " is located outside the casino enterance");
          this.AirVehicle.AddBlip();
          this.AirVehicle.CurrentBlip.Sprite = BlipSprite.GetawayCar;
          this.AirVehicle.CurrentBlip.Name = this.AirVehicle.FriendlyName;
          this.AirVehicle.CurrentBlip.Color = this.Blip_Colour;
        }
        else
        {
          if (!this.AirVehicle.Model.IsHelicopter)
            return;
          UI.Notify(this.GetHostName() + " : your " + this.AirVehicle.FriendlyName + " is located on the Helipad");
          this.AirVehicle.AddBlip();
          this.AirVehicle.CurrentBlip.Sprite = BlipSprite.HelicopterAnimated;
          this.AirVehicle.CurrentBlip.Name = this.AirVehicle.FriendlyName;
          this.AirVehicle.CurrentBlip.Color = this.Blip_Colour;
        }
      }
      else
      {
        this.AirVehicle = World.CreateVehicle(V, S, R);
        GTA.Model model = this.AirVehicle.Model;
        if (model.IsCar)
        {
          UI.Notify(this.GetHostName() + " : your " + this.AirVehicle.FriendlyName + " is located outside the casino enterance");
          this.AirVehicle.AddBlip();
          this.AirVehicle.CurrentBlip.Sprite = BlipSprite.GetawayCar;
          this.AirVehicle.CurrentBlip.Name = this.AirVehicle.FriendlyName;
          this.AirVehicle.CurrentBlip.Color = this.Blip_Colour;
        }
        else
        {
          model = this.AirVehicle.Model;
          if (model.IsHelicopter)
          {
            UI.Notify(this.GetHostName() + " : your " + this.AirVehicle.FriendlyName + " is located on the Helipad");
            this.AirVehicle.AddBlip();
            this.AirVehicle.CurrentBlip.Sprite = BlipSprite.HelicopterAnimated;
            this.AirVehicle.CurrentBlip.Name = this.AirVehicle.FriendlyName;
            this.AirVehicle.CurrentBlip.Color = this.Blip_Colour;
          }
        }
      }
    }

    public void GetPrizeCar()
    {
    }

    private void SetupGarage()
    {
      List<object> Land = new List<object>();
      Land.Add((object) "Caracara2");
      Land.Add((object) "Drafter");
      Land.Add((object) "Dynasty");
      Land.Add((object) "Emerus");
      Land.Add((object) "Gauntlet3");
      Land.Add((object) "Gauntlet4");
      Land.Add((object) "Hellion");
      Land.Add((object) "Issi7");
      Land.Add((object) "Jugular");
      Land.Add((object) "Locust");
      Land.Add((object) "Nebula");
      Land.Add((object) "Neo");
      Land.Add((object) "Novak");
      Land.Add((object) "Paragon");
      Land.Add((object) "Paragon2");
      Land.Add((object) "Peyote2");
      Land.Add((object) "RRocket");
      Land.Add((object) "S80");
      Land.Add((object) "Thrax");
      Land.Add((object) "Zion3");
      Land.Add((object) "Zorrusso");
      Land.Add((object) "zhaba");
      Land.Add((object) "yosemite2");
      Land.Add((object) "vstr");
      Land.Add((object) "vagrant");
      Land.Add((object) "sultan2");
      Land.Add((object) "sugoi");
      Land.Add((object) "stryder");
      Land.Add((object) "retinue2");
      Land.Add((object) "rebla");
      Land.Add((object) "outlaw");
      Land.Add((object) "minitank");
      Land.Add((object) "komoda");
      Land.Add((object) "kanjo");
      Land.Add((object) "jb7002");
      Land.Add((object) "imorgon");
      Land.Add((object) "furia");
      Land.Add((object) "formula2");
      Land.Add((object) "formula");
      Land.Add((object) "everon");
      Land.Add((object) "asbo");
      List<object> PrizeCars = new List<object>();
      PrizeCars.Add((object) "THRAX");
      PrizeCars.Add((object) "AUTARCH");
      PrizeCars.Add((object) "PROTOTIPO");
      PrizeCars.Add((object) "DEVESTE");
      PrizeCars.Add((object) "ITALIGTO");
      PrizeCars.Add((object) "NEO");
      PrizeCars.Add((object) "DELUXO");
      PrizeCars.Add((object) "TORERO");
      PrizeCars.Add((object) "ZTYPE");
      PrizeCars.Add((object) "TURISMO2");
      PrizeCars.Add((object) "HERMES");
      PrizeCars.Add((object) "GAUNTLET4");
      PrizeCars.Add((object) "NIGHTSHADE");
      PrizeCars.Add((object) "FREECRAWLER");
      PrizeCars.Add((object) "RIATA");
      PrizeCars.Add((object) "MENACER");
      PrizeCars.Add((object) "XLS2");
      PrizeCars.Add((object) "TOROS");
      PrizeCars.Add((object) "THRAX");
      PrizeCars.Add((object) "LE7B");
      PrizeCars.Add((object) "ENTITY2");
      PrizeCars.Add((object) "EVERON");
      PrizeCars.Add((object) "OUTLAW");
      PrizeCars.Add((object) "VAGRANT");
      PrizeCars.Add((object) "FORMULA");
      PrizeCars.Add((object) "FORMULA2");
      PrizeCars.Add((object) "FURIA");
      PrizeCars.Add((object) "VSTR");
      PrizeCars.Add((object) "SULTANRS");
      PrizeCars.Add((object) "SULTAN2");
      PrizeCars.Add((object) "SUGOI");
      PrizeCars.Add((object) "VIGILANTE");
      PrizeCars.Add((object) "KHANJALI");
      PrizeCars.Add((object) "BARRAGE");
      PrizeCars.Add((object) "LYNX");
      PrizeCars.Add((object) "IMORGON");
      PrizeCars.Add((object) "COMET5");
      PrizeCars.Add((object) "PARIAH");
      PrizeCars.Add((object) "VISERIS");
      PrizeCars.Add((object) "INFERNUS2");
      PrizeCars.Add((object) "FCR2");
      PrizeCars.Add((object) "BATI2");
      PrizeCars.Add((object) "OPPRESSOR2");
      PrizeCars.Add((object) "OPPRESSOR");
      PrizeCars.Add((object) "STRYDER");
      PrizeCars.Add((object) "GAUNTLET3");
      PrizeCars.Add((object) "XA21");
      PrizeCars.Add((object) "FMJ");
      PrizeCars.Add((object) "JB7002");
      PrizeCars.Add((object) "CHEETAH2");
      List<object> Air = new List<object>();
      Air.Add((object) VehicleHash.Buzzard2);
      Air.Add((object) VehicleHash.Swift2);
      Air.Add((object) VehicleHash.Supervolito);
      Air.Add((object) VehicleHash.Supervolito2);
      Air.Add((object) VehicleHash.Maverick);
      Air.Add((object) VehicleHash.Frogger);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.Garage, "Air Vehicles");
      this.GUIMenus.Add(uiMenu1);
      this.GUIMenus.Add(uiMenu1);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.Garage, "Land Vehicles");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem AV = new UIMenuListItem("Vehicle: ", Air, 0);
      uiMenu1.AddItem((UIMenuItem) AV);
      UIMenuItem VehAV = new UIMenuItem("Attack Buzzard, unlocked on Business level 8");
      uiMenu1.AddItem(VehAV);
      UIMenuItem GetAV = new UIMenuItem("Get Vehicle");
      uiMenu1.AddItem(GetAV);
      UIMenuListItem LV = new UIMenuListItem("Vehicle: ", Land, 0);
      uiMenu2.AddItem((UIMenuItem) LV);
      UIMenuItem VehLV = new UIMenuItem("Vapid Caracara 4x4, unlocked on Business level 5");
      uiMenu2.AddItem(VehLV);
      UIMenuItem GetLV = new UIMenuItem("Get Vehicle");
      uiMenu2.AddItem(GetLV);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.Garage, "Rent a vehicle : -$25000");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      List<object> items = new List<object>();
      VehicleHash[] allvehiclehashes = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 0; index < allvehiclehashes.Length; ++index)
        items.Add((object) allvehiclehashes[index]);
      UIMenuListItem list = new UIMenuListItem("Vehicle: ", items, 0);
      uiMenu3.AddItem((UIMenuItem) list);
      UIMenuItem getvehicle = new UIMenuItem("Rent Car: -$2500");
      uiMenu3.AddItem(getvehicle);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getvehicle)
          return;
        if ((Entity) this.AirVehicle != (Entity) null)
          this.AirVehicle.Delete();
        if ((Entity) this.RentedVehicle != (Entity) null)
          this.RentedVehicle.Delete();
        VehicleHash vehicleHash = allvehiclehashes[list.Index];
        this.RentedVehicle = World.CreateVehicle((GTA.Model) vehicleHash, this.CarSpawn);
        UI.Notify(this.GetHostName() + " : Ok the car is a " + vehicleHash.ToString() + " it is in the underground car park ");
        this.RentTimer = 9000;
        this.startedRent = true;
        Game.Player.Money -= 25000;
        this.RentalvehicleHealth = this.RentedVehicle.Health;
      });
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (AV.Index == 0)
        {
          GetAV.Text = "Get Vehicle (REQ LVL 8)";
          VehAV.Text = "Attack Buzzard";
        }
        if (AV.Index == 1)
        {
          GetAV.Text = "Get Vehicle (REQ LVL 25)";
          VehAV.Text = "Swift Deluxe";
        }
        if (AV.Index == 2)
        {
          GetAV.Text = "Get Vehicle (REQ LVL 12)";
          VehAV.Text = "Super Volto";
        }
        if (AV.Index == 3)
        {
          GetAV.Text = "Get Vehicle (REQ LVL VIP)";
          VehAV.Text = "Super Volto Carbon";
        }
        if (AV.Index == 4)
        {
          GetAV.Text = "Get Vehicle (REQ LVL 4)";
          VehAV.Text = "Maverick";
        }
        if (AV.Index != 5)
          return;
        GetAV.Text = "Get Vehicle (REQ LVL 6)";
        VehAV.Text = "Frogger";
      });
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (LV.Index == 0)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 5)";
          VehLV.Text = "Vapid Caracara 4x4";
        }
        if (LV.Index == 1)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 7)";
          VehLV.Text = "Obey 8F Drafter";
        }
        if (LV.Index == 2)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 4)";
          VehLV.Text = "Weeny Dynasty";
        }
        if (LV.Index == 3)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 15)";
          VehLV.Text = "Progen Emerus";
        }
        if (LV.Index == 4)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 6)";
          VehLV.Text = "Bravado Gauntlet Classic";
        }
        if (LV.Index == 5)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 8)";
          VehLV.Text = "Bravado Gauntlet Hellfire";
        }
        if (LV.Index == 6)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 5)";
          VehLV.Text = "Annis Hellion";
        }
        if (LV.Index == 7)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 8";
          VehLV.Text = "Weeny Issi Sport";
        }
        if (LV.Index == 8)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 11)";
          VehLV.Text = "Ocelot Jugular";
        }
        if (LV.Index == 9)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 12)";
          VehLV.Text = "Ocelot Locust";
        }
        if (LV.Index == 10)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 5)";
          VehLV.Text = "Vulcar Nebula Turbo";
        }
        if (LV.Index == 11)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 12)";
          VehLV.Text = "Vysser Neo";
        }
        if (LV.Index == 12)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 7)";
          VehLV.Text = "Lampadati Novak";
        }
        if (LV.Index == 13)
        {
          GetLV.Text = "Get Vehicle (REQ LVL VIP)";
          VehLV.Text = "Paragon";
        }
        if (LV.Index == 14)
        {
          GetLV.Text = "Get Vehicle (REQ LVL VIP)";
          VehLV.Text = "Paragon (Armoured)";
        }
        if (LV.Index == 15)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 9)";
          VehLV.Text = "Vapid Peyote Gasser";
        }
        if (LV.Index == 16)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 12)";
          VehLV.Text = "Western Rampant Rocket";
        }
        if (LV.Index == 17)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 11)";
          VehLV.Text = "Annis S80RR";
        }
        if (LV.Index == 18)
        {
          GetLV.Text = "Get Vehicle (LUCKY WHEEL PRIZE)";
          VehLV.Text = "Truffade Thrax";
        }
        if (LV.Index == 19)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 7)";
          VehLV.Text = "Ubermacht Zion Classic";
        }
        if (LV.Index == 20)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 14)";
          VehLV.Text = "Pegassi Zorrusso";
        }
        if (LV.Index == 21)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 7)";
          VehLV.Text = "Zhaba";
        }
        if (LV.Index == 22)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 3)";
          VehLV.Text = "Declasse Drift Yosemite";
        }
        if (LV.Index == 23)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 10)";
          VehLV.Text = "Albany V-STR";
        }
        if (LV.Index == 24)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 15)";
          VehLV.Text = "Maxwell Vagrant";
        }
        if (LV.Index == 25)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 13)";
          VehLV.Text = "Karin Sultan Classic";
        }
        if (LV.Index == 26)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 2)";
          VehLV.Text = "Dinka Sugoi";
        }
        if (LV.Index == 27)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 5)";
          VehLV.Text = "Nagasaki Stryder ";
        }
        if (LV.Index == 28)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 9)";
          VehLV.Text = "Vapid Retinue MKII";
        }
        if (LV.Index == 29)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 14)";
          VehLV.Text = "Übermacht Rebla GTS ";
        }
        if (LV.Index == 30)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 11)";
          VehLV.Text = "Nagasaki Outlaw";
        }
        if (LV.Index == 31)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 20)";
          VehLV.Text = "Invade and Persuade Minitank";
        }
        if (LV.Index == 32)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 14)";
          VehLV.Text = "Lampadati Komoda";
        }
        if (LV.Index == 33)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 6)";
          VehLV.Text = "Blista Kanjo";
        }
        if (LV.Index == 34)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 11)";
          VehLV.Text = "Dewbauchee JB700W";
        }
        if (LV.Index == 35)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 8)";
          VehLV.Text = "Överflöd Imorgon";
        }
        if (LV.Index == 36)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 18)";
          VehLV.Text = "Grotti Furia";
        }
        if (LV.Index == 37)
        {
          GetLV.Text = "Get Vehicle (REQ LVL VIP)";
          VehLV.Text = "Progen PR4 ";
        }
        if (LV.Index == 38)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 20)";
          VehLV.Text = "Ocelot R88 ";
        }
        if (LV.Index == 39)
        {
          GetLV.Text = "Get Vehicle (REQ LVL 12)";
          VehLV.Text = "Karin Everon ";
        }
        if (LV.Index != 40)
          return;
        GetLV.Text = "Get Vehicle (REQ LVL 4)";
        VehLV.Text = "Maxwell Abso ";
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != GetAV)
          return;
        Vector3 vector3 = new Vector3(965.4685f, 42.3875f, 123f);
        float num = 61f;
        if (AV.Index == 0)
        {
          VehAV.Text = "Attack Buzzard";
          if (this.purchaselvl >= 8)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__0 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__0, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (AV.Index == 1)
        {
          VehAV.Text = "Swift Deluxe";
          if (this.purchaselvl >= 25)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__1 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__1 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__1, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (AV.Index == 2)
        {
          VehAV.Text = "Super Volto";
          if (this.purchaselvl >= 12)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__2 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__2, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (AV.Index == 3)
        {
          VehAV.Text = "Super Volto Carbon";
          if (this.Casino_level >= 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__3 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__3, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (AV.Index == 4)
        {
          VehAV.Text = "Maverick";
          if (this.purchaselvl >= 4)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__4 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__4 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__4, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (AV.Index == 5)
        {
          VehAV.Text = "Frogger";
          if (this.purchaselvl >= 6)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__5 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__5 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__5, this, Air[AV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != GetLV)
          return;
        Vector3 vector3 = new Vector3(915.0286f, 51.88765f, 80f);
        float num = -30f;
        if (LV.Index == 0)
        {
          VehLV.Text = "Vapid Caracara 4x4";
          if (this.purchaselvl >= 5)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__6 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__6 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__6, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 1)
        {
          VehLV.Text = "Obey 8F Drafter";
          if (this.purchaselvl >= 7)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__7 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__7 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__7, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 2)
        {
          VehLV.Text = "Weeny Dynasty";
          if (this.purchaselvl >= 4)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__8 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__8 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__8, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 3)
        {
          VehLV.Text = "Progen Emerus";
          if (this.purchaselvl >= 15)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__9 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__9, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 4)
        {
          VehLV.Text = "Bravado Gauntlet Classic";
          if (this.purchaselvl >= 6)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__10 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__10, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 5)
        {
          VehLV.Text = "Bravado Gauntlet Hellfire";
          if (this.purchaselvl >= 8)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__11 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__11 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__11, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 6)
        {
          VehLV.Text = "Annis Hellion";
          if (this.purchaselvl >= 5)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__12 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__12 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__12, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 7)
        {
          VehLV.Text = "Weeny Issi Sport";
          if (this.purchaselvl >= 8)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__13 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__13, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 8)
        {
          VehLV.Text = "Ocelot Jugular";
          if (this.purchaselvl >= 11)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__14 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__14 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__14, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 9)
        {
          VehLV.Text = "Ocelot Locust";
          if (this.purchaselvl >= 12)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__15 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__15, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 10)
        {
          VehLV.Text = "Vulcar Nebula Turbo";
          if (this.purchaselvl >= 5)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__16 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__16 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__16, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 11)
        {
          VehLV.Text = "Vysser Neo";
          if (this.purchaselvl >= 12)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__17 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__17, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 12)
        {
          VehLV.Text = "Lampadati Novak";
          if (this.purchaselvl >= 7)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__18 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__18 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__18, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 13)
        {
          VehLV.Text = "Paragon";
          if (this.Casino_level >= 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__19 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__19, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 14)
        {
          VehLV.Text = "Paragon (Armoured)";
          if (this.Casino_level >= 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__20 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__20, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 15)
        {
          VehLV.Text = "Vapid Peyote Gasser";
          if (this.purchaselvl >= 9)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__21 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__21, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 16)
        {
          VehLV.Text = "Western Rampant Rocket";
          if (this.purchaselvl >= 12)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__22 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__22 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__22, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 17)
        {
          VehLV.Text = "Annis S80RR";
          if (this.purchaselvl >= 11)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__23 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__23 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__23, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 18)
        {
          VehLV.Text = "Truffade Thrax";
          if (this.ThraxUnlocked == 1)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__24 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__24 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__24, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have not unlocked this vehicle ");
        }
        if (LV.Index == 19)
        {
          VehLV.Text = "Ubermacht Zion Classic";
          if (this.purchaselvl >= 7)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__25 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__25, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 20)
        {
          VehLV.Text = "Pegassi Zorrusso";
          if (this.purchaselvl >= 14)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__26 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__26 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__26, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 21)
        {
          VehLV.Text = "Zhaba";
          if (this.purchaselvl >= 7)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__27 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__27 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__27.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__27, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 22)
        {
          VehLV.Text = "Declasse Drift Yosemite";
          if (this.purchaselvl >= 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__28 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__28 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__28.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__28, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 23)
        {
          VehLV.Text = "Albany V-STR";
          if (this.purchaselvl >= 10)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__29 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__29 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__29.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__29, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 24)
        {
          VehLV.Text = "Maxwell Vagrant";
          if (this.purchaselvl >= 15)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__30 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__30 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__30.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__30, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 25)
        {
          VehLV.Text = "Karin Sultan Classic";
          if (this.purchaselvl >= 13)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__31 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__31 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__31.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__31, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 26)
        {
          VehLV.Text = "Dinka Sugoi";
          if (this.purchaselvl >= 2)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__32 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__32 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__32.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__32, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 27)
        {
          VehLV.Text = "Nagasaki Stryder";
          if (this.purchaselvl >= 5)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__33 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__33 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__33.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__33, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 28)
        {
          VehLV.Text = "Vapid Retinue MKII";
          if (this.purchaselvl >= 9)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__34 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__34 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__34.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__34, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 29)
        {
          VehLV.Text = "Übermacht Rebla GTS";
          if (this.purchaselvl >= 14)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__35 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__35 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__35.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__35, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 30)
        {
          VehLV.Text = "Nagasaki Outlaw";
          if (this.purchaselvl >= 11)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__36 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__36 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__36.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__36, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 31)
        {
          VehLV.Text = "Invade and Persuade MiniTank";
          if (this.purchaselvl >= 20)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__37 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__37 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__37.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__37, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 32)
        {
          VehLV.Text = "Lampadati Komoda";
          if (this.purchaselvl >= 14)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__38 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__38 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__38.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__38, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 33)
        {
          VehLV.Text = "Blista Kanjo";
          if (this.purchaselvl >= 6)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__39 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__39 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__39.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__39, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 34)
        {
          VehLV.Text = "Dewbauchee JB700W";
          if (this.purchaselvl >= 11)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__40 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__40 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__40.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__40, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 35)
        {
          VehLV.Text = "Överflöd Imorgon";
          if (this.purchaselvl >= 8)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__41 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__41 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__41.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__41, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 36)
        {
          VehLV.Text = "Grotti Furia";
          if (this.purchaselvl >= 18)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__42 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__42 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__42.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__42, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 37)
        {
          VehLV.Text = "Progen PR4";
          if (this.Casino_level >= 3)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__43 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__43 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__43.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__43, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 38)
        {
          VehLV.Text = "Ocelot R88";
          if (this.purchaselvl >= 20)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__44 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__44 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__44.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__44, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 39)
        {
          VehLV.Text = "Karin Everon";
          if (this.purchaselvl >= 12)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__45 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__45 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__45.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__45, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
        if (LV.Index == 40)
        {
          VehLV.Text = "Maxwell ABSO";
          if (this.purchaselvl >= 4)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__46 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1080.\u003C\u003Ep__46 = CallSite<Action<CallSite, Class1, object, Vector3, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "GetVehicle", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1080.\u003C\u003Ep__46.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__46, this, Land[LV.Index], vector3, num);
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have the required level for this vehicle ");
        }
      });
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(this.Garage, "Prize Cars");
      this.GUIMenus.Add(uiMenu4);
      this.GUIMenus.Add(uiMenu4);
      UIMenuListItem Car = new UIMenuListItem("Vehicle: ", PrizeCars, 0);
      uiMenu4.AddItem((UIMenuItem) Car);
      UIMenuItem GetPrizeCar = new UIMenuItem("Get Prize Car");
      uiMenu4.AddItem(GetPrizeCar);
      uiMenu4.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__49 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__49 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveCarToFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Action<CallSite, Class1, object> target1 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__49.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Action<CallSite, Class1, object>> p49 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__49;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__48 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__48 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target2 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__48.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p48 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__48;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__47 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__47 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__47.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__47, "scripts//HKH191sBusinessMods//DC&R//PrizeCar//", PrizeCars[Car.Index]);
        object obj2 = target2((CallSite) p48, obj1, ".ini");
        target1((CallSite) p49, this, obj2);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__52 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__52 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveCarToFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Action<CallSite, Class1, object> target3 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__52.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Action<CallSite, Class1, object>> p52 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__52;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__51 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__51 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target4 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__51.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p51 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__51;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__50 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__50 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__50.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__50, "scripts//HKH191sBusinessMods//DC&R//PrizeCar//", PrizeCars[Car.Index]);
        object obj4 = target4((CallSite) p51, obj3, ".ini");
        target3((CallSite) p52, this, obj4);
      });
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != GetPrizeCar)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__55 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__55 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveCarToFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Action<CallSite, Class1, object> target1 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__55.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Action<CallSite, Class1, object>> p55 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__55;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__54 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__54 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target2 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__54.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p54 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__54;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__53 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__53 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__53.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__53, "scripts//HKH191sBusinessMods//DC&R//PrizeCar//", PrizeCars[Car.Index]);
        object obj2 = target2((CallSite) p54, obj1, ".ini");
        target1((CallSite) p55, this, obj2);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__58 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__58 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveCarToFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Action<CallSite, Class1, object> target3 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__58.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Action<CallSite, Class1, object>> p58 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__58;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__57 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__57 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string, object> target4 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__57.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string, object>> p57 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__57;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1080.\u003C\u003Ep__56 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1080.\u003C\u003Ep__56 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__1080.\u003C\u003Ep__56.Target((CallSite) Class1.\u003C\u003Eo__1080.\u003C\u003Ep__56, "scripts//HKH191sBusinessMods//DC&R//PrizeCar//", PrizeCars[Car.Index]);
        object obj4 = target4((CallSite) p57, obj3, ".ini");
        target3((CallSite) p58, this, obj4);
        if (this.PrizeCarUnlocked == 0)
          UI.Notify(this.GetHostName() + " : Win this car from the Lucky Wheel to use it");
        if (this.PrizeCarUnlocked == 1)
        {
          if ((Entity) this.RentedVehicle != (Entity) null)
            this.RentedVehicle.Delete();
          this.RentedVehicle = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.CarSpawn);
          UI.Notify(this.GetHostName() + " : Ok the car is a " + this.PrizeCarDisplayName + " it is in the  outside the Casino");
        }
      });
    }

    private void SetupProduct()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.ProductStock, "Buy/Sell Product");
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Buy2 = new UIMenuItem("Buy X10: -$" + 500000.ToString());
      uiMenu.AddItem(Buy2);
      UIMenuItem Buy = new UIMenuItem("Buy X1: -$" + 100000.ToString());
      uiMenu.AddItem(Buy);
      UIMenuItem Sell = new UIMenuItem("Instant Sell - All Stocks (75% Return)");
      uiMenu.AddItem(Sell);
      UIMenuItem SupplySell = new UIMenuItem("Supply Mission - Sell  (125% Return)");
      uiMenu.AddItem(SupplySell);
      UIMenuItem SupplySteal = new UIMenuItem("Supply Mission - Steal Cargo Crates ");
      uiMenu.AddItem(SupplySteal);
      UIMenuItem SupplyDestoy = new UIMenuItem("Supply Mission - Destroy Cargo Crates ");
      uiMenu.AddItem(SupplyDestoy);
      UIMenuItem Show = new UIMenuItem("Show Product Value/Count");
      uiMenu.AddItem(Show);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Show)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          UI.Notify(this.GetHostName() + " : Here is where we are at");
          this.ShowIncrease();
        }
        if (item == Buy2)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if (this.stockscount + 10 <= this.maxstocks)
          {
            if (Game.Player.Money > 500000)
            {
              Game.Player.Money -= 500000;
              this.stocksvalue += 250000f;
              this.stockscount += 10;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : ok i can deal with that, one new container of product");
              UI.Notify("Stocks Avalable: " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " : Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == Buy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if (this.stockscount != this.maxstocks)
          {
            if (Game.Player.Money > 100000)
            {
              Game.Player.Money -= 100000;
              this.stocksvalue += 25000f;
              ++this.stockscount;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + "  : ok i can deal with that, one new container of product");
              UI.Notify("Stocks Avalable: " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " : Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == SupplySell)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.AmttoDeliver = 0;
          if (this.stockscount > 100 && this.stockscount < 200)
          {
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.TipTruck, this.CarSpawn, 0.0f);
            this.StockVeh.ToggleExtra(2, false);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            System.Random random = new System.Random();
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
          }
          if (this.stockscount > 200)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.CarSpawn, 0.0f);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp3 = prop3;
            this.SellStockProps.Add(prop3);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
            this.SellStockProp3.HasCollision = false;
          }
          if (this.stockscount < 100)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Guardian, this.CarSpawn, 0.0f);
            Vector3 offsetInWorldCoords = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.1f));
            Prop prop = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop;
            this.SellStockProps.Add(prop);
            this.SellStockProp1.HasCollision = false;
          }
          if (this.stockscount < 30)
            this.AmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.AmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.AmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.AmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.AmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.AmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.AmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.AmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.AmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.AmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.AmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.AmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Cargo Sell Deliver Point";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " : Because your Stock Level is " + this.stockscount.ToString() + ", you need to deliver to a minimum of " + this.AmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a yellow crate icon on your map, good luck");
          if ((Entity) this.StockVeh != (Entity) null)
          {
            this.StockVeh.AddBlip();
            this.StockVeh.CurrentBlip.Sprite = BlipSprite.ArmoredTruck;
            this.StockVeh.CurrentBlip.Name = "Cargo Deliver Vehicle";
            this.StockVeh.CurrentBlip.Color = BlipColor.Blue4;
          }
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 2222;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplySteal)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.AmttoDeliver = 0;
          if (this.stockscount < 30)
            this.AmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.AmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.AmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.AmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.AmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.AmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.AmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.AmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.AmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.AmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.AmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.AmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Steal Cargo Vehicle";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " : I have marked out several locations where, weve spotted rival Businesses, shipping Stock, steal as much you want");
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 3333;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplyDestoy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if ((Entity) this.Sam1 != (Entity) null)
            this.Sam1.Delete();
          if ((Entity) this.Sam2 != (Entity) null)
            this.Sam2.Delete();
          if ((Entity) this.Sam3 != (Entity) null)
            this.Sam3.Delete();
          if (this.Sam1blip != (Blip) null)
            this.Sam1blip.Remove();
          if (this.Sam2blip != (Blip) null)
            this.Sam2blip.Remove();
          if (this.Sam3blip != (Blip) null)
            this.Sam3blip.Remove();
          if (this.EndPointBlip != (Blip) null)
            this.EndPointBlip.Remove();
          this.EndPointVec = new Vector3(-1286.58f, 2529.48f, 20f);
          this.Sam1Loc = new Vector3(-2168.24f, -343f, 14f);
          this.Sam2Loc = new Vector3(2199f, 3015.55f, 45f);
          this.Sam3Loc = new Vector3(-155f, 6216.85f, 32f);
          this.Sam1 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam1Loc);
          this.Sam2 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam2Loc);
          this.Sam3 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam3Loc);
          System.Random random1 = new System.Random();
          Vector3 offsetInWorldCoords1 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords2 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords3 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp1 = prop1;
          this.SellStockProps.Add(prop1);
          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp2 = prop2;
          this.SellStockProps.Add(prop2);
          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp3 = prop3;
          this.SellStockProps.Add(prop3);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp3.HasCollision = false;
          Vector3 offsetInWorldCoords4 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords5 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords6 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop4 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp4 = prop4;
          this.SellStockProps.Add(prop4);
          Prop prop5 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp5 = prop5;
          this.SellStockProps.Add(prop5);
          Prop prop6 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp6 = prop6;
          this.SellStockProps.Add(prop6);
          this.SellStockProp4.HasCollision = false;
          this.SellStockProp5.HasCollision = false;
          this.SellStockProp6.HasCollision = false;
          Vector3 offsetInWorldCoords7 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords8 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords9 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop7 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords7, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp7 = prop7;
          this.SellStockProps.Add(prop7);
          Prop prop8 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords8, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp8 = prop8;
          this.SellStockProps.Add(prop8);
          Prop prop9 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords9, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp9 = prop9;
          this.SellStockProps.Add(prop9);
          this.SellStockProp7.HasCollision = false;
          this.SellStockProp8.HasCollision = false;
          this.SellStockProp9.HasCollision = false;
          this.Sam1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam1, this.EndPointVec, 20f, 120f, 1);
          this.Sam2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam2, this.EndPointVec, 20f, 120f, 1);
          this.Sam3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam3, this.EndPointVec, 20f, 120f, 1);
          System.Random random2 = new System.Random();
          this.Sam1blip = World.CreateBlip(this.Sam1.Position);
          this.Sam1blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam1blip.Color = BlipColor.Red;
          this.Sam1blip.Name = "Armored Truck A";
          this.Sam2blip = World.CreateBlip(this.Sam2.Position);
          this.Sam2blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam2blip.Color = BlipColor.Red;
          this.Sam2blip.Name = "Armored Truck B";
          this.Sam3blip = World.CreateBlip(this.Sam3.Position);
          this.Sam3blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam3blip.Color = BlipColor.Red;
          this.Sam3blip.Name = "Armored Truck C";
          this.EndPointBlip = World.CreateBlip(this.EndPointVec);
          this.EndPointBlip.Sprite = BlipSprite.CaptureFlag;
          this.EndPointBlip.Color = BlipColor.White;
          this.EndPointBlip.Name = "Delivery Point";
          this.missionnum = 4444;
          this.SellStockDeliveryMission = true;
          UI.Notify(this.GetHostName() + " : Boss I've spotted 3 vehicles on route to Fort Zancudo, Destroy All Three, Before they reach their destination for a 25% Boost to Stock Value");
        }
        if (item != Sell)
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        UI.Notify(this.GetHostName() + " : ok i can deal with that, selling all product avalable");
        Game.Player.Money += (int) ((double) this.stocksvalue * 0.75);
        this.stocksvalue = 0.0f;
        this.stockscount = 0;
        this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
        this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.Config.Save();
      });
    }

    private void Setupbuisness()
    {
      List<object> Story = new List<object>();
      Story.Add((object) PedHash.Franklin);
      Story.Add((object) PedHash.Michael);
      Story.Add((object) PedHash.Trevor);
      Story.Add((object) PedHash.AmandaTownley);
      Story.Add((object) PedHash.TracyDisanto);
      Story.Add((object) PedHash.JimmyDisanto);
      Story.Add((object) PedHash.LamarDavis);
      Story.Add((object) PedHash.Stretch);
      Story.Add((object) PedHash.LesterCrest);
      Story.Add((object) PedHash.Tanisha);
      Story.Add((object) PedHash.Lazlow);
      Story.Add((object) PedHash.Molly);
      Story.Add((object) PedHash.SteveHains);
      Story.Add((object) PedHash.DaveNorton);
      Story.Add((object) PedHash.Devin);
      Story.Add((object) PedHash.Clay);
      Story.Add((object) PedHash.Tonya);
      Story.Add((object) PedHash.Wade);
      Story.Add((object) PedHash.NervousRon);
      Story.Add((object) PedHash.BradCutscene);
      Story.Add((object) PedHash.Antonb);
      Story.Add((object) PedHash.Chef);
      Story.Add((object) PedHash.Cletus);
      Story.Add((object) PedHash.JohnnyKlebitz);
      Story.Add((object) PedHash.Solomon);
      Story.Add((object) PedHash.WeiCheng);
      Story.Add((object) PedHash.MartinMadrazoCutscene);
      Story.Add((object) PedHash.TaoCheng);
      Story.Add((object) PedHash.Floyd);
      Story.Add((object) PedHash.Terry);
      Story.Add((object) PedHash.DebraCutscene);
      Story.Add((object) PedHash.Denise);
      Story.Add((object) PedHash.SiemonYetarian);
      List<object> Online = new List<object>();
      Online.Add((object) PedHash.Avon);
      Online.Add((object) PedHash.Agent14);
      List<object> Assistant = new List<object>();
      Assistant.Add((object) PedHash.ExecutivePAFemale01);
      Assistant.Add((object) PedHash.ExecutivePAFemale02);
      Assistant.Add((object) PedHash.ExecutivePAMale01);
      List<object> DAssistant = new List<object>();
      DAssistant.Add((object) "ig_agatha");
      DAssistant.Add((object) "ig_avery");
      DAssistant.Add((object) "ig_brucie2");
      DAssistant.Add((object) "ig_thornton");
      List<object> CAssistant = new List<object>();
      foreach (PedHash pedHash in (PedHash[]) Enum.GetValues(typeof (PedHash)))
        CAssistant.Add((object) pedHash);
      List<object> SRCPed = new List<object>();
      foreach (PedHash pedHash in (PedHash[]) Enum.GetValues(typeof (PedHash)))
      {
        if (pedHash.ToString().Contains(this.SearchPedInput))
          SRCPed.Add((object) pedHash);
      }
      List<object> Catagory = new List<object>();
      Catagory.Add((object) "DC&R Peds");
      Catagory.Add((object) "Executive Peds");
      Catagory.Add((object) "ALL Peds");
      Catagory.Add((object) "Story Peds");
      Catagory.Add((object) "Online Peds");
      Catagory.Add((object) "Search Peds");
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.methgarage, "Misc");
      UIMenuItem uiMenuItem1 = new UIMenuItem("----------------Ped Model Catagories---------------");
      uiMenu1.AddItem(uiMenuItem1);
      UIMenuListItem APed = new UIMenuListItem("Executive Peds: ", Assistant, 0);
      uiMenu1.AddItem((UIMenuItem) APed);
      UIMenuListItem DPed = new UIMenuListItem("DC&R Peds: ", DAssistant, 0);
      uiMenu1.AddItem((UIMenuItem) DPed);
      UIMenuListItem CPed = new UIMenuListItem("All Peds: ", CAssistant, 0);
      uiMenu1.AddItem((UIMenuItem) CPed);
      UIMenuListItem SPed = new UIMenuListItem("Story Peds: ", Story, 0);
      uiMenu1.AddItem((UIMenuItem) SPed);
      UIMenuListItem OPed = new UIMenuListItem("Online Peds: ", Online, 0);
      uiMenu1.AddItem((UIMenuItem) OPed);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem2);
      UIMenuItem Search = new UIMenuItem("Search for Ped");
      uiMenu1.AddItem(Search);
      UIMenuItem SearchInput = new UIMenuItem("Search input : " + this.SearchPedInput);
      uiMenu1.AddItem(SearchInput);
      UIMenuListItem SHPed = new UIMenuListItem("Peds from Search: ", SRCPed, 0);
      uiMenu1.AddItem((UIMenuItem) SHPed);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem3);
      UIMenuListItem Cata = new UIMenuListItem("Grab Model From : ", Catagory, 0);
      uiMenu1.AddItem((UIMenuItem) Cata);
      UIMenuItem PedA = new UIMenuItem("Set DC&R Assistant Model");
      uiMenu1.AddItem(PedA);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Search)
        {
          try
          {
            int num = 0;
            this.SearchPedInput = Game.GetUserInput(16);
            SearchInput.Text = "Search input : " + this.SearchPedInput;
            foreach (object obj in CAssistant)
            {
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__0 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__1082.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (PedHash), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__0, obj).ToString().Contains(this.SearchPedInput))
                ++num;
            }
            if ((uint) num > 0U)
            {
              SRCPed.Clear();
              foreach (object obj in CAssistant)
              {
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__1 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__1082.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (PedHash), typeof (Class1)));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                PedHash pedHash = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__1, obj);
                if (pedHash.ToString().Contains(this.SearchPedInput))
                  SRCPed.Add((object) pedHash);
              }
            }
          }
          catch
          {
          }
        }
        if (item != PedA)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__3.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p3 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__3;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__2, Catagory[Cata.Index], "ALL Peds");
        if (target1((CallSite) p3, obj1))
        {
          this.AssistantPedModel = CAssistant[CPed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__4 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__4, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__6 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__6.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p6 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__6;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__5 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__5, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p6, type, obj2);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__8.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p8 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__8;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__7, Catagory[Cata.Index], "Executive Peds");
        if (target3((CallSite) p8, obj3))
        {
          this.AssistantPedModel = Assistant[APed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__9 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__9, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__11 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__11.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p11 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__11;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__10 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__10, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p11, type, obj2);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__13.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p13 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__13;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__12 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__12, Catagory[Cata.Index], "Story Peds");
        if (target4((CallSite) p13, obj4))
        {
          this.AssistantPedModel = Story[SPed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__14 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__14, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__16 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__16.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p16 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__16;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__15 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__15, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p16, type, obj2);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target5 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__18.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p18 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__18;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__17 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__17, Catagory[Cata.Index], "Online Peds");
        if (target5((CallSite) p18, obj5))
        {
          this.AssistantPedModel = Online[OPed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__19 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__19, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__21 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__21.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p21 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__21;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__20 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__20, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p21, type, obj2);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__23 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target6 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__23.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p23 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__23;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__22 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj6 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__22, Catagory[Cata.Index], "Search Peds");
        if (target6((CallSite) p23, obj6))
        {
          this.AssistantPedModel = SRCPed[SHPed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__24 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__24, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__26 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__26 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__26.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p26 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__26;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__25 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__25 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__25, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p26, type, obj2);
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__28 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target7 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__28.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p28 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__28;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__27 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj7 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__27.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__27, Catagory[Cata.Index], "DC&R Peds");
        if (target7((CallSite) p28, obj7))
        {
          this.AssistantPedModel = DAssistant[DPed.Index];
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__29 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__29 = CallSite<Action<CallSite, ScriptSettings, string, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (object)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__29.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__29, this.Config, "Misc", "AssistantPedModel", this.AssistantPedModel);
          this.AssistantPedModelType = "string";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__31 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__31 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__31.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p31 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__31;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__30 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__30 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__30.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__30, "Ped Model Changed to ", this.AssistantPedModel);
          target2((CallSite) p31, type, obj2);
        }
      });
      List<object> TF = new List<object>();
      TF.Add((object) false);
      TF.Add((object) true);
      List<object> items = new List<object>();
      int num1 = 1;
      for (int index = 1; index < 100; ++index)
        items.Add((object) (num1 + index));
      List<object> Chairs = new List<object>();
      Chairs.Add((object) "ex_prop_offchair_exec_01");
      Chairs.Add((object) "ex_prop_offchair_exec_02");
      Chairs.Add((object) "ex_prop_offchair_exec_03");
      Chairs.Add((object) "ex_prop_offchair_exec_04");
      Chairs.Add((object) "ba_prop_battle_club_chair_01");
      Chairs.Add((object) "ba_prop_battle_club_chair_02");
      Chairs.Add((object) "ba_prop_battle_club_chair_03");
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.methgarage, "Change Chair Prop Model ");
      this.GUIMenus.Add(uiMenu2);
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem MainChair = new UIMenuItem("Set Main Chair ");
      uiMenu2.AddItem(MainChair);
      UIMenuListItem MainChairlist = new UIMenuListItem("", Chairs, 1);
      uiMenu2.AddItem((UIMenuItem) MainChairlist);
      UIMenuItem PenthouseChair = new UIMenuItem("Set Penthouse Chair ");
      uiMenu2.AddItem(PenthouseChair);
      UIMenuListItem PenthouseChairlist = new UIMenuListItem("", Chairs, 1);
      uiMenu2.AddItem((UIMenuItem) PenthouseChairlist);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == MainChair)
        {
          Vector3 vector3 = new Vector3();
          float num2 = 0.0f;
          if ((Entity) this.ChairProp != (Entity) null)
          {
            vector3 = this.ChairProp.Position;
            num2 = this.ChairProp.Heading;
          }
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__32 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ChairPropModelMain = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__32.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__32, Chairs[MainChairlist.Index]);
          this.Config.SetValue<string>("Chair Model", "ChairPropModel", this.ChairPropModelMain);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__34 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__34 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__34.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p34 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__34;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__33 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1082.\u003C\u003Ep__33 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__33.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__33, "~g~ HKH191~w~ : Main Chair Model has been set to ", Chairs[MainChairlist.Index]);
          target((CallSite) p34, type, obj);
          if ((Entity) this.ChairProp != (Entity) null)
            this.ChairProp.Delete();
          this.ChairProp = World.CreateProp(this.RequestModel(this.ChairPropModelMain), new Vector3(1111.07f, 242.2264f, -46.7f), new Vector3(0.0f, 0.0f, 113f), false, false);
          this.ChairProp.FreezePosition = true;
          if ((Entity) this.ChairProp != (Entity) null)
          {
            this.ChairProp.Position = vector3;
            this.ChairProp.Heading = num2;
          }
        }
        if (item != PenthouseChair)
          return;
        Vector3 vector3_1 = new Vector3();
        float num3 = 0.0f;
        if ((Entity) this.ChairProp2 != (Entity) null)
        {
          vector3_1 = this.ChairProp2.Position;
          num3 = this.ChairProp2.Heading;
        }
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__35 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__35 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.ChairPropModelPenthouse = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__35.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__35, Chairs[PenthouseChairlist.Index]);
        this.Config.SetValue<string>("Chair Model", "ChairPropModelPenthouse", this.ChairPropModelPenthouse);
        this.Config.Save();
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__37 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__37 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Action<CallSite, System.Type, object> target1 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__37.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Action<CallSite, System.Type, object>> p37 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__37;
        System.Type type1 = typeof (UI);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__36 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__1082.\u003C\u003Ep__36 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__36.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__36, "~g~ HKH191~w~  : Penthouse Chair Model has been set to ", Chairs[PenthouseChairlist.Index]);
        target1((CallSite) p37, type1, obj1);
        if ((Entity) this.ChairProp2 != (Entity) null)
          this.ChairProp2.Delete();
        this.ChairProp2 = World.CreateProp(this.RequestModel(this.ChairPropModelPenthouse), new Vector3(978.1f, 47.9f, 115.2f), new Vector3(0.0f, 0.0f, -70f), false, false);
        this.ChairProp2.FreezePosition = true;
        if ((Entity) this.ChairProp != (Entity) null)
        {
          this.ChairProp2.Position = vector3_1;
          this.ChairProp2.Heading = num3;
        }
      });
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.methgarage, "Expand Business ");
      this.GUIMenus.Add(uiMenu3);
      this.GUIMenus.Add(uiMenu3);
      UIMenu menu = this.modMenuPool.AddSubMenu(this.methgarage, "Card Deck Options");
      this.GUIMenus.Add(menu);
      this.GUIMenus.Add(menu);
      UIMenuItem Def = new UIMenuItem("Use Default Card Deck");
      menu.AddItem(Def);
      UIMenuItem P_E = new UIMenuItem("Purchase Elite Deck : $3,000,000");
      menu.AddItem(P_E);
      UIMenuItem UseE = new UIMenuItem("Use Elite Deck");
      menu.AddItem(UseE);
      menu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Def)
        {
          this.PlayerDeck = 0;
          this.Config.SetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Deck changed to Default");
        }
        if (item == P_E)
        {
          if (this.EliteDeckUnlocked == 0)
          {
            if (Game.Player.Money >= 3000000)
            {
              Game.Player.Money -= 3000000;
              this.EliteDeckUnlocked = 1;
              this.Config.SetValue<int>("CardDeck", "EliteDeckUnlocked", this.EliteDeckUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Elite Deck purchased");
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enough money for the Elite Deck");
          }
          else
            UI.Notify(this.GetHostName() + " : You already own the Elite Deck");
        }
        if (item != UseE)
          return;
        this.PlayerDeck = this.Config.GetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
        if (this.EliteDeckUnlocked == 1)
        {
          this.PlayerDeck = 2;
          this.Config.SetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Deck changed to Elite");
        }
        else
          UI.Notify(this.GetHostName() + " : You do not own the Elite Deck");
      });
      this.PlayerDeck = this.Config.GetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
      this.EliteDeckUnlocked = this.Config.GetValue<int>("CardDeck", "EliteDeckUnlocked", this.EliteDeckUnlocked);
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(menu, "The Master's Deck");
      this.GUIMenus.Add(uiMenu4);
      this.GUIMenus.Add(uiMenu4);
      UIMenuItem TMD = new UIMenuItem("Purchase The Master's Deck : $200,000,000");
      uiMenu4.AddItem(TMD);
      UIMenuItem UTMD = new UIMenuItem("Check for Discount");
      uiMenu4.AddItem(UTMD);
      UIMenuItem useTMD = new UIMenuItem("Use The Master's Deck ");
      uiMenu4.AddItem(useTMD);
      UIMenuListItem Normal = new UIMenuListItem("Use Default Deck Cards : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) Normal);
      UIMenuListItem Elite = new UIMenuListItem("Use Elite Deck Cards : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) Elite);
      UIMenuListItem Queen = new UIMenuListItem("Use Queen : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) Queen);
      UIMenuListItem King = new UIMenuListItem("Use King : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) King);
      UIMenuListItem Jack = new UIMenuListItem("Use Jack : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) Jack);
      UIMenuListItem Ace = new UIMenuListItem("Use Ace : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) Ace);
      UIMenuListItem _2 = new UIMenuListItem("Use 2  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _2);
      UIMenuListItem _3 = new UIMenuListItem("Use 3  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _3);
      UIMenuListItem _4 = new UIMenuListItem("Use 4  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _4);
      UIMenuListItem _5 = new UIMenuListItem("Use 5  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _5);
      UIMenuListItem _6 = new UIMenuListItem("Use 6  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _6);
      UIMenuListItem _7 = new UIMenuListItem("Use 7  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _7);
      UIMenuListItem _8 = new UIMenuListItem("Use 8  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _8);
      UIMenuListItem _9 = new UIMenuListItem("Use 9  : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _9);
      UIMenuListItem _10 = new UIMenuListItem("Use 10 : ", TF, 1);
      uiMenu4.AddItem((UIMenuItem) _10);
      UIMenuItem SaveDeck = new UIMenuItem("Save Deck");
      uiMenu4.AddItem(SaveDeck);
      UIMenu uiMenu5 = this.modMenuPool.AddSubMenu(this.methgarage, "Purchase Arcade Subbusiness");
      this.GUIMenus.Add(uiMenu5);
      this.GUIMenus.Add(uiMenu5);
      UIMenuItem Arcade1 = new UIMenuItem("Pixel Pete's - Paleto Bay - $1,235,000");
      uiMenu5.AddItem(Arcade1);
      UIMenuItem Arcade2 = new UIMenuItem("Wonderama - Grapeseed - $1,565,000");
      uiMenu5.AddItem(Arcade2);
      UIMenuItem Arcade3 = new UIMenuItem("Videogeddon -La Mesa - $1,875,000");
      uiMenu5.AddItem(Arcade3);
      UIMenuItem Arcade4 = new UIMenuItem("Warehouse - Davis $2,135,000");
      uiMenu5.AddItem(Arcade4);
      UIMenuItem Arcade5 = new UIMenuItem("Insert Coin - Rockford Hills - $2,345,000");
      uiMenu5.AddItem(Arcade5);
      UIMenuItem Arcade6 = new UIMenuItem("Eight Bit - Vinewood - $2,530,000");
      uiMenu5.AddItem(Arcade6);
      uiMenu5.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Arcade1 && Game.Player.Money >= 1235000)
        {
          if (this.ArcadeVersion != 1)
          {
            Game.Player.Money -= 1235000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Pixel Pete's");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 1;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Pixel Pete's");
        }
        if (item == Arcade2 && Game.Player.Money >= 1565000)
        {
          if (this.ArcadeVersion != 2)
          {
            Game.Player.Money -= 1565000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Wonderama");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 2;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Wonderama");
        }
        if (item == Arcade3 && Game.Player.Money >= 1875000)
        {
          if (this.ArcadeVersion != 3)
          {
            Game.Player.Money -= 1875000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Videogeddon");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 3;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Videogeddon");
        }
        if (item == Arcade4 && Game.Player.Money >= 2135000)
        {
          if (this.ArcadeVersion != 1)
          {
            Game.Player.Money -= 2135000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Warehouse");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 4;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Warehouse");
        }
        if (item == Arcade5 && Game.Player.Money >= 2345000)
        {
          if (this.ArcadeVersion != 5)
          {
            Game.Player.Money -= 2345000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Insert Coin");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 5;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Insert Coin");
        }
        if (item == Arcade6 && Game.Player.Money >= 2530000)
        {
          if (this.ArcadeVersion != 6)
          {
            Game.Player.Money -= 2530000;
            UI.Notify(this.GetHostName() + "You have successfuly purchased Arcade : Eight Bit");
            if (this.ArcadeOwned != 1)
            {
              this.ArcadeOwned = 1;
              this.Config.SetValue<int>("Arcade", "ArcadeOwned", this.ArcadeOwned);
            }
            this.ArcadeVersion = 6;
            this.Config.SetValue<int>("Arcade", "ArcadeVersion", this.ArcadeVersion);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + "You already purchased Arcade : Eight Bit");
        }
        if (this.Arcade != (Blip) null)
          this.Arcade.Remove();
        if (this.ArcadeVersion == 1)
        {
          this.ArcadeGarageEnter = new Vector3(-239.8f, 6230.6f, 30.7f);
          this.ArcadeBusinessEnter = new Vector3(-248.5227f, 6211.846f, 30.7f);
          this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
          this.Arcade.Sprite = BlipSprite.RCWorkshop;
          this.Arcade.Color = this.Blip_Colour;
          this.Arcade.Name = "Arcade Subbusiness";
          this.Arcade.IsShortRange = true;
        }
        if (this.ArcadeVersion == 2)
        {
          this.ArcadeGarageEnter = new Vector3(1712.3f, 4756.4f, 40.5f);
          this.ArcadeBusinessEnter = new Vector3(1694.762f, 4785.07f, 40.5f);
          this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
          this.Arcade.Sprite = BlipSprite.RCWorkshop;
          this.Arcade.Color = this.Blip_Colour;
          this.Arcade.Name = "Arcade Subbusiness";
          this.Arcade.IsShortRange = true;
        }
        if (this.ArcadeVersion == 3)
        {
          this.ArcadeGarageEnter = new Vector3(723.3f, -822.1f, 23.2f);
          this.ArcadeBusinessEnter = new Vector3(759.1611f, -815.9539f, 25.2f);
          this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
          this.Arcade.Sprite = BlipSprite.RCWorkshop;
          this.Arcade.Color = this.Blip_Colour;
          this.Arcade.Name = "Arcade Subbusiness";
          this.Arcade.IsShortRange = true;
        }
        if (this.ArcadeVersion == 4)
        {
          this.ArcadeGarageEnter = new Vector3(-104.6f, -1776.4f, 28.1f);
          this.ArcadeBusinessEnter = new Vector3(-116.6468f, -1772.006f, 28.5f);
          this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
          this.Arcade.Sprite = BlipSprite.RCWorkshop;
          this.Arcade.Color = this.Blip_Colour;
          this.Arcade.Name = "Arcade Subbusiness";
          this.Arcade.IsShortRange = true;
        }
        if (this.ArcadeVersion == 5)
        {
          this.ArcadeGarageEnter = new Vector3(-1288.7f, -274.6f, 37.8f);
          this.ArcadeBusinessEnter = new Vector3(-1269.125f, -305.5237f, 36f);
          this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
          this.Arcade.Sprite = BlipSprite.RCWorkshop;
          this.Arcade.Color = this.Blip_Colour;
          this.Arcade.Name = "Arcade Subbusiness";
          this.Arcade.IsShortRange = true;
        }
        if (this.ArcadeVersion != 6)
          return;
        this.ArcadeGarageEnter = new Vector3(-618.2f, 282.6f, 80.5f);
        this.ArcadeBusinessEnter = new Vector3(-599.4969f, 279.7799f, 80.5f);
        this.Arcade = World.CreateBlip(this.ArcadeBusinessEnter);
        this.Arcade.Sprite = BlipSprite.RCWorkshop;
        this.Arcade.Color = this.Blip_Colour;
        this.Arcade.Name = "Arcade Subbusiness";
        this.Arcade.IsShortRange = true;
      });
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == UTMD)
        {
          if (this.Dis_Unlocked == 0)
          {
            TMD.Text = "Purchase The Master's Deck : $200,000,000";
            UI.Notify(this.GetHostName() + " : Price has not changed");
          }
          if (this.Dis_Unlocked == 1)
          {
            TMD.Text = "Purchase The Master's Deck : $75,000,000";
            UI.Notify(this.GetHostName() + " : Discount has not been applied");
          }
        }
        if (item == SaveDeck)
        {
          if (this.TMDUnlocked == 1)
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__38 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__38 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseNormalDeckCards = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__38.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__38, TF[Normal.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseNormalDeckCards", this.TMD_UseNormalDeckCards);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__39 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__39 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseEliteDeckCards = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__39.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__39, TF[Elite.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseEliteDeckCards", this.TMD_UseEliteDeckCards);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__40 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__40 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseAce = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__40.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__40, TF[Ace.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseAce", this.TMD_UseAce);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__41 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__41 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseKing = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__41.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__41, TF[King.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseKing", this.TMD_UseKing);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__42 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__42 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseQueen = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__42.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__42, TF[Queen.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseQueen", this.TMD_UseQueen);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__43 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__43 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_UseJack = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__43.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__43, TF[Jack.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_UseJack", this.TMD_UseJack);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__44 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__44 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use02 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__44.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__44, TF[_2.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use02", this.TMD_Use02);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__45 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__45 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use03 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__45.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__45, TF[_3.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use03", this.TMD_Use03);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__46 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__46 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use04 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__46.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__46, TF[_4.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use04", this.TMD_Use04);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__47 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__47 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use05 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__47.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__47, TF[_5.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use05", this.TMD_Use05);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__48 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__48 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use06 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__48.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__48, TF[_6.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use06", this.TMD_Use06);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__49 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__49 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use07 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__49.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__49, TF[_7.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use07", this.TMD_Use07);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__50 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__50 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use08 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__50.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__50, TF[_8.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use08", this.TMD_Use08);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__51 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__51 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use09 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__51.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__51, TF[_9.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use09", this.TMD_Use09);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1082.\u003C\u003Ep__52 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1082.\u003C\u003Ep__52 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.TMD_Use10 = Class1.\u003C\u003Eo__1082.\u003C\u003Ep__52.Target((CallSite) Class1.\u003C\u003Eo__1082.\u003C\u003Ep__52, TF[_10.Index]);
            this.Config.SetValue<bool>("CardDeck - TMD", "TMD_Use10", this.TMD_Use10);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : TMD settings changed ");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not own the The Master's Deck");
        }
        if (item == TMD && this.TMDUnlocked == 0)
        {
          if (this.Dis_Unlocked == 0)
          {
            if (Game.Player.Money >= 200000000)
            {
              Game.Player.Money -= 200000000;
              this.TMDUnlocked = 1;
              this.Config.SetValue<int>("CardDeck -TMD", "TMDUnlocked", this.TMDUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Elite Deck purchased");
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enough money for the Elite Deck");
          }
          if (this.Dis_Unlocked == 1)
          {
            if (Game.Player.Money >= 75000000)
            {
              Game.Player.Money -= 75000000;
              this.TMDUnlocked = 1;
              this.Config.SetValue<int>("CardDeck -TMD", "TMDUnlocked", this.TMDUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Elite Deck purchased");
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enough money for the Elite Deck");
          }
        }
        if (item != useTMD)
          return;
        if (this.TMDUnlocked == 1)
        {
          this.PlayerDeck = 3;
          this.Config.SetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Deck changed to TMD");
        }
        else
          UI.Notify(this.GetHostName() + " : You do not own the The Master's Deck");
      });
      UIMenuItem Update = new UIMenuItem("Update Stats");
      uiMenu3.AddItem(Update);
      UIMenuItem BuyNewLevel = new UIMenuItem(" Buy Level ");
      uiMenu3.AddItem(BuyNewLevel);
      UIMenuListItem list2 = new UIMenuListItem("Select Level: ", items, 1);
      uiMenu3.AddItem((UIMenuItem) list2);
      UIMenuItem Jump = new UIMenuItem("Jump Straight to Level");
      uiMenu3.AddItem(Jump);
      UIMenuItem Show = new UIMenuItem("Show Level");
      uiMenu3.AddItem(Show);
      UIMenu uiMenu6 = this.modMenuPool.AddSubMenu(this.methgarage, "Sell  Business");
      this.GUIMenus.Add(uiMenu6);
      this.GUIMenus.Add(uiMenu6);
      UIMenuItem Sell = new UIMenuItem("Sell");
      uiMenu6.AddItem(Sell);
      uiMenu6.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Sell)
          return;
        if (!this.bought)
        {
          UI.Notify(this.GetHostName() + " : Get out of here!, you dont own any of these buisnesses ");
        }
        else
        {
          this.bought = false;
          this.purchaselvl = 0;
          this.stocksvalue = 0.0f;
          this.stockscount = 0;
          this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : I just heard, you wanted to sell the buisness, i'm verry sorry, if i have upset you in any way");
        }
      });
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Jump)
        {
          int num2 = list2.Index + 1;
          if (num2 > this.purchaselvl)
          {
            int num3 = 0;
            int num4 = 0;
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            for (int purchaselvl = this.purchaselvl; purchaselvl < num2; ++purchaselvl)
            {
              double num5 = 1.75;
              if (this.purchaselvl < 25)
                num5 = 1.75;
              if (this.purchaselvl > 25 && index < 50)
                num5 = 2.25;
              if (this.purchaselvl > 50 && this.purchaselvl < 70)
                num5 = 3.5;
              if (this.purchaselvl > 75 && this.purchaselvl < 100)
                num5 = 4.75;
              num3 += (int) ((double) this.BusinessUpgradeBasePrice * num5 * (double) num2);
              ++num4;
            }
            UI.Notify(this.GetHostName() + " : OK your new level will be " + (this.purchaselvl += num4 + 1).ToString() + ", at a price of $" + num3.ToString("N") + ", Do u want to continue Enter Y or N");
            Script.Wait(1000);
            try
            {
              if (Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 1).Equals("Y"))
              {
                if (Game.Player.Money >= num3)
                {
                  Game.Player.Money -= num3;
                  this.purchaselvl = num2;
                  float num5 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
                  this.maxstocks = 10 * this.purchaselvl;
                  this.maxstocks = 10 * this.purchaselvl;
                  this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
                  this.increaseGain = num5;
                  this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                  this.Config.Save();
                }
                else
                  UI.Notify("You dont have enough money to purchase this upgrade");
              }
              else
              {
                this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                UI.Notify(this.GetHostName() + " : You Entered the Wrong key or N");
              }
            }
            catch (NullReferenceException ex)
            {
              this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              UI.Notify("You did not enter a key!");
            }
          }
        }
        int num6;
        if (item == Update)
        {
          int num2 = list2.Index + 1;
          double num3 = 1.75;
          if (this.purchaselvl < 25)
            num3 = 1.75;
          if (this.purchaselvl > 25 && index < 50)
            num3 = 2.25;
          if (this.purchaselvl > 50 && this.purchaselvl < 70)
            num3 = 3.5;
          if (this.purchaselvl > 75 && this.purchaselvl < 100)
            num3 = 4.75;
          UI.Notify("Price " + ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2).ToString("N"));
          num6 = num2 + 1;
          UI.Notify("Level to Buy " + num6.ToString());
          UI.Notify("increaseGain : $" + ((float) ((double) this.BusinessUpgradeIncreaseGain * (double) num2 / 0.75)).ToString("N"));
          UI.Notify("Profit Margin :" + (0.85 * (double) num2 + 0.0).ToString() + "%");
          num6 = 10 * num2;
          UI.Notify("Max Stocks : " + num6.ToString());
        }
        if (item == BuyNewLevel)
        {
          int num2 = list2.Index + 1;
          this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          if (this.purchaselvl + 1 == num2)
          {
            double num3 = 1.75;
            if (this.purchaselvl < 25)
              num3 = 1.75;
            if (this.purchaselvl > 25 && index < 50)
              num3 = 2.25;
            if (this.purchaselvl > 50 && this.purchaselvl < 70)
              num3 = 3.5;
            if (this.purchaselvl > 75 && this.purchaselvl < 100)
              num3 = 4.75;
            if ((double) Game.Player.Money >= (double) this.BusinessUpgradeBasePrice * num3 * (double) num2)
            {
              Game.Player.Money -= (int) ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2);
              ++this.purchaselvl;
              this.maxstocks = 10 * this.purchaselvl;
              float num4 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
              this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
              this.increaseGain = num4;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Config.Save();
            }
            else
              UI.Notify("You dont have enough money to purchase this upgrade");
          }
          else
            UI.Notify("The level you are trying to purchase is either to high or to low!, please purchase the level before, to purchase this level");
        }
        if (item != Show)
          return;
        double num7 = 1.75;
        if (this.purchaselvl < 25)
          num7 = 1.75;
        if (this.purchaselvl > 25 && index < 50)
          num7 = 2.25;
        if (this.purchaselvl > 50 && this.purchaselvl < 70)
          num7 = 3.5;
        if (this.purchaselvl > 75 && this.purchaselvl < 100)
          num7 = 4.75;
        UI.Notify("Price for Next Level $" + ((double) this.BusinessUpgradeBasePrice * num7 * (double) this.purchaselvl).ToString("N"));
        num6 = this.purchaselvl + 1;
        UI.Notify("Next Level " + num6.ToString());
        UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
        UI.Notify("Profit Margin :" + (0.85 * (double) this.purchaselvl + 0.0).ToString() + "%");
        num6 = 10 * this.purchaselvl;
        UI.Notify("Max Stocks : " + num6.ToString());
      });
      this.PlayerDeck = this.Config.GetValue<int>("CardDeck", "PlayerDeck", this.PlayerDeck);
      this.EliteDeckUnlocked = this.Config.GetValue<int>("CardDeck", "EliteDeckUnlocked", this.EliteDeckUnlocked);
      this.TMDUnlocked = this.Config.GetValue<int>("CardDeck -TMD", "TMDUnlocked", this.TMDUnlocked);
      this.TMD_UseNormalDeckCards = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseNormalDeckCards", this.TMD_UseNormalDeckCards);
      this.TMD_UseEliteDeckCards = this.Config.GetValue<bool>("CardDeck - TMD", " TMD_UseEliteDeckCards", this.TMD_UseEliteDeckCards);
      this.TMD_UseAce = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseAce", this.TMD_UseAce);
      this.TMD_UseKing = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseKing", this.TMD_UseKing);
      this.TMD_UseQueen = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseQueen", this.TMD_UseQueen);
      this.TMD_UseJack = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_UseJack", this.TMD_UseJack);
      this.TMD_Use02 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use02", this.TMD_Use02);
      this.TMD_Use03 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use03", this.TMD_Use03);
      this.TMD_Use04 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use04", this.TMD_Use04);
      this.TMD_Use05 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use05", this.TMD_Use05);
      this.TMD_Use06 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use06", this.TMD_Use06);
      this.TMD_Use07 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use07", this.TMD_Use07);
      this.TMD_Use08 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use08", this.TMD_Use08);
      this.TMD_Use09 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use09", this.TMD_Use09);
      this.TMD_Use10 = this.Config.GetValue<bool>("CardDeck - TMD", "TMD_Use10", this.TMD_Use10);
    }

    private void VehicleIdentiferfun2(VehicleHash v)
    {
      if (this.VehicleMarker != (Blip) null)
        this.VehicleMarker.Remove();
      this.Vehicletoget = (Vehicle) null;
      System.Random random = new System.Random();
      if (random.Next(1, 13) == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (random.Next(1, 13) == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (random.Next(1, 13) == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (random.Next(1, 13) == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (random.Next(1, 13) == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (random.Next(1, 13) == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (random.Next(1, 13) == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (random.Next(1, 13) == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (random.Next(1, 13) == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (random.Next(1, 13) == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (random.Next(1, 13) == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (random.Next(1, 13) == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      this.Vehicletoget = World.CreateVehicle((GTA.Model) v, this.VehicleSpawn);
      this.SourcedVehicle = this.Vehicletoget.DisplayName;
      this.Vehicletoget.Delete();
      this.NewVehicleSourcing = true;
      this.foundvehicleyet = true;
      this.SourcingCheckingforDamage = true;
    }

    private void VehicleIdentiferfun(VehicleHash v)
    {
      if (this.VehicleMarker != (Blip) null)
        this.VehicleMarker.Remove();
      this.Vehicletoget = (Vehicle) null;
      System.Random random = new System.Random();
      if (random.Next(1, 13) == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (random.Next(1, 13) == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (random.Next(1, 13) == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (random.Next(1, 13) == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (random.Next(1, 13) == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (random.Next(1, 13) == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (random.Next(1, 13) == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (random.Next(1, 13) == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (random.Next(1, 13) == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (random.Next(1, 13) == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (random.Next(1, 13) == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (random.Next(1, 13) == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      this.Vehicletoget = World.CreateVehicle((GTA.Model) v, this.VehicleSpawn);
      this.Vehicletoget.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.Busker01SMO);
      this.Vehicletoget.GetPedOnSeat(VehicleSeat.Driver).Task.FleeFrom(Game.Player.Character);
      this.Vehicleloc = this.Vehicletoget.Position;
      this.VehicleMarker = World.CreateBlip(this.Vehicleloc);
      this.VehicleMarker.Sprite = BlipSprite.Cab;
      this.VehicleMarker.Color = BlipColor.Red;
      this.VehicleMarker.Name = "Target Car";
      this.foundvehicleyet = true;
      this.SourcingCheckingforDamage = true;
    }

    public Prop GetLocalTable(string S, Vector3 V)
    {
      int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) S);
      return Function.Call<Prop>(Hash._0xE143FA2249364369, (InputArgument) V.X, (InputArgument) V.Y, (InputArgument) V.Z, (InputArgument) 5f, (InputArgument) num, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
    }

    public void SetupGames()
    {
      this.PokerTables.Add(new Vector3(1142.634f, 264.3345f, -52.5f));
      this.PokerTablesRot.Add(-118f);
      this.PokerTables.Add(new Vector3(1148.7f, 250.9879f, -51.7f));
      this.PokerTablesRot.Add(-19f);
      this.PokerTables.Add(new Vector3(1147.02f, 261.0965f, -52.5f));
      this.PokerTablesRot.Add(61f);
      this.PokerTables.Add(new Vector3(1133.591f, 265.9429f, -51.7f));
      this.PokerTablesRot.Add(-23f);
      this.PokerTables.Add(new Vector3(965.5583f, 29.85048f, 115.2f));
      this.PokerTablesRot.Add(-109f);
      this.RouletteTables.Add(new Vector3(1146.676f, 265.8215f, -52.6f));
      this.RouletteTablesRot.Add(-56f);
      this.RouletteTables.Add(new Vector3(1149.055f, 248.9379f, -51.7f));
      this.RouletteTablesRot.Add(-164f);
      this.RouletteTables.Add(new Vector3(1129.333f, 266.5558f, -51.7f));
      this.RouletteTablesRot.Add(4f);
      this.BlackJackTables.Add(new Vector3(1144.556f, 248.0103f, -51.7f));
      this.BlackJackRot.Add(172f);
      this.BlackJackTables.Add(new Vector3(1152.671f, 266.5922f, -52.5f));
      this.BlackJackRot.Add(67f);
      this.BlackJackTables.Add(new Vector3(1147.983f, 269.922f, -52.5f));
      this.BlackJackRot.Add(-112f);
      this.BlackJackTables.Add(new Vector3(1129.566f, 263.1441f, -51.7f));
      this.BlackJackRot.Add(151f);
      this.BlackJackTables.Add(new Vector3(967.4562f, 33.75568f, 115.2f));
      this.BlackJackRot.Add(-105f);
      this.SlotMachines.Add(new Vector3(1105.959f, 228.7872f, -49.8f));
      this.SlotMachinesRot.Add(35f);
      this.SlotMachines.Add(new Vector3(1106.344f, 230.4661f, -49.8f));
      this.SlotMachinesRot.Add(108f);
      this.SlotMachines.Add(new Vector3(1105.047f, 231.4999f, -49.8f));
      this.SlotMachinesRot.Add(178f);
      this.SlotMachines.Add(new Vector3(1103.892f, 230.5018f, -49.8f));
      this.SlotMachinesRot.Add(-107f);
      this.SlotMachines.Add(new Vector3(1101.564f, 230.6477f, -49.8f));
      this.SlotMachinesRot.Add(63f);
      this.SlotMachines.Add(new Vector3(1100.822f, 230.105f, -49.8f));
      this.SlotMachinesRot.Add(45f);
      this.SlotMachines.Add(new Vector3(1101.661f, 231.5672f, -49.8f));
      this.SlotMachinesRot.Add(73f);
      this.SlotMachines.Add(new Vector3(1101.94f, 232.4414f, -49.8f));
      this.SlotMachinesRot.Add(87f);
      this.SlotMachines.Add(new Vector3(1101.775f, 233.3168f, -49.8f));
      this.SlotMachinesRot.Add(101f);
      this.SlotMachines.Add(new Vector3(1107.15f, 234.9417f, -49.8f));
      this.SlotMachinesRot.Add(-111f);
      this.SlotMachines.Add(new Vector3(1107.558f, 233.311f, -49.8f));
      this.SlotMachinesRot.Add(-34f);
      this.SlotMachines.Add(new Vector3(1109.176f, 233.5511f, -49.8f));
      this.SlotMachinesRot.Add(32f);
      this.SlotMachines.Add(new Vector3(1109.793f, 234.9457f, -49.8f));
      this.SlotMachinesRot.Add(109f);
      this.SlotMachines.Add(new Vector3(1108.582f, 239.1074f, -49.8f));
      this.SlotMachinesRot.Add(-48f);
      this.SlotMachines.Add(new Vector3(1109.164f, 238.4004f, -49.8f));
      this.SlotMachinesRot.Add(-34f);
      this.SlotMachines.Add(new Vector3(1110.082f, 238.1253f, -49.8f));
      this.SlotMachinesRot.Add(-20f);
      this.SlotMachines.Add(new Vector3(1110.956f, 238.1476f, -49.8f));
      this.SlotMachinesRot.Add(-3f);
      this.SlotMachines.Add(new Vector3(1111.801f, 238.1584f, -49.8f));
      this.SlotMachinesRot.Add(25f);
      this.SlotMachines.Add(new Vector3(1112.645f, 238.5698f, -49.8f));
      this.SlotMachinesRot.Add(32f);
      this.SlotMachines.Add(new Vector3(1113.419f, 238.9962f, -49.8f));
      this.SlotMachinesRot.Add(46f);
      this.SlotMachines.Add(new Vector3(1115.422f, 234.7188f, -49.8f));
      this.SlotMachinesRot.Add(109f);
      this.SlotMachines.Add(new Vector3(1114.047f, 235.7146f, -49.8f));
      this.SlotMachinesRot.Add(-170f);
      this.SlotMachines.Add(new Vector3(1112.701f, 234.7498f, -49.8f));
      this.SlotMachinesRot.Add(-107f);
      this.SlotMachines.Add(new Vector3(1113.335f, 233.1384f, -49.8f));
      this.SlotMachinesRot.Add(-37f);
      this.SlotMachines.Add(new Vector3(1114.964f, 233.0724f, -49.8f));
      this.SlotMachinesRot.Add(25f);
      this.SlotMachines.Add(new Vector3(1116.269f, 228.2968f, -49.8f));
      this.SlotMachinesRot.Add(-39f);
      this.SlotMachines.Add(new Vector3(1117.877f, 2278.357f, -49.8f));
      this.SlotMachinesRot.Add(44f);
      this.SlotMachines.Add(new Vector3(1118.452f, 229.9547f, -49.8f));
      this.SlotMachinesRot.Add(103f);
      this.SlotMachines.Add(new Vector3(1117.169f, 230.8778f, -49.8f));
      this.SlotMachinesRot.Add(-175f);
      this.SlotMachines.Add(new Vector3(1117.169f, 230.8778f, -49.8f));
      this.SlotMachinesRot.Add(-175f);
      this.SlotMachines.Add(new Vector3(1129.584f, 250.9299f, -51.2f));
      this.SlotMachinesRot.Add(-173f);
      this.SlotMachines.Add(new Vector3(1130.55f, 251.0233f, -51.2f));
      this.SlotMachinesRot.Add(165f);
      this.SlotMachines.Add(new Vector3(1131.325f, 250.5148f, -51.2f));
      this.SlotMachinesRot.Add(154f);
      this.SlotMachines.Add(new Vector3(1132.006f, 249.9666f, -51.2f));
      this.SlotMachinesRot.Add(133f);
      this.SlotMachines.Add(new Vector3(1132.541f, 249.3008f, -51.2f));
      this.SlotMachinesRot.Add(119f);
      this.SlotMachines.Add(new Vector3(1132.924f, 248.4754f, -51.2f));
      this.SlotMachinesRot.Add(105f);
      this.SlotMachines.Add(new Vector3(1133.166f, 247.5615f, -51.2f));
      this.SlotMachinesRot.Add(84f);
      this.SlotMachines.Add(new Vector3(1137.762f, 251.4668f, -51.2f));
      this.SlotMachinesRot.Add(-44f);
      this.SlotMachines.Add(new Vector3(1139.381f, 251.0917f, -51.2f));
      this.SlotMachinesRot.Add(25f);
      this.SlotMachines.Add(new Vector3(1140.171f, 252.5691f, -51.2f));
      this.SlotMachinesRot.Add(102f);
      this.SlotMachines.Add(new Vector3(1138.972f, 253.6587f, -51.2f));
      this.SlotMachinesRot.Add(175f);
      this.SlotMachines.Add(new Vector3(1135.809f, 256.7634f, -51.2f));
      this.SlotMachinesRot.Add(98f);
      this.SlotMachines.Add(new Vector3(1134.669f, 257.789f, -51.2f));
      this.SlotMachinesRot.Add(168f);
      this.SlotMachines.Add(new Vector3(1133.367f, 257.0611f, -51.2f));
      this.SlotMachinesRot.Add(-117f);
    }

    public void CreatePeds()
    {
      this.Spawns.Add(new Vector3(1091f, 210f, -48f));
      this.Spawns.Add(new Vector3(1108f, 215f, -48f));
      this.Spawns.Add(new Vector3(1110.983f, 240f, -48f));
      this.Spawns.Add(new Vector3(1122f, 256f, -48f));
      this.Spawns.Add(new Vector3(1146f, 249f, -48f));
      System.Random random = new System.Random();
      Vector3 spawn1 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
      if (this.MainWanderPeds)
      {
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Franklin)
        {
          random = new System.Random();
          Vector3 spawn2 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Franklin), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Michael)
        {
          random = new System.Random();
          Vector3 spawn2 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Michael), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Trevor)
        {
          random = new System.Random();
          Vector3 spawn2 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Trevor), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        Vector3 spawn3 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.AmandaTownley), spawn3.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        Vector3 spawn4 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.Lazlow), spawn4.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        Vector3 spawn5 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.LamarDavis), spawn5.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        Vector3 spawn6 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.DrFriedlander), spawn6.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        Vector3 spawn7 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.DaveNorton), spawn7.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn7 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.Cletus), spawn7.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn7 = this.Spawns[random.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.TaosTranslator), spawn7.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null && (Entity) this.Prizecar != (Entity) null && (double) World.GetDistance(ped.Position, this.Prizecar.Position) < 4.0)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
        {
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
          ped.RelationshipGroup = 1;
          ped.AlwaysKeepTask = true;
        }
      }
    }

    public GTA.Model RequestModel(string Prop)
    {
      GTA.Model model = new GTA.Model(Prop);
      model.Request(1000);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(VehicleHash Prop)
    {
      GTA.Model model = new GTA.Model(Prop);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(PedHash Prop)
    {
      GTA.Model model = new GTA.Model(Prop);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model SpawnProp(string Prop)
    {
      GTA.Model model = new GTA.Model(Prop);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public void SpawnProp(string Prop, Vector3 Pos, Vector3 Rot)
    {
      try
      {
        GTA.Model model = new GTA.Model(Prop);
        model.Request(250);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(50);
          this.Computer = World.CreateProp(model, Pos, Rot, true, false);
        }
        model.MarkAsNoLongerNeeded();
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Prop : ~w~" + Prop + "~r~ Failed to spawn");
      }
    }

    public string GetRandomCardPlayer()
    {
      System.Random random = new System.Random();
      List<object> objectList = new List<object>();
      if (this.PlayerDeck == 1 || this.PlayerDeck == 0)
      {
        objectList.Add((object) "vw_prop_cas_card_club_02");
        objectList.Add((object) "vw_prop_cas_card_club_03");
        objectList.Add((object) "vw_prop_cas_card_club_04");
        objectList.Add((object) "vw_prop_cas_card_club_05");
        objectList.Add((object) "vw_prop_cas_card_club_06");
        objectList.Add((object) "vw_prop_cas_card_club_07");
        objectList.Add((object) "vw_prop_cas_card_club_08");
        objectList.Add((object) "vw_prop_cas_card_club_09");
        objectList.Add((object) "vw_prop_cas_card_club_10");
        objectList.Add((object) "vw_prop_cas_card_club_ace");
        objectList.Add((object) "vw_prop_cas_card_club_jack");
        objectList.Add((object) "vw_prop_cas_card_club_king");
        objectList.Add((object) "vw_prop_cas_card_club_queen");
        objectList.Add((object) "vw_prop_cas_card_spd_queen");
        objectList.Add((object) "vw_prop_cas_card_spd_king");
        objectList.Add((object) "vw_prop_cas_card_spd_jack");
        objectList.Add((object) "vw_prop_cas_card_spd_ace");
        objectList.Add((object) "vw_prop_cas_card_spd_10");
        objectList.Add((object) "vw_prop_cas_card_spd_09");
        objectList.Add((object) "vw_prop_cas_card_spd_08");
        objectList.Add((object) "vw_prop_cas_card_spd_07");
        objectList.Add((object) "vw_prop_cas_card_spd_06");
        objectList.Add((object) "vw_prop_cas_card_spd_05");
        objectList.Add((object) "vw_prop_cas_card_spd_04");
        objectList.Add((object) "vw_prop_cas_card_spd_03");
        objectList.Add((object) "vw_prop_cas_card_spd_02");
        objectList.Add((object) "vw_prop_cas_card_hrt_queen");
        objectList.Add((object) "vw_prop_cas_card_hrt_king");
        objectList.Add((object) "vw_prop_cas_card_hrt_jack");
        objectList.Add((object) "vw_prop_cas_card_hrt_ace");
        objectList.Add((object) "vw_prop_cas_card_hrt_10");
        objectList.Add((object) "vw_prop_cas_card_hrt_09");
        objectList.Add((object) "vw_prop_cas_card_hrt_08");
        objectList.Add((object) "vw_prop_cas_card_hrt_07");
        objectList.Add((object) "vw_prop_cas_card_hrt_06");
        objectList.Add((object) "vw_prop_cas_card_hrt_05");
        objectList.Add((object) "vw_prop_cas_card_hrt_04");
        objectList.Add((object) "vw_prop_cas_card_hrt_03");
        objectList.Add((object) "vw_prop_cas_card_hrt_02");
        objectList.Add((object) "vw_prop_cas_card_dia_queen");
        objectList.Add((object) "vw_prop_cas_card_dia_king");
        objectList.Add((object) "vw_prop_cas_card_dia_jack");
        objectList.Add((object) "vw_prop_cas_card_dia_ace");
        objectList.Add((object) "vw_prop_cas_card_dia_10");
        objectList.Add((object) "vw_prop_cas_card_dia_09");
        objectList.Add((object) "vw_prop_cas_card_dia_08");
        objectList.Add((object) "vw_prop_cas_card_dia_07");
        objectList.Add((object) "vw_prop_cas_card_dia_06");
        objectList.Add((object) "vw_prop_cas_card_dia_05");
        objectList.Add((object) "vw_prop_cas_card_dia_04");
        objectList.Add((object) "vw_prop_cas_card_dia_03");
        objectList.Add((object) "vw_prop_cas_card_dia_02");
      }
      if (this.PlayerDeck == 2)
      {
        objectList.Add((object) "vw_prop_vw_club_char_02a");
        objectList.Add((object) "vw_prop_vw_club_char_03a");
        objectList.Add((object) "vw_prop_vw_club_char_04a");
        objectList.Add((object) "vw_prop_vw_club_char_05a");
        objectList.Add((object) "vw_prop_vw_club_char_06a");
        objectList.Add((object) "vw_prop_vw_club_char_07a");
        objectList.Add((object) "vw_prop_vw_club_char_08a");
        objectList.Add((object) "vw_prop_vw_club_char_09a");
        objectList.Add((object) "vw_prop_vw_club_char_10a");
        objectList.Add((object) "vw_prop_vw_club_char_a_a");
        objectList.Add((object) "vw_prop_vw_club_char_j_a");
        objectList.Add((object) "vw_prop_vw_club_char_k_a");
        objectList.Add((object) "vw_prop_vw_club_char_q_a");
        objectList.Add((object) "vw_prop_vw_dia_char_02a");
        objectList.Add((object) "vw_prop_vw_dia_char_03a");
        objectList.Add((object) "vw_prop_vw_dia_char_04a");
        objectList.Add((object) "vw_prop_vw_dia_char_05a");
        objectList.Add((object) "vw_prop_vw_dia_char_06a");
        objectList.Add((object) "vw_prop_vw_dia_char_07a");
        objectList.Add((object) "vw_prop_vw_dia_char_08a");
        objectList.Add((object) "vw_prop_vw_dia_char_09a");
        objectList.Add((object) "vw_prop_vw_dia_char_10a");
        objectList.Add((object) "vw_prop_vw_dia_char_a_a");
        objectList.Add((object) "vw_prop_vw_dia_char_j_a");
        objectList.Add((object) "vw_prop_vw_dia_char_k_a");
        objectList.Add((object) "vw_prop_vw_dia_char_q_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_02a");
        objectList.Add((object) "vw_prop_vw_hrt_char_03a");
        objectList.Add((object) "vw_prop_vw_hrt_char_04a");
        objectList.Add((object) "vw_prop_vw_hrt_char_05a");
        objectList.Add((object) "vw_prop_vw_hrt_char_06a");
        objectList.Add((object) "vw_prop_vw_hrt_char_07a");
        objectList.Add((object) "vw_prop_vw_hrt_char_08a");
        objectList.Add((object) "vw_prop_vw_hrt_char_09a");
        objectList.Add((object) "vw_prop_vw_hrt_char_10a");
        objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
        objectList.Add((object) "vw_prop_vw_spd_char_02a");
        objectList.Add((object) "vw_prop_vw_spd_char_03a");
        objectList.Add((object) "vw_prop_vw_spd_char_04a");
        objectList.Add((object) "vw_prop_vw_spd_char_05a");
        objectList.Add((object) "vw_prop_vw_spd_char_06a");
        objectList.Add((object) "vw_prop_vw_spd_char_07a");
        objectList.Add((object) "vw_prop_vw_spd_char_08a");
        objectList.Add((object) "vw_prop_vw_spd_char_09a");
        objectList.Add((object) "vw_prop_vw_spd_char_10a");
        objectList.Add((object) "vw_prop_vw_spd_char_a_a");
        objectList.Add((object) "vw_prop_vw_spd_char_j_a");
        objectList.Add((object) "vw_prop_vw_spd_char_k_a");
        objectList.Add((object) "vw_prop_vw_spd_char_q_a");
      }
      if (this.PlayerDeck == 3)
      {
        if (this.TMD_UseNormalDeckCards)
        {
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_cas_card_club_02");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_cas_card_club_03");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_cas_card_club_04");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_cas_card_club_05");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_cas_card_club_06");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_cas_card_club_07");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_cas_card_club_08");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_cas_card_club_09");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_cas_card_club_10");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_cas_card_club_ace");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_cas_card_club_jack");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_cas_card_club_king");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_cas_card_club_queen");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_cas_card_spd_queen");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_cas_card_spd_king");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_cas_card_spd_jack");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_cas_card_spd_ace");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_cas_card_spd_10");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_cas_card_spd_09");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_cas_card_spd_08");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_cas_card_spd_07");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_cas_card_spd_06");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_cas_card_spd_05");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_cas_card_spd_04");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_cas_card_spd_03");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_cas_card_spd_02");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_cas_card_hrt_queen");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_cas_card_hrt_king");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_cas_card_hrt_jack");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_cas_card_hrt_ace");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_cas_card_hrt_10");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_cas_card_hrt_09");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_cas_card_hrt_08");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_cas_card_hrt_07");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_cas_card_hrt_06");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_cas_card_hrt_05");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_cas_card_hrt_04");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_cas_card_hrt_03");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_cas_card_hrt_02");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_cas_card_dia_queen");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_cas_card_dia_king");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_cas_card_dia_jack");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_cas_card_dia_ace");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_cas_card_dia_10");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_cas_card_dia_09");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_cas_card_dia_08");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_cas_card_dia_07");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_cas_card_dia_06");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_cas_card_dia_05");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_cas_card_dia_04");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_cas_card_dia_03");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_cas_card_dia_02");
        }
        if (this.TMD_UseEliteDeckCards)
        {
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_vw_club_char_02a");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_vw_club_char_03a");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_vw_club_char_04a");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_vw_club_char_05a");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_vw_club_char_06a");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_vw_club_char_07a");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_vw_club_char_08a");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_vw_club_char_09a");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_vw_club_char_10a");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_vw_club_char_a_a");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_vw_club_char_j_a");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_vw_club_char_k_a");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_vw_club_char_q_a");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_vw_dia_char_02a");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_vw_dia_char_03a");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_vw_dia_char_04a");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_vw_dia_char_05a");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_vw_dia_char_06a");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_vw_dia_char_07a");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_vw_dia_char_08a");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_vw_dia_char_09a");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_vw_dia_char_10a");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_vw_dia_char_a_a");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_vw_dia_char_j_a");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_vw_dia_char_k_a");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_vw_dia_char_q_a");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_vw_hrt_char_02a");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_vw_hrt_char_03a");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_vw_hrt_char_04a");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_vw_hrt_char_05a");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_vw_hrt_char_06a");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_vw_hrt_char_07a");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_vw_hrt_char_08a");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_vw_hrt_char_09a");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_vw_hrt_char_10a");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
          if (this.TMD_Use02)
            objectList.Add((object) "vw_prop_vw_spd_char_02a");
          if (this.TMD_Use03)
            objectList.Add((object) "vw_prop_vw_spd_char_03a");
          if (this.TMD_Use04)
            objectList.Add((object) "vw_prop_vw_spd_char_04a");
          if (this.TMD_Use05)
            objectList.Add((object) "vw_prop_vw_spd_char_05a");
          if (this.TMD_Use06)
            objectList.Add((object) "vw_prop_vw_spd_char_06a");
          if (this.TMD_Use07)
            objectList.Add((object) "vw_prop_vw_spd_char_07a");
          if (this.TMD_Use08)
            objectList.Add((object) "vw_prop_vw_spd_char_08a");
          if (this.TMD_Use09)
            objectList.Add((object) "vw_prop_vw_spd_char_09a");
          if (this.TMD_Use10)
            objectList.Add((object) "vw_prop_vw_spd_char_10a");
          if (this.TMD_UseAce)
            objectList.Add((object) "vw_prop_vw_spd_char_a_a");
          if (this.TMD_UseJack)
            objectList.Add((object) "vw_prop_vw_spd_char_j_a");
          if (this.TMD_UseKing)
            objectList.Add((object) "vw_prop_vw_spd_char_k_a");
          if (this.TMD_UseQueen)
            objectList.Add((object) "vw_prop_vw_spd_char_q_a");
        }
      }
      int index = random.Next(0, objectList.Count - 1);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1093.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1093.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return Class1.\u003C\u003Eo__1093.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1093.\u003C\u003Ep__0, objectList[index]);
    }

    public string GetRandomCardDealer()
    {
      System.Random random = new System.Random();
      List<object> objectList = new List<object>();
      if (this.PlayerDeck == 1 || this.PlayerDeck == 0)
      {
        objectList.Add((object) "vw_prop_cas_card_club_02");
        objectList.Add((object) "vw_prop_cas_card_club_03");
        objectList.Add((object) "vw_prop_cas_card_club_04");
        objectList.Add((object) "vw_prop_cas_card_club_05");
        objectList.Add((object) "vw_prop_cas_card_club_06");
        objectList.Add((object) "vw_prop_cas_card_club_07");
        objectList.Add((object) "vw_prop_cas_card_club_08");
        objectList.Add((object) "vw_prop_cas_card_club_09");
        objectList.Add((object) "vw_prop_cas_card_club_10");
        objectList.Add((object) "vw_prop_cas_card_club_ace");
        objectList.Add((object) "vw_prop_cas_card_club_jack");
        objectList.Add((object) "vw_prop_cas_card_club_king");
        objectList.Add((object) "vw_prop_cas_card_club_queen");
        objectList.Add((object) "vw_prop_cas_card_spd_queen");
        objectList.Add((object) "vw_prop_cas_card_spd_king");
        objectList.Add((object) "vw_prop_cas_card_spd_jack");
        objectList.Add((object) "vw_prop_cas_card_spd_ace");
        objectList.Add((object) "vw_prop_cas_card_spd_10");
        objectList.Add((object) "vw_prop_cas_card_spd_09");
        objectList.Add((object) "vw_prop_cas_card_spd_08");
        objectList.Add((object) "vw_prop_cas_card_spd_07");
        objectList.Add((object) "vw_prop_cas_card_spd_06");
        objectList.Add((object) "vw_prop_cas_card_spd_05");
        objectList.Add((object) "vw_prop_cas_card_spd_04");
        objectList.Add((object) "vw_prop_cas_card_spd_03");
        objectList.Add((object) "vw_prop_cas_card_spd_02");
        objectList.Add((object) "vw_prop_cas_card_hrt_queen");
        objectList.Add((object) "vw_prop_cas_card_hrt_king");
        objectList.Add((object) "vw_prop_cas_card_hrt_jack");
        objectList.Add((object) "vw_prop_cas_card_hrt_ace");
        objectList.Add((object) "vw_prop_cas_card_hrt_10");
        objectList.Add((object) "vw_prop_cas_card_hrt_09");
        objectList.Add((object) "vw_prop_cas_card_hrt_08");
        objectList.Add((object) "vw_prop_cas_card_hrt_07");
        objectList.Add((object) "vw_prop_cas_card_hrt_06");
        objectList.Add((object) "vw_prop_cas_card_hrt_05");
        objectList.Add((object) "vw_prop_cas_card_hrt_04");
        objectList.Add((object) "vw_prop_cas_card_hrt_03");
        objectList.Add((object) "vw_prop_cas_card_hrt_02");
        objectList.Add((object) "vw_prop_cas_card_dia_queen");
        objectList.Add((object) "vw_prop_cas_card_dia_king");
        objectList.Add((object) "vw_prop_cas_card_dia_jack");
        objectList.Add((object) "vw_prop_cas_card_dia_ace");
        objectList.Add((object) "vw_prop_cas_card_dia_10");
        objectList.Add((object) "vw_prop_cas_card_dia_09");
        objectList.Add((object) "vw_prop_cas_card_dia_08");
        objectList.Add((object) "vw_prop_cas_card_dia_07");
        objectList.Add((object) "vw_prop_cas_card_dia_06");
        objectList.Add((object) "vw_prop_cas_card_dia_05");
        objectList.Add((object) "vw_prop_cas_card_dia_04");
        objectList.Add((object) "vw_prop_cas_card_dia_03");
        objectList.Add((object) "vw_prop_cas_card_dia_02");
      }
      if (this.PlayerDeck == 2)
      {
        objectList.Add((object) "vw_prop_vw_club_char_02a");
        objectList.Add((object) "vw_prop_vw_club_char_03a");
        objectList.Add((object) "vw_prop_vw_club_char_04a");
        objectList.Add((object) "vw_prop_vw_club_char_05a");
        objectList.Add((object) "vw_prop_vw_club_char_06a");
        objectList.Add((object) "vw_prop_vw_club_char_07a");
        objectList.Add((object) "vw_prop_vw_club_char_08a");
        objectList.Add((object) "vw_prop_vw_club_char_09a");
        objectList.Add((object) "vw_prop_vw_club_char_10a");
        objectList.Add((object) "vw_prop_vw_club_char_a_a");
        objectList.Add((object) "vw_prop_vw_club_char_j_a");
        objectList.Add((object) "vw_prop_vw_club_char_k_a");
        objectList.Add((object) "vw_prop_vw_club_char_q_a");
        objectList.Add((object) "vw_prop_vw_dia_char_02a");
        objectList.Add((object) "vw_prop_vw_dia_char_03a");
        objectList.Add((object) "vw_prop_vw_dia_char_04a");
        objectList.Add((object) "vw_prop_vw_dia_char_05a");
        objectList.Add((object) "vw_prop_vw_dia_char_06a");
        objectList.Add((object) "vw_prop_vw_dia_char_07a");
        objectList.Add((object) "vw_prop_vw_dia_char_08a");
        objectList.Add((object) "vw_prop_vw_dia_char_09a");
        objectList.Add((object) "vw_prop_vw_dia_char_10a");
        objectList.Add((object) "vw_prop_vw_dia_char_a_a");
        objectList.Add((object) "vw_prop_vw_dia_char_j_a");
        objectList.Add((object) "vw_prop_vw_dia_char_k_a");
        objectList.Add((object) "vw_prop_vw_dia_char_q_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_02a");
        objectList.Add((object) "vw_prop_vw_hrt_char_03a");
        objectList.Add((object) "vw_prop_vw_hrt_char_04a");
        objectList.Add((object) "vw_prop_vw_hrt_char_05a");
        objectList.Add((object) "vw_prop_vw_hrt_char_06a");
        objectList.Add((object) "vw_prop_vw_hrt_char_07a");
        objectList.Add((object) "vw_prop_vw_hrt_char_08a");
        objectList.Add((object) "vw_prop_vw_hrt_char_09a");
        objectList.Add((object) "vw_prop_vw_hrt_char_10a");
        objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
        objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
        objectList.Add((object) "vw_prop_vw_spd_char_02a");
        objectList.Add((object) "vw_prop_vw_spd_char_03a");
        objectList.Add((object) "vw_prop_vw_spd_char_04a");
        objectList.Add((object) "vw_prop_vw_spd_char_05a");
        objectList.Add((object) "vw_prop_vw_spd_char_06a");
        objectList.Add((object) "vw_prop_vw_spd_char_07a");
        objectList.Add((object) "vw_prop_vw_spd_char_08a");
        objectList.Add((object) "vw_prop_vw_spd_char_09a");
        objectList.Add((object) "vw_prop_vw_spd_char_10a");
        objectList.Add((object) "vw_prop_vw_spd_char_a_a");
        objectList.Add((object) "vw_prop_vw_spd_char_j_a");
        objectList.Add((object) "vw_prop_vw_spd_char_k_a");
        objectList.Add((object) "vw_prop_vw_spd_char_q_a");
      }
      if (this.PlayerDeck == 3)
      {
        if (this.TMD_Dealer)
        {
          if (this.PlayerDeck == 3)
          {
            if (this.TMD_UseNormalDeckCards)
            {
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_cas_card_club_02");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_cas_card_club_03");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_cas_card_club_04");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_cas_card_club_05");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_cas_card_club_06");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_cas_card_club_07");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_cas_card_club_08");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_cas_card_club_09");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_cas_card_club_10");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_cas_card_club_ace");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_cas_card_club_jack");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_cas_card_club_king");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_cas_card_club_queen");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_cas_card_spd_queen");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_cas_card_spd_king");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_cas_card_spd_jack");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_cas_card_spd_ace");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_cas_card_spd_10");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_cas_card_spd_09");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_cas_card_spd_08");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_cas_card_spd_07");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_cas_card_spd_06");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_cas_card_spd_05");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_cas_card_spd_04");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_cas_card_spd_03");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_cas_card_spd_02");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_cas_card_hrt_queen");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_cas_card_hrt_king");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_cas_card_hrt_jack");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_cas_card_hrt_ace");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_cas_card_hrt_10");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_cas_card_hrt_09");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_cas_card_hrt_08");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_cas_card_hrt_07");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_cas_card_hrt_06");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_cas_card_hrt_05");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_cas_card_hrt_04");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_cas_card_hrt_03");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_cas_card_hrt_02");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_cas_card_dia_queen");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_cas_card_dia_king");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_cas_card_dia_jack");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_cas_card_dia_ace");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_cas_card_dia_10");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_cas_card_dia_09");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_cas_card_dia_08");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_cas_card_dia_07");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_cas_card_dia_06");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_cas_card_dia_05");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_cas_card_dia_04");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_cas_card_dia_03");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_cas_card_dia_02");
            }
            if (this.TMD_UseEliteDeckCards)
            {
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_vw_club_char_02a");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_vw_club_char_03a");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_vw_club_char_04a");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_vw_club_char_05a");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_vw_club_char_06a");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_vw_club_char_07a");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_vw_club_char_08a");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_vw_club_char_09a");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_vw_club_char_10a");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_vw_club_char_a_a");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_vw_club_char_j_a");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_vw_club_char_k_a");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_vw_club_char_q_a");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_vw_dia_char_02a");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_vw_dia_char_03a");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_vw_dia_char_04a");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_vw_dia_char_05a");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_vw_dia_char_06a");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_vw_dia_char_07a");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_vw_dia_char_08a");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_vw_dia_char_09a");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_vw_dia_char_10a");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_vw_dia_char_a_a");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_vw_dia_char_j_a");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_vw_dia_char_k_a");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_vw_dia_char_q_a");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_vw_hrt_char_02a");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_vw_hrt_char_03a");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_vw_hrt_char_04a");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_vw_hrt_char_05a");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_vw_hrt_char_06a");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_vw_hrt_char_07a");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_vw_hrt_char_08a");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_vw_hrt_char_09a");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_vw_hrt_char_10a");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
              if (this.TMD_Use02)
                objectList.Add((object) "vw_prop_vw_spd_char_02a");
              if (this.TMD_Use03)
                objectList.Add((object) "vw_prop_vw_spd_char_03a");
              if (this.TMD_Use04)
                objectList.Add((object) "vw_prop_vw_spd_char_04a");
              if (this.TMD_Use05)
                objectList.Add((object) "vw_prop_vw_spd_char_05a");
              if (this.TMD_Use06)
                objectList.Add((object) "vw_prop_vw_spd_char_06a");
              if (this.TMD_Use07)
                objectList.Add((object) "vw_prop_vw_spd_char_07a");
              if (this.TMD_Use08)
                objectList.Add((object) "vw_prop_vw_spd_char_08a");
              if (this.TMD_Use09)
                objectList.Add((object) "vw_prop_vw_spd_char_09a");
              if (this.TMD_Use10)
                objectList.Add((object) "vw_prop_vw_spd_char_10a");
              if (this.TMD_UseAce)
                objectList.Add((object) "vw_prop_vw_spd_char_a_a");
              if (this.TMD_UseJack)
                objectList.Add((object) "vw_prop_vw_spd_char_j_a");
              if (this.TMD_UseKing)
                objectList.Add((object) "vw_prop_vw_spd_char_k_a");
              if (this.TMD_UseQueen)
                objectList.Add((object) "vw_prop_vw_spd_char_q_a");
            }
          }
        }
        else
        {
          if (this.TMD_UseNormalDeckCards)
          {
            objectList.Add((object) "vw_prop_vw_club_char_02a");
            objectList.Add((object) "vw_prop_vw_club_char_03a");
            objectList.Add((object) "vw_prop_vw_club_char_04a");
            objectList.Add((object) "vw_prop_vw_club_char_05a");
            objectList.Add((object) "vw_prop_vw_club_char_06a");
            objectList.Add((object) "vw_prop_vw_club_char_07a");
            objectList.Add((object) "vw_prop_vw_club_char_08a");
            objectList.Add((object) "vw_prop_vw_club_char_09a");
            objectList.Add((object) "vw_prop_vw_club_char_10a");
            objectList.Add((object) "vw_prop_vw_club_char_a_a");
            objectList.Add((object) "vw_prop_vw_club_char_j_a");
            objectList.Add((object) "vw_prop_vw_club_char_k_a");
            objectList.Add((object) "vw_prop_vw_club_char_q_a");
            objectList.Add((object) "vw_prop_vw_dia_char_02a");
            objectList.Add((object) "vw_prop_vw_dia_char_03a");
            objectList.Add((object) "vw_prop_vw_dia_char_04a");
            objectList.Add((object) "vw_prop_vw_dia_char_05a");
            objectList.Add((object) "vw_prop_vw_dia_char_06a");
            objectList.Add((object) "vw_prop_vw_dia_char_07a");
            objectList.Add((object) "vw_prop_vw_dia_char_08a");
            objectList.Add((object) "vw_prop_vw_dia_char_09a");
            objectList.Add((object) "vw_prop_vw_dia_char_10a");
            objectList.Add((object) "vw_prop_vw_dia_char_a_a");
            objectList.Add((object) "vw_prop_vw_dia_char_j_a");
            objectList.Add((object) "vw_prop_vw_dia_char_k_a");
            objectList.Add((object) "vw_prop_vw_dia_char_q_a");
            objectList.Add((object) "vw_prop_vw_hrt_char_02a");
            objectList.Add((object) "vw_prop_vw_hrt_char_03a");
            objectList.Add((object) "vw_prop_vw_hrt_char_04a");
            objectList.Add((object) "vw_prop_vw_hrt_char_05a");
            objectList.Add((object) "vw_prop_vw_hrt_char_06a");
            objectList.Add((object) "vw_prop_vw_hrt_char_07a");
            objectList.Add((object) "vw_prop_vw_hrt_char_08a");
            objectList.Add((object) "vw_prop_vw_hrt_char_09a");
            objectList.Add((object) "vw_prop_vw_hrt_char_10a");
            objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
            objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
            objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
            objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
            objectList.Add((object) "vw_prop_vw_spd_char_02a");
            objectList.Add((object) "vw_prop_vw_spd_char_03a");
            objectList.Add((object) "vw_prop_vw_spd_char_04a");
            objectList.Add((object) "vw_prop_vw_spd_char_05a");
            objectList.Add((object) "vw_prop_vw_spd_char_06a");
            objectList.Add((object) "vw_prop_vw_spd_char_07a");
            objectList.Add((object) "vw_prop_vw_spd_char_08a");
            objectList.Add((object) "vw_prop_vw_spd_char_09a");
            objectList.Add((object) "vw_prop_vw_spd_char_10a");
            objectList.Add((object) "vw_prop_vw_spd_char_a_a");
            objectList.Add((object) "vw_prop_vw_spd_char_j_a");
            objectList.Add((object) "vw_prop_vw_spd_char_k_a");
            objectList.Add((object) "vw_prop_vw_spd_char_q_a");
          }
          if (this.TMD_UseEliteDeckCards)
          {
            objectList.Add((object) "vw_prop_cas_card_club_02");
            objectList.Add((object) "vw_prop_cas_card_club_03");
            objectList.Add((object) "vw_prop_cas_card_club_04");
            objectList.Add((object) "vw_prop_cas_card_club_05");
            objectList.Add((object) "vw_prop_cas_card_club_06");
            objectList.Add((object) "vw_prop_cas_card_club_07");
            objectList.Add((object) "vw_prop_cas_card_club_08");
            objectList.Add((object) "vw_prop_cas_card_club_09");
            objectList.Add((object) "vw_prop_cas_card_club_10");
            objectList.Add((object) "vw_prop_cas_card_club_ace");
            objectList.Add((object) "vw_prop_cas_card_club_jack");
            objectList.Add((object) "vw_prop_cas_card_club_king");
            objectList.Add((object) "vw_prop_cas_card_club_queen");
            objectList.Add((object) "vw_prop_cas_card_spd_queen");
            objectList.Add((object) "vw_prop_cas_card_spd_king");
            objectList.Add((object) "vw_prop_cas_card_spd_jack");
            objectList.Add((object) "vw_prop_cas_card_spd_ace");
            objectList.Add((object) "vw_prop_cas_card_spd_10");
            objectList.Add((object) "vw_prop_cas_card_spd_09");
            objectList.Add((object) "vw_prop_cas_card_spd_08");
            objectList.Add((object) "vw_prop_cas_card_spd_07");
            objectList.Add((object) "vw_prop_cas_card_spd_06");
            objectList.Add((object) "vw_prop_cas_card_spd_05");
            objectList.Add((object) "vw_prop_cas_card_spd_04");
            objectList.Add((object) "vw_prop_cas_card_spd_03");
            objectList.Add((object) "vw_prop_cas_card_spd_02");
            objectList.Add((object) "vw_prop_cas_card_hrt_queen");
            objectList.Add((object) "vw_prop_cas_card_hrt_king");
            objectList.Add((object) "vw_prop_cas_card_hrt_jack");
            objectList.Add((object) "vw_prop_cas_card_hrt_ace");
            objectList.Add((object) "vw_prop_cas_card_hrt_10");
            objectList.Add((object) "vw_prop_cas_card_hrt_09");
            objectList.Add((object) "vw_prop_cas_card_hrt_08");
            objectList.Add((object) "vw_prop_cas_card_hrt_07");
            objectList.Add((object) "vw_prop_cas_card_hrt_06");
            objectList.Add((object) "vw_prop_cas_card_hrt_05");
            objectList.Add((object) "vw_prop_cas_card_hrt_04");
            objectList.Add((object) "vw_prop_cas_card_hrt_03");
            objectList.Add((object) "vw_prop_cas_card_hrt_02");
            objectList.Add((object) "vw_prop_cas_card_dia_queen");
            objectList.Add((object) "vw_prop_cas_card_dia_king");
            objectList.Add((object) "vw_prop_cas_card_dia_jack");
            objectList.Add((object) "vw_prop_cas_card_dia_ace");
            objectList.Add((object) "vw_prop_cas_card_dia_10");
            objectList.Add((object) "vw_prop_cas_card_dia_09");
            objectList.Add((object) "vw_prop_cas_card_dia_08");
            objectList.Add((object) "vw_prop_cas_card_dia_07");
            objectList.Add((object) "vw_prop_cas_card_dia_06");
            objectList.Add((object) "vw_prop_cas_card_dia_05");
            objectList.Add((object) "vw_prop_cas_card_dia_04");
            objectList.Add((object) "vw_prop_cas_card_dia_03");
            objectList.Add((object) "vw_prop_cas_card_dia_02");
          }
        }
      }
      int index = random.Next(0, objectList.Count - 1);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1094.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1094.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return Class1.\u003C\u003Eo__1094.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1094.\u003C\u003Ep__0, objectList[index]);
    }

    public string GetRandomCardDealer_BlackJack()
    {
      System.Random random = new System.Random();
      List<object> objectList = new List<object>();
      int num = random.Next(0, 52);
      if (num < 16)
      {
        if (this.PlayerDeck == 1 || this.PlayerDeck == 0)
        {
          objectList.Add((object) "vw_prop_cas_card_club_10");
          objectList.Add((object) "vw_prop_cas_card_club_jack");
          objectList.Add((object) "vw_prop_cas_card_club_king");
          objectList.Add((object) "vw_prop_cas_card_club_queen");
          objectList.Add((object) "vw_prop_cas_card_spd_queen");
          objectList.Add((object) "vw_prop_cas_card_spd_king");
          objectList.Add((object) "vw_prop_cas_card_spd_jack");
          objectList.Add((object) "vw_prop_cas_card_spd_10");
          objectList.Add((object) "vw_prop_cas_card_hrt_queen");
          objectList.Add((object) "vw_prop_cas_card_hrt_king");
          objectList.Add((object) "vw_prop_cas_card_hrt_jack");
          objectList.Add((object) "vw_prop_cas_card_hrt_10");
          objectList.Add((object) "vw_prop_cas_card_dia_queen");
          objectList.Add((object) "vw_prop_cas_card_dia_king");
          objectList.Add((object) "vw_prop_cas_card_dia_jack");
          objectList.Add((object) "vw_prop_cas_card_dia_10");
        }
        if (this.PlayerDeck == 2)
        {
          objectList.Add((object) "vw_prop_vw_club_char_10a");
          objectList.Add((object) "vw_prop_vw_club_char_j_a");
          objectList.Add((object) "vw_prop_vw_club_char_k_a");
          objectList.Add((object) "vw_prop_vw_club_char_q_a");
          objectList.Add((object) "vw_prop_vw_dia_char_10a");
          objectList.Add((object) "vw_prop_vw_dia_char_j_a");
          objectList.Add((object) "vw_prop_vw_dia_char_k_a");
          objectList.Add((object) "vw_prop_vw_dia_char_q_a");
          objectList.Add((object) "vw_prop_vw_hrt_char_10a");
          objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
          objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
          objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
          objectList.Add((object) "vw_prop_vw_spd_char_10a");
          objectList.Add((object) "vw_prop_vw_spd_char_j_a");
          objectList.Add((object) "vw_prop_vw_spd_char_k_a");
          objectList.Add((object) "vw_prop_vw_spd_char_q_a");
        }
        if (this.PlayerDeck == 3)
        {
          if (this.TMD_Dealer)
          {
            if (this.PlayerDeck == 3)
            {
              if (this.TMD_UseNormalDeckCards)
              {
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_club_02");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_club_03");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_club_04");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_club_05");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_club_06");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_club_07");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_club_08");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_club_09");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_club_10");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_club_ace");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_club_jack");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_club_king");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_club_queen");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_spd_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_spd_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_spd_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_spd_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_spd_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_spd_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_spd_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_spd_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_spd_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_spd_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_spd_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_spd_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_spd_02");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_hrt_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_hrt_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_hrt_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_hrt_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_hrt_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_hrt_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_hrt_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_hrt_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_hrt_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_hrt_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_hrt_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_hrt_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_hrt_02");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_dia_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_dia_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_dia_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_dia_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_dia_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_dia_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_dia_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_dia_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_dia_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_dia_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_dia_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_dia_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_dia_02");
              }
              if (this.TMD_UseEliteDeckCards)
              {
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_club_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_club_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_club_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_club_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_club_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_club_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_club_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_club_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_club_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_club_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_club_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_club_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_club_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_dia_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_dia_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_dia_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_dia_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_dia_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_dia_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_dia_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_dia_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_dia_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_dia_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_dia_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_dia_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_dia_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_hrt_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_hrt_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_hrt_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_hrt_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_hrt_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_hrt_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_hrt_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_hrt_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_hrt_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_spd_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_spd_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_spd_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_spd_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_spd_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_spd_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_spd_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_spd_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_spd_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_spd_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_spd_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_spd_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_spd_char_q_a");
              }
            }
          }
          else
          {
            if (this.TMD_UseNormalDeckCards)
            {
              objectList.Add((object) "vw_prop_vw_club_char_02a");
              objectList.Add((object) "vw_prop_vw_club_char_03a");
              objectList.Add((object) "vw_prop_vw_club_char_04a");
              objectList.Add((object) "vw_prop_vw_club_char_05a");
              objectList.Add((object) "vw_prop_vw_club_char_06a");
              objectList.Add((object) "vw_prop_vw_club_char_07a");
              objectList.Add((object) "vw_prop_vw_club_char_08a");
              objectList.Add((object) "vw_prop_vw_club_char_09a");
              objectList.Add((object) "vw_prop_vw_club_char_10a");
              objectList.Add((object) "vw_prop_vw_club_char_a_a");
              objectList.Add((object) "vw_prop_vw_club_char_j_a");
              objectList.Add((object) "vw_prop_vw_club_char_k_a");
              objectList.Add((object) "vw_prop_vw_club_char_q_a");
              objectList.Add((object) "vw_prop_vw_dia_char_02a");
              objectList.Add((object) "vw_prop_vw_dia_char_03a");
              objectList.Add((object) "vw_prop_vw_dia_char_04a");
              objectList.Add((object) "vw_prop_vw_dia_char_05a");
              objectList.Add((object) "vw_prop_vw_dia_char_06a");
              objectList.Add((object) "vw_prop_vw_dia_char_07a");
              objectList.Add((object) "vw_prop_vw_dia_char_08a");
              objectList.Add((object) "vw_prop_vw_dia_char_09a");
              objectList.Add((object) "vw_prop_vw_dia_char_10a");
              objectList.Add((object) "vw_prop_vw_dia_char_a_a");
              objectList.Add((object) "vw_prop_vw_dia_char_j_a");
              objectList.Add((object) "vw_prop_vw_dia_char_k_a");
              objectList.Add((object) "vw_prop_vw_dia_char_q_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_02a");
              objectList.Add((object) "vw_prop_vw_hrt_char_03a");
              objectList.Add((object) "vw_prop_vw_hrt_char_04a");
              objectList.Add((object) "vw_prop_vw_hrt_char_05a");
              objectList.Add((object) "vw_prop_vw_hrt_char_06a");
              objectList.Add((object) "vw_prop_vw_hrt_char_07a");
              objectList.Add((object) "vw_prop_vw_hrt_char_08a");
              objectList.Add((object) "vw_prop_vw_hrt_char_09a");
              objectList.Add((object) "vw_prop_vw_hrt_char_10a");
              objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
              objectList.Add((object) "vw_prop_vw_spd_char_02a");
              objectList.Add((object) "vw_prop_vw_spd_char_03a");
              objectList.Add((object) "vw_prop_vw_spd_char_04a");
              objectList.Add((object) "vw_prop_vw_spd_char_05a");
              objectList.Add((object) "vw_prop_vw_spd_char_06a");
              objectList.Add((object) "vw_prop_vw_spd_char_07a");
              objectList.Add((object) "vw_prop_vw_spd_char_08a");
              objectList.Add((object) "vw_prop_vw_spd_char_09a");
              objectList.Add((object) "vw_prop_vw_spd_char_10a");
              objectList.Add((object) "vw_prop_vw_spd_char_a_a");
              objectList.Add((object) "vw_prop_vw_spd_char_j_a");
              objectList.Add((object) "vw_prop_vw_spd_char_k_a");
              objectList.Add((object) "vw_prop_vw_spd_char_q_a");
            }
            if (this.TMD_UseEliteDeckCards)
            {
              objectList.Add((object) "vw_prop_cas_card_club_02");
              objectList.Add((object) "vw_prop_cas_card_club_03");
              objectList.Add((object) "vw_prop_cas_card_club_04");
              objectList.Add((object) "vw_prop_cas_card_club_05");
              objectList.Add((object) "vw_prop_cas_card_club_06");
              objectList.Add((object) "vw_prop_cas_card_club_07");
              objectList.Add((object) "vw_prop_cas_card_club_08");
              objectList.Add((object) "vw_prop_cas_card_club_09");
              objectList.Add((object) "vw_prop_cas_card_club_10");
              objectList.Add((object) "vw_prop_cas_card_club_ace");
              objectList.Add((object) "vw_prop_cas_card_club_jack");
              objectList.Add((object) "vw_prop_cas_card_club_king");
              objectList.Add((object) "vw_prop_cas_card_club_queen");
              objectList.Add((object) "vw_prop_cas_card_spd_queen");
              objectList.Add((object) "vw_prop_cas_card_spd_king");
              objectList.Add((object) "vw_prop_cas_card_spd_jack");
              objectList.Add((object) "vw_prop_cas_card_spd_ace");
              objectList.Add((object) "vw_prop_cas_card_spd_10");
              objectList.Add((object) "vw_prop_cas_card_spd_09");
              objectList.Add((object) "vw_prop_cas_card_spd_08");
              objectList.Add((object) "vw_prop_cas_card_spd_07");
              objectList.Add((object) "vw_prop_cas_card_spd_06");
              objectList.Add((object) "vw_prop_cas_card_spd_05");
              objectList.Add((object) "vw_prop_cas_card_spd_04");
              objectList.Add((object) "vw_prop_cas_card_spd_03");
              objectList.Add((object) "vw_prop_cas_card_spd_02");
              objectList.Add((object) "vw_prop_cas_card_hrt_queen");
              objectList.Add((object) "vw_prop_cas_card_hrt_king");
              objectList.Add((object) "vw_prop_cas_card_hrt_jack");
              objectList.Add((object) "vw_prop_cas_card_hrt_ace");
              objectList.Add((object) "vw_prop_cas_card_hrt_10");
              objectList.Add((object) "vw_prop_cas_card_hrt_09");
              objectList.Add((object) "vw_prop_cas_card_hrt_08");
              objectList.Add((object) "vw_prop_cas_card_hrt_07");
              objectList.Add((object) "vw_prop_cas_card_hrt_06");
              objectList.Add((object) "vw_prop_cas_card_hrt_05");
              objectList.Add((object) "vw_prop_cas_card_hrt_04");
              objectList.Add((object) "vw_prop_cas_card_hrt_03");
              objectList.Add((object) "vw_prop_cas_card_hrt_02");
              objectList.Add((object) "vw_prop_cas_card_dia_queen");
              objectList.Add((object) "vw_prop_cas_card_dia_king");
              objectList.Add((object) "vw_prop_cas_card_dia_jack");
              objectList.Add((object) "vw_prop_cas_card_dia_ace");
              objectList.Add((object) "vw_prop_cas_card_dia_10");
              objectList.Add((object) "vw_prop_cas_card_dia_09");
              objectList.Add((object) "vw_prop_cas_card_dia_08");
              objectList.Add((object) "vw_prop_cas_card_dia_07");
              objectList.Add((object) "vw_prop_cas_card_dia_06");
              objectList.Add((object) "vw_prop_cas_card_dia_05");
              objectList.Add((object) "vw_prop_cas_card_dia_04");
              objectList.Add((object) "vw_prop_cas_card_dia_03");
              objectList.Add((object) "vw_prop_cas_card_dia_02");
            }
          }
        }
      }
      if (num > 16)
      {
        if (this.PlayerDeck == 1 || this.PlayerDeck == 0)
        {
          objectList.Add((object) "vw_prop_cas_card_club_ace");
          objectList.Add((object) "vw_prop_cas_card_club_02");
          objectList.Add((object) "vw_prop_cas_card_club_03");
          objectList.Add((object) "vw_prop_cas_card_club_04");
          objectList.Add((object) "vw_prop_cas_card_club_05");
          objectList.Add((object) "vw_prop_cas_card_club_06");
          objectList.Add((object) "vw_prop_cas_card_club_07");
          objectList.Add((object) "vw_prop_cas_card_club_08");
          objectList.Add((object) "vw_prop_cas_card_club_09");
          objectList.Add((object) "vw_prop_cas_card_spd_ace");
          objectList.Add((object) "vw_prop_cas_card_spd_09");
          objectList.Add((object) "vw_prop_cas_card_spd_08");
          objectList.Add((object) "vw_prop_cas_card_spd_07");
          objectList.Add((object) "vw_prop_cas_card_spd_06");
          objectList.Add((object) "vw_prop_cas_card_spd_05");
          objectList.Add((object) "vw_prop_cas_card_spd_04");
          objectList.Add((object) "vw_prop_cas_card_spd_03");
          objectList.Add((object) "vw_prop_cas_card_spd_02");
          objectList.Add((object) "vw_prop_cas_card_hrt_ace");
          objectList.Add((object) "vw_prop_cas_card_hrt_09");
          objectList.Add((object) "vw_prop_cas_card_hrt_08");
          objectList.Add((object) "vw_prop_cas_card_hrt_07");
          objectList.Add((object) "vw_prop_cas_card_hrt_06");
          objectList.Add((object) "vw_prop_cas_card_hrt_05");
          objectList.Add((object) "vw_prop_cas_card_hrt_04");
          objectList.Add((object) "vw_prop_cas_card_hrt_03");
          objectList.Add((object) "vw_prop_cas_card_hrt_02");
          objectList.Add((object) "vw_prop_cas_card_dia_ace");
          objectList.Add((object) "vw_prop_cas_card_dia_09");
          objectList.Add((object) "vw_prop_cas_card_dia_08");
          objectList.Add((object) "vw_prop_cas_card_dia_07");
          objectList.Add((object) "vw_prop_cas_card_dia_06");
          objectList.Add((object) "vw_prop_cas_card_dia_05");
          objectList.Add((object) "vw_prop_cas_card_dia_04");
          objectList.Add((object) "vw_prop_cas_card_dia_03");
          objectList.Add((object) "vw_prop_cas_card_dia_02");
        }
        if (this.PlayerDeck == 2)
        {
          objectList.Add((object) "vw_prop_vw_club_char_02a");
          objectList.Add((object) "vw_prop_vw_club_char_03a");
          objectList.Add((object) "vw_prop_vw_club_char_04a");
          objectList.Add((object) "vw_prop_vw_club_char_05a");
          objectList.Add((object) "vw_prop_vw_club_char_06a");
          objectList.Add((object) "vw_prop_vw_club_char_07a");
          objectList.Add((object) "vw_prop_vw_club_char_08a");
          objectList.Add((object) "vw_prop_vw_club_char_09a");
          objectList.Add((object) "vw_prop_vw_club_char_a_a");
          objectList.Add((object) "vw_prop_vw_dia_char_02a");
          objectList.Add((object) "vw_prop_vw_dia_char_03a");
          objectList.Add((object) "vw_prop_vw_dia_char_04a");
          objectList.Add((object) "vw_prop_vw_dia_char_05a");
          objectList.Add((object) "vw_prop_vw_dia_char_06a");
          objectList.Add((object) "vw_prop_vw_dia_char_07a");
          objectList.Add((object) "vw_prop_vw_dia_char_08a");
          objectList.Add((object) "vw_prop_vw_dia_char_09a");
          objectList.Add((object) "vw_prop_vw_dia_char_a_a");
          objectList.Add((object) "vw_prop_vw_hrt_char_02a");
          objectList.Add((object) "vw_prop_vw_hrt_char_03a");
          objectList.Add((object) "vw_prop_vw_hrt_char_04a");
          objectList.Add((object) "vw_prop_vw_hrt_char_05a");
          objectList.Add((object) "vw_prop_vw_hrt_char_06a");
          objectList.Add((object) "vw_prop_vw_hrt_char_07a");
          objectList.Add((object) "vw_prop_vw_hrt_char_08a");
          objectList.Add((object) "vw_prop_vw_hrt_char_09a");
          objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
          objectList.Add((object) "vw_prop_vw_spd_char_02a");
          objectList.Add((object) "vw_prop_vw_spd_char_03a");
          objectList.Add((object) "vw_prop_vw_spd_char_04a");
          objectList.Add((object) "vw_prop_vw_spd_char_05a");
          objectList.Add((object) "vw_prop_vw_spd_char_06a");
          objectList.Add((object) "vw_prop_vw_spd_char_07a");
          objectList.Add((object) "vw_prop_vw_spd_char_08a");
          objectList.Add((object) "vw_prop_vw_spd_char_09a");
          objectList.Add((object) "vw_prop_vw_spd_char_a_a");
        }
        if (this.PlayerDeck == 3)
        {
          if (this.TMD_Dealer)
          {
            if (this.PlayerDeck == 3)
            {
              if (this.TMD_UseNormalDeckCards)
              {
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_club_02");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_club_03");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_club_04");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_club_05");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_club_06");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_club_07");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_club_08");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_club_09");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_club_10");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_club_ace");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_club_jack");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_club_king");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_club_queen");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_spd_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_spd_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_spd_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_spd_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_spd_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_spd_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_spd_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_spd_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_spd_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_spd_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_spd_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_spd_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_spd_02");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_hrt_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_hrt_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_hrt_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_hrt_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_hrt_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_hrt_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_hrt_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_hrt_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_hrt_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_hrt_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_hrt_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_hrt_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_hrt_02");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_cas_card_dia_queen");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_cas_card_dia_king");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_cas_card_dia_jack");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_cas_card_dia_ace");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_cas_card_dia_10");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_cas_card_dia_09");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_cas_card_dia_08");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_cas_card_dia_07");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_cas_card_dia_06");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_cas_card_dia_05");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_cas_card_dia_04");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_cas_card_dia_03");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_cas_card_dia_02");
              }
              if (this.TMD_UseEliteDeckCards)
              {
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_club_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_club_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_club_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_club_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_club_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_club_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_club_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_club_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_club_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_club_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_club_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_club_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_club_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_dia_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_dia_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_dia_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_dia_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_dia_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_dia_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_dia_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_dia_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_dia_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_dia_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_dia_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_dia_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_dia_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_hrt_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_hrt_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_hrt_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_hrt_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_hrt_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_hrt_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_hrt_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_hrt_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_hrt_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
                if (this.TMD_Use02)
                  objectList.Add((object) "vw_prop_vw_spd_char_02a");
                if (this.TMD_Use03)
                  objectList.Add((object) "vw_prop_vw_spd_char_03a");
                if (this.TMD_Use04)
                  objectList.Add((object) "vw_prop_vw_spd_char_04a");
                if (this.TMD_Use05)
                  objectList.Add((object) "vw_prop_vw_spd_char_05a");
                if (this.TMD_Use06)
                  objectList.Add((object) "vw_prop_vw_spd_char_06a");
                if (this.TMD_Use07)
                  objectList.Add((object) "vw_prop_vw_spd_char_07a");
                if (this.TMD_Use08)
                  objectList.Add((object) "vw_prop_vw_spd_char_08a");
                if (this.TMD_Use09)
                  objectList.Add((object) "vw_prop_vw_spd_char_09a");
                if (this.TMD_Use10)
                  objectList.Add((object) "vw_prop_vw_spd_char_10a");
                if (this.TMD_UseAce)
                  objectList.Add((object) "vw_prop_vw_spd_char_a_a");
                if (this.TMD_UseJack)
                  objectList.Add((object) "vw_prop_vw_spd_char_j_a");
                if (this.TMD_UseKing)
                  objectList.Add((object) "vw_prop_vw_spd_char_k_a");
                if (this.TMD_UseQueen)
                  objectList.Add((object) "vw_prop_vw_spd_char_q_a");
              }
            }
          }
          else
          {
            if (this.TMD_UseNormalDeckCards)
            {
              objectList.Add((object) "vw_prop_vw_club_char_02a");
              objectList.Add((object) "vw_prop_vw_club_char_03a");
              objectList.Add((object) "vw_prop_vw_club_char_04a");
              objectList.Add((object) "vw_prop_vw_club_char_05a");
              objectList.Add((object) "vw_prop_vw_club_char_06a");
              objectList.Add((object) "vw_prop_vw_club_char_07a");
              objectList.Add((object) "vw_prop_vw_club_char_08a");
              objectList.Add((object) "vw_prop_vw_club_char_09a");
              objectList.Add((object) "vw_prop_vw_club_char_10a");
              objectList.Add((object) "vw_prop_vw_club_char_a_a");
              objectList.Add((object) "vw_prop_vw_club_char_j_a");
              objectList.Add((object) "vw_prop_vw_club_char_k_a");
              objectList.Add((object) "vw_prop_vw_club_char_q_a");
              objectList.Add((object) "vw_prop_vw_dia_char_02a");
              objectList.Add((object) "vw_prop_vw_dia_char_03a");
              objectList.Add((object) "vw_prop_vw_dia_char_04a");
              objectList.Add((object) "vw_prop_vw_dia_char_05a");
              objectList.Add((object) "vw_prop_vw_dia_char_06a");
              objectList.Add((object) "vw_prop_vw_dia_char_07a");
              objectList.Add((object) "vw_prop_vw_dia_char_08a");
              objectList.Add((object) "vw_prop_vw_dia_char_09a");
              objectList.Add((object) "vw_prop_vw_dia_char_10a");
              objectList.Add((object) "vw_prop_vw_dia_char_a_a");
              objectList.Add((object) "vw_prop_vw_dia_char_j_a");
              objectList.Add((object) "vw_prop_vw_dia_char_k_a");
              objectList.Add((object) "vw_prop_vw_dia_char_q_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_02a");
              objectList.Add((object) "vw_prop_vw_hrt_char_03a");
              objectList.Add((object) "vw_prop_vw_hrt_char_04a");
              objectList.Add((object) "vw_prop_vw_hrt_char_05a");
              objectList.Add((object) "vw_prop_vw_hrt_char_06a");
              objectList.Add((object) "vw_prop_vw_hrt_char_07a");
              objectList.Add((object) "vw_prop_vw_hrt_char_08a");
              objectList.Add((object) "vw_prop_vw_hrt_char_09a");
              objectList.Add((object) "vw_prop_vw_hrt_char_10a");
              objectList.Add((object) "vw_prop_vw_hrt_char_a_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_j_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_k_a");
              objectList.Add((object) "vw_prop_vw_hrt_char_q_a");
              objectList.Add((object) "vw_prop_vw_spd_char_02a");
              objectList.Add((object) "vw_prop_vw_spd_char_03a");
              objectList.Add((object) "vw_prop_vw_spd_char_04a");
              objectList.Add((object) "vw_prop_vw_spd_char_05a");
              objectList.Add((object) "vw_prop_vw_spd_char_06a");
              objectList.Add((object) "vw_prop_vw_spd_char_07a");
              objectList.Add((object) "vw_prop_vw_spd_char_08a");
              objectList.Add((object) "vw_prop_vw_spd_char_09a");
              objectList.Add((object) "vw_prop_vw_spd_char_10a");
              objectList.Add((object) "vw_prop_vw_spd_char_a_a");
              objectList.Add((object) "vw_prop_vw_spd_char_j_a");
              objectList.Add((object) "vw_prop_vw_spd_char_k_a");
              objectList.Add((object) "vw_prop_vw_spd_char_q_a");
            }
            if (this.TMD_UseEliteDeckCards)
            {
              objectList.Add((object) "vw_prop_cas_card_club_02");
              objectList.Add((object) "vw_prop_cas_card_club_03");
              objectList.Add((object) "vw_prop_cas_card_club_04");
              objectList.Add((object) "vw_prop_cas_card_club_05");
              objectList.Add((object) "vw_prop_cas_card_club_06");
              objectList.Add((object) "vw_prop_cas_card_club_07");
              objectList.Add((object) "vw_prop_cas_card_club_08");
              objectList.Add((object) "vw_prop_cas_card_club_09");
              objectList.Add((object) "vw_prop_cas_card_club_10");
              objectList.Add((object) "vw_prop_cas_card_club_ace");
              objectList.Add((object) "vw_prop_cas_card_club_jack");
              objectList.Add((object) "vw_prop_cas_card_club_king");
              objectList.Add((object) "vw_prop_cas_card_club_queen");
              objectList.Add((object) "vw_prop_cas_card_spd_queen");
              objectList.Add((object) "vw_prop_cas_card_spd_king");
              objectList.Add((object) "vw_prop_cas_card_spd_jack");
              objectList.Add((object) "vw_prop_cas_card_spd_ace");
              objectList.Add((object) "vw_prop_cas_card_spd_10");
              objectList.Add((object) "vw_prop_cas_card_spd_09");
              objectList.Add((object) "vw_prop_cas_card_spd_08");
              objectList.Add((object) "vw_prop_cas_card_spd_07");
              objectList.Add((object) "vw_prop_cas_card_spd_06");
              objectList.Add((object) "vw_prop_cas_card_spd_05");
              objectList.Add((object) "vw_prop_cas_card_spd_04");
              objectList.Add((object) "vw_prop_cas_card_spd_03");
              objectList.Add((object) "vw_prop_cas_card_spd_02");
              objectList.Add((object) "vw_prop_cas_card_hrt_queen");
              objectList.Add((object) "vw_prop_cas_card_hrt_king");
              objectList.Add((object) "vw_prop_cas_card_hrt_jack");
              objectList.Add((object) "vw_prop_cas_card_hrt_ace");
              objectList.Add((object) "vw_prop_cas_card_hrt_10");
              objectList.Add((object) "vw_prop_cas_card_hrt_09");
              objectList.Add((object) "vw_prop_cas_card_hrt_08");
              objectList.Add((object) "vw_prop_cas_card_hrt_07");
              objectList.Add((object) "vw_prop_cas_card_hrt_06");
              objectList.Add((object) "vw_prop_cas_card_hrt_05");
              objectList.Add((object) "vw_prop_cas_card_hrt_04");
              objectList.Add((object) "vw_prop_cas_card_hrt_03");
              objectList.Add((object) "vw_prop_cas_card_hrt_02");
              objectList.Add((object) "vw_prop_cas_card_dia_queen");
              objectList.Add((object) "vw_prop_cas_card_dia_king");
              objectList.Add((object) "vw_prop_cas_card_dia_jack");
              objectList.Add((object) "vw_prop_cas_card_dia_ace");
              objectList.Add((object) "vw_prop_cas_card_dia_10");
              objectList.Add((object) "vw_prop_cas_card_dia_09");
              objectList.Add((object) "vw_prop_cas_card_dia_08");
              objectList.Add((object) "vw_prop_cas_card_dia_07");
              objectList.Add((object) "vw_prop_cas_card_dia_06");
              objectList.Add((object) "vw_prop_cas_card_dia_05");
              objectList.Add((object) "vw_prop_cas_card_dia_04");
              objectList.Add((object) "vw_prop_cas_card_dia_03");
              objectList.Add((object) "vw_prop_cas_card_dia_02");
            }
          }
        }
      }
      int index = random.Next(0, objectList.Count - 1);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__1095.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__1095.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return Class1.\u003C\u003Eo__1095.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1095.\u003C\u003Ep__0, objectList[index]);
    }

    public void CalculateBlackJack()
    {
      float num1 = (float) (this.PlayerCard_1 + this.PlayerCard_2 + this.PlayerCard_3 + this.PlayerCard_4 + this.PlayerCard_5 + this.PlayerCard_6);
      float num2 = (float) (this.DealerCard_1 + this.DealerCard_2 + this.DealerCard_3 + this.DealerCard_4 + this.DealerCard_5 + this.DealerCard_6);
      Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
      this.Drawcards = false;
      if ((double) num2 == 21.0 && (double) num2 != 21.0)
      {
        this.Chips_Amount += (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_terrible", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GamePassed("BlackJack", (int) this.Bet);
          Script.Wait(1);
        }
      }
      else if ((double) num2 > 21.0 && (double) num1 <= 21.0)
      {
        this.Chips_Amount += (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_terrible", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GamePassed("BlackJack", (int) this.Bet);
          Script.Wait(1);
        }
      }
      else if ((double) num2 == (double) num1 && (double) num1 <= 21.0)
      {
        this.Chips_Amount += (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_good_var01", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GamePassed("BlackJack", (int) this.Bet);
          Script.Wait(1);
        }
      }
      else if ((double) num1 > 21.0)
      {
        this.Chips_Amount -= (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_terrible", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GameFail("You went over 21!", "BlackJack");
          Script.Wait(1);
        }
      }
      else if ((double) num1 < (double) num2 && (double) num2 <= 21.0)
      {
        this.Chips_Amount -= (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_bad_var01", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GameFail("The Dealer had a higher Score!", "BlackJack");
          Script.Wait(1);
        }
      }
      else if ((double) num1 > (double) num2 && (double) num1 <= 21.0 || (double) num2 > 21.0)
      {
        this.Chips_Amount += (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_good_var02", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GamePassed("BlackJack", (int) this.Bet);
          Script.Wait(1);
        }
      }
      else if ((double) num1 > (double) num2 && (double) num2 <= 21.0)
      {
        this.Chips_Amount -= (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_female@engaged@01b@reacts@v01", "reaction_bad_var02", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GameFail("The Dealer had a better Score!", "BlackJack");
          Script.Wait(1);
        }
      }
      else
      {
        Script.Wait(200);
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
        this.Playercards = 0;
        this.DealerCards = 0;
        this.PlayerCard_1 = 0;
        this.PlayerCard_2 = 0;
        this.PlayerCard_3 = 0;
        this.PlayerCard_4 = 0;
        this.PlayerCard_5 = 0;
        this.PlayerCard_6 = 0;
        this.Bet = 0.0f;
        this.DealerCard_1 = 0;
        this.DealerCard_2 = 0;
        this.DealerCard_3 = 0;
        this.DealerCard_4 = 0;
        this.DealerCard_5 = 0;
        this.DealerCard_6 = 0;
        this.Endgame = true;
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
      }
    }

    public void CalculatePoker()
    {
      float num1 = (float) (this.PlayerCard_1 * this.PlayerCard_2 * this.PlayerCard_3);
      float num2 = (float) (this.DealerCard_1 * this.DealerCard_2 * this.DealerCard_3);
      Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
      this.Drawcards = false;
      if ((double) num1 > (double) num2)
      {
        this.Chips_Amount += (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@threecardpoker@ped_male@engaged@01b@reacts@v01", "reaction_bad_var02", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GamePassed("3 Card Poker", (int) this.Bet);
          Script.Wait(1);
        }
      }
      if ((double) num1 < (double) num2)
      {
        this.Chips_Amount -= (int) this.Bet;
        this.Config.SetValue<int>("Setup", "Chips_Amount", this.Chips_Amount);
        this.Config.Save();
        Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@threecardpoker@ped_male@engaged@01b@reacts@v01", "reaction_good_var02", 8f, -1, true, -1f);
        for (int index = 0; index < 100; ++index)
        {
          this.GameFail("The Dealer had a higher Score!", "3 Card Poker");
          Script.Wait(1);
        }
      }
      Script.Wait(200);
      Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
      this.Playercards = 0;
      this.DealerCards = 0;
      this.PlayerCard_1 = 0;
      this.PlayerCard_2 = 0;
      this.PlayerCard_3 = 0;
      this.PlayerCard_4 = 0;
      this.PlayerCard_5 = 0;
      this.PlayerCard_6 = 0;
      this.Bet = 0.0f;
      this.DealerCard_1 = 0;
      this.DealerCard_2 = 0;
      this.DealerCard_3 = 0;
      this.DealerCard_4 = 0;
      this.DealerCard_5 = 0;
      this.DealerCard_6 = 0;
      this.Endgame = true;
      Game.Player.Character.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@ped_male@engaged@01a@play@v02", "collect_chips", 8f, -1, true, -1f);
    }

    public int Set_PlayerCard(string CardId, int Cardnum)
    {
      string str = "num";
      int num = 0;
      if (CardId.Contains("queen") || CardId.Contains("q_a"))
      {
        str = "Queen";
        num = 10;
      }
      if (CardId.Contains("king") || CardId.Contains("k_a"))
      {
        str = "King";
        num = 10;
      }
      if (CardId.Contains("jack") || CardId.Contains("j_a"))
      {
        str = "Jack";
        num = 10;
      }
      if (CardId.Contains("ace") || CardId.Contains("a_a"))
      {
        str = "Ace";
        num = 1;
      }
      if (CardId.Contains("02"))
        num = 2;
      if (CardId.Contains("03"))
        num = 3;
      if (CardId.Contains("04"))
        num = 4;
      if (CardId.Contains("05"))
        num = 5;
      if (CardId.Contains("06"))
        num = 6;
      if (CardId.Contains("07"))
        num = 7;
      if (CardId.Contains("08"))
        num = 8;
      if (CardId.Contains("09"))
        num = 9;
      if (CardId.Contains("10"))
        num = 10;
      return num;
    }

    public int Set_DealerCard(string CardId, int Cardnum)
    {
      string str = "num";
      int num = 0;
      if (CardId.Contains("queen") || CardId.Contains("q_a"))
      {
        str = "Queen";
        num = 10;
      }
      if (CardId.Contains("king") || CardId.Contains("k_a"))
      {
        str = "King";
        num = 10;
      }
      if (CardId.Contains("jack") || CardId.Contains("j_a"))
      {
        str = "Jack";
        num = 10;
      }
      if (CardId.Contains("ace") || CardId.Contains("a_a"))
      {
        str = "Ace";
        num = 1;
      }
      if (CardId.Contains("02"))
        num = 2;
      if (CardId.Contains("03"))
        num = 3;
      if (CardId.Contains("04"))
        num = 4;
      if (CardId.Contains("05"))
        num = 5;
      if (CardId.Contains("06"))
        num = 6;
      if (CardId.Contains("07"))
        num = 7;
      if (CardId.Contains("08"))
        num = 8;
      if (CardId.Contains("09"))
        num = 9;
      if (CardId.Contains("10"))
        num = 10;
      return num;
    }

    public int Set_PlayerCardPoker(string CardId, int Cardnum)
    {
      string str = "num";
      int num = 0;
      if (CardId.Contains("queen") || CardId.Contains("q_a"))
      {
        str = "Queen";
        num = 13;
      }
      if (CardId.Contains("king") || CardId.Contains("k_a"))
      {
        str = "King";
        num = 14;
      }
      if (CardId.Contains("jack") || CardId.Contains("j_a"))
      {
        str = "Jack";
        num = 12;
      }
      if (CardId.Contains("ace") || CardId.Contains("a_a"))
      {
        str = "Ace";
        num = 11;
      }
      if (CardId.Contains("02"))
        num = 2;
      if (CardId.Contains("03"))
        num = 3;
      if (CardId.Contains("04"))
        num = 4;
      if (CardId.Contains("05"))
        num = 5;
      if (CardId.Contains("06"))
        num = 6;
      if (CardId.Contains("07"))
        num = 7;
      if (CardId.Contains("08"))
        num = 8;
      if (CardId.Contains("09"))
        num = 9;
      if (CardId.Contains("10"))
        num = 10;
      if (str.Equals("num"))
        UI.Notify("~g~Player~w~  got Card : " + num.ToString());
      else
        UI.Notify("~g~Player~w~ got Card : " + str);
      return num;
    }

    public int Set_DealerCardPoker(string CardId, int Cardnum)
    {
      string str = "num";
      int num = 0;
      if (CardId.Contains("queen") || CardId.Contains("q_a"))
      {
        str = "Queen";
        num = 13;
      }
      if (CardId.Contains("king") || CardId.Contains("k_a"))
      {
        str = "King";
        num = 14;
      }
      if (CardId.Contains("jack") || CardId.Contains("j_a"))
      {
        str = "Jack";
        num = 12;
      }
      if (CardId.Contains("ace") || CardId.Contains("a_a"))
      {
        str = "Ace";
        num = 11;
      }
      if (CardId.Contains("02"))
        num = 2;
      if (CardId.Contains("03"))
        num = 3;
      if (CardId.Contains("04"))
        num = 4;
      if (CardId.Contains("05"))
        num = 5;
      if (CardId.Contains("06"))
        num = 6;
      if (CardId.Contains("07"))
        num = 7;
      if (CardId.Contains("08"))
        num = 8;
      if (CardId.Contains("09"))
        num = 9;
      if (CardId.Contains("10"))
        num = 10;
      return num;
    }

    public int Set_8PlayerPokerCards(string CardId, int Cardnum, int PlayerID)
    {
      string str = "num";
      int num = 0;
      if (CardId.Contains("queen") || CardId.Contains("q_a"))
      {
        str = "Queen";
        num = 13;
      }
      if (CardId.Contains("king") || CardId.Contains("k_a"))
      {
        str = "King";
        num = 14;
      }
      if (CardId.Contains("jack") || CardId.Contains("j_a"))
      {
        str = "Jack";
        num = 12;
      }
      if (CardId.Contains("ace") || CardId.Contains("a_a"))
      {
        str = "Ace";
        num = 11;
      }
      if (CardId.Contains("02"))
        num = 2;
      if (CardId.Contains("03"))
        num = 3;
      if (CardId.Contains("04"))
        num = 4;
      if (CardId.Contains("05"))
        num = 5;
      if (CardId.Contains("06"))
        num = 6;
      if (CardId.Contains("07"))
        num = 7;
      if (CardId.Contains("08"))
        num = 8;
      if (CardId.Contains("09"))
        num = 9;
      if (CardId.Contains("10"))
        num = 10;
      return num;
    }

    public void UpgradeVehicle(Vehicle Car)
    {
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
      List<object> objectList = new List<object>();
      VehicleMod[] values = (VehicleMod[]) Enum.GetValues(typeof (VehicleMod));
      for (int index = 0; index < values.Length; ++index)
      {
        int[] numArray = new int[Car.GetModCount(values[index])];
        int modIndex = new System.Random().Next(-1, Car.GetModCount(values[index]));
        Car.SetMod(values[index], modIndex, true);
      }
      Car.SetMod(VehicleMod.Brakes, 3, true);
      Car.SetMod(VehicleMod.Suspension, 3, true);
      Car.SetMod(VehicleMod.Transmission, 3, true);
      Car.SetMod(VehicleMod.Engine, 3, true);
      Car.PrimaryColor = this.GetColor();
      Script.Wait(1);
      Car.SecondaryColor = this.GetColor();
      Script.Wait(1);
    }

    private void DisplayHelpTextThisFrameNoSound(string text)
    {
      Function.Call(Hash._0x8509B634FBE7DA11, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0x238FFE5C7B0498A6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) -1);
    }

    public void UpgradeVehicle2(Vehicle Car)
    {
      Car.SetMod(VehicleMod.Brakes, 3, true);
      Car.SetMod(VehicleMod.Suspension, 3, true);
      Car.SetMod(VehicleMod.Transmission, 3, true);
      Car.SetMod(VehicleMod.Engine, 3, true);
    }

    public int GetCarStat(int pass, int L, int C, int CT)
    {
      pass = 0;
      this.StopCounter = true;
      int num = 0;
      if ((Entity) this.SpectateCar == (Entity) this.VehicleA)
      {
        int vehicleAStalltime = (int) this.VehicleA_stalltime;
        if ((double) vehicleAStalltime >= (double) this.VehicleA_stalltime)
          num = 1;
        if ((double) vehicleAStalltime < (double) this.VehicleB_stalltime)
          num = 0;
        if ((double) vehicleAStalltime < (double) this.VehicleC_stalltime)
          num = 0;
        if ((double) vehicleAStalltime < (double) this.VehicleD_stalltime)
          num = 0;
        if ((double) vehicleAStalltime < (double) this.VehicleE_stalltime)
          num = 0;
        if ((double) vehicleAStalltime < (double) this.VehicleF_stalltime)
          num = 0;
      }
      if ((Entity) this.SpectateCar == (Entity) this.VehicleB)
      {
        int vehicleBStalltime = (int) this.VehicleB_stalltime;
        if ((double) vehicleBStalltime >= (double) this.VehicleB_stalltime)
          num = 1;
        if ((double) vehicleBStalltime < (double) this.VehicleA_stalltime)
          num = 0;
        if ((double) vehicleBStalltime < (double) this.VehicleC_stalltime)
          num = 0;
        if ((double) vehicleBStalltime < (double) this.VehicleD_stalltime)
          num = 0;
        if ((double) vehicleBStalltime < (double) this.VehicleE_stalltime)
          num = 0;
        if ((double) vehicleBStalltime < (double) this.VehicleF_stalltime)
          num = 0;
      }
      if ((Entity) this.SpectateCar == (Entity) this.VehicleC)
      {
        int vehicleCStalltime = (int) this.VehicleC_stalltime;
        if ((double) vehicleCStalltime >= (double) this.VehicleC_stalltime)
          num = 1;
        if ((double) vehicleCStalltime < (double) this.VehicleA_stalltime)
          num = 0;
        if ((double) vehicleCStalltime < (double) this.VehicleB_stalltime)
          num = 0;
        if ((double) vehicleCStalltime < (double) this.VehicleD_stalltime)
          num = 0;
        if ((double) vehicleCStalltime < (double) this.VehicleE_stalltime)
          num = 0;
        if ((double) vehicleCStalltime < (double) this.VehicleF_stalltime)
          num = 0;
      }
      if ((Entity) this.SpectateCar == (Entity) this.VehicleD)
      {
        int vehicleDStalltime = (int) this.VehicleD_stalltime;
        if ((double) vehicleDStalltime >= (double) this.VehicleD_stalltime)
          num = 1;
        if ((double) vehicleDStalltime < (double) this.VehicleA_stalltime)
          num = 0;
        if ((double) vehicleDStalltime < (double) this.VehicleB_stalltime)
          num = 0;
        if ((double) vehicleDStalltime < (double) this.VehicleC_stalltime)
          num = 0;
        if ((double) vehicleDStalltime < (double) this.VehicleE_stalltime)
          num = 0;
        if ((double) vehicleDStalltime < (double) this.VehicleF_stalltime)
          num = 0;
      }
      if ((Entity) this.SpectateCar == (Entity) this.VehicleE)
      {
        int vehicleEStalltime = (int) this.VehicleE_stalltime;
        if ((double) vehicleEStalltime >= (double) this.VehicleE_stalltime)
          num = 1;
        if ((double) vehicleEStalltime < (double) this.VehicleA_stalltime)
          num = 0;
        if ((double) vehicleEStalltime < (double) this.VehicleB_stalltime)
          num = 0;
        if ((double) vehicleEStalltime < (double) this.VehicleC_stalltime)
          num = 0;
        if ((double) vehicleEStalltime < (double) this.VehicleD_stalltime)
          num = 0;
        if ((double) vehicleEStalltime < (double) this.VehicleF_stalltime)
          num = 0;
      }
      if ((Entity) this.SpectateCar == (Entity) this.VehicleF)
      {
        int vehicleFStalltime = (int) this.VehicleF_stalltime;
        if ((double) vehicleFStalltime >= (double) this.VehicleF_stalltime)
          num = 1;
        if ((double) vehicleFStalltime < (double) this.VehicleA_stalltime)
          num = 0;
        if ((double) vehicleFStalltime < (double) this.VehicleB_stalltime)
          num = 0;
        if ((double) vehicleFStalltime < (double) this.VehicleC_stalltime)
          num = 0;
        if ((double) vehicleFStalltime < (double) this.VehicleD_stalltime)
          num = 0;
        if ((double) vehicleFStalltime < (double) this.VehicleE_stalltime)
          num = 0;
      }
      List<object> objectList = new List<object>();
      try
      {
        Game.Player.Character.FreezePosition = false;
        this.IsInbettingRace = false;
        Game.Player.Character.Position = this.RaceSTMarker;
        this.IsinInterior = true;
      }
      catch (Exception ex)
      {
        UI.Notify("~b~ error");
      }
      pass = num;
      UI.Notify("Place" + pass.ToString());
      return pass;
    }

    public void EndRace()
    {
      if (this.RaceCam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.RaceCam.IsActive = false;
        this.RaceCam.Destroy();
      }
      this.IsInbettingRace = false;
      this.modMenuPool.CloseAllMenus();
      Game.Player.Character.Position = this.RaceSTMarker;
      this.IsinInterior = true;
      this.StartR = false;
      this.inRace = false;
      if ((Entity) this.VehicleA != (Entity) null)
      {
        if ((Entity) this.VehicleA.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleA.Delete();
      }
      if ((Entity) this.VehicleB != (Entity) null)
      {
        if ((Entity) this.VehicleB.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleB.Delete();
      }
      if ((Entity) this.VehicleC != (Entity) null)
      {
        if ((Entity) this.VehicleC.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleC.Delete();
      }
      if ((Entity) this.VehicleD != (Entity) null)
      {
        if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleD.Delete();
      }
      if ((Entity) this.VehicleE != (Entity) null)
      {
        if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleE.Delete();
      }
      if ((Entity) this.VehicleF != (Entity) null)
      {
        if ((Entity) this.VehicleF.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleF.Delete();
      }
      this.StartedRace = false;
      this.FinishedRace = true;
      this.CheckpointRace = false;
      this.Race = 0;
      this.CarsFinished = 0;
      foreach (Blip checkPointBlip in this.CheckPointBlips)
      {
        if (checkPointBlip != (Blip) null)
          checkPointBlip.Remove();
      }
      this.Race = 0;
    }

    public void RunCutscene()
    {
      Game.Player.Character.Position = new Vector3(3000f, 1000f, 2000f);
      Script.Wait(10);
      Game.Player.Character.Position = this.MarkerExit;
      if (this.RaceCam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.RaceCam.IsActive = false;
        this.RaceCam.Destroy();
      }
      this.RaceCam = World.CreateCamera(new Vector3(1091.11f, 208.4143f, -47f), new Vector3(0.0f, 0.0f, -37f), 100f);
      this.RaceCam.IsActive = true;
      this.RaceCam.FarClip = 2000f;
      Game.Player.Character.Position = this.RaceCam.Position;
      Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
      World.RenderingCamera = this.RaceCam;
      this.DisplayHelpTextThisFrame("Welcome to the Diamond Resort & Casino, We hope you enjoy your stay");
      Script.Wait(2500);
      this.RaceCam.Position = new Vector3(1110.61f, 217.7732f, -49.5f);
      this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, -70f);
      Game.Player.Character.Position = this.RaceCam.Position;
      this.DisplayHelpTextThisFrame("Relax and stay, buy some chips from out modest dealers");
      Script.Wait(3500);
      this.RaceCam.Position = new Vector3(1101.68f, 254.4349f, -49.5f);
      this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, 25f);
      Game.Player.Character.Position = this.RaceCam.Position;
      this.DisplayHelpTextThisFrame("Partake in Ai races to Win big or lose everything");
      Script.Wait(3500);
      this.RaceCam.Position = new Vector3(1137.425f, 255.1735f, -49.5f);
      this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, -47f);
      Game.Player.Character.Position = this.RaceCam.Position;
      this.DisplayHelpTextThisFrame("Challenge out dealers to Poker, Blackjack or Roulette, maybe you could win");
      if (this.Casino_level >= 2)
      {
        Script.Wait(3500);
        this.RaceCam.Position = new Vector3(1128.999f, 264.5784f, -49.5f);
        this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, 87f);
        Game.Player.Character.Position = this.RaceCam.Position;
        this.DisplayHelpTextThisFrame("Through these doors you wil find everything you need to manage your business");
        Script.Wait(3500);
        this.RaceCam.Position = new Vector3(1111.129f, 248.7507f, -46f);
        this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, 179f);
        Game.Player.Character.Position = this.RaceCam.Position;
        this.DisplayHelpTextThisFrame("Here in your luxury office, make your losses turn in to profits, with your very own laptop");
      }
      if (this.Casino_level >= 3)
      {
        Script.Wait(3500);
        this.RaceCam.Position = new Vector3(959.316f, 62.11246f, 113f);
        this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, -123f);
        Game.Player.Character.Position = this.RaceCam.Position;
        this.DisplayHelpTextThisFrame("Purchased a VIP membership?, return to the casino at any time through these doors");
        Script.Wait(3500);
        this.RaceCam.Position = new Vector3(962.3069f, 66.97023f, 113f);
        this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, -120f);
        Game.Player.Character.Position = this.RaceCam.Position;
        this.DisplayHelpTextThisFrame("Or go up to your very own penthouse and relax in style");
      }
      Game.Player.Character.Position = this.MarkerExit;
      Script.Wait(3500);
      this.RaceCam.Position = new Vector3(1089.484f, 217.054f, -48f);
      this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, 18f);
      Game.Player.Character.Position = this.RaceCam.Position;
      this.DisplayHelpTextThisFrame("Feel like changing your Membership? Come see me at the desk");
      Script.Wait(3500);
      this.RaceCam.Position = new Vector3(1107.477f, 218.1732f, -49f);
      this.RaceCam.Rotation = new Vector3(0.0f, 0.0f, 74f);
      Game.Player.Character.Position = this.RaceCam.Position;
      this.DisplayHelpTextThisFrame("We hope you enjoy your stay at the Diamond, mabye you could win the Thrax?");
      Script.Wait(3500);
      if (this.RaceCam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.RaceCam.IsActive = false;
        this.RaceCam.Destroy();
      }
      Game.Player.Character.Position = this.MarkerExit;
      this.IsinInterior = true;
    }

    public Vector3 GetLocation(int Mission)
    {
      Vector3 vector3 = new Vector3(0.0f, 0.0f, 0.0f);
      if (Mission == 1)
      {
        System.Random random = new System.Random();
        if (random.Next(1, 200) < 10)
          vector3 = new Vector3(435.9571f, 260.3132f, 102f);
        if (random.Next(1, 200) > 10 && random.Next(1, 200) < 20)
          vector3 = new Vector3(371.5314f, 294.3582f, 102f);
        if (random.Next(1, 200) > 20 && random.Next(1, 200) < 30)
          vector3 = new Vector3(291.3882f, 349.5207f, 112f);
        if (random.Next(1, 200) > 30 && random.Next(1, 200) < 40)
          vector3 = new Vector3(207.7685f, 194.7988f, 105f);
        if (random.Next(1, 200) > 40 && random.Next(1, 200) < 50)
          vector3 = new Vector3(363.2462f, 137.2167f, 102f);
        if (random.Next(1, 200) > 50 && random.Next(1, 200) < 60)
          vector3 = new Vector3(515.3366f, 83.74969f, 98f);
        if (random.Next(1, 200) > 60 && random.Next(1, 200) < 70)
          vector3 = new Vector3(395.6515f, -128.3656f, 64f);
        if (random.Next(1, 200) > 70 && random.Next(1, 200) < 80)
          vector3 = new Vector3(282.9732f, -85.08146f, 69f);
        if (random.Next(1, 200) > 80 && random.Next(1, 200) < 90)
          vector3 = new Vector3(33.23817f, 252.1784f, 109f);
        if (random.Next(1, 200) > 90 && random.Next(1, 200) < 100)
          this.MissionMarker = new Vector3(-45.15516f, 35.39776f, 71f);
        if (random.Next(1, 200) > 100 && random.Next(1, 200) < 110)
          vector3 = new Vector3(-130.8487f, 79.86409f, 70f);
        if (random.Next(1, 200) > 110 && random.Next(1, 200) < 120)
          vector3 = new Vector3(-110.6155f, 250.7008f, 97f);
        if (random.Next(1, 200) > 120 && random.Next(1, 200) < 130)
          vector3 = new Vector3(-109.4533f, 421.206f, 112f);
        if (random.Next(1, 200) > 130 && random.Next(1, 200) < 140)
          vector3 = new Vector3(75.76485f, 335.261f, 111f);
        if (random.Next(1, 200) > 140 && random.Next(1, 200) < 150)
          vector3 = new Vector3(241.6325f, 442.4417f, 120f);
        if (random.Next(1, 200) > 150 && random.Next(1, 200) < 160)
          vector3 = new Vector3(260.3799f, 341.4453f, 105f);
        if (random.Next(1, 200) > 160 && random.Next(1, 200) < 170)
          vector3 = new Vector3(419.9864f, 296.8545f, 102f);
        if (random.Next(1, 200) > 170 && random.Next(1, 200) < 180)
          vector3 = new Vector3(568.1128f, 243.1724f, 102f);
        if (random.Next(1, 200) > 180 && random.Next(1, 200) < 190)
          vector3 = new Vector3(670.9814f, 342.4697f, 110f);
        if (random.Next(1, 200) > 180 && random.Next(1, 200) < 190)
          vector3 = new Vector3(690.9128f, 8.269f, 83f);
        if (random.Next(1, 200) > 190 && random.Next(1, 200) < 200)
          vector3 = new Vector3(789.4373f, 154.8878f, 80f);
      }
      if (Mission == 2)
      {
        float num = (float) new System.Random().Next(1, 100);
        if ((double) num < 10.0)
          vector3 = new Vector3(1728.874f, 3617.781f, 34f);
        if ((double) num > 10.0 && (double) num < 20.0)
          vector3 = new Vector3(1647.997f, 3731.329f, 33f);
        if ((double) num > 20.0 && (double) num < 30.0)
          vector3 = new Vector3(1576.907f, 3716.953f, 34f);
        if ((double) num > 30.0 && (double) num < 40.0)
          vector3 = new Vector3(1670.406f, 3850.05f, 34f);
        if ((double) num > 40.0 && (double) num < 50.0)
          vector3 = new Vector3(1885.984f, 3708f, 32f);
        if ((double) num > 50.0 && (double) num < 60.0)
          vector3 = new Vector3(1986.129f, 3763.462f, 41f);
        if ((double) num > 60.0 && (double) num < 70.0)
          vector3 = new Vector3(1968.089f, 3884.853f, 31f);
        if ((double) num > 70.0 && (double) num < 80.0)
          vector3 = new Vector3(2503.986f, 4119.693f, 38f);
        if ((double) num > 80.0 && (double) num < 90.0)
          vector3 = new Vector3(1399.522f, 3591.993f, 34f);
        if ((double) num > 90.0 && (double) num < 100.0)
          this.MissionMarker = new Vector3(1790.059f, 3333.841f, 40f);
      }
      if (Mission == 3)
      {
        float num = (float) new System.Random().Next(1, 100);
        if ((double) num < 10.0)
          vector3 = new Vector3(196.0224f, 6578.627f, 31.3f);
        if ((double) num > 10.0 && (double) num < 20.0)
          vector3 = new Vector3(40.91859f, 6374.68f, 30f);
        if ((double) num > 20.0 && (double) num < 30.0)
          vector3 = new Vector3(-94.41034f, 6284.533f, 30f);
        if ((double) num > 30.0 && (double) num < 40.0)
          vector3 = new Vector3(-176.123f, 6360.864f, 31f);
        if ((double) num > 40.0 && (double) num < 50.0)
          vector3 = new Vector3(-303.5739f, 6230.992f, 30f);
        if ((double) num > 50.0 && (double) num < 60.0)
          vector3 = new Vector3(-475.8935f, 5988.419f, 30f);
        if ((double) num > 60.0 && (double) num < 70.0)
          vector3 = new Vector3(-287.9956f, 6046.651f, 30f);
        if ((double) num > 70.0 && (double) num < 80.0)
          vector3 = new Vector3(-287.2152f, 6129.283f, 30f);
        if ((double) num > 80.0 && (double) num < 90.0)
          vector3 = new Vector3(-762.4106f, 5537.076f, 33f);
        if ((double) num > 90.0 && (double) num < 100.0)
          vector3 = new Vector3(-268.1988f, 6638.472f, 6.9f);
      }
      return vector3;
    }

    public void ShowRouletteOptions(Prop Table)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) "Quit Roulette");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 76, (InputArgument) 0), (object) ("|   AVL Chips " + this.Chips_Amount.ToString() + "    |     Confirm Move"));
      if (this.RouletteBetsPlaced == 2)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) ("--" + this.BetPos + "--"));
      if (this.RouletteBetsPlaced < 2)
      {
        scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 175, (InputArgument) 0), (object) "");
        scaleform.CallFunction("SET_DATA_SLOT", (object) 5, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 174, (InputArgument) 0), (object) " Change Marker Pos");
      }
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void ShowRouletteOptionsMid(Prop Table)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) "Quit Roulette");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) "Procced");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 76, (InputArgument) 0), (object) (" Set Bet " + this.RouletteBet1.ToString()));
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void ShowRouletteOptionsEnd(Prop Table)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) "Quit Roulette");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) "Spin wheel");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void ShowRouletteOptionsEndGame(Prop Table)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) "Quit Roulette");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) "Play Again");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void MainModRefresh()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.RefreshPenthouse();
    }

    public void MainModDestroy()
    {
    }

    public void SetVictory1() => this.Vic1 = 1;

    public void SetVictory2() => this.Vic2 = 1;

    public void SetVictory3() => this.Vic3 = 1;

    public string RectifyBallPos_Prize(int B)
    {
      string str = "";
      int num = 0;
      if (B == 38)
      {
        str = this.ReturnRouletteNumString(38);
        num = 38;
      }
      if (B == 38)
      {
        str = this.ReturnRouletteNumString(37);
        num = 37;
      }
      if (B == 1)
      {
        str = this.ReturnRouletteNumString(21);
        num = 21;
      }
      if (B == 2)
      {
        str = this.ReturnRouletteNumString(6);
        num = 6;
      }
      if (B == 3)
      {
        str = this.ReturnRouletteNumString(33);
        num = 33;
      }
      if (B == 4)
      {
        str = this.ReturnRouletteNumString(16);
        num = 16;
      }
      if (B == 5)
      {
        str = this.ReturnRouletteNumString(4);
        num = 4;
      }
      if (B == 6)
      {
        str = this.ReturnRouletteNumString(23);
        num = 23;
      }
      if (B == 7)
      {
        str = this.ReturnRouletteNumString(23);
        num = 23;
      }
      if (B == 8)
      {
        str = this.ReturnRouletteNumString(35);
        num = 35;
      }
      if (B == 9)
      {
        str = this.ReturnRouletteNumString(14);
        num = 14;
      }
      if (B == 10)
      {
        str = this.ReturnRouletteNumString(2);
        num = 2;
      }
      if (B == 11)
      {
        str = this.ReturnRouletteNumString(37);
        num = 37;
      }
      if (B == 12)
      {
        str = this.ReturnRouletteNumString(28);
        num = 28;
      }
      if (B == 13)
      {
        str = this.ReturnRouletteNumString(9);
        num = 9;
      }
      if (B == 14)
      {
        str = this.ReturnRouletteNumString(26);
        num = 26;
      }
      if (B == 15)
      {
        str = this.ReturnRouletteNumString(30);
        num = 30;
      }
      if (B == 16)
      {
        str = this.ReturnRouletteNumString(11);
        num = 11;
      }
      if (B == 17)
      {
        str = this.ReturnRouletteNumString(11);
        num = 11;
      }
      if (B == 18)
      {
        str = this.ReturnRouletteNumString(7);
        num = 7;
      }
      if (B == 19)
      {
        str = this.ReturnRouletteNumString(20);
        num = 20;
      }
      if (B == 20)
      {
        str = this.ReturnRouletteNumString(17);
        num = 17;
      }
      if (B == 21)
      {
        str = this.ReturnRouletteNumString(5);
        num = 5;
      }
      if (B == 22)
      {
        str = this.ReturnRouletteNumString(34);
        num = 34;
      }
      if (B == 23)
      {
        str = this.ReturnRouletteNumString(22);
        num = 22;
      }
      if (B == 24)
      {
        str = this.ReturnRouletteNumString(15);
        num = 15;
      }
      if (B == 25)
      {
        str = this.ReturnRouletteNumString(25);
        num = 25;
      }
      if (B == 26)
      {
        str = this.ReturnRouletteNumString(36);
        num = 36;
      }
      if (B == 27)
      {
        str = this.ReturnRouletteNumString(13);
        num = 13;
      }
      if (B == 28)
      {
        str = this.ReturnRouletteNumString(1);
        num = 1;
      }
      if (B == 29)
      {
        str = this.ReturnRouletteNumString(27);
        num = 27;
      }
      if (B == 30)
      {
        str = this.ReturnRouletteNumString(10);
        num = 10;
      }
      if (B == 31)
      {
        str = this.ReturnRouletteNumString(25);
        num = 25;
      }
      if (B == 32)
      {
        str = this.ReturnRouletteNumString(29);
        num = 29;
      }
      if (B == 33)
      {
        str = this.ReturnRouletteNumString(12);
        num = 12;
      }
      if (B == 34)
      {
        str = this.ReturnRouletteNumString(8);
        num = 8;
      }
      if (B == 35)
      {
        str = this.ReturnRouletteNumString(19);
        num = 19;
      }
      if (B == 36)
      {
        str = this.ReturnRouletteNumString(31);
        num = 31;
      }
      return str;
    }

    public int RectifyBallPos_Num(int B)
    {
      string str = "";
      int num = 0;
      if (B == 38)
      {
        str = this.ReturnRouletteNumString(38);
        num = 38;
      }
      if (B == 38)
      {
        str = this.ReturnRouletteNumString(37);
        num = 37;
      }
      if (B == 1)
      {
        str = this.ReturnRouletteNumString(21);
        num = 21;
      }
      if (B == 2)
      {
        str = this.ReturnRouletteNumString(6);
        num = 6;
      }
      if (B == 3)
      {
        str = this.ReturnRouletteNumString(33);
        num = 33;
      }
      if (B == 4)
      {
        str = this.ReturnRouletteNumString(16);
        num = 16;
      }
      if (B == 5)
      {
        str = this.ReturnRouletteNumString(4);
        num = 4;
      }
      if (B == 6)
      {
        str = this.ReturnRouletteNumString(23);
        num = 23;
      }
      if (B == 7)
      {
        str = this.ReturnRouletteNumString(23);
        num = 23;
      }
      if (B == 8)
      {
        str = this.ReturnRouletteNumString(35);
        num = 35;
      }
      if (B == 9)
      {
        str = this.ReturnRouletteNumString(14);
        num = 14;
      }
      if (B == 10)
      {
        str = this.ReturnRouletteNumString(2);
        num = 2;
      }
      if (B == 11)
      {
        str = this.ReturnRouletteNumString(37);
        num = 37;
      }
      if (B == 12)
      {
        str = this.ReturnRouletteNumString(28);
        num = 28;
      }
      if (B == 13)
      {
        str = this.ReturnRouletteNumString(9);
        num = 9;
      }
      if (B == 14)
      {
        str = this.ReturnRouletteNumString(26);
        num = 26;
      }
      if (B == 15)
      {
        str = this.ReturnRouletteNumString(30);
        num = 30;
      }
      if (B == 16)
      {
        str = this.ReturnRouletteNumString(11);
        num = 11;
      }
      if (B == 17)
      {
        str = this.ReturnRouletteNumString(11);
        num = 11;
      }
      if (B == 18)
      {
        str = this.ReturnRouletteNumString(7);
        num = 7;
      }
      if (B == 19)
      {
        str = this.ReturnRouletteNumString(20);
        num = 20;
      }
      if (B == 20)
      {
        str = this.ReturnRouletteNumString(17);
        num = 17;
      }
      if (B == 21)
      {
        str = this.ReturnRouletteNumString(5);
        num = 5;
      }
      if (B == 22)
      {
        str = this.ReturnRouletteNumString(34);
        num = 34;
      }
      if (B == 23)
      {
        str = this.ReturnRouletteNumString(22);
        num = 22;
      }
      if (B == 24)
      {
        str = this.ReturnRouletteNumString(15);
        num = 15;
      }
      if (B == 25)
      {
        str = this.ReturnRouletteNumString(25);
        num = 25;
      }
      if (B == 26)
      {
        str = this.ReturnRouletteNumString(36);
        num = 36;
      }
      if (B == 27)
      {
        str = this.ReturnRouletteNumString(13);
        num = 13;
      }
      if (B == 28)
      {
        str = this.ReturnRouletteNumString(1);
        num = 1;
      }
      if (B == 29)
      {
        str = this.ReturnRouletteNumString(27);
        num = 27;
      }
      if (B == 30)
      {
        str = this.ReturnRouletteNumString(10);
        num = 10;
      }
      if (B == 31)
      {
        str = this.ReturnRouletteNumString(25);
        num = 25;
      }
      if (B == 32)
      {
        str = this.ReturnRouletteNumString(29);
        num = 29;
      }
      if (B == 33)
      {
        str = this.ReturnRouletteNumString(12);
        num = 12;
      }
      if (B == 34)
      {
        str = this.ReturnRouletteNumString(8);
        num = 8;
      }
      if (B == 35)
      {
        str = this.ReturnRouletteNumString(19);
        num = 19;
      }
      if (B == 36)
      {
        str = this.ReturnRouletteNumString(31);
        num = 31;
      }
      return num;
    }

    public string ReturnRouletteNumString(int num)
    {
      string str = "";
      if (num == 1)
        str = "Red, 1";
      if (num == 2)
        str = "Black, 2";
      if (num == 3)
        str = "Red, 3";
      if (num == 4)
        str = "Black, 4";
      if (num == 5)
        str = "Red, 5";
      if (num == 6)
        str = "Black, 6";
      if (num == 7)
        str = "Red, 7";
      if (num == 8)
        str = "Black, 8";
      if (num == 9)
        str = "Red, 9";
      if (num == 10)
        str = "Black, 10";
      if (num == 11)
        str = "Black, 11";
      if (num == 12)
        str = "Red, 12";
      if (num == 13)
        str = "Black, 13";
      if (num == 14)
        str = "Red, 13";
      if (num == 15)
        str = "Black, 15";
      if (num == 16)
        str = "Red, 16";
      if (num == 17)
        str = "Black, 17";
      if (num == 18)
        str = "Red, 18";
      if (num == 19)
        str = "Red, 19";
      if (num == 20)
        str = "Black, 20";
      if (num == 21)
        str = "Red, 21";
      if (num == 22)
        str = "Black, 22";
      if (num == 23)
        str = "Red, 23";
      if (num == 24)
        str = "Black, 24";
      if (num == 25)
        str = "Red, 25";
      if (num == 26)
        str = "Black, 26";
      if (num == 27)
        str = "Red, 27";
      if (num == 28)
        str = "Black, 28";
      if (num == 29)
        str = "Black, 29";
      if (num == 30)
        str = "Red, 30";
      if (num == 31)
        str = "Black, 31";
      if (num == 32)
        str = "Red, 32";
      if (num == 33)
        str = "Black, 33";
      if (num == 34)
        str = "Red, 34";
      if (num == 35)
        str = "Black, 35";
      if (num == 36)
        str = "Red, 36";
      if (num == 37)
        str = "Green, 0";
      if (num == 38)
        str = "Green, 00";
      return str;
    }

    public void Roulette_Choose_Num(Prop Table)
    {
      foreach (DealerTable rouletteDealerTable in this.RouletteDealerTables)
      {
        if ((Entity) rouletteDealerTable.Dealer != (Entity) null)
        {
          rouletteDealerTable.Dealer.FreezePosition = false;
          rouletteDealerTable.Dealer.Position = rouletteDealerTable.DealerOriginPosition;
          rouletteDealerTable.Dealer.Heading = rouletteDealerTable.DealerOriginHeading;
          Script.Wait(1);
          rouletteDealerTable.Dealer.FreezePosition = true;
        }
      }
      string dict1 = "anim_casino_b@amb@casino@games@roulette@dealer";
      string str = "spin_wheel";
      Vector3 offsetInWorldCoords1 = this.ClosestDealer.GetOffsetInWorldCoords(new Vector3(0.0f, 0.8f, 0.0f));
      this.Scene3 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) offsetInWorldCoords1.X, (InputArgument) offsetInWorldCoords1.Y, (InputArgument) (offsetInWorldCoords1.Z - 1.1f), (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) (this.ClosestDealer.Rotation.Z - 180f), (InputArgument) 2);
      Function.Call(Hash._0xEEA929141F699854, (InputArgument) this.ClosestDealer, (InputArgument) this.Scene3, (InputArgument) Class1.LoadDict(dict1), (InputArgument) str, (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
      Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.ClosestDealer, (InputArgument) this.Scene3, (InputArgument) str, (InputArgument) Class1.LoadDict(dict1), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
      Script.Wait(3000);
      int num1 = 0;
      Function.Call(Hash._0x7FB218262B810701, (InputArgument) Table, (InputArgument) "loop_wheel", (InputArgument) Class1.LoadDict("anim_casino_b@amb@casino@games@roulette@table"), (InputArgument) 20f, (InputArgument) false, (InputArgument) true, (InputArgument) 0, (InputArgument) 0.0f, (InputArgument) 8);
      this.Vic1 = 0;
      this.Vic2 = 0;
      this.Vic3 = 0;
      System.Random random = new System.Random();
      List<object> objectList = new List<object>();
      objectList.Add((object) "Red, 1");
      objectList.Add((object) "Black, 2");
      objectList.Add((object) "Red, 3");
      objectList.Add((object) "Black, 4");
      objectList.Add((object) "Red, 5");
      objectList.Add((object) "Black, 6");
      objectList.Add((object) "Red, 7");
      objectList.Add((object) "Black, 8");
      objectList.Add((object) "Red, 9");
      objectList.Add((object) "Black, 10");
      objectList.Add((object) "Black, 11");
      objectList.Add((object) "Red, 12");
      objectList.Add((object) "Black, 13");
      objectList.Add((object) "Red, 14");
      objectList.Add((object) "Black, 15");
      objectList.Add((object) "Red, 16");
      objectList.Add((object) "Black, 17");
      objectList.Add((object) "Red, 18");
      objectList.Add((object) "Red, 19");
      objectList.Add((object) "Black, 20");
      objectList.Add((object) "Red, 21");
      objectList.Add((object) "Black, 22");
      objectList.Add((object) "Red, 23");
      objectList.Add((object) "Black, 24");
      objectList.Add((object) "Red, 25");
      objectList.Add((object) "Black, 26");
      objectList.Add((object) "Red, 27");
      objectList.Add((object) "Black, 28");
      objectList.Add((object) "Black, 29");
      objectList.Add((object) "Red, 30");
      objectList.Add((object) "Black, 31");
      objectList.Add((object) "Red, 32");
      objectList.Add((object) "Black, 33");
      objectList.Add((object) "Red, 34");
      objectList.Add((object) "Black, 35");
      objectList.Add((object) "Red, 36");
      objectList.Add((object) "Green , 0");
      objectList.Add((object) "Green , 00");
      this.CurrentNum = "";
      float num2 = 0.0f;
      if ((Entity) this.Ball != (Entity) null)
        this.Ball.Delete();
      Function.Call(Hash._0x7FB218262B810701, (InputArgument) Table, (InputArgument) "intro_wheel", (InputArgument) Class1.LoadDict("anim_casino_b@amb@casino@games@roulette@table"), (InputArgument) 20f, (InputArgument) false, (InputArgument) true, (InputArgument) 0, (InputArgument) 0.0f, (InputArgument) 100);
      Function.Call(Hash._0x7FB218262B810701, (InputArgument) Table, (InputArgument) "loop_wheel", (InputArgument) Class1.LoadDict("anim_casino_b@amb@casino@games@roulette@table"), (InputArgument) 20f, (InputArgument) true, (InputArgument) true, (InputArgument) 0, (InputArgument) 0.0f, (InputArgument) 1000);
      Vector3 offsetInWorldCoords2 = Table.GetOffsetInWorldCoords(new Vector3(-1f, -0.36f, 1.06f));
      if (this.RoulleteTable.Equals("A"))
        offsetInWorldCoords2 = Table.GetOffsetInWorldCoords(new Vector3(-0.65f, -0.45f, 1.06f));
      if (this.RoulleteTable.Equals("B"))
        offsetInWorldCoords2 = Table.GetOffsetInWorldCoords(new Vector3(-0.42f, -0.1f, 1.06f));
      if (this.RoulleteTable.Equals("C"))
        offsetInWorldCoords2 = Table.GetOffsetInWorldCoords(new Vector3(-1f, -0.36f, 1.06f));
      this.Ball = World.CreateProp(this.RequestModel("vw_prop_roulette_ball"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, 0.0f), false, false);
      this.Ball.FreezePosition = true;
      this.Ball.HasCollision = false;
      Function.Call(Hash._0x7FB218262B810701, (InputArgument) this.Ball, (InputArgument) "loop_ball", (InputArgument) Class1.LoadDict("anim_casino_b@amb@casino@games@roulette@table"), (InputArgument) 10f, (InputArgument) true, (InputArgument) true, (InputArgument) 0, (InputArgument) 0.0f, (InputArgument) 1000);
      for (int index1 = 0; index1 < random.Next(10, 100); ++index1)
      {
        for (int index2 = 0; index2 < objectList.Count; ++index2)
        {
          Script.Wait(1);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__1128.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__1128.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentNum = Class1.\u003C\u003Eo__1128.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1128.\u003C\u003Ep__0, objectList[random.Next(0, objectList.Count)]);
          num2 += 0.25f;
          float num3 = (float) random.Next(70, 100);
          if ((double) num2 > (double) num3)
            break;
        }
      }
      if (!this.CurrentNum.Contains(","))
      {
        num1 = 38;
        string dict2 = " ";
        this.RouletteSpinScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) Table.Position.X, (InputArgument) Table.Position.Y, (InputArgument) Table.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2);
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Table, (InputArgument) this.RouletteSpinScene, (InputArgument) "exit_38_wheel", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Vector3 offsetInWorldCoords3 = Table.GetOffsetInWorldCoords(new Vector3(-0.75f, -0.2f, 1.1f));
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Ball, (InputArgument) Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) offsetInWorldCoords3.X, (InputArgument) offsetInWorldCoords3.Y, (InputArgument) offsetInWorldCoords3.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2), (InputArgument) "exit_38_ball", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        this.B_roulette = 38;
      }
      if (this.CurrentNum.Contains(","))
      {
        try
        {
          string[] strArray = this.CurrentNum.Split(',');
          this.A_roulette = strArray[0];
          string s = strArray[1];
          this.B_roulette = int.Parse(s);
          if (s.Equals("0"))
          {
            num1 = 37;
            string dict2 = "anim_casino_b@amb@casino@games@roulette@table";
            this.RouletteSpinScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) Table.Position.X, (InputArgument) Table.Position.Y, (InputArgument) Table.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Table, (InputArgument) this.RouletteSpinScene, (InputArgument) "exit_37_wheel", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Vector3 offsetInWorldCoords3 = Table.GetOffsetInWorldCoords(new Vector3(-0.75f, -0.2f, 1.1f));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Ball, (InputArgument) Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) offsetInWorldCoords3.X, (InputArgument) offsetInWorldCoords3.Y, (InputArgument) offsetInWorldCoords3.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2), (InputArgument) "exit_37_ball", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            this.B_roulette = 37;
          }
          if (s.Equals("00"))
          {
            num1 = 38;
            string dict2 = " ";
            this.RouletteSpinScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) Table.Position.X, (InputArgument) Table.Position.Y, (InputArgument) Table.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Table, (InputArgument) this.RouletteSpinScene, (InputArgument) "exit_38_wheel", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Vector3 offsetInWorldCoords3 = Table.GetOffsetInWorldCoords(new Vector3(-0.75f, -0.2f, 1.1f));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Ball, (InputArgument) Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) offsetInWorldCoords3.X, (InputArgument) offsetInWorldCoords3.Y, (InputArgument) offsetInWorldCoords3.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2), (InputArgument) "exit_38_ball", (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            this.B_roulette = 38;
          }
          if (!s.Equals("00") && !s.Equals("0"))
          {
            string dict2 = "anim_casino_b@amb@casino@games@roulette@table";
            this.RouletteSpinScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) Table.Position.X, (InputArgument) Table.Position.Y, (InputArgument) Table.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Table, (InputArgument) this.RouletteSpinScene, (InputArgument) ("exit_" + this.B_roulette.ToString() + "_wheel"), (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Vector3 offsetInWorldCoords3 = Table.GetOffsetInWorldCoords(new Vector3(-0.75f, -0.2f, 1.1f));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Ball, (InputArgument) Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) offsetInWorldCoords3.X, (InputArgument) offsetInWorldCoords3.Y, (InputArgument) offsetInWorldCoords3.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) Table.Rotation.Z, (InputArgument) 2), (InputArgument) ("exit_" + this.B_roulette.ToString() + "_ball"), (InputArgument) Class1.LoadDict(dict2), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            num1 = this.B_roulette;
          }
        }
        catch
        {
          UI.Notify("error");
        }
      }
      this.ReadyForRouletteEnd = true;
    }

    public void Roulette_GamePassed(string MissionName, string vic, int Payout, int loss)
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 10), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 700), 0.0f, Color.FromArgb(200, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText(MissionName, new Point(int32, 100), 2.5f, Color.FromArgb((int) byte.MaxValue, 199, 168, 87), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText(vic, new Point(int32, 200), 1.5f, Color.White, GTA.Font.HouseScript, UIResText.Alignment.Centered).Draw();
      new UIResText("Payout : " + Payout.ToString("N") + "c", new Point(int32, 300), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new UIResText("Loss : " + loss.ToString("N") + "c", new Point(int32, 380), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new Scaleform(0).Render2D();
    }

    public void Roulette_GameFail(string Reason, string vic, string MissionName, int Payout)
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 30), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 700), 0.0f, Color.FromArgb(230, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText(MissionName, new Point(int32, 100), 2.5f, Color.FromArgb((int) byte.MaxValue, 148, 27, 46), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText(vic, new Point(int32, 200), 1.5f, Color.White, GTA.Font.HouseScript, UIResText.Alignment.Centered).Draw();
      new UIResText("Reason : " + Reason, new Point(int32, 280), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new UIResText("Loss : " + Payout.ToString("N") + "c", new Point(int32, 340), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new Scaleform(0).Render2D();
    }

    public void PlayDealerAnim(Ped ped)
    {
      System.Random random = new System.Random();
      float num = (float) random.Next(1, 27);
      ped.BlockPermanentEvents = true;
      if ((double) num < 2.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@threecardpoker@dealer", "deck_shuffle", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 2.0 && (double) num < 5.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@dealer_female", "dealer_idle", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 5.0 && (double) num < 7.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@blackjack@dealer_female", "dealer_focus_player_01_idle", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 7.0 && (double) num < 10.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_01", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 10.0 && (double) num < 12.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_02", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 12.0 && (double) num < 14.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_03", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 14.0 && (double) num < 17.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_04", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 17.0 && (double) num < 20.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_05", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 20.0 && (double) num < 23.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_06", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 23.0 && (double) num < 25.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_07", (float) random.Next(64, 320), -1, true, -1f);
      if ((double) num >= 25.0 && (double) num < 28.0)
        ped.Task.PlayAnimation("anim_casino_b@amb@casino@games@shared@dealer@", "female_idle_var_08", (float) random.Next(64, 320), -1, true, -1f);
      ped.AlwaysKeepTask = true;
    }

    public Color GetRandomMultiColour()
    {
      Color color = Color.Beige;
      int num = new System.Random().Next(1, 200);
      if (num > 0 && num < 10)
        color = Color.Blue;
      if (num > 10 && num < 20)
        color = Color.Yellow;
      if (num > 20 && num < 30)
        color = Color.Lime;
      if (num > 30 && num < 40)
        color = Color.Red;
      if (num > 40 && num < 50)
        color = Color.Orange;
      if (num > 50 && num < 60)
        color = Color.Pink;
      if (num > 60 && num < 70)
        color = Color.White;
      if (num > 70 && num < 80)
        color = Color.LightBlue;
      if (num > 80 && num < 90)
        color = Color.Magenta;
      if (num > 90 && num < 100)
        color = Color.OrangeRed;
      if (num > 100 && num < 110)
        color = Color.Green;
      if (num > 110 && num < 120)
        color = Color.YellowGreen;
      if (num > 120 && num < 130)
        color = Color.Violet;
      if (num > 130 && num < 140)
        color = Color.Cyan;
      if (num > 140 && num < 150)
        color = Color.SkyBlue;
      if (num > 150 && num < 160)
        color = Color.Silver;
      if (num > 160 && num < 170)
        color = Color.HotPink;
      if (num > 170 && num < 180)
        color = Color.DarkBlue;
      if (num > 180 && num < 190)
        color = Color.DarkRed;
      if (num > 190 && num < 200)
        color = Color.MidnightBlue;
      return color;
    }

    public void Show_RQE(string R, string Q, string E)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 80, (InputArgument) 0), (object) R);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EGQ(string E, string G, string Q)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EGQR(string E, string G, string Q, string R)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 45, (InputArgument) 0), (object) R);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EGQRX(string E, string G, string Q, string R, string X)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 45, (InputArgument) 0), (object) R);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 73, (InputArgument) 0), (object) X);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_Q(string Q)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_GQ(string G, string Q)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EQ(string E, string Q)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_G(string G)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EQ_Chips(string E, string Q)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) ("AVL Chips " + this.Chips_Amount.ToString() + "  |  " + E));
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) Q);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_EG(string E, string G)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 51, (InputArgument) 0), (object) E);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 58, (InputArgument) 0), (object) G);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public int GetMiniGame(int ARC)
    {
      int num = 0;
      switch (ARC)
      {
        case 1:
          return num = 1;
        case 2:
          return num = 2;
        case 3:
          return num = 3;
        case 4:
          return num = 4;
        case 5:
          return num = 5;
        case 6:
          return num = 6;
        case 7:
          return num = 7;
        case 8:
          return num = 8;
        default:
          return 0;
      }
    }

    public static void DrawScaleform()
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      Convert.ToInt32(resolutionMantainRatio.Width);
      Convert.ToInt32(resolutionMantainRatio.Height);
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("orbital_cannon_cam");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) "Quit");
      scaleform.Render2D();
      Function.Call(Hash._0x2206BF9A37B7F724, (InputArgument) "ChopVision", (InputArgument) 100, (InputArgument) false);
    }

    public void CreateAi()
    {
      float num = (float) new System.Random().Next(1, 9);
      Vector3 position = new Vector3();
      if ((double) num == 1.0)
        position = this.EnemySpawnPos1;
      if ((double) num == 2.0)
        position = this.EnemySpawnPos2;
      if ((double) num == 3.0)
        position = this.EnemySpawnPos3;
      if ((double) num == 4.0)
        position = this.EnemySpawnPos4;
      if ((double) num == 5.0)
        position = this.EnemySpawnPos5;
      if ((double) num == 6.0)
        position = this.EnemySpawnPos6;
      if ((double) num == 7.0)
        position = this.EnemySpawnPos7;
      if ((double) num == 8.0)
        position = this.EnemySpawnPos8;
      if ((double) num == 9.0)
        position = this.EnemySpawnPos9;
      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Nokota), position, 180f);
      this.EnemyVs.Add(vehicle);
      Prop prop = World.CreateProp(this.RequestModel("gr_prop_damship_01a"), vehicle.Position, true, false);
      prop.HasCollision = false;
      this.EnemyOverlays.Add(prop);
      vehicle.FreezePosition = true;
      prop.IsVisible = false;
      vehicle.LodDistance = 3000;
      prop.LodDistance = 3000;
      vehicle.IsPersistent = true;
      prop.IsPersistent = true;
    }

    public void DeleteAllInt()
    {
      if ((Entity) this.VIPBlocker != (Entity) null)
        this.VIPBlocker.Delete();
      if ((Entity) this.RouletteMarker2 != (Entity) null)
        this.RouletteMarker2.Delete();
      if ((Entity) this.RouletteMarker1 != (Entity) null)
        this.RouletteMarker1.Delete();
      if ((Entity) this.RouletteMarker != (Entity) null)
        this.RouletteMarker.Delete();
      if ((Entity) this.BasePlate2 != (Entity) null)
        this.BasePlate2.Delete();
      if ((Entity) this.BasePlate != (Entity) null)
        this.BasePlate.Delete();
      if ((Entity) this.VIPBlocker != (Entity) null)
        this.VIPBlocker.Delete();
      if ((Entity) this.WheelProp2 != (Entity) null)
        this.WheelProp2.Delete();
      if ((Entity) this.WheelProp != (Entity) null)
        this.WheelProp.Delete();
      if ((Entity) this.Vendor1 != (Entity) null)
        this.Vendor1.Delete();
      if ((Entity) this.Vendor2 != (Entity) null)
        this.Vendor2.Delete();
      foreach (Ped ped in this.MainPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.AirVehicle != (Entity) null && (Entity) this.AirVehicle.GetPedOnSeat(VehicleSeat.Driver) == (Entity) null)
        this.AirVehicle.Delete();
      if ((Entity) this.Computer != (Entity) null)
      {
        if (this.IsinInterior)
          this.SpawnProp("ex_prop_monitor_01_ex", this.ComputerPos, this.Computer.Rotation);
        if (this.IsinInterior)
          ;
        this.Computer.Delete();
      }
      if ((Entity) this.AssistantPed != (Entity) null)
        this.AssistantPed.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if (this.DestoryVehicle != (Blip) null)
        this.DestoryVehicle.Remove();
      if ((Entity) this.VehicleMissioncar != (Entity) null)
        this.VehicleMissioncar.Delete();
      if ((Entity) this.VehicleId != (Entity) null)
        this.VehicleId.Delete();
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if ((Entity) this.VtoGet1 != (Entity) null)
        this.VtoGet1.Delete();
      if ((Entity) this.VtoGet2 != (Entity) null)
        this.VtoGet2.Delete();
      if ((Entity) this.VtoGet3 != (Entity) null)
        this.VtoGet3.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if (this.DropzoneBlip != (Blip) null)
        this.DropzoneBlip.Remove();
      if ((Entity) this.RentedVehicle != (Entity) null)
        this.RentedVehicle.Delete();
      if (this.GarageBlip != (Blip) null)
        this.GarageBlip.Remove();
      if (this.PenthouseBlip != (Blip) null)
        this.PenthouseBlip.Remove();
      if (this.MenuBlip != (Blip) null)
        this.MenuBlip.Remove();
      foreach (Ped ped in this.MiscPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.Prizecar != (Entity) null)
        this.Prizecar.Delete();
      if ((Entity) this.Chair != (Entity) null)
        this.Chair.Delete();
      foreach (Prop prop in this.Champ)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop wheelMarker in this.WheelMarkers)
      {
        if ((Entity) wheelMarker != (Entity) null)
          wheelMarker.Delete();
      }
      foreach (Prop prop in this.Card_Deck)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if (!((Entity) this.WheelWinMarker != (Entity) null))
        return;
      this.WheelWinMarker.Delete();
    }

    public void RefreshAllInt()
    {
      this.ReReadIni();
      if ((Entity) this.RouletteMarker2 != (Entity) null)
        this.RouletteMarker2.Delete();
      if ((Entity) this.RouletteMarker1 != (Entity) null)
        this.RouletteMarker1.Delete();
      if ((Entity) this.RouletteMarker != (Entity) null)
        this.RouletteMarker.Delete();
      if ((Entity) this.BasePlate2 != (Entity) null)
        this.BasePlate2.Delete();
      if ((Entity) this.BasePlate != (Entity) null)
        this.BasePlate.Delete();
      if ((Entity) this.VIPBlocker != (Entity) null)
        this.VIPBlocker.Delete();
      if ((Entity) this.VIPBlocker != (Entity) null)
        this.VIPBlocker.Delete();
      if ((Entity) this.WheelProp2 != (Entity) null)
        this.WheelProp2.Delete();
      if ((Entity) this.WheelProp != (Entity) null)
        this.WheelProp.Delete();
      if ((Entity) this.Vendor1 != (Entity) null)
        this.Vendor1.Delete();
      if ((Entity) this.Vendor2 != (Entity) null)
        this.Vendor2.Delete();
      foreach (Ped ped in this.MainPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds2)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.AirVehicle != (Entity) null && (Entity) this.AirVehicle.GetPedOnSeat(VehicleSeat.Driver) == (Entity) null)
        this.AirVehicle.Delete();
      if ((Entity) this.Computer != (Entity) null)
      {
        if (this.IsinInterior)
          this.SpawnProp("ex_prop_monitor_01_ex", this.ComputerPos, this.Computer.Rotation);
        if (this.IsinInterior)
          ;
        this.Computer.Delete();
      }
      if ((Entity) this.AssistantPed != (Entity) null)
        this.AssistantPed.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if (this.DestoryVehicle != (Blip) null)
        this.DestoryVehicle.Remove();
      if ((Entity) this.VehicleMissioncar != (Entity) null)
        this.VehicleMissioncar.Delete();
      if ((Entity) this.VehicleId != (Entity) null)
        this.VehicleId.Delete();
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if ((Entity) this.VtoGet1 != (Entity) null)
        this.VtoGet1.Delete();
      if ((Entity) this.VtoGet2 != (Entity) null)
        this.VtoGet2.Delete();
      if ((Entity) this.VtoGet3 != (Entity) null)
        this.VtoGet3.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if (this.DropzoneBlip != (Blip) null)
        this.DropzoneBlip.Remove();
      if ((Entity) this.RentedVehicle != (Entity) null)
        this.RentedVehicle.Delete();
      if (this.GarageBlip != (Blip) null)
        this.GarageBlip.Remove();
      if (this.PenthouseBlip != (Blip) null)
        this.PenthouseBlip.Remove();
      if (this.MenuBlip != (Blip) null)
        this.MenuBlip.Remove();
      foreach (Ped ped in this.MiscPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.Prizecar != (Entity) null)
        this.Prizecar.Delete();
      if ((Entity) this.Chair != (Entity) null)
        this.Chair.Delete();
      foreach (Prop prop in this.Champ)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop wheelMarker in this.WheelMarkers)
      {
        if ((Entity) wheelMarker != (Entity) null)
          wheelMarker.Delete();
      }
      foreach (Prop prop in this.Card_Deck)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if ((Entity) this.WheelWinMarker != (Entity) null)
        this.WheelWinMarker.Delete();
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_0_dlc_casino_main_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_2_dlc_casino_garage_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_int_placement_vw_interior_4_dlc_casino_carpark_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_penthouse");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_carpark");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_main");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "vw_casino_garage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_0_dlc_casino_main_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_2_dlc_casino_garage_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_int_placement_vw_interior_4_dlc_casino_carpark_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_penthouse");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_carpark");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_main");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "vw_casino_garage");
      if ((Entity) this._8PlayerPokerGameTable1 != (Entity) null)
        this._8PlayerPokerGameTable1.Delete();
      if ((Entity) this._8PlayerPokerGameTable2 != (Entity) null)
        this._8PlayerPokerGameTable2.Delete();
      if ((Entity) this._8PlayerPokerGameTable3 != (Entity) null)
        this._8PlayerPokerGameTable3.Delete();
      this._8PlayerPokerGameTable1 = World.CreateProp(this.RequestModel("vw_prop_casino_3cardpoker_01"), new Vector3(1136.664f, 237.4058f, -51.5f), new Vector3(0.0f, 0.0f, -138f), false, false);
      this._8PlayerPokerGameTable2 = World.CreateProp(this.RequestModel("vw_prop_casino_3cardpoker_01"), this._8PlayerPokerGameTable1.GetOffsetInWorldCoords(new Vector3(0.0f, 1.36f, 0.0f)), new Vector3(0.0f, 0.0f, this._8PlayerPokerGameTable1.Rotation.Z - 180f), false, false);
      this._8PlayerPokerGameTable3 = World.CreateProp(this.RequestModel("prop_arm_wrestle_01"), this._8PlayerPokerGameTable1.GetOffsetInWorldCoords(new Vector3(0.0f, 0.7f, -0.08f)), new Vector3(0.0f, 0.0f, this._8PlayerPokerGameTable1.Rotation.Z), false, false);
      if ((Entity) this._8PlayerGameDealer != (Entity) null)
        this._8PlayerGameDealer.Delete();
      this._8PlayerGameDealer = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1136.207f, 236.0575f, -50.4f), -45f);
      this.SetPedOutfit(this._8PlayerGameDealer);
      Script.Wait(1);
      this.PlayDealerAnim(this._8PlayerGameDealer);
      this.MainPed.Add(this._8PlayerGameDealer);
      Script.Wait(1);
      Vector3 position1 = this._8PlayerGameDealer.Position;
      this._8PlayerGameDealer.Position = this.MarkerEnter;
      Script.Wait(1);
      this._8PlayerGameDealer.Position = position1;
      try
      {
        if ((Entity) this.WheelProp2 != (Entity) null)
          this.WheelProp2.Delete();
        if ((Entity) this.WheelProp != (Entity) null)
          this.WheelProp.Delete();
        float num = 90f;
        Vector3 vector3 = new Vector3(this.LuckyWheel.X, this.LuckyWheel.Y + 1.2f, this.LuckyWheel.Z + 1.2f);
        this.WheelProp = World.CreateProp(this.RequestModel("vw_prop_plaq_10kdollar_x1"), new Vector3(vector3.X, vector3.Y, vector3.Z + 0.2f), new Vector3(0.0f, 90f, num - 90f), false, false);
        this.ReelABase.FreezePosition = true;
        Vector3 position2 = this.ThraxPos;
        position2 = new Vector3(position2.X, position2.Y, position2.Z - 5.1f);
        if ((Entity) this.BasePlate != (Entity) null)
          this.BasePlate.Delete();
        this.BasePlate = World.CreateProp(this.SpawnProp("xs_prop_arena_flipper_small_01a_sf"), position2, true, false);
        this.BasePlate.Rotation = new Vector3(0.0f, 0.0f, 0.0f);
        this.BasePlate.FreezePosition = true;
        this.BasePlate.IsVisible = false;
        this.BasePlate.HasCollision = true;
      }
      catch (Exception ex)
      {
      }
      try
      {
        if ((Entity) this.WheelProp2 != (Entity) null)
          this.WheelProp2.Delete();
        this.WheelProp2 = World.CreateProp(this.RequestModel("vw_prop_vw_luckywheel_02a"), this.WheelProp.Position, new Vector3(0.0f, 0.0f, this.WheelProp.Heading), false, false);
        this.WheelProp2.FreezePosition = true;
        this.WheelProp2.AttachTo((Entity) this.WheelProp, 1, new Vector3(0.0f, 0.0f, 0.0f), new Vector3(0.0f, 0.0f, 0.0f));
        this.WheelProp2.IsVisible = true;
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Prize Wheel Markers failed to spawn~");
      }
      try
      {
        if (this.MainPeds)
        {
          Function.Call(Hash._0x52923C4710DD9907, (InputArgument) this._8PlayerGameDealer, (InputArgument) Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 1100.0, (InputArgument) 220.0, (InputArgument) -50.0), (InputArgument) Function.Call<int>(Hash._0x47C2A06D4F5F424B, (InputArgument) Game.Player.Character));
          this.MainPed.Add(this.Vendor1);
          this.MainPed.Add(this.Vendor2);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1118.256f, 219.4535f, -49.5f), 103f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          Vector3 position2 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = new Vector3(position2.X, position2.Y, -52f);
          this.PlayDealerAnim(this.ped);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1101.027f, 195.2306f, -49.5f), -48f);
          this.SetPedOutfit(this.ped);
          Vector3 position3 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = new Vector3(position3.X, position3.Y, -52f);
          this.PlayDealerAnim(this.ped);
          this.MainPed.Add(this.ped);
          this.ped = World.CreatePed(this.RequestModel("ig_tomcasino"), new Vector3(1087.711f, 221.1435f, -49.5f), 177f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1110.818f, 209.2807f, -49.5f), 34f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          this.ped.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1113.457f, 208.9917f, -49.5f), -63f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          this.ped.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1112.64f, 206.597f, -49.5f), -178f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          this.ped.Task.PlayAnimation("anim@amb@casino@mini@drinking@bar@drink_v2@heels@idle_a", "idle_a_bartender", 8f, -1, true, -1f);
          this.ped = World.CreatePed(this.RequestModel(PedHash.TaoCheng), new Vector3(1113.545f, 249.2349f, -46f), -179f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          this.ped.Task.PlayAnimation("move_drunk_m", "idle", 1900f, -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreatePed(this.RequestModel(PedHash.TaosTranslator), new Vector3(1113.671f, 247.5057f, -46f), -32f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          this.ped.Task.StartScenario("WORLD_HUMAN_MOBILE_FILM_SHOCKING", this.ped.Position);
          this.ped = World.CreatePed(this.RequestModel(this.GetRandomDealerModel()), new Vector3(1128.704f, 211f, -49f), -43f);
          this.SetPedOutfit(this.ped);
          this.MainPed.Add(this.ped);
          if (this.AssistantPedModelType.Equals("string"))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1148.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1148.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ped = World.CreatePed(this.RequestModel(Class1.\u003C\u003Eo__1148.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__1148.\u003C\u003Ep__0, this.AssistantPedModel)), new Vector3(1115.311f, 253.7205f, -46.8f), -90f);
            this.ped.AlwaysKeepTask = true;
            this.MainPed.Add(this.ped);
            this.ped.Task.PlayAnimation("anim@amb@office@pa@female@", "pa_base", 8f, -1, true, -1f);
            this.ped.HasCollision = false;
            this.ped.FreezePosition = true;
            foreach (Prop nearbyProp in World.GetNearbyProps(new Vector3(1114.958f, 253.6668f, -46.8f), 1.35f))
            {
              if ((Entity) nearbyProp != (Entity) null)
                nearbyProp.Delete();
            }
            this.Ped_Assistant = this.ped;
            if ((Entity) this.Chair_Assistant != (Entity) null)
              this.Chair_Assistant.Delete();
            this.Chair_Assistant = World.CreateProp(this.RequestModel("vw_prop_vw_offchair_03"), new Vector3(this.ped.Position.X, this.ped.Position.Y, this.ped.Position.Z - 0.5f), new Vector3(0.0f, 0.0f, this.ped.Heading - 180f), false, false);
            this.Chair_Assistant.FreezePosition = true;
            this.Chair_Assistant.Position = this.Chair_Assistant.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, -0.5f));
          }
          else if (this.AssistantPedModelType.Equals("Pedhash"))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__1148.\u003C\u003Ep__1 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__1148.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ped = World.CreatePed(this.RequestModel(Class1.\u003C\u003Eo__1148.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__1148.\u003C\u003Ep__1, this.AssistantPedModel)), new Vector3(1115.311f, 253.7205f, -46.8f), -90f);
            this.ped.AlwaysKeepTask = true;
            this.MainPed.Add(this.ped);
            this.ped.Task.PlayAnimation("anim@amb@office@pa@female@", "pa_base", 8f, -1, true, -1f);
            this.ped.HasCollision = false;
            this.ped.FreezePosition = true;
            foreach (Prop nearbyProp in World.GetNearbyProps(new Vector3(1114.958f, 253.6668f, -46.8f), 1.35f))
            {
              if ((Entity) nearbyProp != (Entity) null)
                nearbyProp.Delete();
            }
            this.Ped_Assistant = this.ped;
            if ((Entity) this.Chair_Assistant != (Entity) null)
              this.Chair_Assistant.Delete();
            this.Chair_Assistant = World.CreateProp(this.RequestModel("vw_prop_vw_offchair_03"), new Vector3(this.ped.Position.X, this.ped.Position.Y, this.ped.Position.Z - 0.5f), new Vector3(0.0f, 0.0f, this.ped.Heading - 180f), false, false);
            this.Chair_Assistant.FreezePosition = true;
            this.Chair_Assistant.Position = this.Chair_Assistant.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, -0.5f));
          }
          else if (this.AssistantPedModelType.Equals("string"))
          {
            this.ped = World.CreatePed(this.RequestModel("csb_agatha"), new Vector3(1115.311f, 253.7205f, -46.8f), -90f);
            this.ped.AlwaysKeepTask = true;
            this.MainPed.Add(this.ped);
            this.ped.Task.PlayAnimation("anim@amb@office@pa@female@", "pa_base", 8f, -1, true, -1f);
            this.ped.HasCollision = false;
            this.ped.FreezePosition = true;
            foreach (Prop nearbyProp in World.GetNearbyProps(new Vector3(1114.958f, 253.6668f, -46.8f), 1.35f))
            {
              if ((Entity) nearbyProp != (Entity) null)
                nearbyProp.Delete();
            }
            this.Ped_Assistant = this.ped;
            if ((Entity) this.Chair_Assistant != (Entity) null)
              this.Chair_Assistant.Delete();
            this.Chair_Assistant = World.CreateProp(this.RequestModel("vw_prop_vw_offchair_03"), new Vector3(this.ped.Position.X, this.ped.Position.Y, this.ped.Position.Z - 0.5f), new Vector3(0.0f, 0.0f, this.ped.Heading - 180f), false, false);
            this.Chair_Assistant.FreezePosition = true;
            this.Chair_Assistant.Position = this.Chair_Assistant.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, -0.5f));
          }
          this.ped = World.CreateRandomPed(new Vector3(1134.131f, 278.7511f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1134.131f, 278.7511f, -52.1f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, -90f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("missfam5_blackout", "vomit", 128f, -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1135.075f, 280.4876f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1134.134f, 280.4636f, -52.1f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 90f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("switch@trevor@on_toilet", "trev_on_toilet_loop", 8f, -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1134.012f, 282.1808f, -52.1f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 90f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("switch@trevor@puking_into_fountain", "trev_fountain_puke_loop", 128f, -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1133.018f, 276.7346f, -52f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, -90f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("switch@michael@wash_face", "loop_michael", 128f, -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50.5f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1105.535f, 217.0142f, -49.9f);
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 62f);
          this.ped.Task.StartScenario("WORLD_HUMAN_PAPARAZZI", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 62f);
          this.ped.Task.StartScenario("WORLD_HUMAN_TOURIST_MOBILE", this.ped.Position);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50.5f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1104.666f, 215.5959f, -49.9f);
          this.ped.FreezePosition = true;
          this.ped.Heading = 38f;
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_PAPARAZZI", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -49.8f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1106.087f, 218.7728f, -49.9f);
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 82f);
          this.ped.Task.StartScenario("WORLD_HUMAN_PAPARAZZI", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped.Heading = 82f;
          this.ped.Task.StartScenario("WORLD_HUMAN_TOURIST_MOBILE", this.ped.Position);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1102.207f, 200.4515f, -50.4f);
          this.ped.FreezePosition = true;
          this.ped.Heading = 136f;
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_TOURIST_MOBILE", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1103.912f, 197.4887f, -50.4f);
          this.ped.FreezePosition = true;
          this.ped.Heading = -81f;
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_AA_COFFEE", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1096.842f, 208.2964f, -50f);
          this.ped.FreezePosition = true;
          this.ped.Heading = 75f;
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_AA_COFFEE", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1094.77f, 208.3848f, -50f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, -90f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_HANG_OUT_STREET", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1096.422f, 209.5439f, -50f);
          this.ped.FreezePosition = true;
          this.ped.Heading = 146f;
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.StartScenario("WORLD_HUMAN_HANG_OUT_STREET", this.ped.Position);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1134.012f, 282.1808f, -50f));
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1106.37f, 212.0176f, -50.3f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 146f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("amb@world_human_sunbathe@female@back@base", "base", 8f, -1, true, -1f);
          this.MiscPed.Add(this.ped);
          this.ped = World.CreatePed((GTA.Model) PedHash.Paramedic01SMM, new Vector3(1134.012f, 282.1808f, -51f), 1f);
          this.ped.Position = this.MarkerEnter;
          Script.Wait(1);
          this.ped.Position = new Vector3(1106.548f, 211.8759f, -50.3f);
          this.ped.FreezePosition = true;
          this.ped.Rotation = new Vector3(0.0f, 0.0f, 122f);
          this.ped.AlwaysKeepTask = true;
          this.ped.Task.PlayAnimation("missheistfbi3b_ig8_2", "cpr_loop_paramedic", 8f, -1, true, -1f);
          this.MiscPed.Add(this.ped);
          foreach (Ped ped in this.MiscPed)
          {
            if ((Entity) ped != (Entity) null)
            {
              Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
              Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
              ped.RelationshipGroup = 1;
              ped.AlwaysKeepTask = true;
            }
          }
          foreach (DealerTable pokerDealerTable in this.PokerDealerTables)
          {
            if ((Entity) pokerDealerTable.Dealer != (Entity) null)
              pokerDealerTable.Dealer.Delete();
            if ((Entity) pokerDealerTable.Card1 != (Entity) null)
              pokerDealerTable.Card1.Delete();
            if ((Entity) pokerDealerTable.Card2 != (Entity) null)
              pokerDealerTable.Card2.Delete();
            if ((Entity) pokerDealerTable.Card3 != (Entity) null)
              pokerDealerTable.Card3.Delete();
          }
          foreach (DealerTable blackjackDealerTable in this.BlackjackDealerTables)
          {
            if ((Entity) blackjackDealerTable.Dealer != (Entity) null)
              blackjackDealerTable.Dealer.Delete();
            if ((Entity) blackjackDealerTable.Card1 != (Entity) null)
              blackjackDealerTable.Card1.Delete();
            if ((Entity) blackjackDealerTable.Card2 != (Entity) null)
              blackjackDealerTable.Card2.Delete();
            if ((Entity) blackjackDealerTable.Card3 != (Entity) null)
              blackjackDealerTable.Card3.Delete();
          }
          foreach (DealerTable rouletteDealerTable in this.RouletteDealerTables)
          {
            if ((Entity) rouletteDealerTable.Dealer != (Entity) null)
              rouletteDealerTable.Dealer.Delete();
            if ((Entity) rouletteDealerTable.Card1 != (Entity) null)
              rouletteDealerTable.Card1.Delete();
            if ((Entity) rouletteDealerTable.Card2 != (Entity) null)
              rouletteDealerTable.Card2.Delete();
            if ((Entity) rouletteDealerTable.Card3 != (Entity) null)
              rouletteDealerTable.Card3.Delete();
          }
          if (this.PokerDealerTables.Count > 0)
            this.PokerDealerTables.Clear();
          if (this.BlackjackDealerTables.Count > 0)
          {
            this.BlackjackDealerTables.Clear();
            this.BlackjackDealerTables.Clear();
          }
          if (this.RouletteDealerTables.Count > 0)
            this.RouletteDealerTables.Clear();
        }
        if (this.BarPeds)
        {
          System.Random random = new System.Random();
          Vector3 markerEnter = this.MarkerEnter;
          Vector3 vector3 = new Vector3(0.0f, 0.0f, 0.0f);
          this.ped = World.CreateRandomPed(new Vector3(1111.493f, 211.5376f, -51.5f));
          this.ped.Heading = -174f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position2 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position2;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1110.145f, 210.9409f, -51.5f));
          this.ped.Heading = -147f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position3 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position3;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1109.086f, 209.9584f, -51.5f));
          this.ped.Heading = -122f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position4 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position4;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1108.59f, 206.8573f, -51.5f));
          this.ped.Heading = -73f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position5 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position5;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1109.433f, 205.567f, -51.5f));
          this.ped.Heading = -38f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position6 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position6;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1110.84f, 204.7336f, -51.5f));
          this.ped.Heading = -28f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position7 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position7;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1112.326f, 204.5824f, -51.5f));
          this.ped.Heading = -3f;
          Vector3 position8 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position8;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1114.798f, 206.2514f, -51.5f));
          this.ped.Heading = 45f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position9 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position9;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
          this.ped = World.CreateRandomPed(new Vector3(1115.477f, 20.6416f, -51.5f));
          this.ped.Heading = 45f;
          this.ped.FreezePosition = true;
          this.ped.AlwaysKeepTask = true;
          this.ped.IsPersistent = true;
          Vector3 position10 = this.ped.Position;
          Script.Wait(1);
          this.ped.Position = markerEnter;
          Script.Wait(1);
          this.ped.Position = position10;
          Script.Wait(1);
          this.ped.Task.PlayAnimation("anim@special_peds@casino@bar@ped_male@sit_withdrink@01a@base", "base", (float) random.Next(162, 1000), -1, true, -1f);
          this.MainPed.Add(this.ped);
        }
        foreach (Ped ped in this.MainPed)
        {
          if ((Entity) ped != (Entity) null)
          {
            Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
            Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
            ped.RelationshipGroup = 1;
            ped.AlwaysKeepTask = true;
          }
        }
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Error ");
      }
      try
      {
        try
        {
          foreach (Prop nearbyProp in World.GetNearbyProps(this.MarkerExit, 3000f, this.RequestModel("vw_prop_casino_3cardpoker_01")))
          {
            if ((Entity) nearbyProp != (Entity) null)
              this.Tables.Add(nearbyProp);
          }
          foreach (Prop nearbyProp in World.GetNearbyProps(this.MarkerExit, 3000f, this.RequestModel("vw_prop_casino_3cardpoker_01b")))
          {
            if ((Entity) nearbyProp != (Entity) null)
              this.Tables.Add(nearbyProp);
          }
          foreach (Prop nearbyProp in World.GetNearbyProps(this.MarkerExit, 3000f, this.RequestModel("vw_prop_casino_blckjack_01")))
          {
            if ((Entity) nearbyProp != (Entity) null)
              this.Tables.Add(nearbyProp);
          }
          foreach (Prop nearbyProp in World.GetNearbyProps(this.MarkerExit, 3000f, this.RequestModel("vw_prop_casino_blckjack_01b")))
          {
            if ((Entity) nearbyProp != (Entity) null)
              this.Tables.Add(nearbyProp);
          }
        }
        catch
        {
          UI.Notify("~r~ Error 10");
        }
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        try
        {
        }
        catch (Exception ex)
        {
          UI.Notify("~r~ Error~w~ Could not find Chair Prop Model!, Model has been added to ini, no need to take action");
          UI.Notify("~g~ HKH191~w~ Chair Prop Models Were not found, please Reload the mod ");
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.ChairPropModelMain = "ex_prop_offchair_exec_01";
          this.ChairPropModelArcadeA = "ex_prop_offchair_exec_01";
          this.ChairPropModelArcadeB = "ex_prop_offchair_exec_01";
          this.ChairPropModelPenthouse = "ex_prop_offchair_exec_01";
          this.Config.SetValue<string>("Chair Model", "ChairPropModelMain", this.ChairPropModelMain);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelArcadeA", this.ChairPropModelArcadeA);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelArcadeB", this.ChairPropModelArcadeB);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelPenthouse", this.ChairPropModelPenthouse);
          this.Config.Save();
          this.Config.SetValue<string>("Chair Model", "POSSIBLECHAIRPROPMODELS", "'ex_prop_offchair_exec_01', 'ex_prop_offchair_exec_02', 'ex_prop_offchair_exec_03', 'ex_prop_offchair_exec_04', 'ba_prop_battle_club_chair_01', 'ba_prop_battle_club_chair_02', 'ba_prop_battle_club_chair_03' ");
          this.Config.Save();
        }
        try
        {
        }
        catch (Exception ex)
        {
          UI.Notify("~r~ Error~w~ Could not find Chair Prop Model!, Model has been added to ini, no need to take action");
          UI.Notify("~g~ HKH191~w~ Chair Prop Models Were not found, please Reload the mod ");
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.ChairPropModelMain = "ex_prop_offchair_exec_01";
          this.ChairPropModelArcadeA = "ex_prop_offchair_exec_01";
          this.ChairPropModelArcadeB = "ex_prop_offchair_exec_01";
          this.ChairPropModelPenthouse = "ex_prop_offchair_exec_01";
          this.Config.SetValue<string>("Chair Model", "ChairPropModelMain", this.ChairPropModelMain);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelArcadeA", this.ChairPropModelArcadeA);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelArcadeB", this.ChairPropModelArcadeB);
          this.Config.SetValue<string>("Chair Model", "ChairPropModelPenthouse", this.ChairPropModelPenthouse);
          this.Config.Save();
          this.Config.SetValue<string>("Chair Model", "POSSIBLECHAIRPROPMODELS", "'ex_prop_offchair_exec_01', 'ex_prop_offchair_exec_02', 'ex_prop_offchair_exec_03', 'ex_prop_offchair_exec_04', 'ba_prop_battle_club_chair_01', 'ba_prop_battle_club_chair_02', 'ba_prop_battle_club_chair_03' ");
          this.Config.Save();
        }
        Prop prop1 = World.CreateProp(this.SpawnProp("vw_prop_casino_roulette_01"), new Vector3(1147.584f, 265.6707f, -52.8f), true, false);
        this.RouletteTableA = prop1;
        prop1.Rotation = new Vector3(0.0f, 0.0f, 133f);
        this.Tables2.Add(prop1);
        Prop prop2 = World.CreateProp(this.SpawnProp("vw_prop_casino_roulette_01b"), new Vector3(1148.889f, 248.0665f, -52f), true, false);
        this.RouletteTableB = prop2;
        prop2.Rotation = new Vector3(0.0f, 0.0f, 43f);
        this.Tables2.Add(prop2);
        Prop prop3 = World.CreateProp(this.SpawnProp("vw_prop_casino_roulette_01b"), new Vector3(1129.883f, 267.433f, -52f), true, false);
        this.RouletteTableC = prop3;
        prop3.Rotation = new Vector3(0.0f, 0.0f, -159f);
        this.Tables2.Add(prop3);
        foreach (Prop table in this.Tables)
        {
          if (table.Model == this.RequestModel("vw_prop_casino_3cardpoker_01") && (double) World.GetDistance(table.Position, new Vector3(1137.077f, 236.861f, -50f)) > 10.0 && (double) World.GetDistance(table.Position, new Vector3(966.2f, 29.98f, 115f)) > 10.0)
            this.PokerDealerTables.Add(new DealerTable(table));
          if (table.Model == this.RequestModel("vw_prop_casino_3cardpoker_01b"))
            this.PokerDealerTables.Add(new DealerTable(table));
          if (table.Model == this.RequestModel("vw_prop_casino_blckjack_01b"))
            this.BlackjackDealerTables.Add(new DealerTable(table));
          if (table.Model == this.RequestModel("vw_prop_casino_blckjack_01") && (double) World.GetDistance(table.Position, new Vector3(968.2f, 33.7565f, 115f)) > 10.0)
            this.BlackjackDealerTables.Add(new DealerTable(table));
        }
        this.RouletteDealerTables.Add(new DealerTable(prop1));
        this.RouletteDealerTables.Add(new DealerTable(prop2));
        this.RouletteDealerTables.Add(new DealerTable(prop3));
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Error 5");
      }
      this.Spawns.Add(new Vector3(1091f, 210f, -48f));
      this.Spawns.Add(new Vector3(1108f, 215f, -48f));
      this.Spawns.Add(new Vector3(1110.983f, 240f, -48f));
      this.Spawns.Add(new Vector3(1122f, 256f, -48f));
      this.Spawns.Add(new Vector3(1146f, 249f, -48f));
      System.Random random1 = new System.Random();
      Vector3 spawn1 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
      if (this.MainWanderPeds)
      {
        Vector3 spawn2;
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Franklin)
        {
          random1 = new System.Random();
          spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Franklin), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Michael)
        {
          random1 = new System.Random();
          spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Michael), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        if (Game.Player.Character.Model != (GTA.Model) PedHash.Trevor)
        {
          random1 = new System.Random();
          spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
          this.ped = World.CreatePed(this.RequestModel(PedHash.Trevor), spawn2.Around(10f));
          this.ped.Task.WanderAround();
          this.Peds.Add(this.ped);
        }
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.AmandaTownley), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.Lazlow), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.LamarDavis), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.DrFriedlander), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.DaveNorton), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.Cletus), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
        spawn2 = this.Spawns[random1.Next(0, this.Spawns.Count - 1)];
        this.ped = World.CreatePed(this.RequestModel(PedHash.TaosTranslator), spawn2.Around(10f));
        this.ped.Task.WanderAround();
        this.Peds.Add(this.ped);
      }
      try
      {
        if ((Entity) this.Prizecar != (Entity) null)
          this.Prizecar.Delete();
        this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
        this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
        this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
        this.Prizecar.IsPersistent = true;
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error 4~");
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null && (Entity) this.Prizecar != (Entity) null && (double) World.GetDistance(ped.Position, this.Prizecar.Position) < 4.0)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
        {
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
          ped.RelationshipGroup = 1;
          ped.AlwaysKeepTask = true;
        }
      }
      if ((Entity) this.VIPBlocker == (Entity) null && this.Casino_level < 2)
      {
        this.VIPBlocker = World.CreateProp((GTA.Model) "prop_ch2_09c_garage_door", new Vector3(1122.447f, 264.3859f, -53f), false, false);
        this.VIPBlocker.FreezePosition = true;
        this.VIPBlocker.HasCollision = true;
        this.VIPBlocker.Rotation = new Vector3(0.0f, 0.0f, -90f);
        this.VIPBlocker.IsVisible = false;
      }
      if (!((Entity) this.VIPBlocker != (Entity) null) || this.Casino_level < 2)
        return;
      this.VIPBlocker.Delete();
    }

    public void Party_GetDateRelative()
    {
      if (!this.BYPASS_NOSAVE_OR_CRASH || this.Now == this.GetDay())
        return;
      this.Now = this.GetDay();
      int num1 = this.GetDay() + this.DAYSTORESET_UPDATETIME;
      int num2 = this.GetMonth();
      int year = this.GetYear();
      if (num1 < 0)
      {
        num1 = -num1;
        if (this.GetMonth() + 1 <= 12)
          num2 = this.GetMonth() + 1;
        if (this.GetMonth() + 1 > 12)
          num2 = 1;
      }
      if (num1 > 30)
        num1 = 30;
      if (this.GetMonth() + 1 > 12)
        num2 = 1;
      if (num1 <= this.Party_NextDay && num2 <= this.Party_NextMonth || (num2 < this.Party_NextMonth || num2 > this.Party_NextMonth) || year != this.Party_NextYear)
      {
        this.Party_NextMonth = this.GetMonth();
        this.Party_NextDay = this.GetDay() + this.DaysWait;
        this.Party_NextYear = this.GetYear();
      }
    }

    public void Party_SetDate()
    {
      if (this.GetDay() + this.DaysWait <= 30)
      {
        this.Party_NextDay = this.GetDay() + 1;
        this.Party_NextMonth = this.GetMonth();
      }
      if (this.GetDay() + this.DaysWait > 30)
      {
        this.Party_NextDay = -(30 - (this.GetDay() + 1));
        if (this.GetMonth() + 1 <= 12)
          this.Party_NextMonth = this.GetDay() + 1;
        if (this.GetMonth() + 1 > 12)
          this.Party_NextMonth = 1;
      }
      this.Party_NextYear = this.GetYear();
    }

    public void GetDateRelative()
    {
      if (!this.BYPASS_NOSAVE_OR_CRASH || this.Now == this.GetDay())
        return;
      this.Now = this.GetDay();
      int num1 = this.GetDay() + this.DAYSTORESET_UPDATETIME;
      int num2 = this.GetMonth();
      int year = this.GetYear();
      if (num1 < 0)
      {
        num1 = -num1;
        if (this.GetMonth() + 1 <= 12)
          num2 = this.GetMonth() + 1;
        if (this.GetMonth() + 1 > 12)
          num2 = 1;
      }
      if (num1 > 30)
        num1 = 30;
      if (this.GetMonth() + 1 > 12)
        num2 = 1;
      if (num1 <= this.NextDay && num2 <= this.NextMonth || (num2 < this.NextMonth || num2 > this.NextMonth) || year != this.NextYear)
      {
        this.NextMonth = this.GetMonth();
        this.NextDay = this.GetDay() + this.DaysWait;
        this.NextYear = this.GetYear();
        this.Config.SetValue<int>("Setup", "NextYear", this.NextYear);
        this.Config.SetValue<int>("Setup", "NextDay", this.NextDay);
        this.Config.SetValue<int>("Setup", "NextMonth", this.NextMonth);
        this.Config.Save();
      }
    }

    public void SetDate()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
      if (this.GetDay() + this.DaysWait <= 30)
      {
        this.NextDay = this.GetDay() + this.DaysWait;
        this.NextMonth = this.GetMonth();
      }
      if (this.GetDay() + this.DaysWait > 30)
      {
        this.NextDay = -(30 - (this.GetDay() + this.DaysWait));
        if (this.GetMonth() + 1 <= 12)
          this.NextMonth = this.GetDay() + 1;
        if (this.GetMonth() + 1 > 12)
          this.NextMonth = 1;
      }
      this.NextYear = this.GetYear();
    }

    public int GetHour() => Function.Call<int>(Hash._0x25223CA6B4D20B7F);

    public int GetMinutes() => Function.Call<int>(Hash._0x13D2B8ADD79640F2);

    public int GetDay() => Function.Call<int>(Hash._0x3D10BC92A4DB1D35);

    public int GetMonth() => Function.Call<int>(Hash._0xBBC72712E80257A1);

    public int GetYear() => Function.Call<int>(Hash._0x961777E64BDAF717);

    public static string LoadDict(string dict)
    {
      while (true)
      {
        if (!Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) dict))
        {
          Function.Call(Hash._0xD3BD40951412FEF6, (InputArgument) dict);
          Script.Yield();
        }
        else
          break;
      }
      return dict;
    }

    public void CasinoScreens()
    {
      switch (this.OStage)
      {
        case 0:
          this._OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "CASINO_HLW_PL");
          Function.Call(Hash._0xDFA2EF8E04127DD5, (InputArgument) "CasinoScreen_01", (InputArgument) false);
          if (!Function.Call<bool>(Hash._0x0145F696AAAAD2E4, (InputArgument) "CasinoScreen_01"))
            break;
          this.OSTex = 1;
          this.OStage = 1;
          break;
        case 1:
          if (Function.Call<bool>(Hash._0x85F01B8D5B90570E, (InputArgument) this._OSMovie))
          {
            Function.Call(Hash._0xC6796A8FFA375E53);
            Function.Call((Hash) 3671366047641330747, (InputArgument) this._OSMovie, (InputArgument) 1);
          }
          else
            this._OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "CASINO_HLW_PL");
          this.OStage = 2;
          break;
        case 2:
          Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this._OSMovie, (InputArgument) "CASINO_HLW_PL");
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this._OSMovie);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 1f, (InputArgument) 0.0f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) "CASINO_HLW_PL");
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) "CASINO_HLW_PL", (InputArgument) 1);
          Function.Call(Hash._0x113D2C5DC57E1774, (InputArgument) 1);
          Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) -100f);
          Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) 0);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this._OSMovie);
          Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5, (InputArgument) 0.5, (InputArgument) 1.0, (InputArgument) 1.0, (InputArgument) 0.0, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          break;
      }
    }

    public bool GetFoldCauseHighBet(float Bet, float Balance)
    {
      bool flag = false;
      System.Random random = new System.Random();
      if ((double) Balance / 100.0 * 5.0 > (double) Bet && (double) Balance / 100.0 * 10.0 < (double) Bet && random.Next(0, 100) < 3)
        flag = true;
      if ((double) Balance / 100.0 * 10.0 > (double) Bet && (double) Balance / 100.0 * 15.0 < (double) Bet && random.Next(0, 100) < 10)
        flag = true;
      if ((double) Balance / 100.0 * 15.0 > (double) Bet && (double) Balance / 100.0 * 20.0 < (double) Bet && random.Next(0, 100) < 15)
        flag = true;
      if ((double) Balance / 100.0 * 20.0 > (double) Bet && (double) Balance / 100.0 * 100.0 < (double) Bet && random.Next(0, 100) < 25)
        flag = true;
      return flag;
    }

    public bool GetFoldCauseLowScore(float Score)
    {
      bool flag = false;
      System.Random random = new System.Random();
      if ((double) Score <= 150.0 && random.Next(0, 100) < 65)
        flag = true;
      if ((double) Score > 150.0 && (double) Score <= 350.0 && random.Next(0, 100) < 45)
        flag = true;
      if ((double) Score > 350.0 && (double) Score <= 600.0 && random.Next(0, 100) < 30)
        flag = true;
      if ((double) Score > 600.0 && (double) Score <= 900.0 && random.Next(0, 100) < 15)
        flag = true;
      if ((double) Score > 900.0 && (double) Score <= 1400.0 && random.Next(0, 100) < 7)
        flag = true;
      if ((double) Score > 1400.0 && (double) Score < 2000.0 && random.Next(0, 100) < 4)
        flag = true;
      if ((double) Score >= 2000.0 && random.Next(0, 100) == 1)
        flag = true;
      return flag;
    }

    public float GetPlayerTotal(string Card1, string Card2, string Card3)
    {
      float num1 = 0.0f;
      float num2 = 0.0f;
      float num3 = 0.0f;
      string str1 = Card1;
      if (str1.Contains("queen") || str1.Contains("q_a"))
        num1 = 13f;
      if (str1.Contains("king") || str1.Contains("k_a"))
        num1 = 12f;
      if (str1.Contains("jack") || str1.Contains("j_a"))
        num1 = 11f;
      if (str1.Contains("ace") || str1.Contains("a_a"))
        num1 = 14f;
      if (str1.Contains("02"))
        num1 = 2f;
      if (str1.Contains("03"))
        num1 = 3f;
      if (str1.Contains("04"))
        num1 = 4f;
      if (str1.Contains("05"))
        num1 = 5f;
      if (str1.Contains("06"))
        num1 = 6f;
      if (str1.Contains("07"))
        num1 = 7f;
      if (str1.Contains("08"))
        num1 = 8f;
      if (str1.Contains("09"))
        num1 = 9f;
      if (str1.Contains("10"))
        num1 = 10f;
      string str2 = Card2;
      if (str2.Contains("queen") || str2.Contains("q_a"))
        num2 = 13f;
      if (str2.Contains("king") || str2.Contains("k_a"))
        num2 = 12f;
      if (str2.Contains("jack") || str2.Contains("j_a"))
        num2 = 11f;
      if (str2.Contains("ace") || str2.Contains("a_a"))
        num2 = 14f;
      if (str2.Contains("02"))
        num2 = 2f;
      if (str2.Contains("03"))
        num2 = 3f;
      if (str2.Contains("04"))
        num2 = 4f;
      if (str2.Contains("05"))
        num2 = 5f;
      if (str2.Contains("06"))
        num2 = 6f;
      if (str2.Contains("07"))
        num2 = 7f;
      if (str2.Contains("08"))
        num2 = 8f;
      if (str2.Contains("09"))
        num2 = 9f;
      if (str2.Contains("10"))
        num2 = 10f;
      string str3 = Card3;
      if (str3.Contains("queen") || str3.Contains("q_a"))
        num3 = 13f;
      if (str3.Contains("king") || str3.Contains("k_a"))
        num3 = 12f;
      if (str3.Contains("jack") || str3.Contains("j_a"))
        num3 = 11f;
      if (str3.Contains("ace") || str3.Contains("a_a"))
        num3 = 14f;
      if (str3.Contains("02"))
        num3 = 2f;
      if (str3.Contains("03"))
        num3 = 3f;
      if (str3.Contains("04"))
        num3 = 4f;
      if (str3.Contains("05"))
        num3 = 5f;
      if (str3.Contains("06"))
        num3 = 6f;
      if (str3.Contains("07"))
        num3 = 7f;
      if (str3.Contains("08"))
        num3 = 8f;
      if (str3.Contains("09"))
        num3 = 9f;
      if (str3.Contains("10"))
        num3 = 10f;
      if ((double) this.CommunityCard1Value == (double) num1)
        num1 *= 2f;
      if ((double) this.CommunityCard1Value == (double) num2)
        num2 *= 2f;
      if ((double) this.CommunityCard1Value == (double) num3)
        num3 *= 2f;
      if ((double) this.CommunityCard2Value == (double) num1)
        num1 *= 2f;
      if ((double) this.CommunityCard2Value == (double) num2)
        num2 *= 2f;
      if ((double) this.CommunityCard2Value == (double) num3)
        num3 *= 2f;
      if ((double) this.CommunityCard3Value == (double) num1)
        num1 *= 2f;
      if ((double) this.CommunityCard3Value == (double) num2)
        num2 *= 2f;
      if ((double) this.CommunityCard3Value == (double) num3)
        num3 *= 2f;
      return num1 * num2 * num3;
    }

    public float GetCardTotal(string Card1)
    {
      float num = 0.0f;
      string str = Card1;
      if (str.Contains("queen") || str.Contains("q_a"))
        num = 13f;
      if (str.Contains("king") || str.Contains("k_a"))
        num = 12f;
      if (str.Contains("jack") || str.Contains("j_a"))
        num = 11f;
      if (str.Contains("ace") || str.Contains("a_a"))
        num = 14f;
      if (str.Contains("02"))
        num = 2f;
      if (str.Contains("03"))
        num = 3f;
      if (str.Contains("04"))
        num = 4f;
      if (str.Contains("05"))
        num = 5f;
      if (str.Contains("06"))
        num = 6f;
      if (str.Contains("07"))
        num = 7f;
      if (str.Contains("08"))
        num = 8f;
      if (str.Contains("09"))
        num = 9f;
      if (str.Contains("10"))
        num = 10f;
      return num;
    }

    public string GetCardName(string Card1)
    {
      string str1 = "";
      string str2 = Card1;
      if (str2.Contains("queen") || str2.Contains("q_a"))
        str1 = "Queen";
      if (str2.Contains("king") || str2.Contains("k_a"))
        str1 = "King";
      if (str2.Contains("jack") || str2.Contains("j_a"))
        str1 = "Jack";
      if (str2.Contains("ace") || str2.Contains("a_a"))
        str1 = "Ace";
      if (str2.Contains("02"))
        str1 = "2";
      if (str2.Contains("03"))
        str1 = "3";
      if (str2.Contains("04"))
        str1 = "4";
      if (str2.Contains("05"))
        str1 = "5";
      if (str2.Contains("06"))
        str1 = "6";
      if (str2.Contains("07"))
        str1 = "7";
      if (str2.Contains("08"))
        str1 = "8";
      if (str2.Contains("09"))
        str1 = "9";
      if (str2.Contains("10"))
        str1 = "10";
      return str1;
    }

    public string GetEnterAnim()
    {
      string str = "sit_enter_left";
      int num = new System.Random().Next(1, 4);
      if (num == 1)
        str = "sit_enter_left";
      if (num == 2)
        str = "sit_enter_left_side";
      if (num == 3)
        str = "sit_enter_right";
      if (num == 4)
        str = "sit_enter_right_side";
      return str;
    }

    public string GetExitAnim()
    {
      string str = "sit_enter_left";
      int num = new System.Random().Next(1, 2);
      if (num == 1)
        str = "sit_exit_left";
      if (num == 2)
        str = "sit_exit_right";
      return str;
    }

    public void PlaySyncAnim(Ped AI, Entity Center, int SyncScene, string dict, string anim)
    {
      SyncScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) AI.Position.X, (InputArgument) AI.Position.Y, (InputArgument) Center.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) AI.Heading, (InputArgument) 2);
      Function.Call(Hash._0xEEA929141F699854, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) Class1.LoadDict(dict), (InputArgument) anim, (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
      Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) anim, (InputArgument) Class1.LoadDict(dict), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
    }

    public void PlaySyncExitAnim(Ped AI, Entity Center, int SyncScene, string dict, string anim)
    {
      SyncScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) AI.Position.X, (InputArgument) AI.Position.Y, (InputArgument) Center.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) (AI.Heading + 40f), (InputArgument) 2);
      Function.Call(Hash._0xEEA929141F699854, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) Class1.LoadDict(dict), (InputArgument) anim, (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
      Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) anim, (InputArgument) Class1.LoadDict(dict), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
    }

    public void PlaySyncAnimReverse(
      Ped AI,
      Entity Center,
      int SyncScene,
      string dict,
      string anim)
    {
      SyncScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) AI.Position.X, (InputArgument) AI.Position.Y, (InputArgument) Center.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) AI.Heading, (InputArgument) 2);
      Function.Call(Hash._0xEEA929141F699854, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) Class1.LoadDict(dict), (InputArgument) anim, (InputArgument) -16f, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1148846080);
      Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) anim, (InputArgument) Class1.LoadDict(dict), (InputArgument) -16f, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1148846080);
    }

    public void PlaySyncAnimRotate180(
      Ped AI,
      Entity Center,
      int SyncScene,
      string dict,
      string anim)
    {
      SyncScene = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) AI.Position.X, (InputArgument) AI.Position.Y, (InputArgument) Center.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) (AI.Heading - 180f), (InputArgument) 2);
      Function.Call(Hash._0xEEA929141F699854, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) Class1.LoadDict(dict), (InputArgument) anim, (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
      Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) AI, (InputArgument) SyncScene, (InputArgument) anim, (InputArgument) Class1.LoadDict(dict), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
    }

    public void SetPropCanFall(Prop F)
    {
      F.HasGravity = true;
      F.FreezePosition = false;
      F.LodDistance = 200;
      F.ApplyForce(Vector3.WorldDown);
    }

    public void ShowPlayerBanks()
    {
      int int32 = Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      if (this.Player_Bust)
        new UIResText("Player ~o~ BUST ~w", new Point(int32 + 600, 30), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.Player_Bust && this.Player_SkipTurn)
        new UIResText("Player ~o~ FOLDED ~w", new Point(int32 + 600, 30), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.Player_Bust && !this.Player_SkipTurn)
        new UIResText("Player ~g~$" + this._8PlayerGamePoker_PlayerBank.ToString("N"), new Point(int32 + 600, 30), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI1_Bust)
        new UIResText("AI1 ~o~ BUST ~w", new Point(int32 + 600, 60), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI1_Bust && this.AI1_SkipTurn)
        new UIResText("AI1 ~o~ FOLDED ~w", new Point(int32 + 600, 60), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI1_Bust && !this.AI1_SkipTurn)
        new UIResText("AI1 ~g~$" + this._8PlayerGamePoker_AI1Bank.ToString("N"), new Point(int32 + 600, 60), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI2_Bust)
        new UIResText("AI2 ~o~ BUST ~w", new Point(int32 + 600, 90), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI2_Bust && this.AI2_SkipTurn)
        new UIResText("AI2 ~o~ FOLDED ~w", new Point(int32 + 600, 90), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI2_Bust && !this.AI2_SkipTurn)
        new UIResText("AI2 ~g~$" + this._8PlayerGamePoker_AI2Bank.ToString("N"), new Point(int32 + 600, 90), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI3_Bust)
        new UIResText("AI3 ~o~ BUST ~w", new Point(int32 + 600, 120), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI3_Bust && this.AI3_SkipTurn)
        new UIResText("AI3 ~o~ FOLDED ~w", new Point(int32 + 600, 120), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI3_Bust && !this.AI3_SkipTurn)
        new UIResText("AI3 ~g~$" + this._8PlayerGamePoker_AI3Bank.ToString("N"), new Point(int32 + 600, 120), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI4_Bust)
        new UIResText("AI4 ~o~ BUST ~w", new Point(int32 + 600, 150), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI4_Bust && this.AI4_SkipTurn)
        new UIResText("AI4 ~o~ FOLDED ~w", new Point(int32 + 600, 150), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI4_Bust && !this.AI4_SkipTurn)
        new UIResText("AI4 ~g~$" + this._8PlayerGamePoker_AI4Bank.ToString("N"), new Point(int32 + 600, 150), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI5_Bust)
        new UIResText("AI5 ~o~ BUST ~w", new Point(int32 + 600, 180), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI5_Bust && this.AI5_SkipTurn)
        new UIResText("AI5 ~o~ FOLDED ~w", new Point(int32 + 600, 180), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI5_Bust && !this.AI5_SkipTurn)
        new UIResText("AI5 ~g~$" + this._8PlayerGamePoker_AI5Bank.ToString("N"), new Point(int32 + 600, 180), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI6_Bust)
        new UIResText("AI6 ~o~ BUST ~w", new Point(int32 + 600, 210), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI6_Bust && this.AI6_SkipTurn)
        new UIResText("AI6 ~o~ FOLDED ~w", new Point(int32 + 600, 210), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI6_Bust && !this.AI6_SkipTurn)
        new UIResText("AI6 ~g~$" + this._8PlayerGamePoker_AI6Bank.ToString("N"), new Point(int32 + 600, 210), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (this.AI7_Bust)
        new UIResText("AI7 ~o~ BUST ~w", new Point(int32 + 600, 240), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI7_Bust && this.AI7_SkipTurn)
        new UIResText("AI7 ~o~ FOLDED ~w", new Point(int32 + 600, 240), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      if (!this.AI7_Bust && !this.AI7_SkipTurn)
        new UIResText("AI7 ~g~$" + this._8PlayerGamePoker_AI7Bank.ToString("N"), new Point(int32 + 600, 240), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.Render2D();
    }

    public string RaiseBet(float amt)
    {
      string str = "";
      if ((double) amt == 1.0)
        str = "vw_prop_chip_1kdollar_x1";
      if ((double) amt == 5.0)
        str = "vw_prop_chip_5kdollar_x1";
      if ((double) amt == 10.0)
        str = "vw_prop_chip_10dollar_x1";
      if ((double) amt == 50.0)
        str = "vw_prop_chip_50dollar_x1";
      if ((double) amt == 100.0)
        str = "vw_prop_chip_100dollar_x1";
      if ((double) amt == 500.0)
        str = "vw_prop_chip_500dollar_x1";
      if ((double) amt == 1000.0)
        str = "vw_prop_plaq_1kdollar_x1";
      if ((double) amt == 5000.0)
        str = "vw_prop_plaq_5kdollar_x1";
      if ((double) amt == 10000.0)
        str = "vw_prop_plaq_10kdollar_x1";
      if ((double) amt == 50000.0)
        str = "vw_prop_plaq_5kdollar_st";
      if ((double) amt == 100000.0)
        str = "vw_prop_plaq_10kdollar_st";
      return str;
    }

    public void RunBet(float P)
    {
      System.Random random = new System.Random();
      float num1 = (float) random.Next(0, 10) / 100f;
      float num2 = (float) random.Next(0, 10) / 100f;
      float num3 = P;
      try
      {
        for (int index = 0; index < 500; ++index)
        {
          List<Vector3> vector3List = new List<Vector3>();
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, -0.15f, this.StackChipHeight)));
          ++this.StackChip;
          if (this.StackChip >= 19)
          {
            this.StackChipHeight += 0.005f;
            vector3List[this.StackChip] = new Vector3(vector3List[this.StackChip].X, vector3List[this.StackChip].Y, vector3List[this.StackChip].Z + this.StackChipHeight);
            this.StackChip = 0;
          }
          Script.Wait(250);
          if (this._8PlayerGamePokerPotChips.Count > 0)
          {
            foreach (Prop gamePokerPotChip in this._8PlayerGamePokerPotChips)
            {
              if ((Entity) gamePokerPotChip != (Entity) null)
              {
                if ((Entity) this.LastChip != (Entity) null)
                {
                  this.LastChip.SetNoCollision((Entity) gamePokerPotChip, true);
                  this.LastChip.SetNoCollision((Entity) this.Deck, true);
                }
                gamePokerPotChip.SetNoCollision((Entity) this.Deck, true);
                this.Deck.SetNoCollision((Entity) gamePokerPotChip, true);
              }
            }
          }
          if ((double) num3 - 10000.0 >= 0.0)
          {
            num3 -= 10000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(10000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 5000.0 >= 0.0)
          {
            num3 -= 5000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(5000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 1000.0 >= 0.0)
          {
            num3 -= 1000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(1000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 500.0 >= 0.0)
          {
            num3 -= 500f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(500f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 100.0 >= 0.0)
          {
            num3 -= 100f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(100f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 50.0 >= 0.0)
          {
            num3 -= 50f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(50f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 10.0 >= 0.0)
          {
            num3 -= 10f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(10f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 5.0 >= 0.0)
          {
            num3 -= 5f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(5f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 1.0 >= 0.0)
          {
            --num3;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(1f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 <= 1.0)
            break;
        }
      }
      catch
      {
        UI.Notify("Count > 0");
      }
      if (this._8PlayerGamePokerPotChips.Count <= 155)
        return;
      UI.Notify("Refreshing Chips!");
      foreach (Prop gamePokerPotChip in this._8PlayerGamePokerPotChips)
      {
        if ((Entity) gamePokerPotChip != (Entity) null)
        {
          gamePokerPotChip.MarkAsNoLongerNeeded();
          gamePokerPotChip.Delete();
        }
      }
      this.StackChipHeight = 0.6f;
      this.StackChip = 0;
      this._8PlayerGamePokerPotChips.Clear();
      this.ReRunBet(this._8PlayerGamePokerPot);
    }

    public void ReRunBet(float P)
    {
      System.Random random = new System.Random();
      float num1 = (float) random.Next(0, 10) / 100f;
      float num2 = (float) random.Next(0, 10) / 100f;
      float num3 = P;
      try
      {
        for (int index = 0; index < 500; ++index)
        {
          List<Vector3> vector3List = new List<Vector3>();
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, 0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, 0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, -0.05f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.3f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.2f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(0.1f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.0f, -0.15f, this.StackChipHeight)));
          vector3List.Add(this._8PlayerPokerGameTable3.GetOffsetInWorldCoords(new Vector3(-0.1f, -0.15f, this.StackChipHeight)));
          ++this.StackChip;
          if (this.StackChip >= 19)
          {
            this.StackChipHeight += 0.005f;
            vector3List[this.StackChip] = new Vector3(vector3List[this.StackChip].X, vector3List[this.StackChip].Y, vector3List[this.StackChip].Z + this.StackChipHeight);
            this.StackChip = 0;
          }
          Script.Wait(250);
          if (this._8PlayerGamePokerPotChips.Count > 0)
          {
            foreach (Prop gamePokerPotChip in this._8PlayerGamePokerPotChips)
            {
              if ((Entity) gamePokerPotChip != (Entity) null)
              {
                if ((Entity) this.LastChip != (Entity) null)
                {
                  this.LastChip.SetNoCollision((Entity) gamePokerPotChip, true);
                  this.LastChip.SetNoCollision((Entity) this.Deck, true);
                }
                gamePokerPotChip.SetNoCollision((Entity) this.Deck, true);
                this.Deck.SetNoCollision((Entity) gamePokerPotChip, true);
              }
            }
          }
          if ((double) num3 - 10000.0 >= 0.0)
          {
            num3 -= 10000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(10000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 5000.0 >= 0.0)
          {
            num3 -= 5000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(5000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 1000.0 >= 0.0)
          {
            num3 -= 1000f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(1000f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 500.0 >= 0.0)
          {
            num3 -= 500f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(500f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 100.0 >= 0.0)
          {
            num3 -= 100f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(100f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 50.0 >= 0.0)
          {
            num3 -= 50f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(50f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 10.0 >= 0.0)
          {
            num3 -= 10f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(10f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 5.0 >= 0.0)
          {
            num3 -= 5f;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(5f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 - 1.0 >= 0.0)
          {
            --num3;
            Prop prop = World.CreateProp(this.RequestModel(this.RaiseBet(1f)), vector3List[this.StackChip], true, false);
            this.SetPropCanFall(prop);
            this._8PlayerGamePokerPotChips.Add(prop);
            prop.FreezePosition = false;
            prop.Heading = this._8PlayerPokerGameTable3.Heading;
          }
          else if ((double) num3 <= 1.0)
            break;
        }
      }
      catch
      {
        UI.Notify("Count > 0");
      }
    }

    public void ShowPlayerTotals()
    {
      int int32 = Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      new UIResText("Player Total ~g~" + this.PlayerTotal.ToString(), new Point(int32 + 600, 280), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI1 Total ~g~" + this.AI1Total.ToString(), new Point(int32 + 600, 310), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI2 Total ~g~" + this.AI2Total.ToString(), new Point(int32 + 600, 340), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI3 Total ~g~" + this.AI3Total.ToString(), new Point(int32 + 600, 370), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI4 Total ~g~" + this.AI4Total.ToString(), new Point(int32 + 600, 400), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI5 Total ~g~" + this.AI5Total.ToString(), new Point(int32 + 600, 430), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI6 Total ~g~" + this.AI6Total.ToString(), new Point(int32 + 600, 460), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("AI7 Total ~g~" + this.AI7Total.ToString(), new Point(int32 + 600, 490), 0.65f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.Render2D();
    }

    public void CheckPokerWin()
    {
      List<float> floatList = new List<float>();
      if (!this.AI1_Bust && !this.AI1_SkipTurn)
        floatList.Add(this.AI1Total);
      if (!this.AI2_Bust && !this.AI2_SkipTurn)
        floatList.Add(this.AI2Total);
      if (!this.AI3_Bust && !this.AI3_SkipTurn)
        floatList.Add(this.AI3Total);
      if (!this.AI4_Bust && !this.AI4_SkipTurn)
        floatList.Add(this.AI4Total);
      if (!this.AI5_Bust && !this.AI5_SkipTurn)
        floatList.Add(this.AI5Total);
      if (!this.AI6_Bust && !this.AI6_SkipTurn)
        floatList.Add(this.AI6Total);
      if (!this.AI7_Bust && !this.AI7_SkipTurn)
        floatList.Add(this.AI7Total);
      if (!this.Player_Bust && !this.Player_SkipTurn)
        floatList.Add(this.PlayerTotal);
      float num1 = 0.0f;
      foreach (float num2 in floatList)
      {
        if ((double) num2 >= (double) num1)
          num1 = num2;
      }
      if ((double) num1 == (double) this.AI1Total)
      {
        this._8PlayerGamePoker_AI1Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 1, Won with : Cards, " + this.GetCardName(this.PlayerCards[0].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[0].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[0].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI2Total)
      {
        this._8PlayerGamePoker_AI2Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 2, Won with : Cards, " + this.GetCardName(this.PlayerCards[1].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[1].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[1].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI3Total)
      {
        this._8PlayerGamePoker_AI3Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 3, Won with : Cards, " + this.GetCardName(this.PlayerCards[2].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[2].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[2].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI4Total)
      {
        this._8PlayerGamePoker_AI4Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 4, Won with : Cards, " + this.GetCardName(this.PlayerCards[3].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[3].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[3].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI5Total)
      {
        this._8PlayerGamePoker_AI5Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 5, Won with : Cards, " + this.GetCardName(this.PlayerCards[4].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[4].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[4].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI6Total)
      {
        this._8PlayerGamePoker_AI6Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 6, Won with : Cards, " + this.GetCardName(this.PlayerCards[5].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[5].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[5].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.AI7Total)
      {
        this._8PlayerGamePoker_AI7Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 7, Won with : Cards, " + this.GetCardName(this.PlayerCards[6].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[6].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[6].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num1 == (double) this.PlayerTotal)
      {
        this._8PlayerGamePoker_PlayerBank += this._8PlayerGamePokerPot;
        UI.Notify("Player, Won with : Cards, " + this.GetCardName(this.PlayerCards[7].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[7].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[7].Card3ID));
        this._8PlayerGameStage = 1;
      }
      UI.Notify("Commuity Cards Were, " + this.CommunityCard1ID + "~y~,~w~" + this.CommunityCard2ID + "~y~,~w~" + this.CommunityCard3ID);
    }

    public void CheckPokerBuyOut()
    {
      List<float> floatList = new List<float>();
      if (!this.AI1_Bust && !this.AI1_SkipTurn)
        floatList.Add(this.AI1Total);
      if (!this.AI2_Bust && !this.AI2_SkipTurn)
        floatList.Add(this.AI2Total);
      if (!this.AI3_Bust && !this.AI3_SkipTurn)
        floatList.Add(this.AI3Total);
      if (!this.AI4_Bust && !this.AI4_SkipTurn)
        floatList.Add(this.AI4Total);
      if (!this.AI5_Bust && !this.AI5_SkipTurn)
        floatList.Add(this.AI5Total);
      if (!this.AI6_Bust && !this.AI6_SkipTurn)
        floatList.Add(this.AI6Total);
      if (!this.AI7_Bust && !this.AI7_SkipTurn)
        floatList.Add(this.AI7Total);
      if (!this.Player_Bust && !this.Player_SkipTurn)
        floatList.Add(this.PlayerTotal);
      float num = floatList[0];
      if (floatList.Count != 1)
        return;
      if ((double) num == (double) this.AI1Total)
      {
        this._8PlayerGamePoker_AI1Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 1, Won with : Cards, " + this.GetCardName(this.PlayerCards[0].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[0].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[0].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI2Total)
      {
        this._8PlayerGamePoker_AI2Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 2, Won with : Cards, " + this.GetCardName(this.PlayerCards[1].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[1].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[1].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI3Total)
      {
        this._8PlayerGamePoker_AI3Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 3, Won with : Cards, " + this.GetCardName(this.PlayerCards[2].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[2].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[2].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI4Total)
      {
        this._8PlayerGamePoker_AI4Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 4, Won with : Cards, " + this.GetCardName(this.PlayerCards[3].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[3].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[3].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI5Total)
      {
        this._8PlayerGamePoker_AI5Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 5, Won with : Cards, " + this.GetCardName(this.PlayerCards[4].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[4].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[4].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI6Total)
      {
        this._8PlayerGamePoker_AI6Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 6, Won with : Cards, " + this.GetCardName(this.PlayerCards[5].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[5].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[5].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.AI7Total)
      {
        this._8PlayerGamePoker_AI7Bank += this._8PlayerGamePokerPot;
        UI.Notify("AI 7, Won with : Cards, " + this.GetCardName(this.PlayerCards[6].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[6].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[6].Card3ID));
        this._8PlayerGameStage = 1;
      }
      if ((double) num == (double) this.PlayerTotal)
      {
        this._8PlayerGamePoker_PlayerBank += this._8PlayerGamePokerPot;
        UI.Notify("Player, Won with : Cards, " + this.GetCardName(this.PlayerCards[7].Card1ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[7].Card2ID) + "~y~,~w~" + this.GetCardName(this.PlayerCards[7].Card3ID));
        this._8PlayerGameStage = 1;
      }
      UI.Notify("Commuity Cards Were, " + this.CommunityCard1ID + "~y~,~w~" + this.CommunityCard2ID + "~y~,~w~" + this.CommunityCard3ID);
    }

    private void SlotsMain()
    {
      switch (this.NCStageS)
      {
        case 0:
          this.DeleteNComputerscreensMain();
          this.NCStageS = 1;
          break;
        case 1:
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "casinoscreen_01"))
          {
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "casinoscreen_01", (InputArgument) 0);
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) 1800987616);
            this.ONscreens = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "casinoscreen_01");
          }
          Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.MainScreensAnimTex, (InputArgument) 1);
          Function.Call(Hash._0x113D2C5DC57E1774, (InputArgument) 1);
          Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) -5f);
          Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) 0);
          this.NCStageS = 2;
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.ONscreens);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          if (this.MainScreensAnimTex.Equals("PL_WEB_CAS"))
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.75f, (InputArgument) 0.4f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 90f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          else
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 1f, (InputArgument) 0.0f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void CreateNComputerScreensPenthouse()
    {
      switch (this.NCStageS2)
      {
        case 0:
          this.DeleteNComputerscreensPenthouse();
          this.NCStageS2 = 1;
          break;
        case 1:
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "casinoscreen_01"))
          {
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "casinoscreen_01", (InputArgument) 0);
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) 1941629420);
            this.ONscreens2 = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "casinoscreen_01");
          }
          Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.PenthouseScreensAnimTex, (InputArgument) 1);
          Function.Call(Hash._0x113D2C5DC57E1774, (InputArgument) 1);
          Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) 100f);
          Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) 0);
          this.NCStageS2 = 2;
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.ONscreens2);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) -5);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          if (this.PenthouseScreensAnimTex.Equals("PL_WEB_CAS"))
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.75f, (InputArgument) 0.0f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 90f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          else
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 1f, (InputArgument) 0.0f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void CreateNComputerScreensMain()
    {
      switch (this.NCStageS)
      {
        case 0:
          this.DeleteNComputerscreensMain();
          this.NCStageS = 1;
          break;
        case 1:
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "casinoscreen_01"))
          {
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "casinoscreen_01", (InputArgument) 0);
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) 1800987616);
            this.ONscreens = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "casinoscreen_01");
          }
          Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.MainScreensAnimTex, (InputArgument) 1);
          Function.Call(Hash._0x113D2C5DC57E1774, (InputArgument) 1);
          Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) -5f);
          Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) 0);
          this.NCStageS = 2;
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.ONscreens);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          if (this.MainScreensAnimTex.Equals("PL_WEB_CAS"))
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.75f, (InputArgument) 0.4f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 90f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          else
            Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 1f, (InputArgument) 0.0f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void DeleteNComputerscreensMain()
    {
      if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "CasinoScreen_01"))
        return;
      Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "CasinoScreen_01");
    }

    private void DeleteNComputerscreens1Main()
    {
      if (!this.CleanUpS)
        return;
      Ped character = Game.Player.Character;
      Vector3 position = Game.Player.Character.Position;
      if (Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) position.X, (InputArgument) position.Y, (InputArgument) position.Z) == 0)
      {
        if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "CasinoScreen_01"))
          Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "CasinoScreen_01");
        this.CleanUpS = false;
      }
    }

    private void DeleteNComputerscreensPenthouse()
    {
      if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "casinoscreen_02"))
        return;
      Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "casinoscreen_02");
    }

    private void DeleteNComputerscreens1Penthouse()
    {
      if (!this.CleanUpS2)
        return;
      Ped character = Game.Player.Character;
      Vector3 position = Game.Player.Character.Position;
      if (Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) position.X, (InputArgument) position.Y, (InputArgument) position.Z) == 0)
      {
        if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "casinoscreen_02"))
          Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "casinoscreen_02");
        this.CleanUpS2 = false;
      }
    }

    public void SetStage(Prop Slot, int type)
    {
      Vector3 rotation = Slot.Rotation;
      if (type != 1)
        return;
      if (this.StageA == 0)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 1;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(22.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 1)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 2;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(45f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 2)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 3;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(67.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 3)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 4;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(90f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 4)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 5;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(112.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 5)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 6;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(135f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 6)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 7;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(157.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 7)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 8;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(180f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 8)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 9;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(202.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 9)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 10;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(225f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 10)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 11;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(247.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 11)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 12;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(270f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 12)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 13;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(292.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 13)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 14;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(315f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 14)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 15;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(337.5f, 0.0f, 0.0f);
        }
      }
      if (this.StageA == 15)
      {
        if (this.RotateTimerA != 12)
          ++this.RotateTimerA;
        if (this.RotateTimerA == 12)
        {
          this.StageA = 0;
          this.RotateTimerA = 0;
          Slot.Rotation = new Vector3(0.0f, 0.0f, 0.0f);
        }
      }
    }

    public string ConvertSlotHashNametoActualName(string Slot)
    {
      string str = "";
      if (Slot.Equals("vw_prop_casino_slot_01a"))
        str = "Angel and the Knights";
      if (Slot.Equals("vw_prop_casino_slot_02a"))
        str = "Impotent Rage";
      if (Slot.Equals("vw_prop_casino_slot_03a"))
        str = "Republican Space Ranger";
      if (Slot.Equals("vw_prop_casino_slot_04a"))
        str = "No Talent Required";
      if (Slot.Equals("vw_prop_casino_slot_05a"))
        str = "Deity of the Sun";
      if (Slot.Equals("vw_prop_casino_slot_06a"))
        str = "Twilight Knife";
      if (Slot.Equals("vw_prop_casino_slot_07a"))
        str = "Diamond Miner";
      if (Slot.Equals("vw_prop_casino_slot_08a"))
        str = "Evacuator";
      return str;
    }

    public float Rotate(float Z)
    {
      float num = 0.0f;
      if ((double) Z <= 0.0 && (double) Z < -90.0)
        --Z;
      return num;
    }

    public string ReturnToken(string TokenReturn, float HitNum, float ActualNum)
    {
      string str = "";
      if ((double) ActualNum >= (double) HitNum - 5.0 && (double) ActualNum <= (double) HitNum + 5.0)
        str = TokenReturn;
      return str;
    }

    public float CalcualteSlotWin(string Machine)
    {
      float num = 0.0f;
      if (Machine.Equals("vw_prop_casino_slot_01a"))
      {
        if (this.ALandedOn.Equals("Star") || this.BLandedOn.Equals("Star") || this.CLandedOn.Equals("Star"))
          num = 200f;
        if (this.ALandedOn.Equals("Star") && this.BLandedOn.Equals("Star"))
          num = 500f;
        if (this.BLandedOn.Equals("Star") && this.CLandedOn.Equals("Star"))
          num = 500f;
        if (this.CLandedOn.Equals("Star") && this.ALandedOn.Equals("Star"))
          num = 500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 1250f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 1250f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 1250f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 14750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 14750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 14750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.ALandedOn.Equals("OvenMat") && this.BLandedOn.Equals("OvenMat"))
          num = 100000f;
        if (this.BLandedOn.Equals("OvenMat") && this.CLandedOn.Equals("OvenMat"))
          num = 100000f;
        if (this.CLandedOn.Equals("OvenMat") && this.ALandedOn.Equals("OvenMat"))
          num = 100000f;
        if (this.ALandedOn.Equals("Star") && this.BLandedOn.Equals("Star") && this.CLandedOn.Equals("Star"))
          num = 50000f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 2500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 10000f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 5000f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 25000f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 7500f;
        if (this.ALandedOn.Equals("Diamonds") && this.BLandedOn.Equals("Diamonds") && this.CLandedOn.Equals("Diamonds"))
          num = 100000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_02a"))
      {
        if (this.ALandedOn.Equals("Bolt") || this.BLandedOn.Equals("Bolt") || this.CLandedOn.Equals("Bolt"))
          num = 50f;
        if (this.ALandedOn.Equals("Bolt") && this.BLandedOn.Equals("Bolt"))
          num = 125f;
        if (this.BLandedOn.Equals("Bolt") && this.CLandedOn.Equals("Bolt"))
          num = 125f;
        if (this.CLandedOn.Equals("Bolt") && this.ALandedOn.Equals("Bolt"))
          num = 125f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 750f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 750f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 750f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 450f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 450f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 450f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 3750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 3750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 3750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 250f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 250f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 250f;
        if (this.ALandedOn.Equals("Ranger") && this.BLandedOn.Equals("Ranger"))
          num = 14000f;
        if (this.BLandedOn.Equals("Ranger") && this.CLandedOn.Equals("Ranger"))
          num = 14000f;
        if (this.CLandedOn.Equals("Ranger") && this.ALandedOn.Equals("Ranger"))
          num = 14000f;
        if (this.ALandedOn.Equals("Bolt") && this.BLandedOn.Equals("Bolt") && this.CLandedOn.Equals("Bolt"))
          num = 12500f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 625f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 2500f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 1250f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 6250f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 1875f;
        if (this.ALandedOn.Equals("Ranger") && this.BLandedOn.Equals("Ranger") && this.CLandedOn.Equals("Ranger"))
          num = 25000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_03a"))
      {
        if (this.ALandedOn.Equals("Beer") || this.BLandedOn.Equals("Beer") || this.CLandedOn.Equals("Beer"))
          num = 50f;
        if (this.ALandedOn.Equals("Beer") && this.BLandedOn.Equals("Beer"))
          num = 125f;
        if (this.BLandedOn.Equals("Beer") && this.CLandedOn.Equals("Beer"))
          num = 125f;
        if (this.CLandedOn.Equals("Beer") && this.ALandedOn.Equals("Beer"))
          num = 125f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 750f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 750f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 750f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 450f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 450f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 450f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 3750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 3750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 3750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 950f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 250f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 250f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 250f;
        if (this.ALandedOn.Equals("Logo") && this.BLandedOn.Equals("Logo"))
          num = 14000f;
        if (this.BLandedOn.Equals("Logo") && this.CLandedOn.Equals("Logo"))
          num = 14000f;
        if (this.CLandedOn.Equals("Logo") && this.ALandedOn.Equals("Logo"))
          num = 14000f;
        if (this.ALandedOn.Equals("Beer") && this.BLandedOn.Equals("Beer") && this.CLandedOn.Equals("Beer"))
          num = 12500f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 625f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 2500f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 1250f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 6250f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 1875f;
        if (this.ALandedOn.Equals("Logo") && this.BLandedOn.Equals("Logo") && this.CLandedOn.Equals("Logo"))
          num = 25000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_04a"))
      {
        if (this.ALandedOn.Equals("Mic") || this.BLandedOn.Equals("Mic") || this.CLandedOn.Equals("Mic"))
          num = 10f;
        if (this.ALandedOn.Equals("Mic") && this.BLandedOn.Equals("Mic"))
          num = 25f;
        if (this.BLandedOn.Equals("Mic") && this.CLandedOn.Equals("Mic"))
          num = 25f;
        if (this.CLandedOn.Equals("Mic") && this.ALandedOn.Equals("Mic"))
          num = 25f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 350f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 350f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 350f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 175f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 175f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 175f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 650f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 650f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 650f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 75f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 75f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 75f;
        if (this.ALandedOn.Equals("Logo") && this.BLandedOn.Equals("Logo"))
          num = 3500f;
        if (this.BLandedOn.Equals("Logo") && this.CLandedOn.Equals("Logo"))
          num = 3500f;
        if (this.CLandedOn.Equals("Logo") && this.ALandedOn.Equals("Logo"))
          num = 3500f;
        if (this.ALandedOn.Equals("Mic") && this.BLandedOn.Equals("Mic") && this.CLandedOn.Equals("Mic"))
          num = 2500f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 125f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 500f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 250f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 1250f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 375f;
        if (this.ALandedOn.Equals("Logo") && this.BLandedOn.Equals("Logo") && this.CLandedOn.Equals("Logo"))
          num = 5000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_05a"))
      {
        if (this.ALandedOn.Equals("Ankh") || this.BLandedOn.Equals("Ankh") || this.CLandedOn.Equals("Ankh"))
          num = 1000f;
        if (this.ALandedOn.Equals("Ankh") && this.BLandedOn.Equals("Ankh"))
          num = 2500f;
        if (this.BLandedOn.Equals("Ankh") && this.CLandedOn.Equals("Ankh"))
          num = 2500f;
        if (this.CLandedOn.Equals("Ankh") && this.ALandedOn.Equals("Ankh"))
          num = 2500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 3750f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 3750f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 3750f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 11750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 11750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 11750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.ALandedOn.Equals("Bug") && this.BLandedOn.Equals("Bug"))
          num = 125000f;
        if (this.BLandedOn.Equals("Bug") && this.CLandedOn.Equals("Bug"))
          num = 125000f;
        if (this.CLandedOn.Equals("Bug") && this.ALandedOn.Equals("Bug"))
          num = 125000f;
        if (this.ALandedOn.Equals("Ankh") && this.BLandedOn.Equals("Ankh") && this.CLandedOn.Equals("Ankh"))
          num = 250000f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 12500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 50000f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 25000f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 125000f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 37500f;
        if (this.ALandedOn.Equals("Bug") && this.BLandedOn.Equals("Bug") && this.CLandedOn.Equals("Bug"))
          num = 500000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_06a"))
      {
        if (this.ALandedOn.Equals("Knife") || this.BLandedOn.Equals("Knife") || this.CLandedOn.Equals("Knife"))
          num = 200f;
        if (this.ALandedOn.Equals("Knife") && this.BLandedOn.Equals("Knife"))
          num = 500f;
        if (this.BLandedOn.Equals("Knife") && this.CLandedOn.Equals("Knife"))
          num = 500f;
        if (this.CLandedOn.Equals("Knife") && this.ALandedOn.Equals("Knife"))
          num = 500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 1250f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 1250f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 1250f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 3350f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 14750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 14750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 14750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 750f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 1550f;
        if (this.ALandedOn.Equals("ChainSaw") && this.BLandedOn.Equals("ChainSaw"))
          num = 100000f;
        if (this.BLandedOn.Equals("ChainSaw") && this.CLandedOn.Equals("ChainSaw"))
          num = 100000f;
        if (this.CLandedOn.Equals("ChainSaw") && this.ALandedOn.Equals("ChainSaw"))
          num = 100000f;
        if (this.ALandedOn.Equals("Knife") && this.BLandedOn.Equals("Knife") && this.CLandedOn.Equals("Knife"))
          num = 50000f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 2500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 10000f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 5000f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 25000f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 7500f;
        if (this.ALandedOn.Equals("ChainSaw") && this.BLandedOn.Equals("ChainSaw") && this.CLandedOn.Equals("ChainSaw"))
          num = 100000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_07a"))
      {
        if (this.ALandedOn.Equals("Diamond") || this.BLandedOn.Equals("Diamond") || this.CLandedOn.Equals("Diamond"))
          num = 1000f;
        if (this.ALandedOn.Equals("Diamond") && this.BLandedOn.Equals("Diamond"))
          num = 2500f;
        if (this.BLandedOn.Equals("Diamond") && this.CLandedOn.Equals("Diamond"))
          num = 2500f;
        if (this.CLandedOn.Equals("Diamond") && this.ALandedOn.Equals("Diamond"))
          num = 2500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 3750f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 3750f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 3750f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 7750f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 11750f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 11750f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 11750f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 22150f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.CLandedOn.Equals("Cherry") && this.ALandedOn.Equals("Cherry"))
          num = 14550f;
        if (this.ALandedOn.Equals("Diamonds") && this.BLandedOn.Equals("Diamonds"))
          num = 125000f;
        if (this.BLandedOn.Equals("Diamonds") && this.CLandedOn.Equals("Diamonds"))
          num = 125000f;
        if (this.CLandedOn.Equals("Diamonds") && this.ALandedOn.Equals("Diamonds"))
          num = 125000f;
        if (this.ALandedOn.Equals("Diamond") && this.BLandedOn.Equals("Diamond") && this.CLandedOn.Equals("Diamond"))
          num = 250000f;
        if (this.ALandedOn.Equals("Cherry") && this.BLandedOn.Equals("Cherry") && this.CLandedOn.Equals("Cherry"))
          num = 12500f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 50000f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 25000f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 125000f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 37500f;
        if (this.ALandedOn.Equals("Diamonds") && this.BLandedOn.Equals("Diamonds") && this.CLandedOn.Equals("Diamonds"))
          num = 500000f;
      }
      if (Machine.Equals("vw_prop_casino_slot_08a"))
      {
        if (this.ALandedOn.Equals("Sensi") || this.BLandedOn.Equals("Sensi") || this.CLandedOn.Equals("Sensi"))
          num = 10f;
        if (this.ALandedOn.Equals("Sensi") && this.BLandedOn.Equals("Sensi"))
          num = 25f;
        if (this.BLandedOn.Equals("Sensi") && this.CLandedOn.Equals("Sensi"))
          num = 25f;
        if (this.CLandedOn.Equals("Sensi") && this.ALandedOn.Equals("Sensi"))
          num = 25f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell"))
          num = 350f;
        if (this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 350f;
        if (this.CLandedOn.Equals("Bell") && this.ALandedOn.Equals("Bell"))
          num = 350f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit"))
          num = 175f;
        if (this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 175f;
        if (this.CLandedOn.Equals("Fruit") && this.ALandedOn.Equals("Fruit"))
          num = 175f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven"))
          num = 650f;
        if (this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 650f;
        if (this.CLandedOn.Equals("Seven") && this.ALandedOn.Equals("Seven"))
          num = 650f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.CLandedOn.Equals("WaterMelon") && this.ALandedOn.Equals("WaterMelon"))
          num = 225f;
        if (this.ALandedOn.Equals("Grenade") && this.BLandedOn.Equals("Grenade"))
          num = 75f;
        if (this.BLandedOn.Equals("Grenade") && this.CLandedOn.Equals("Grenade"))
          num = 75f;
        if (this.CLandedOn.Equals("Grenade") && this.ALandedOn.Equals("Grenade"))
          num = 75f;
        if (this.ALandedOn.Equals("Mortar") && this.BLandedOn.Equals("Mortar"))
          num = 3500f;
        if (this.BLandedOn.Equals("Mortar") && this.CLandedOn.Equals("Mortar"))
          num = 3500f;
        if (this.CLandedOn.Equals("Mortar") && this.ALandedOn.Equals("Mortar"))
          num = 3500f;
        if (this.ALandedOn.Equals("Sensi") && this.BLandedOn.Equals("Sensi") && this.CLandedOn.Equals("Sensi"))
          num = 2500f;
        if (this.ALandedOn.Equals("Grenade") && this.BLandedOn.Equals("Grenade") && this.CLandedOn.Equals("Grenade"))
          num = 125f;
        if (this.ALandedOn.Equals("Bell") && this.BLandedOn.Equals("Bell") && this.CLandedOn.Equals("Bell"))
          num = 500f;
        if (this.ALandedOn.Equals("Fruit") && this.BLandedOn.Equals("Fruit") && this.CLandedOn.Equals("Fruit"))
          num = 250f;
        if (this.ALandedOn.Equals("Seven") && this.BLandedOn.Equals("Seven") && this.CLandedOn.Equals("Seven"))
          num = 1250f;
        if (this.ALandedOn.Equals("WaterMelon") && this.BLandedOn.Equals("WaterMelon") && this.CLandedOn.Equals("WaterMelon"))
          num = 375f;
        if (this.ALandedOn.Equals("Mortar") && this.BLandedOn.Equals("Mortar") && this.CLandedOn.Equals("Mortar"))
          num = 5000f;
      }
      return num * this.SlotMultiplier;
    }

    public string GetLandedOn(float reelR, string Machine)
    {
      string str = "";
      if (Machine.Equals("vw_prop_casino_slot_01a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 115f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Star", 150f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -134f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Star", -110f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -89f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -66f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -44f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -22f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Star", 4f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("OvenMat", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 46f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 71f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 91f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_02a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 114f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 137f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bolt", 165f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -153f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -134f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bolt", -109f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -87f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -44f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bolt", 4f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Ranger", 24f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 45f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 70f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_03a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 114f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 136f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Beer", 158f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -134f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Beer", -112f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -89f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -44f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WateMelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Beer", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Logo", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 45f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 70f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_04a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 114f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Mic", 159f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Mic", -110f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -88f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -44f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Mic", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Logo", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 45f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 70f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_05a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 115f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Ankh", 160f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -134f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Ankh", -111f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -89f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -42f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Ankh", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bug", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 46f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 70f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_06a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 115f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Knife", 160f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Knife", -110f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -88f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -43f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Knife", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("ChainSaw", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 47f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 71f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_07a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Diamond", -110f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -89f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -64f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -55f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", -19f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Diamond", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Diamonds", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", 45f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 68f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 114f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 136f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Diamond", 160f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -178f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Cherry", -135f, reelR);
      }
      if (Machine.Equals("vw_prop_casino_slot_08a"))
      {
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", 114f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("WaterMelon", 137f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Sensi", 160f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -177f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", -155f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Grenade", -135f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Sensi", -110f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", -88f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Fruit", -65f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Grenade", -44f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Watermelon", -20f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Sensi", 3f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Mortar", 25f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Grenade", 47f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Bell", 70f, reelR);
        if (str.Equals(""))
          str = this.ReturnToken("Seven", 92f, reelR);
      }
      return str;
    }

    public float GetClosest(float reelR, string Machine)
    {
      float num = 0.0f;
      if (Machine.Equals("vw_prop_casino_slot_01a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_02a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_03a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_04a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_05a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_06a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_07a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      if (Machine.Equals("vw_prop_casino_slot_08a"))
      {
        List<int> source = new List<int>();
        source.Add(115);
        source.Add(135);
        source.Add(150);
        source.Add(-177);
        source.Add(-134);
        source.Add(-110);
        source.Add(-89);
        source.Add(-66);
        source.Add(-44);
        source.Add(-22);
        source.Add(4);
        source.Add(25);
        source.Add(46);
        source.Add(71);
        source.Add(91);
        int number = (int) reelR;
        num = (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
      }
      return num;
    }

    public void SetRandomOutfit2(Ped Dancer)
    {
      System.Random random = new System.Random();
      if (Dancer.Gender == Gender.Female)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) 4, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) != 4)
        {
          int num1 = random.Next(0, 5);
          if (num1 == 4)
          {
            int num2 = random.Next(0, 4);
            if (num2 == 0)
              num1 = 0;
            if (num2 == 1)
              num1 = 1;
            if (num2 == 2)
              num1 = 2;
            if (num2 == 3)
              num1 = 3;
            if (num2 == 4)
              num1 = 5;
          }
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) num1, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        }
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3), (InputArgument) 0, (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 4) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 5, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
      }
      if (Dancer.Gender != Gender.Male)
        return;
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 0)
      {
        int num = random.Next(0, 4);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 1)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 2)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 3)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 5)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 6)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
    }

    public void SetBet_SlotMachine()
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 0, (InputArgument) 51, (InputArgument) 0), (object) "Quit");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 1, (InputArgument) 76, (InputArgument) 0), (object) "Bet One");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 21, (InputArgument) 0), (object) "");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 176, (InputArgument) 0), (object) "Spin/Bet Max");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public float GetRandomfloat(int minimum, int maximum) => (float) (new System.Random().Next(minimum, maximum) / 1000);

    private string func_178(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "dlc_vw_casino_slot_machine_ak_player_sounds";
        case 2:
          return "dlc_vw_casino_slot_machine_ir_player_sounds";
        case 3:
          return "dlc_vw_casino_slot_machine_rsr_player_sounds";
        case 4:
          return "dlc_vw_casino_slot_machine_fs_player_sounds";
        case 5:
          return "dlc_vw_casino_slot_machine_ds_player_sounds";
        case 6:
          return "dlc_vw_casino_slot_machine_kd_player_sounds";
        case 7:
          return "dlc_vw_casino_slot_machine_td_player_sounds";
        case 8:
          return "dlc_vw_casino_slot_machine_hz_player_sounds";
        default:
          return "";
      }
    }

    public float GetclosestLuckyWheelPrizeHeading(float Rot)
    {
      List<int> source = new List<int>();
      source.Add(90);
      source.Add(108);
      source.Add(126);
      source.Add(144);
      source.Add(163);
      source.Add(-179);
      source.Add(-161);
      source.Add(-143);
      source.Add(-125);
      source.Add(-107);
      source.Add(-89);
      source.Add(-72);
      source.Add(-53);
      source.Add(-35);
      source.Add(-17);
      source.Add(0);
      source.Add(19);
      source.Add(37);
      source.Add(55);
      source.Add(72);
      int number = (int) Rot;
      return (float) source.OrderBy<int, int>((Func<int, int>) (item => System.Math.Abs(number - item))).First<int>();
    }

    public string GetclosestLuckyWheelPrize(float Rot)
    {
      string str = "";
      Rot = this.GetclosestLuckyWheelPrizeHeading(Rot);
      if ((double) Rot == 90.0)
        str = "25,000 Chips";
      if ((double) Rot == 108.0)
        str = "40,000 Cash";
      if ((double) Rot == 126.0)
        str = "10,000 RP";
      if ((double) Rot == 144.0)
        str = "Clothing";
      if ((double) Rot == 163.0)
        str = "Mystery";
      if ((double) Rot == -179.0)
        str = "20,000 Chips";
      if ((double) Rot == -161.0)
        str = "7,500 RP";
      if ((double) Rot == -143.0)
        str = "Clothing";
      if ((double) Rot == -125.0)
        str = "15,000 Chips";
      if ((double) Rot == -107.0)
        str = "30,000 Cash";
      if ((double) Rot == -89.0)
        str = "5,000 RP";
      if ((double) Rot == -72.0)
        str = "Discount";
      if ((double) Rot == -53.0)
        str = "10,000 Chips";
      if ((double) Rot == -35.0)
        str = "20,000 Cash";
      if ((double) Rot == -17.0)
        str = "2,500 RP";
      if ((double) Rot == 0.0)
        str = "Clothing";
      if ((double) Rot == 19.0)
        str = "50,000 Cash";
      if ((double) Rot == 37.0)
        str = "Vehicle";
      if ((double) Rot == 55.0)
        str = "15,000 RP";
      if ((double) Rot == 72.0)
        str = "Clothing";
      return str;
    }

    private string func_5023(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "casinoscreen_03";
        case 1:
          return "casinoscreen_04";
        case 2:
          return "casinoscreen_05";
        case 3:
          return "casinoscreen_06";
        case 4:
          return "casinoscreen_07";
        case 5:
          return "casinoscreen_08";
        case 6:
          return "casinoscreen_09";
        case 7:
          return "casinoscreen_10";
        case 8:
          return "casinoscreen_11";
        case 9:
          return "casinoscreen_12";
        case 10:
          return "casinoscreen_13";
        case 11:
          return "casinoscreen_14";
        case 12:
          return "casinoscreen_15";
        case 13:
          return "casinoscreen_16";
        case 14:
          return "casinoscreen_17";
        case 15:
          return "casinoscreen_18";
        default:
          return "NULL";
      }
    }

    private string func_5043(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "BETTING";
        case 1:
          return "BETTING_GENERIC_ORANGE";
        case 2:
          return "BETTING_GENERIC_ORANGE_unavailable";
        case 3:
          return "BETTING_GENERIC_PURPLE";
        case 4:
          return "BETTING_GENERIC_PURPLE_unavailable";
        case 5:
          return "BETTING_SINGLE";
        case 6:
          return "BETTING_MAIN";
        default:
          return "NULL";
      }
    }

    private int func_5044(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return 903186242;
        case 1:
          return 1144202237;
        case 2:
          return -519873125;
        case 3:
          return -292161344;
        case 4:
          return 2004912791;
        case 5:
          return -1960136213;
        case 6:
          return -1003510800;
        case 7:
          return 425283146;
        case 8:
          return -563586975;
        case 9:
          return 1712925937;
        case 10:
          return 796540856;
        case 11:
          return 499686485;
        case 12:
          return 1207038119;
        case 13:
          return 977491274;
        case 14:
          return -424104402;
        case 15:
          return -731707005;
        default:
          return 0;
      }
    }

    private string func_5045() => "Prop_Screen_VW_InsideTrack";

    private void func_5036()
    {
      int iParam0 = 0;
      while (iParam0 < 16)
      {
        if (this.scaleformsID[iParam0] == -1)
        {
          Function.Call(Hash._0xDFA2EF8E04127DD5, (InputArgument) this.func_5045(), (InputArgument) false);
          if (Function.Call<bool>(Hash._0x0145F696AAAAD2E4, (InputArgument) this.func_5045()))
          {
            if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) ("vw_vwint01_betting_sreen_" + this.func_5023(iParam0))))
              Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) ("vw_vwint01_betting_sreen_" + this.func_5023(iParam0)), (InputArgument) 0);
            if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) this.func_5044(iParam0)))
              Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) this.func_5044(iParam0));
            int num;
            if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) ("vw_vwint01_betting_sreen_" + this.func_5023(iParam0))))
              num = Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) this.func_5044(iParam0)) ? 1 : 0;
            else
              num = 0;
            if (num != 0 && this.scaleformsID[iParam0] == -1)
              this.scaleformsID[iParam0] = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) ("vw_vwint01_betting_sreen_" + this.func_5023(iParam0)));
            if (this.scaleformsID[iParam0] != -1)
              this.scaleformsID[iParam0] = 3;
          }
        }
        else
          ++iParam0;
        if (iParam0 == 16)
          this.CreatedScales = true;
        UI.Notify("ivar " + iParam0.ToString() + "/" + this.scaleformsID[iParam0].ToString());
      }
    }

    public void AddSeatPos()
    {
      this.SeatPos2.Add(new Vector3(955.4247f, 34.86646f, 115.6187f));
      this.Seatrot2.Add(-124.4732f);
      this.SeatPos2.Add(new Vector3(954.3804f, 33.47986f, 115.6187f));
      this.Seatrot2.Add(-124.4732f);
      this.SeatPos2.Add(new Vector3(951.1399f, 32.00776f, 115.8005f));
      this.Seatrot2.Add(-124.9731f);
      this.SeatPos2.Add(new Vector3(951.9585f, 33.25509f, 115.8005f));
      this.Seatrot2.Add(-135.4731f);
      this.SeatPos2.Add(new Vector3(952.8848f, 5099f * (float) System.Math.PI / 460f, 115.8005f));
      this.Seatrot2.Add(-135.4731f);
      this.SeatPos2.Add(new Vector3(953.4149f, 35.65282f, 115.8005f));
      this.Seatrot2.Add(-135.4731f);
      this.SeatPos2.Add(new Vector3(954.3589f, 37.33455f, 115.8005f));
      this.Seatrot2.Add(-131.9731f);
      this.SeatPos2.Add(new Vector3(955.0471f, 38.42959f, 115.8005f));
      this.Seatrot2.Add(-121.4731f);
    }

    public float ReturnRot(Vector3 V)
    {
      float num = 0.0f;
      for (int index = 0; index < this.SeatPos2.Count; ++index)
      {
        if (V == this.SeatPos2[index])
          num = this.Seatrot2[index];
      }
      return num;
    }

    public void Show_TVControlls()
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      if (this.isSeated2)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 1, (InputArgument) 51, (InputArgument) 0), (object) "Get Up");
      if (!Class1.TVOn2)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 25, (InputArgument) 0), (object) "Turn On TV");
      if (Class1.TVOn2)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 25, (InputArgument) 0), (object) "Turn Off TV");
      if (Class1.TVOn2)
      {
        scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0), (object) "");
        scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 4, (InputArgument) 17, (InputArgument) 0), (object) "Change Channel");
        scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 5, (InputArgument) 22, (InputArgument) 0), (object) "Show Subtitles");
      }
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    private void func_614(int iParam0, bool bParam1)
    {
      if (Function.Call<bool>(Hash._0xDF6E5987D2B4D140, (InputArgument) 22))
      {
        Function.Call(Hash._0xDF6E5987D2B4D140, (InputArgument) 22, (InputArgument) "SET_PLAYER_CHIP_CHANGE");
        Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) iParam0);
        Function.Call(Hash._0xC58424BA936EB458, (InputArgument) bParam1);
        Function.Call(Hash._0xC6796A8FFA375E53);
      }
      else
        Function.Call(Hash._0x9304881D6F6537EA, (InputArgument) 22);
    }

    private void func_623()
    {
      if (Function.Call<bool>(Hash._0xDF6E5987D2B4D140, (InputArgument) 21))
      {
        UI.ShowSubtitle("Show Chips");
        Function.Call(Hash._0xDF6E5987D2B4D140, (InputArgument) 21, (InputArgument) "SET_PLAYER_CHIPS");
        Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 1);
        Function.Call(Hash._0xC6796A8FFA375E53);
      }
      else
        Function.Call(Hash._0x9304881D6F6537EA, (InputArgument) 21);
    }

    public void ResetDealerPos(DealerTable T)
    {
      T.Dealer.FreezePosition = false;
      T.Dealer.Task.ClearAll();
      Script.Wait(1);
      T.Dealer.Position = T.DealerOriginPosition;
      T.Dealer.Heading = T.DealerOriginHeading;
      Script.Wait(1);
      this.PlayDealerAnim(T.Dealer);
      T.Dealer.FreezePosition = true;
    }

    private string func_440(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "MINIGAME_NO";
        case 2:
          return "MINIGAME_YES";
        case 3:
          return "MINIGAME_BUST";
        case 4:
          return "MINIGAME_BIG_WIN";
        case 5:
          return "MINIGAME_SMALL_WIN";
        case 6:
          return "MINIGAME_BIG_LOSS";
        case 7:
          return "MINIGAME_SMALL_LOSS";
        case 8:
          return "MINIGAME_MONO_WILLING";
        case 9:
          return "MINIGAME_MONO_GOOD_GAME";
        case 10:
          return "MINIGAME_MONO_BAD_GAME";
        case 11:
          return "TCPOKER_FOLD";
        case 12:
          return "TCPOKER_HAND_STRAIGHT_FLUSH";
        case 13:
          return "TCPOKER_HAND_THREE_KIND";
        case 14:
          return "TCPOKER_HAND_STRAIGHT";
        case 15:
          return "TCPOKER_HAND_FLUSH";
        case 16:
          return "TCPOKER_HAND_PAIR";
        case 17:
          return "TCPOKER_HAND_HIGH_CARD";
        case 18:
          return "ROULETTE_BET_ODDS";
        case 19:
          return "ROULETTE_BET_EVENS";
        case 20:
          return "ROULETTE_BET_RED";
        case 21:
          return "ROULETTE_BET_BLACK";
        case 22:
          return "BJACK_STAND";
        case 23:
          return "BJACK_HIT";
        case 24:
          return "BJACK_SPLIT";
        case 25:
          return "BJACK_DOUBLE";
        default:
          return "";
      }
    }

    private string getSpeechParam(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SPEECH_PARAMS_STANDARD";
        case 1:
          return "SPEECH_PARAMS_ALLOW_REPEAT";
        case 2:
          return "SPEECH_PARAMS_BEAT";
        case 3:
          return "SPEECH_PARAMS_FORCE";
        case 4:
          return "SPEECH_PARAMS_FORCE_FRONTEND";
        case 5:
          return "SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND";
        case 6:
          return "SPEECH_PARAMS_FORCE_NORMAL";
        case 7:
          return "SPEECH_PARAMS_FORCE_NORMAL_CLEAR";
        case 8:
          return "SPEECH_PARAMS_FORCE_NORMAL_CRITICAL";
        case 9:
          return "SPEECH_PARAMS_FORCE_SHOUTED";
        case 10:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CLEAR";
        case 11:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL";
        case 12:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY";
        case 13:
          return "SPEECH_PARAMS_MEGAPHONE";
        case 14:
          return "SPEECH_PARAMS_HELI";
        case 15:
          return "SPEECH_PARAMS_FORCE_MEGAPHONE";
        case 16:
          return "SPEECH_PARAMS_FORCE_HELI";
        case 17:
          return "SPEECH_PARAMS_INTERRUPT";
        case 18:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED";
        case 19:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR";
        case 20:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL";
        case 21:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE";
        case 22:
          return "SPEECH_PARAMS_INTERRUPT_FRONTEND";
        case 23:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND";
        case 24:
          return "SPEECH_PARAMS_ADD_BLIP";
        case 25:
          return "SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT";
        case 26:
          return "SPEECH_PARAMS_ADD_BLIP_FORCE";
        case 27:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED";
        case 28:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE";
        case 29:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT";
        case 30:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE";
        case 31:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED";
        case 32:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR";
        case 33:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL";
        case 34:
          return "SPEECH_PARAMS_SHOUTED";
        case 35:
          return "SPEECH_PARAMS_SHOUTED_CLEAR";
        case 36:
          return "SPEECH_PARAMS_SHOUTED_CRITICAL";
        default:
          return "";
      }
    }

    private string func_435(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SPEECH_PARAMS_STANDARD";
        case 1:
          return "SPEECH_PARAMS_ALLOW_REPEAT";
        case 2:
          return "SPEECH_PARAMS_BEAT";
        case 3:
          return "SPEECH_PARAMS_FORCE";
        case 4:
          return "SPEECH_PARAMS_FORCE_FRONTEND";
        case 5:
          return "SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND";
        case 6:
          return "SPEECH_PARAMS_FORCE_NORMAL";
        case 7:
          return "SPEECH_PARAMS_FORCE_NORMAL_CLEAR";
        case 8:
          return "SPEECH_PARAMS_FORCE_NORMAL_CRITICAL";
        case 9:
          return "SPEECH_PARAMS_FORCE_SHOUTED";
        case 10:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CLEAR";
        case 11:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL";
        case 12:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY";
        case 13:
          return "SPEECH_PARAMS_MEGAPHONE";
        case 14:
          return "SPEECH_PARAMS_HELI";
        case 15:
          return "SPEECH_PARAMS_FORCE_MEGAPHONE";
        case 16:
          return "SPEECH_PARAMS_FORCE_HELI";
        case 17:
          return "SPEECH_PARAMS_INTERRUPT";
        case 18:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED";
        case 19:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR";
        case 20:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL";
        case 21:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE";
        case 22:
          return "SPEECH_PARAMS_INTERRUPT_FRONTEND";
        case 23:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND";
        case 24:
          return "SPEECH_PARAMS_ADD_BLIP";
        case 25:
          return "SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT";
        case 26:
          return "SPEECH_PARAMS_ADD_BLIP_FORCE";
        case 27:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED";
        case 28:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE";
        case 29:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT";
        case 30:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE";
        case 31:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED";
        case 32:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR";
        case 33:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL";
        case 34:
          return "SPEECH_PARAMS_SHOUTED";
        case 35:
          return "SPEECH_PARAMS_SHOUTED_CLEAR";
        case 36:
          return "SPEECH_PARAMS_SHOUTED_CRITICAL";
        default:
          return "";
      }
    }

    private void OnTick(object sender, EventArgs e)
    {
      // ISSUE: The method is too long to display (124643 instructions)
    }

    public void SpawnGTM_Enemy()
    {
      System.Random random = new System.Random();
      int num1 = random.Next(1, 3);
      Vehicle vehicle = this.Vehicle1;
      Vector3 position1;
      if (num1 == 1)
      {
        GTA.Model model = (GTA.Model) "GAUNTLET4";
        position1 = Game.Player.Character.Position;
        Vector3 position2 = position1.Around((float) random.Next(50, 250));
        vehicle = World.CreateVehicle(model, position2);
        vehicle.PlaceOnNextStreet();
        vehicle.PlaceOnGround();
        vehicle.PrimaryColor = VehicleColor.MatteBlack;
        vehicle.SecondaryColor = VehicleColor.MatteBlack;
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) vehicle.Handle, (InputArgument) 0);
        vehicle.SetMod(VehicleMod.Suspension, 3, true);
        vehicle.SetMod(VehicleMod.Armor, 3, true);
        vehicle.PrimaryColor = VehicleColor.MatteBlack;
        vehicle.SecondaryColor = VehicleColor.MatteBlack;
        vehicle.WindowTint = VehicleWindowTint.Limo;
        vehicle.SetMod(VehicleMod.Hood, 9, true);
        vehicle.PearlescentColor = VehicleColor.MatteBlack;
      }
      if (num1 == 2)
      {
        GTA.Model model = (GTA.Model) "CARACARA2";
        position1 = Game.Player.Character.Position;
        Vector3 position2 = position1.Around((float) random.Next(50, 250));
        vehicle = World.CreateVehicle(model, position2);
        vehicle.PlaceOnNextStreet();
        vehicle.PlaceOnGround();
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) vehicle.Handle, (InputArgument) 0);
        vehicle.SetMod(VehicleMod.Suspension, 3, true);
        vehicle.SetMod(VehicleMod.Armor, 3, true);
        vehicle.PrimaryColor = VehicleColor.MatteBlack;
        vehicle.SecondaryColor = VehicleColor.MatteBlack;
        vehicle.WindowTint = VehicleWindowTint.Limo;
        vehicle.PearlescentColor = VehicleColor.MatteBlack;
      }
      if (num1 == 3)
      {
        GTA.Model model = (GTA.Model) "PARAGON2";
        position1 = Game.Player.Character.Position;
        Vector3 position2 = position1.Around((float) random.Next(50, 250));
        vehicle = World.CreateVehicle(model, position2);
        vehicle.PlaceOnNextStreet();
        vehicle.PlaceOnGround();
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) vehicle.Handle, (InputArgument) 0);
        vehicle.SetMod(VehicleMod.Suspension, 3, true);
        vehicle.SetMod(VehicleMod.Armor, 3, true);
        vehicle.PrimaryColor = VehicleColor.MatteBlack;
        vehicle.SecondaryColor = VehicleColor.MatteBlack;
        vehicle.WindowTint = VehicleWindowTint.Limo;
        vehicle.PearlescentColor = VehicleColor.MatteBlack;
      }
      this.EnemyVeh.Add(vehicle);
      vehicle.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.Acult02AMO);
      vehicle.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.Acult01AMY);
      vehicle.AddBlip();
      vehicle.CurrentBlip.Sprite = BlipSprite.Enemy;
      vehicle.CurrentBlip.Name = "Enemy, " + vehicle.FriendlyName;
      this.EnemyAi.Add(vehicle.GetPedOnSeat(VehicleSeat.Driver));
      this.EnemyAi.Add(vehicle.GetPedOnSeat(VehicleSeat.Passenger));
      foreach (Ped ped in this.EnemyAi)
      {
        if ((Entity) ped != (Entity) null)
        {
          int num2 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped, (InputArgument) num2);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
          ped.Weapons.Give(WeaponHash.MicroSMG, 9999, true, true);
          ped.Task.FightAgainst(Game.Player.Character);
        }
      }
    }

    private void DisplayHelpTextThisFrame(string text)
    {
      Function.Call(Hash._0x8509B634FBE7DA11, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0x238FFE5C7B0498A6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1, (InputArgument) -1);
    }

    public void ShowRaceOptions(int L)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 44, (InputArgument) 0), (object) "Cancel Race");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 132, (InputArgument) 0), (object) "");
      if (L < 3)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 5, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 21, (InputArgument) 0), (object) (" Bet " + this.RaceBet.ToString("N")));
      if (L >= 3)
        scaleform.CallFunction("SET_DATA_SLOT", (object) 5, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 21, (InputArgument) 0), (object) ("(No More Bets), Bet " + this.RaceBet.ToString("N")));
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void GameFail(string Reason, string MissionName)
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 30), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 450), 0.0f, Color.FromArgb(230, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText(MissionName, new Point(int32, 100), 2.5f, Color.FromArgb((int) byte.MaxValue, 148, 27, 46), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("Reason : " + Reason, new Point(int32, 280), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new Scaleform(0).Render2D();
    }

    public void GamePassed(string MissionName, int Payout)
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 10), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 450), 0.0f, Color.FromArgb(200, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText(MissionName, new Point(int32, 100), 2.5f, Color.FromArgb((int) byte.MaxValue, 199, 168, 87), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("Payout : $" + Payout.ToString("N"), new Point(int32, 300), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      new Scaleform(0).Render2D();
    }

    public void Poker(string Reason, string MissionName)
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 30), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 450), 0.0f, Color.FromArgb(230, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText(MissionName, new Point(int32, 100), 2.5f, Color.FromArgb((int) byte.MaxValue, 148, 27, 46), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("Reason : " + Reason, new Point(int32, 280), 0.5f, Color.White, GTA.Font.ChaletLondon, UIResText.Alignment.Centered).Draw();
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 22, (InputArgument) 0), (object) "Begin Assault");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 202, (InputArgument) 0), (object) "Cancel");
      scaleform.CallFunction("ORBITAL_CANNON_CAM", (object) -1);
      scaleform.Render2D();
    }

    public void StartHorseBetting()
    {
      this.scaleformloading = Function.Call<int>(Hash._0xC514489CFB8AF806, (InputArgument) "CasinoUI_InsideTrack");
      if (!Function.Call<bool>(Hash._0x85F01B8D5B90570E, (InputArgument) this.scaleformloading))
        return;
      Function.Call(Hash._0xFBD96D87AC96D533, (InputArgument) this.scaleformloading, (InputArgument) "SET_BETTING_ENABLED");
      Function.Call(Hash._0xC58424BA936EB458, (InputArgument) true);
      Function.Call(Hash._0xC6796A8FFA375E53);
      Function.Call(Hash._0x0DF606929C105BE1, (InputArgument) this.scaleformloading, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) 0);
    }

    private void OnKeyDown()
    {
      if (!Game.IsControlJustPressed(2, GTA.Control.Context))
        ;
      if (this.DeliveryMissionOn && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && ((Entity) Game.Player.Character.CurrentVehicle == (Entity) this.Plane && Game.IsControlJustPressed(2, GTA.Control.Context)) && (double) World.GetDistance(Game.Player.Character.Position, this.MissionMarker) < 30.0)
      {
        GTA.Model model = (GTA.Model) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "WEAPON_BRIEFCASE");
        if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) model))
        {
          Function.Call(Hash._0x5443438F033E29C3, (InputArgument) model);
          while (true)
          {
            if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) model))
              Script.Wait(0);
            else
              break;
          }
        }
        World.ShootBullet(Game.Player.Character.Position, this.MissionMarker, Game.Player.Character, model, 15000);
        this.MissionMarker = this.GetLocation(this.DevMission);
        if (this.shipmentsDElivered != 4)
        {
          ++this.shipmentsDElivered;
          UI.Notify("Ron: Ok a shipment has been delivered");
        }
        else
        {
          this.shipmentsDElivered = 0;
          this.DeliveryMissionOn = false;
          UI.Notify("Ron: Ok all shipments have been delivered");
          if ((Entity) this.Plane != (Entity) null)
          {
            this.Plane.IsPersistent = false;
            this.Plane = (Vehicle) null;
          }
          if (this.PlaneBlip != (Blip) null)
            this.PlaneBlip.Remove();
          UI.Notify(this.GetHostName() + " : Stocks just Increased");
          UI.Notify("Max Stocks: " + this.maxstocks.ToString());
          UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
          UI.Notify("Mission Gain: " + this.profitMargin.ToString() + "%");
          UI.Notify("Stock Value: $" + this.stocksvalue.ToString("N"));
          this.stocksvalue = (float) ((double) this.stocksvalue + 150000.0 + 150000.0 * (double) this.profitMargin / 100.0);
          this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
          this.Config.Save();
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.RaceSTMarker) < 4.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        this.StartR = false;
        this.inRace = false;
        if ((Entity) this.VehicleA != (Entity) null)
        {
          if ((Entity) this.VehicleA.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleA.Delete();
        }
        if ((Entity) this.VehicleB != (Entity) null)
        {
          if ((Entity) this.VehicleB.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleB.Delete();
        }
        if ((Entity) this.VehicleC != (Entity) null)
        {
          if ((Entity) this.VehicleC.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleC.Delete();
        }
        if ((Entity) this.VehicleD != (Entity) null)
        {
          if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleD.Delete();
        }
        if ((Entity) this.VehicleE != (Entity) null)
        {
          if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleE.Delete();
        }
        if ((Entity) this.VehicleF != (Entity) null)
        {
          if ((Entity) this.VehicleF.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
            this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).Delete();
          this.VehicleF.Delete();
        }
        this.StartedRace = false;
        this.FinishedRace = true;
        this.CheckpointRace = false;
        this.Race = 0;
        this.CarsFinished = 0;
        foreach (Blip checkPointBlip in this.CheckPointBlips)
        {
          if (checkPointBlip != (Blip) null)
            checkPointBlip.Remove();
        }
        this.StartR = true;
        this.StartedRace = false;
        this.CheckpointRace = true;
        this.Race = 1;
        this.VehicleA = World.CreateVehicle((GTA.Model) "S80", new Vector3(1091.919f, 168.433f, 81f), 148f);
        this.VehicleA.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.VehicleB = World.CreateVehicle((GTA.Model) "S80", new Vector3(1094.322f, 166.4783f, 81f), 148f);
        this.VehicleB.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.VehicleC = World.CreateVehicle((GTA.Model) "S80", new Vector3(1097.571f, 164.7228f, 81f), 148f);
        this.VehicleC.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.VehicleD = World.CreateVehicle((GTA.Model) "S80", new Vector3(1100.567f, 162.9368f, 81f), 148f);
        this.VehicleD.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.VehicleE = World.CreateVehicle((GTA.Model) "S80", new Vector3(1103.283f, 161.6521f, 81f), 148f);
        this.VehicleE.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.VehicleF = World.CreateVehicle((GTA.Model) "S80", new Vector3(1105.805f, 160.1064f, 81f), 148f);
        this.VehicleF.CreateRandomPedOnSeat(VehicleSeat.Driver);
        this.CheckpointPos.Add(new Vector3(1005f, -72f, 81f));
        this.CheckpointPos.Add(new Vector3(1165f, 24f, 81f));
        this.CheckpointPos.Add(new Vector3(1253f, 267f, 82f));
        this.UpgradeVehicle(this.VehicleA);
        this.UpgradeVehicle(this.VehicleB);
        this.UpgradeVehicle(this.VehicleC);
        this.UpgradeVehicle(this.VehicleD);
        this.UpgradeVehicle(this.VehicleE);
        this.UpgradeVehicle(this.VehicleF);
        this.IsinInterior = false;
        Game.Player.Character.Position = new Vector3(1092.119f, 147.6446f, 82f);
        Game.Player.Character.Heading = -33f;
        this.RaceMenu.Visible = !this.RaceMenu.Visible;
        this.RaceCam = World.CreateCamera(new Vector3(1089.806f, 148.7886f, 82f), new Vector3(0.0f, 0.0f, -34f), 100f);
        this.RaceCam.IsActive = true;
        this.RaceCam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        World.RenderingCamera = this.RaceCam;
      }
      if (this.Casino_level >= 1 && (double) World.GetDistance(Game.Player.Character.Position, this.MembershipUpgradeMarker) < 4.0 && (Game.IsControlJustPressed(2, GTA.Control.Context) && !this.Casino_Menu.Visible))
        this.Casino_Menu.Visible = !this.Casino_Menu.Visible;
      for (int index = 0; index < this.DrinkPosPent.Count; ++index)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.DrinkPosPent[index]) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.DrinkPosRot[index]);
          if (!this.DrinksMenu.Visible)
            this.DrinksMenu.Visible = !this.DrinksMenu.Visible;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.jacuzziSeat1) < 4.0)
      {
        if (!this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat1;
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.J_rot1);
          if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin || Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 26, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 5, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 15, (InputArgument) 0, (InputArgument) 1);
          }
          else
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 16, (InputArgument) 17, (InputArgument) 1);
          }
          this.PlayAnim(Game.Player.Character, 2);
          this.IsinHottub = true;
        }
        else if (this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat1;
          Game.Player.Character.Task.ClearAllImmediately();
          Game.Player.Character.Task.ClearAll();
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          this.IsinHottub = false;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.jacuzziSeat7) < 4.0)
      {
        if (!this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat7;
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.J_rot7);
          if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin || Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 26, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 5, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 15, (InputArgument) 0, (InputArgument) 1);
          }
          else
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 16, (InputArgument) 17, (InputArgument) 1);
          }
          this.PlayAnim(Game.Player.Character, 2);
          this.IsinHottub = true;
        }
        else if (this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat7;
          Game.Player.Character.Task.ClearAllImmediately();
          Game.Player.Character.Task.ClearAll();
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          this.IsinHottub = false;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.jacuzziSeat8) < 4.0)
      {
        if (!this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat8;
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.J_rot8);
          if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin || Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 26, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 5, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 15, (InputArgument) 0, (InputArgument) 1);
          }
          else
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 16, (InputArgument) 17, (InputArgument) 1);
          }
          this.PlayAnim(Game.Player.Character, 2);
          this.IsinHottub = true;
        }
        else if (this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat8;
          Game.Player.Character.Task.ClearAllImmediately();
          Game.Player.Character.Task.ClearAll();
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          this.IsinHottub = false;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.jacuzziSeat9) < 4.0)
      {
        if (!this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat9;
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.J_rot9);
          if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin || Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 26, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 5, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 15, (InputArgument) 0, (InputArgument) 1);
          }
          else
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 16, (InputArgument) 17, (InputArgument) 1);
          }
          this.PlayAnim(Game.Player.Character, 2);
          this.IsinHottub = true;
        }
        else if (this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat9;
          Game.Player.Character.Task.ClearAllImmediately();
          Game.Player.Character.Task.ClearAll();
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          this.IsinHottub = false;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.jacuzziSeat10) < 4.0)
      {
        if (!this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat10;
          Game.Player.Character.Rotation = new Vector3(0.0f, 0.0f, this.J_rot10);
          if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin || Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 26, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 5, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 15, (InputArgument) 0, (InputArgument) 1);
          }
          else
          {
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 16, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 16, (InputArgument) 17, (InputArgument) 1);
          }
          this.PlayAnim(Game.Player.Character, 2);
          this.IsinHottub = true;
        }
        else if (this.IsinHottub)
        {
          Game.Player.Character.Position = this.jacuzziSeat10;
          Game.Player.Character.Task.ClearAllImmediately();
          Game.Player.Character.Task.ClearAll();
          Game.Player.Character.FreezePosition = false;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          this.IsinHottub = false;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseUpgradeMarker) < 3.0 && (this.Casino_level >= 3 && !this.Pent_Menu.Visible))
        this.Pent_Menu.Visible = !this.Pent_Menu.Visible;
      if (this.Casino_level >= 3 && Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.GarageEnt) < 3.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Script.Wait(300);
        Game.FadeScreenIn(300);
        Game.Player.Character.Position = new Vector3(808f, 808f, 808f);
        Script.Wait(1);
        Game.Player.Character.Position = this.GarageExit;
        this.IsinInterior = false;
      }
      if (this.Casino_level >= 3)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, new Vector3(938.8819f, -1.1f, 110f)) < 3.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = new Vector3(974.8987f, 12.62897f, 80f);
          Script.Wait(1);
          Script.Wait(300);
          Game.FadeScreenIn(300);
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, new Vector3(974.8987f, 12.62897f, 80f)) < 3.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = new Vector3(938.8819f, -1.1f, 110f);
          Script.Wait(300);
          Game.FadeScreenIn(300);
        }
      }
      if (this.Casino_level >= 3)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.GarageExit) < 3.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = new Vector3(404f, 404f, 404f);
          Script.Wait(1);
          Game.Player.Character.Position = this.GarageEnt;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (double) World.GetDistance(Game.Player.Character.Position, this.GarageExit) < 3.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = new Vector3(404f, 404f, 404f);
          Script.Wait(1);
          Game.Player.Character.Position = this.PenthouseEnter3;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
          this.RefreshPenthouse();
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ChipsPurchaseMarker) < 3.0)
      {
        this.Show_EQ("   Current Cash :   " + Game.Player.Money.ToString("N") + "   ", "    Current Chips :" + this.Chips_Amount.ToString("N") + "    ");
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && !this.ChipsMenu.Visible)
          this.ChipsMenu.Visible = !this.ChipsMenu.Visible;
      }
      if (this.Casino_level >= 3 && Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseEnter2) < 2.0)
      {
        this.RefreshPenthouse();
        Script.Wait(500);
        Function.Call(Hash._0x7A86743F475D9E09, (InputArgument) "mpsui_int", (InputArgument) 0);
        Script.Wait(500);
        this.PlayCutscene("mpsui_int");
        this.IsinInterior = true;
      }
      if (this.Casino_level >= 3)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseEnter3) < 2.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.RefreshPenthouse();
          Script.Wait(1);
          Game.Player.Character.Position = this.PenthouseEnter;
          Script.Wait(300);
          Game.FadeScreenIn(300);
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseEnter3) < 3.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Script.Wait(300);
          Game.FadeScreenIn(300);
          Game.Player.Character.Position = new Vector3(808f, 808f, 808f);
          Script.Wait(1);
          Game.Player.Character.Position = this.GarageExit;
          this.IsinInterior = false;
        }
      }
      if (this.Casino_level >= 3)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseExit2) < 2.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.PenthouseEnter2;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = false;
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseExit2) < 2.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.PenthouseEnter3;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
          this.RefreshPenthouse();
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.RooftopEntA) < 2.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.RooftopExitA;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.RooftopExitA) < 2.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.RooftopEntA;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = true;
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.RooftopEntB) < 2.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.RooftopExitB;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.RooftopExitB) < 2.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.RooftopEntB;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      if (this.Casino_level >= 3)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseEnter) < 2.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.PenthouseExit;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
          this.RefreshPenthouse();
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseEnter) < 2.0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.PenthouseEnter3;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
        }
      }
      if (this.Casino_level >= 3 && Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.PenthouseExit) < 2.0)
      {
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.PenthouseEnter;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && this.IsinInterior)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerA) < 2.0)
          this.IsinInterior = false;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerB) < 2.0)
          this.IsinInterior = false;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerC) < 2.0)
          this.IsinInterior = false;
      }
      if (this.Missionnum == 13 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(213f, -936f, 24f)) < 3.0)
          Game.Player.Character.Position = new Vector3(227f, -1001f, -99f);
        else if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(227f, -1001f, -99f)) < 4.0)
        {
          if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
          {
            Game.Player.Character.CurrentVehicle.Position = new Vector3(213f, -936f, 24f);
            Game.Player.Character.CurrentVehicle.Rotation = new Vector3(0.0f, 0.0f, -34f);
            Game.Player.WantedLevel = 2;
          }
          else
            Game.Player.Character.Position = new Vector3(213f, -936f, 24f);
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMenuPos) < 3.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        this.IsinGarageMenu = true;
        Game.Player.Character.FreezePosition = true;
        if (!this.Garage.Visible)
          this.Garage.Visible = !this.Garage.Visible;
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerEnter) < 3.0)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Script.Wait(100);
          if (this.purchaselvl == 0)
          {
            if (!this.Casino_Menu.Visible)
              this.Casino_Menu.Visible = !this.Casino_Menu.Visible;
          }
          else if (this.purchaselvl >= 0)
          {
            if (Game.Player.WantedLevel < 1)
            {
              Game.FadeScreenOut(300);
              Script.Wait(300);
              Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
              int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -75.8466, (InputArgument) -826.9893, (InputArgument) 243.3859);
              Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
              Game.Player.Character.Position = this.MarkerExit;
              Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
              Script.Wait(300);
              Game.FadeScreenIn(300);
              this.IsinInterior = true;
              if ((Entity) this.Prizecar != (Entity) null)
                this.Prizecar.Delete();
              this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
              this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
              this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
              this.Prizecar.IsPersistent = true;
            }
            else
            {
              this.DisplayHelpTextThisFrame("Lose the cops");
              UI.Notify(this.GetHostName() + " : Please lose the cops boss");
            }
          }
        }
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerExit) < 2.0)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.392, (InputArgument) -621.0451, (InputArgument) 168.8204));
          Game.Player.Character.Position = this.MarkerEnter;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = false;
        }
      }
      else if (this.Casino_level >= 2 && (double) World.GetDistance(Game.Player.Character.Position, this.ChairPos) < 2.0)
      {
        if (this.IsSittinginCeoSeat)
        {
          if ((Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) || Game.IsControlJustPressed(2, GTA.Control.PhoneCancel)) && this.MainStuffMenu.Visible)
          {
            Prop chairProp = this.ChairProp;
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairProp.Position.X, (InputArgument) chairProp.Position.Y, (InputArgument) chairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairProp.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairProp, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
            this.Dis_Unlocked = this.Config.GetValue<int>("Setup", "Dis_Unlocked", this.Dis_Unlocked);
            if (this.Dis_Unlocked == 1)
              this.TDMPrice = 75000000;
            if (this.Dis_Unlocked == 0)
              this.TDMPrice = 200000000;
            this.modMenuPool.RefreshIndex();
            if (!this.MainStuffMenu.Visible)
            {
              Prop chairProp = this.ChairProp;
              int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairProp.Position.X, (InputArgument) chairProp.Position.Y, (InputArgument) chairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairProp.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairProp, (InputArgument) num, (InputArgument) "computer_enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(100);
              this.MainStuffMenu.Visible = !this.MainStuffMenu.Visible;
            }
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Cover))
          {
            this.modMenuPool.CloseAllMenus();
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.ChairProp.Position.X, (InputArgument) this.ChairProp.Position.Y, (InputArgument) this.ChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.ChairProp.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.ChairProp, (InputArgument) num, (InputArgument) "exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(4000);
            Game.Player.Character.Task.ClearAll();
            this.IsSittinginCeoSeat = false;
          }
        }
        else if (!this.IsSittinginCeoSeat && Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          Script.Wait(100);
          string str = "anim@amb@office@boss@male@";
          Class1.LoadDict("anim@amb@office@boss@male@");
          if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
          {
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.ChairProp.Position.X, (InputArgument) this.ChairProp.Position.Y, (InputArgument) this.ChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.ChairProp.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.ChairProp, (InputArgument) num, (InputArgument) "enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(5000);
            this.IsSittinginCeoSeat = true;
          }
          this.IsinInterior = true;
          if ((Entity) this.Prizecar != (Entity) null)
            this.Prizecar.Delete();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
          this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
          this.Prizecar.IsPersistent = true;
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadeChairAPos) >= 2.0)
        ;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadeChairBPos) >= 2.0)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMarker) < 2.0)
        {
          if (Game.IsControlJustPressed(2, GTA.Control.Context) && !this.SellStockDeliveryMission)
          {
            Game.FadeScreenOut(300);
            Script.Wait(300);
            Game.Player.Character.Position = this.RoofEnterMarker;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            this.IsinInterior = true;
            if ((Entity) this.Prizecar != (Entity) null)
              this.Prizecar.Delete();
            this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
            this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
            this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
            this.Prizecar.IsPersistent = true;
          }
        }
        else if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofExitMarker) < 2.0)
        {
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            Game.FadeScreenOut(300);
            Script.Wait(300);
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
            Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -75.8466, (InputArgument) -826.9893, (InputArgument) 243.3859));
            Game.Player.Character.Position = this.RoofEnterMarker;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            this.IsinInterior = true;
          }
        }
        else if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofEnterMarker) < 2.0)
        {
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            Game.FadeScreenOut(300);
            Script.Wait(300);
            Game.Player.Character.Position = this.RoofExitMarker;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            this.IsinInterior = false;
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Cover))
          {
            Game.FadeScreenOut(300);
            Script.Wait(300);
            Game.Player.Character.Position = this.GarageMarker;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            this.IsinInterior = false;
          }
        }
        else if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMarker) < 2.0)
        {
          if (!this.SellStockDeliveryMission && Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            Game.FadeScreenOut(300);
            Script.Wait(300);
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -75.8466, (InputArgument) -826.9893, (InputArgument) 243.3859);
            Game.Player.Character.Position = this.MarkerExit;
            Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num);
            Game.Player.Character.Position = this.RoofEnterMarker;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            this.IsinInterior = true;
            if ((Entity) this.Prizecar != (Entity) null)
              this.Prizecar.Delete();
            this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
            this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
            this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
            this.Prizecar.IsPersistent = true;
          }
        }
        else if ((double) World.GetDistance(Game.Player.Character.Position, this.SleepPos) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Game.Player.Character.FreezePosition = true;
          Game.FadeScreenOut(500);
          Script.Wait(500);
          Function.Call(Hash._0xC8CA9670B9D83B3B, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0);
          Game.Player.WantedLevel = 0;
          Function.Call(Hash._0x8FE22675A5A45817, (InputArgument) Game.Player.Character);
          Function.Call(Hash._0x9C720776DAA43E7E, (InputArgument) Game.Player.Character);
          Game.Player.Character.Position = this.SleepPos;
          Game.Player.Character.Heading = 248.15f;
          Function.Call(Hash._0xB4EC2312F4E5B1F1, (InputArgument) 0.0f);
          Function.Call(Hash._0x6D0858B8EDFD2B7D, (InputArgument) 0.0f);
          Game.Player.Character.FreezePosition = false;
          Script.Wait(1500);
          Game.FadeScreenIn(500);
          this.IsinInterior = true;
          if ((Entity) this.Prizecar != (Entity) null)
            this.Prizecar.Delete();
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          this.PrizeCarDisplayName = this.Config.GetValue<string>("Setup", "PrizeCarDisplayName", this.PrizeCarDisplayName);
          this.Prizecar = World.CreateVehicle(this.RequestModel(this.PrizeCarDisplayName), this.ThraxPos, 9.5f);
          this.Prizecar.IsPersistent = true;
        }
      }
      if (this.Casino_level < 3 || !((Entity) this.ChairProp2 != (Entity) null) || (double) World.GetDistance(Game.Player.Character.Position, new Vector3(977.4432f, 48.20891f, 115.25f)) >= 3.0)
        return;
      if (this.IsSittinginCeoSeat2)
      {
        if ((Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) || Game.IsControlJustPressed(2, GTA.Control.PhoneCancel)) && this.MainStuffMenu.Visible)
        {
          Prop chairProp2 = this.ChairProp2;
          int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairProp2.Position.X, (InputArgument) chairProp2.Position.Y, (InputArgument) chairProp2.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairProp2.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairProp2, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//DC&R//Main.ini");
          if (this.Dis_Unlocked == 1)
            this.TDMPrice = 75000000;
          if (this.Dis_Unlocked == 0)
            this.TDMPrice = 200000000;
          this.modMenuPool.RefreshIndex();
          if (!this.MainStuffMenu.Visible)
          {
            Prop chairProp2 = this.ChairProp2;
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairProp2.Position.X, (InputArgument) chairProp2.Position.Y, (InputArgument) chairProp2.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairProp2.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairProp2, (InputArgument) num, (InputArgument) "computer_enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(100);
            this.MainStuffMenu.Visible = !this.MainStuffMenu.Visible;
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          this.modMenuPool.CloseAllMenus();
          int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.ChairProp2.Position.X, (InputArgument) this.ChairProp2.Position.Y, (InputArgument) this.ChairProp2.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.ChairProp2.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.ChairProp2, (InputArgument) num, (InputArgument) "exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Script.Wait(4000);
          Game.Player.Character.Task.ClearAll();
          this.IsSittinginCeoSeat2 = false;
        }
      }
      if (!this.IsSittinginCeoSeat2 && Game.IsControlJustPressed(2, GTA.Control.Cover))
      {
        Script.Wait(100);
        string str = "anim@amb@office@boss@male@";
        Class1.LoadDict("anim@amb@office@boss@male@");
        if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
        {
          int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.ChairProp2.Position.X, (InputArgument) this.ChairProp2.Position.Y, (InputArgument) this.ChairProp2.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.ChairProp2.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.ChairProp2, (InputArgument) num, (InputArgument) "enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Script.Wait(5000);
          this.IsSittinginCeoSeat2 = true;
        }
      }
    }

    private void OnShutdown(object sender, EventArgs e)
    {
      if (false)
        return;
      if ((Entity) this.Glass != (Entity) null)
        this.Glass.Delete();
      if ((Entity) this.Bottle != (Entity) null)
        this.Bottle.Delete();
      foreach (Ped dancer in this.Dancers)
      {
        if ((Entity) dancer != (Entity) null)
          dancer.Delete();
      }
      foreach (DealerTable pokerDealerTable in this.PokerDealerTables)
      {
        if ((Entity) pokerDealerTable.Dealer != (Entity) null)
          pokerDealerTable.Dealer.Delete();
        if ((Entity) pokerDealerTable.Card1 != (Entity) null)
          pokerDealerTable.Card1.Delete();
        if ((Entity) pokerDealerTable.Card2 != (Entity) null)
          pokerDealerTable.Card2.Delete();
        if ((Entity) pokerDealerTable.Card3 != (Entity) null)
          pokerDealerTable.Card3.Delete();
      }
      foreach (DealerTable blackjackDealerTable in this.BlackjackDealerTables)
      {
        if ((Entity) blackjackDealerTable.Dealer != (Entity) null)
          blackjackDealerTable.Dealer.Delete();
        if ((Entity) blackjackDealerTable.Card1 != (Entity) null)
          blackjackDealerTable.Card1.Delete();
        if ((Entity) blackjackDealerTable.Card2 != (Entity) null)
          blackjackDealerTable.Card2.Delete();
        if ((Entity) blackjackDealerTable.Card3 != (Entity) null)
          blackjackDealerTable.Card3.Delete();
      }
      foreach (DealerTable rouletteDealerTable in this.RouletteDealerTables)
      {
        if ((Entity) rouletteDealerTable.Dealer != (Entity) null)
          rouletteDealerTable.Dealer.Delete();
        if ((Entity) rouletteDealerTable.Card1 != (Entity) null)
          rouletteDealerTable.Card1.Delete();
        if ((Entity) rouletteDealerTable.Card2 != (Entity) null)
          rouletteDealerTable.Card2.Delete();
        if ((Entity) rouletteDealerTable.Card3 != (Entity) null)
          rouletteDealerTable.Card3.Delete();
      }
      foreach (DRaC_Business.PlayerCards playerCard in this.PlayerCards)
      {
        if ((Entity) playerCard.Card1 != (Entity) null)
          playerCard.Card1.Delete();
        if ((Entity) playerCard.Card2 != (Entity) null)
          playerCard.Card2.Delete();
        if ((Entity) playerCard.Card3 != (Entity) null)
          playerCard.Card3.Delete();
      }
      if ((Entity) this.RouletteMarker2 != (Entity) null)
        this.RouletteMarker2.Delete();
      if ((Entity) this.RouletteMarker1 != (Entity) null)
        this.RouletteMarker1.Delete();
      if ((Entity) this.RouletteMarker != (Entity) null)
        this.RouletteMarker.Delete();
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if ((Entity) this.ReelABase != (Entity) null)
        this.ReelABase.Delete();
      if ((Entity) this.ReelBBase != (Entity) null)
        this.ReelBBase.Delete();
      if ((Entity) this.ReelCBase != (Entity) null)
        this.ReelCBase.Delete();
      if ((Entity) this.SlotProp1 != (Entity) null)
        this.SlotProp1.Delete();
      if ((Entity) this.SlotProp2 != (Entity) null)
        this.SlotProp2.Delete();
      if ((Entity) this.SlotProp3 != (Entity) null)
        this.SlotProp3.Delete();
      if ((Entity) this.ChipsSpawn != (Entity) null)
        this.ChipsSpawn.Delete();
      if ((Entity) this.RouletteMarker2 != (Entity) null)
        this.RouletteMarker2.Delete();
      if ((Entity) this.RouletteMarker1 != (Entity) null)
        this.RouletteMarker1.Delete();
      if ((Entity) this.RouletteMarker != (Entity) null)
        this.RouletteMarker.Delete();
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if ((Entity) this.Ball != (Entity) null)
        this.Ball.Delete();
      if ((Entity) this._8PlayerGameDealer != (Entity) null)
        this._8PlayerGameDealer.Delete();
      if ((Entity) this.ChipsSpawn != (Entity) null)
        this.ChipsSpawn.Delete();
      if ((Entity) this.AI_1 != (Entity) null)
        this.AI_1.Delete();
      if ((Entity) this.AI_2 != (Entity) null)
        this.AI_2.Delete();
      if ((Entity) this.AI_3 != (Entity) null)
        this.AI_3.Delete();
      if ((Entity) this.AI_4 != (Entity) null)
        this.AI_4.Delete();
      if ((Entity) this.AI_5 != (Entity) null)
        this.AI_5.Delete();
      if ((Entity) this.AI_6 != (Entity) null)
        this.AI_6.Delete();
      if ((Entity) this.AI_7 != (Entity) null)
        this.AI_7.Delete();
      foreach (Prop gamePokerPotChip in this._8PlayerGamePokerPotChips)
      {
        if ((Entity) gamePokerPotChip != (Entity) null)
          gamePokerPotChip.Delete();
      }
      if ((Entity) this._8PlayerPokerGameTable1 != (Entity) null)
        this._8PlayerPokerGameTable1.Delete();
      if ((Entity) this._8PlayerPokerGameTable2 != (Entity) null)
        this._8PlayerPokerGameTable2.Delete();
      if ((Entity) this._8PlayerPokerGameTable3 != (Entity) null)
        this._8PlayerPokerGameTable3.Delete();
      foreach (Ped playerGamePokerPed in this._8PlayerGamePokerPeds)
      {
        if ((Entity) playerGamePokerPed != (Entity) null)
          playerGamePokerPed.Delete();
      }
      foreach (Prop playerGamePokerProp in this._8PlayerGamePokerProps)
      {
        if ((Entity) playerGamePokerProp != (Entity) null)
          playerGamePokerProp.Delete();
      }
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if ((Entity) this.Chair_Assistant != (Entity) null)
        this.Chair_Assistant.Delete();
      if ((Entity) this.Swimmer != (Entity) null)
        this.Swimmer.Delete();
      if ((Entity) this.CasinoDoor != (Entity) null)
        this.CasinoDoor.Delete();
      if ((Entity) this.ReelABase != (Entity) null)
        this.ReelABase.Delete();
      if ((Entity) this.ReelBBase != (Entity) null)
        this.ReelBBase.Delete();
      if ((Entity) this.ReelCBase != (Entity) null)
        this.ReelCBase.Delete();
      if ((Entity) this.SlotProp1 != (Entity) null)
        this.SlotProp1.Delete();
      if ((Entity) this.SlotProp2 != (Entity) null)
        this.SlotProp2.Delete();
      if ((Entity) this.SlotProp3 != (Entity) null)
        this.SlotProp3.Delete();
      if ((Entity) this.TrailerTV != (Entity) null)
        this.TrailerTV.Delete();
      if ((Entity) this.PenthouseBlackJackDealer != (Entity) null)
        this.PenthouseBlackJackDealer.Delete();
      if ((Entity) this.PenthousePokerDealer != (Entity) null)
        this.PenthousePokerDealer.Delete();
      if ((Entity) this.PenthouseBlackJackProp != (Entity) null)
        this.PenthouseBlackJackProp.Delete();
      if ((Entity) this.PenthouseBlackJackProp2 != (Entity) null)
        this.PenthouseBlackJackProp2.Delete();
      if ((Entity) this.PenthousePokerProp != (Entity) null)
        this.PenthousePokerProp.Delete();
      if ((Entity) this.PenthousePokerProp2 != (Entity) null)
        this.PenthousePokerProp2.Delete();
      if ((Entity) this.ChipsSpawn != (Entity) null)
        this.ChipsSpawn.Delete();
      if ((Entity) this.AI_1 != (Entity) null)
        this.AI_1.Delete();
      if ((Entity) this.AI_2 != (Entity) null)
        this.AI_2.Delete();
      if ((Entity) this.AI_3 != (Entity) null)
        this.AI_3.Delete();
      if ((Entity) this.AI_4 != (Entity) null)
        this.AI_4.Delete();
      if ((Entity) this.AI_5 != (Entity) null)
        this.AI_5.Delete();
      if ((Entity) this.AI_6 != (Entity) null)
        this.AI_6.Delete();
      if ((Entity) this.AI_7 != (Entity) null)
        this.AI_7.Delete();
      foreach (Prop gamePokerPotChip in this._8PlayerGamePokerPotChips)
      {
        if ((Entity) gamePokerPotChip != (Entity) null)
          gamePokerPotChip.Delete();
      }
      if ((Entity) this._8PlayerPokerGameTable1 != (Entity) null)
        this._8PlayerPokerGameTable1.Delete();
      if ((Entity) this._8PlayerPokerGameTable2 != (Entity) null)
        this._8PlayerPokerGameTable2.Delete();
      if ((Entity) this._8PlayerPokerGameTable3 != (Entity) null)
        this._8PlayerPokerGameTable3.Delete();
      foreach (Ped playerGamePokerPed in this._8PlayerGamePokerPeds)
      {
        if ((Entity) playerGamePokerPed != (Entity) null)
          playerGamePokerPed.Delete();
      }
      foreach (Prop playerGamePokerProp in this._8PlayerGamePokerProps)
      {
        if ((Entity) playerGamePokerProp != (Entity) null)
          playerGamePokerProp.Delete();
      }
      if ((Entity) this.Valet != (Entity) null)
        this.Valet.Delete();
      if ((Entity) this.ValetPed != (Entity) null)
        this.ValetPed.Delete();
      if ((Entity) this.ChairProp2 != (Entity) null)
        this.ChairProp2.Delete();
      if ((Entity) this.ChairProp != (Entity) null)
        this.ChairProp.Delete();
      if ((Entity) this.GunBase != (Entity) null)
        this.GunBase.Delete();
      foreach (Prop prop in this.GunComp)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      if (this.PenthouseRange != (Blip) null)
        this.PenthouseRange.Remove();
      if (this.PenthouseRange2 != (Blip) null)
        this.PenthouseRange2.Remove();
      if (Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeMale01 && this.OldCharacter != (GTA.Model) (string) null)
      {
        GTA.Model model = new GTA.Model(this.OldCharacter.Hash);
        model.Request(500);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(100);
          Function.Call(Hash._0x00A1CADD00108836, (InputArgument) Game.Player, (InputArgument) model.Hash);
          Function.Call(Hash._0x45EEE61580806D63, (InputArgument) Game.Player.Character.Handle);
        }
        model.MarkAsNoLongerNeeded();
        Game.Player.MaxArmor = 400;
        Game.Player.Character.Armor = 0;
        Game.Player.Character.Health = 200;
        Game.Player.Character.MaxHealth = 200;
      }
      foreach (Prop arcadeProp in this.ArcadeProps)
      {
        if ((Entity) arcadeProp != (Entity) null)
          arcadeProp.Delete();
      }
      foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
      {
        if ((Entity) seconardyArcadeProp != (Entity) null)
          seconardyArcadeProp.Delete();
      }
      if (this.ArcadeMissionBlip != (Blip) null)
        this.ArcadeMissionBlip.Remove();
      if (this.ArcadeMissionBlip1 != (Blip) null)
        this.ArcadeMissionBlip1.Remove();
      if (this.ArcadeMissionBlip2 != (Blip) null)
        this.ArcadeMissionBlip2.Remove();
      if (this.ArcadeMissionBlip3 != (Blip) null)
        this.ArcadeMissionBlip3.Remove();
      foreach (Prop arcadeMissionProp in this.ArcadeMissionProps)
      {
        if ((Entity) arcadeMissionProp != (Entity) null)
          arcadeMissionProp.Delete();
      }
      foreach (Vehicle arcadeMissionVehicle in this.ArcadeMissionVehicles)
      {
        if ((Entity) arcadeMissionVehicle != (Entity) null)
          arcadeMissionVehicle.Delete();
      }
      foreach (Ped arcadeMissionPed in this.ArcadeMissionPeds)
      {
        if ((Entity) arcadeMissionPed != (Entity) null)
          arcadeMissionPed.Delete();
      }
      foreach (Ped ped in this.ArcadeInteriorPeds2)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped arcadeInteriorPed in this.ArcadeInteriorPeds)
      {
        if ((Entity) arcadeInteriorPed != (Entity) null)
          arcadeInteriorPed.Delete();
      }
      foreach (Prop slotProp in this.SlotProps)
      {
        if ((Entity) slotProp != (Entity) null)
          slotProp.Delete();
      }
      foreach (Blip blip in this.InteriorBlip)
      {
        if (blip != (Blip) null)
          blip.Remove();
      }
      try
      {
        if (this.EndPointBlip != (Blip) null)
          this.EndPointBlip.Remove();
        if ((Entity) this.Sam1 != (Entity) null)
          this.Sam1.Delete();
        if ((Entity) this.Sam2 != (Entity) null)
          this.Sam2.Delete();
        if ((Entity) this.Sam3 != (Entity) null)
          this.Sam3.Delete();
        if (this.Sam1blip != (Blip) null)
          this.Sam1blip.Remove();
        if (this.Sam2blip != (Blip) null)
          this.Sam2blip.Remove();
        if (this.Sam3blip != (Blip) null)
          this.Sam3blip.Remove();
        if (this.SuppyGuards.Count > 0)
        {
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
        }
        if (this.DropBlip.Count > 0)
        {
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
        }
        if ((Entity) this.StockVeh != (Entity) null)
          this.StockVeh.Delete();
        if (this.SellStockProps.Count > 0)
        {
          foreach (Prop sellStockProp in this.SellStockProps)
          {
            if ((Entity) sellStockProp != (Entity) null)
              sellStockProp.Delete();
          }
        }
        if (this.SupplyGarageBlip != (Blip) null)
          this.SupplyGarageBlip.Remove();
      }
      catch
      {
      }
      if ((Entity) this.CutsenePed1 != (Entity) null)
        this.CutsenePed1.Delete();
      if ((Entity) this.CutsenePed2 != (Entity) null)
        this.CutsenePed2.Delete();
      if ((Entity) this.CutsenePed3 != (Entity) null)
        this.CutsenePed3.Delete();
      if ((Entity) this.CutsenePed4 != (Entity) null)
        this.CutsenePed4.Delete();
      foreach (Ped arcadePed in this.ArcadePeds)
      {
        if ((Entity) arcadePed != (Entity) null)
          arcadePed.Delete();
      }
      if (this.ArcadeBuyCam != (Camera) null)
      {
        Game.Player.WantedLevel = 0;
        Game.Player.Character.IsInvincible = false;
        Game.Player.Character.FreezePosition = false;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.ArcadeBuyCam.IsActive = false;
        this.ArcadeBuyCam.Destroy();
      }
      if (this.ArcadeCamera != (Camera) null)
      {
        Game.Player.WantedLevel = 0;
        Game.Player.Character.IsInvincible = false;
        if (this.IsInArcade)
          Game.Player.Character.Position = this.ArcadeBusinessEnter;
        Game.Player.Character.FreezePosition = false;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.ArcadeCamera.IsActive = false;
        this.ArcadeCamera.Destroy();
      }
      if ((Entity) this.Bartender != (Entity) null)
        this.Bartender.Delete();
      if ((Entity) this.PlayerV != (Entity) null)
        this.PlayerV.Delete();
      foreach (Vehicle enemyV in this.EnemyVs)
      {
        if ((Entity) enemyV != (Entity) null)
          enemyV.Delete();
      }
      foreach (Prop enemyOverlay in this.EnemyOverlays)
      {
        if ((Entity) enemyOverlay != (Entity) null)
          enemyOverlay.Delete();
      }
      foreach (Prop seconardyArcadeProp in this.SeconardyArcadeProps)
      {
        if ((Entity) seconardyArcadeProp != (Entity) null)
          seconardyArcadeProp.Delete();
      }
      if ((Entity) this.PLayerVehicle != (Entity) null)
        this.PLayerVehicle.Delete();
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if ((Entity) this.PLayerVehicle != (Entity) null)
        this.PLayerVehicle.Delete();
      if ((Entity) this.ArcadeChairA != (Entity) null)
        this.ArcadeChairA.Delete();
      if ((Entity) this.ArcadeChairB != (Entity) null)
        this.ArcadeChairB.Delete();
      if ((Entity) this.ArcadeVeh1 != (Entity) null)
        this.ArcadeVeh1.Delete();
      if ((Entity) this.ArcadeVeh2 != (Entity) null)
        this.ArcadeVeh2.Delete();
      if ((Entity) this.ArcadeVeh3 != (Entity) null)
        this.ArcadeVeh3.Delete();
      if ((Entity) this.ArcadeVeh4 != (Entity) null)
        this.ArcadeVeh4.Delete();
      if ((Entity) this.ArcadeVeh5 != (Entity) null)
        this.ArcadeVeh5.Delete();
      if ((Entity) this.ArcadeVeh6 != (Entity) null)
        this.ArcadeVeh6.Delete();
      if ((Entity) this.ArcadeVeh7 != (Entity) null)
        this.ArcadeVeh7.Delete();
      if ((Entity) this.ArcadeVeh8 != (Entity) null)
        this.ArcadeVeh8.Delete();
      if ((Entity) this.ArcadeVeh9 != (Entity) null)
        this.ArcadeVeh9.Delete();
      if ((Entity) this.ArcadeVeh10 != (Entity) null)
        this.ArcadeVeh10.Delete();
      if ((Entity) this.ArcadeVeh11 != (Entity) null)
        this.ArcadeVeh11.Delete();
      if (this.Arcade != (Blip) null)
        this.Arcade.Remove();
      if ((Entity) this.TargetPed != (Entity) null)
        this.TargetPed.Delete();
      if ((Entity) this.Avery != (Entity) null)
        this.Avery.Delete();
      if ((Entity) this.Pilot != (Entity) null)
        this.Pilot.Delete();
      if ((Entity) this.EscapeHeli != (Entity) null)
        this.EscapeHeli.Delete();
      if ((Entity) this.PatrolCar != (Entity) null)
        this.PatrolCar.Delete();
      foreach (Ped ped in this.Guard)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if (this.ArtPropCam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.ArtPropCam.IsActive = false;
        this.ArtPropCam.Destroy();
      }
      if ((Entity) this.CurrentArtProp != (Entity) null)
        this.CurrentArtProp.Delete();
      foreach (Prop artProp in this.ArtProps)
      {
        if ((Entity) artProp != (Entity) null)
          artProp.Delete();
      }
      foreach (Vehicle vehicle in this.EnemyVeh)
      {
        if ((Entity) vehicle != (Entity) null)
          vehicle.Delete();
      }
      foreach (Ped ped in this.EnemyAi)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.RouletteMarker2 != (Entity) null)
        this.RouletteMarker2.Delete();
      if ((Entity) this.RouletteMarker1 != (Entity) null)
        this.RouletteMarker1.Delete();
      if ((Entity) this.RouletteMarker != (Entity) null)
        this.RouletteMarker.Delete();
      if ((Entity) this.Plane != (Entity) null)
        this.Plane.Delete();
      if (this.PlaneBlip != (Blip) null)
        this.PlaneBlip.Remove();
      if (this.LocationBlip != (Blip) null)
        this.LocationBlip.Remove();
      if ((Entity) this.BasePlate2 != (Entity) null)
        this.BasePlate2.Delete();
      if ((Entity) this.BasePlate != (Entity) null)
        this.BasePlate.Delete();
      if ((Entity) this.VIPBlocker != (Entity) null)
        this.VIPBlocker.Delete();
      if (this.RaceCam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.RaceCam.IsActive = false;
        this.RaceCam.Destroy();
      }
      foreach (Blip checkPointBlip in this.CheckPointBlips)
      {
        if (checkPointBlip != (Blip) null)
          checkPointBlip.Remove();
      }
      if ((Entity) this.VehicleA != (Entity) null)
      {
        if ((Entity) this.VehicleA.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleA.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleA.Delete();
      }
      if ((Entity) this.VehicleB != (Entity) null)
      {
        if ((Entity) this.VehicleB.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleB.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleB.Delete();
      }
      if ((Entity) this.VehicleC != (Entity) null)
      {
        if ((Entity) this.VehicleC.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleC.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleC.Delete();
      }
      if ((Entity) this.VehicleD != (Entity) null)
      {
        if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleD.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleD.Delete();
      }
      if ((Entity) this.VehicleE != (Entity) null)
      {
        if ((Entity) this.VehicleD.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleE.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleE.Delete();
      }
      if ((Entity) this.VehicleF != (Entity) null)
      {
        if ((Entity) this.VehicleF.GetPedOnSeat(VehicleSeat.Driver) != (Entity) null)
          this.VehicleF.GetPedOnSeat(VehicleSeat.Driver).Delete();
        this.VehicleF.Delete();
      }
      if (this.FinishLineBLip != (Blip) null)
        this.FinishLineBLip.Remove();
      if (this.RaceBlip != (Blip) null)
        this.RaceBlip.Remove();
      if ((Entity) this.WheelProp2 != (Entity) null)
        this.WheelProp2.Delete();
      if ((Entity) this.WheelProp != (Entity) null)
        this.WheelProp.Delete();
      if ((Entity) this.Vendor1 != (Entity) null)
        this.Vendor1.Delete();
      if ((Entity) this.Vendor2 != (Entity) null)
        this.Vendor2.Delete();
      foreach (Ped ped in this.MainPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds2)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.AirVehicle != (Entity) null && (Entity) this.AirVehicle.GetPedOnSeat(VehicleSeat.Driver) == (Entity) null)
        this.AirVehicle.Delete();
      if ((Entity) this.Computer != (Entity) null)
      {
        if (this.IsinInterior)
          this.SpawnProp("ex_prop_monitor_01_ex", this.ComputerPos, this.Computer.Rotation);
        if (this.IsinInterior)
          ;
        this.Computer.Delete();
      }
      if ((Entity) this.AssistantPed != (Entity) null)
        this.AssistantPed.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if (this.WarehouseCam != (Camera) null)
      {
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.WarehouseCam.IsActive = false;
        this.WarehouseCam.Destroy();
        Game.Player.Character.FreezePosition = false;
      }
      if (this.DestoryVehicle != (Blip) null)
        this.DestoryVehicle.Remove();
      if ((Entity) this.VehicleMissioncar != (Entity) null)
        this.VehicleMissioncar.Delete();
      if ((Entity) this.VehicleId != (Entity) null)
        this.VehicleId.Delete();
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if ((Entity) this.VtoGet1 != (Entity) null)
        this.VtoGet1.Delete();
      if ((Entity) this.VtoGet2 != (Entity) null)
        this.VtoGet2.Delete();
      if ((Entity) this.VtoGet3 != (Entity) null)
        this.VtoGet3.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if (this.DropzoneBlip != (Blip) null)
        this.DropzoneBlip.Remove();
      if ((Entity) this.RentedVehicle != (Entity) null)
        this.RentedVehicle.Delete();
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Remove();
      if (this.GarageBlip != (Blip) null)
        this.GarageBlip.Remove();
      if (this.PenthouseBlip != (Blip) null)
        this.PenthouseBlip.Remove();
      if (this.MenuBlip != (Blip) null)
        this.MenuBlip.Remove();
      foreach (Ped ped in this.MiscPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.SMPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.Prizecar != (Entity) null)
        this.Prizecar.Delete();
      if ((Entity) this.Chair != (Entity) null)
        this.Chair.Delete();
      foreach (Prop prop in this.Champ)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop wheelMarker in this.WheelMarkers)
      {
        if ((Entity) wheelMarker != (Entity) null)
          wheelMarker.Delete();
      }
      foreach (Prop prop in this.Card_Deck)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop prop in this.Tables2)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop table in this.Tables)
      {
        if ((Entity) table != (Entity) null)
          table.Delete();
      }
      foreach (Prop chip in this.Chips)
      {
        if ((Entity) chip != (Entity) null)
          chip.Delete();
      }
      if ((Entity) this.WheelWinMarker != (Entity) null)
        this.WheelWinMarker.Delete();
      if ((Entity) this.TankerA != (Entity) null)
        this.TankerA.Delete();
      if ((Entity) this.TankerB != (Entity) null)
        this.TankerB.Delete();
      if ((Entity) this.TankerC != (Entity) null)
        this.TankerC.Delete();
      if ((Entity) this.TankerD != (Entity) null)
        this.TankerD.Delete();
      if ((Entity) this.TankerE != (Entity) null)
        this.TankerE.Delete();
      if ((Entity) this.TankerF != (Entity) null)
        this.TankerF.Delete();
      if ((Entity) this.TankerG != (Entity) null)
        this.TankerG.Delete();
      if ((Entity) this.TankerH != (Entity) null)
        this.TankerH.Delete();
      if ((Entity) this.Ball != (Entity) null)
        this.Ball.Delete();
      if ((Entity) this.TestV != (Entity) null)
        this.TestV.Delete();
      if ((Entity) this.FakeArcade != (Entity) null)
        this.FakeArcade.Delete();
      if ((Entity) this.UndergroundDoor != (Entity) null)
        this.UndergroundDoor.Delete();
    }

    public class SpawnS : Script
    {
      public Vector3 Vec { get; set; }

      public float Flo { get; set; }

      public string Pedhash { get; set; }

      public int Type { get; set; }

      public SpawnS()
      {
      }

      public SpawnS(Vector3 V, float F)
      {
        this.Vec = V;
        this.Flo = F;
      }

      public SpawnS(string S, int T, Vector3 V, float F)
      {
        this.Pedhash = S;
        this.Type = T;
        this.Vec = V;
        this.Flo = F;
      }

      public SpawnS(int T, Vector3 V, float F)
      {
        this.Type = T;
        this.Vec = V;
        this.Flo = F;
      }
    }

    public class PedTaskLoop : Script
    {
      public List<Vector3> Loop { get; set; }

      public int AtPoint { get; set; }

      public PedTaskLoop()
      {
      }

      public PedTaskLoop(List<Vector3> L, int Point) => this.Loop = L;
    }
  }
}
