using GTA;
using GTA.Math;
using GTA.Native;
using Microsoft.CSharp.RuntimeBinder;
using NativeUI;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace ExecutiveBusiness
{
  public class ExecutiveTower : Script
  {
    private static string MazeBank = "imp_dt1_11_cargarage_a";
    private static string MazeBankWest = "imp_sm_15_cargarage_a";
    private static string Arcadius = "imp_dt1_02_cargarage_a";
    private static string Lombank = "imp_sm_13_cargarage_a";
    private ScriptSettings Config_Garages;
    public string ADecor;
    public string ALighting;
    public string ANumbering;
    public string MDecor;
    public string MLighting;
    public string MNumbering;
    public string MWDecor;
    public string MWLighting;
    public string MWNumbering;
    public string LDecor;
    public string LLighting;
    public string LNumbering;
    private static MenuPool modMenuPool_Garages;
    private static UIMenu mainMenu_Garages;
    public UIMenu InteriorOptions_Garages;
    private static Vector3 MenuMarkerL_Garages;
    private static Vector3 MenuMarkerMB_Garages;
    private static Vector3 MenuMarkerA_Garages;
    private static Vector3 MenuMarkerMBW_Garages;
    private static string Garage_Garages;
    public bool Frozen;
    public BlipColor ArcadiusBlip_Colour;
    public Color ArcadiusMarkerColor;
    public string ArcadiusMarkerColorString;
    public BlipColor MazeBankBlip_Colour;
    public Color MazeBankMarkerColor;
    public string MazeBankMarkerColorString;
    public BlipColor MBWBlip_Colour;
    public Color MBWMarkerColor;
    public string MBWMarkerColorString;
    public BlipColor LombokBlip_Colour;
    public Color LombokMarkerColor;
    public string LombokMarkerColorString;
    private ScriptSettings MainConfigFile;
    public float BusinessUpgradeIncreaseGain = 75000f;
    public float BusinessUpgradeBasePrice = 125000f;
    public float IncreaseStockMinAmount = 25000f;
    public float IncreaseStockMaxAmount = 350000f;
    public float DecreaseStockMinAmount = 25000f;
    public float DecreaseStockMaxAmount = 350000f;
    public int BusinessLocation;
    public bool UseInduvidualTowerColors;
    public Vector3 Dockloc = new Vector3(3865f, 4463.66f, 2f);
    public Blip DockBlip;
    public Vector3 LotLoc = new Vector3(863f, 2173f, 51f);
    public Blip LotBlip;
    public Vector3 AircraftStorageLoc = new Vector3(1679f, 3238f, 40f);
    public Blip AircraftStorageMarker;
    public float LoungeSitRot;
    public Vector3 ModShopInfoMarker;
    public Vector3 ModShopOrderCar;
    public string TowerIn;
    public Vector3 MBTOfficeSitRespawnPos2 = new Vector3(-139f, -645.622f, 167.3f);
    public Vector3 MBTOfficeSitPos2 = new Vector3(-137f, -644.422f, 167.3f);
    public Vector3 MBTOfficeSitRespawnPos3 = new Vector3(-69.73879f, -804.39f, 241.8f);
    public Vector3 MBTOfficeSitPos3 = new Vector3(-69.216f, -803.8808f, 241.8f);
    public Vector3 ChangeBusinessNameCameraPos;
    public float ChangeBusinessNameCameraRotation;
    public bool PlayerChangingName;
    public Camera PlayerChangingNameCam;
    public Blip DestBlip;
    private bool firstTime = true;
    private string ModName = "Executive Business";
    private string Developer = "HKH191";
    private string Version = "1";
    public Vector3 MarkerEnter;
    public Vector3 MarkerExit;
    public Vector3 MenuMarker;
    public Vector3 RoofEnterMarker;
    public Vector3 RoofExitMarker;
    public Vector3 HeliSpawn;
    public Vector3 GarageMarker;
    public Vector3 CarSpawn;
    public Vector3 WherehouseMarker;
    public Vector3 WherehouseEnter;
    private ScriptSettings Config;
    private ScriptSettings OnlineInteriorsConfig;
    public int PurchasedGarageLevel1;
    public int PurchasedGarageLevel2;
    public int PurchasedGarageLevel3;
    public int PurchasedGarageModShop;
    private Keys Key1;
    public Vector3 BuyMarker;
    public Vector3 BuyMarker2;
    public int num;
    private MenuPool modMenuPool;
    private UIMenu Missions;
    private UIMenu VehicleGaragePool;
    private UIMenu mainMenu;
    private UIMenu methgarage;
    private UIMenu VehicleWherehouseOptions;
    private UIMenu ProductStock;
    public bool bought;
    public int purchaselvl;
    public int maxstocks;
    public float stocksvalue;
    public float profitMargin;
    public int stockscount;
    public int stockstimer;
    public int waittime;
    public int DisplayWait;
    public bool EnemySetup;
    public int Chooseenemynum;
    public Vehicle VehicleId;
    public bool VehicleSetup;
    private List<WeaponHash> weapons = Enum.GetValues(typeof (WeaponHash)).Cast<WeaponHash>().ToList<WeaponHash>();
    public string carid;
    public int vehiclemissionid;
    public bool setupdelivery;
    public Vector3 DeliveryMaker;
    public Blip DeliveryLoc;
    public Blip ballasBlip1;
    public Vector3 Deliverypoint;
    public UIMenu Garage;
    public UIMenu Sourcingmenu;
    public UIMenu SupplyRunsmenu;
    public UIMenu OrganizationOptions;
    public bool setupwantedfordelivery;
    public int waittimeforwanted;
    public Vehicle AirVehicle;
    public int BuzzardBought;
    public int FMJBought;
    public int A911Bought;
    public int X80Bought;
    public int SEVEN70Bought;
    public int wherehosuebought;
    public int cargaragebought;
    public VehicleHash VehicleIdentifier;
    public Vehicle VehicleName;
    public bool foundvehicleyet;
    public Vector3 Vehicleloc;
    public Blip VehicleMarker;
    public Vehicle Vehicletoget;
    public Vector3 VehicleSpawn;
    public bool hasgotvehicle;
    private Blip Enemy;
    private Ped EnemyPed;
    private Vector3 EnemyLoc;
    public System.Random VehicleLoc;
    public System.Random VehicleRan;
    public Vehicle VehicleMissioncar;
    public Vector3 VehicleLocation;
    public int Missionnum;
    public Blip DestoryVehicle;
    private System.Random RandomWanted;
    private System.Random randomwantedwait;
    private int triggerwanted;
    public int Aircraftstorage;
    public bool warnedplayer;
    public Vector3 ModShopEnter;
    public Vector3 ModShopExit;
    public Blip VehicleWarehouseMarker;
    public int GunLockerBought;
    public int MoneyVaultBought;
    public int DockBought;
    public int VehicleLotBought;
    public float SourcingPayout;
    public bool SourcingCheckingforDamage;
    public int AATrailerABought;
    public int AATrailerBBought;
    public int AATrailerCBought;
    public string OrganizationName;
    public UIMenu AssetRecoveryMenu;
    public bool TriggeredWanted;
    public int ValkyrieBought;
    public int AkulaBought;
    public int HunterBought;
    public int SavageBought;
    public int AnnihilatorBought;
    public Vehicle Vehicle1;
    public Vehicle Vehicle2;
    public Vehicle Vehicle3;
    public Blip ConvoyBlip1;
    public Blip ConvoyBlip2;
    public Blip ConvoyBlip3;
    public int convoysetup;
    public bool checkforconvoy;
    public int UseCustomWaitTime;
    public bool setWaittime;
    public Vector3 Radiopos;
    public int turretedlimo;
    public int assassinationmission;
    public int assassinationpayout;
    public Blip TowerBlip;
    public int Design;
    public Vector3 SleepPos;
    public Vector3 MBTOfficeSitRespawnPos;
    public Vector3 MBTOfficeSitPos;
    public bool sitting;
    public UIMenu Sourcingmenu2;
    public string SourcedVehicle;
    public bool NewVehicleSourcing;
    public float increaseGain;
    public AllStocks Allstocks;
    public UIMenu SpecialMissions;
    public List<Ped> Guards = new List<Ped>();
    public List<Ped> Driver = new List<Ped>();
    public Vehicle VtoGet;
    public Blip VtoGetBlip;
    public bool GotCar;
    public Vehicle VtoGet1;
    public Vehicle VtoGet2;
    public Vehicle VtoGet3;
    public int Vehiclesleft;
    public Blip DropzoneBlip;
    public Vector3 Dropzone;
    public bool VehicleisDamaged;
    public int Vehiclehealth;
    public Vehicle RentedVehicle;
    public bool startedRent;
    public int RentTimer;
    public int RentalvehicleHealth;
    public bool ISinPiracyScamMission;
    public int Piracymission;
    public int TimerLeft;
    public VehicleHash RandomVehicle;
    public bool HackhasStarted;
    public Vector3 GoPoint;
    public int StockTimer;
    public int StockTimer2;
    public float stocktoloose;
    private ScriptSettings ScriptConfig;
    public bool IsScriptEnabled;
    public Vector3 ChairPos = new Vector3(-126f, -641.625f, 167.3204f);
    public float P_Rotation = 97f;
    public bool IsSittinginCeoSeat;
    public string WarehousePos;
    public Camera WarehouseCam;
    public bool WCamOn;
    public bool IsinInterior;
    public Vector3 EnterMarkerA;
    public Vector3 EnterMarkerB;
    public Vector3 EnterMarkerC;
    public Vector3 ExitMarkerA;
    public Vector3 ExitMarkerB;
    public Vector3 ExitMarkerC;
    public string officetext = "Office";
    public bool CleanUpO1;
    public bool CleanUpO2;
    public bool CleanUpO3;
    public bool CleanUpO4;
    private int ao;
    private int bo;
    public string CurrentText = "HKH";
    public int currentFont = 5;
    public int currentColor = 1;
    private int OStage;
    private int OSMovie;
    private int OSF1;
    public float AssistantRot = 10f;
    public Vector3 AssistantChair = new Vector3(-139.1f, -633.8f, 167.9f);
    public Vector3 AssistantPos = new Vector3(-139.1157f, -633.6f, 167.9f);
    public Vector3 CEOChairPos = new Vector3(-126f, -641.625f, 167.9f);
    public string ChairModelCEO;
    public string ChairModelAssistant;
    public PedHash AssistantPedModelPedHash;
    public string AssistantPedModelString;
    public string AssistantPedModelType;
    public bool CreatedAssistant;
    public Prop AssistantChairProp;
    public Prop CEOChairProp;
    public Ped AssistantPed;
    public Ped ViewPed;
    public string SearchPedInput = "Aman";
    public Prop ChairProp;
    public Vector3 ArcadiusTowerPos = new Vector3(-116.292f, -606.989f, 35.28f);
    public Vector3 MazeBankTowerPos = new Vector3(-62.03f, -793.789f, 43f);
    public Vector3 LombokTowerPos = new Vector3(-1582.3f, -557.19f, 33.5f);
    public Vector3 MazeBankWestTowerPos = new Vector3(-1380f, -501.789f, 32f);
    public float CEO_ChairRot = -90f;
    public float Assistant_ChairRot = 180f;
    public Vector3 MazeBankWestSpawn;
    public Vector3 MazeBankSpawn;
    public Vector3 ArcadiusSpawn;
    public Vector3 LombokSpawn;
    private static string Saveloc;
    private static Vehicle VehicleA;
    public Vector3 VehicleAPos;
    private static Vehicle VehicleB;
    public Vector3 VehicleBPos;
    private static Vector3 Exit;
    public int towerIn;
    public Vector3 TowerPos = new Vector3(-1384f, -478f, 73f);
    private static string Path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankWestGarage//";
    private static string SaveDecalPath = "scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini";
    private static MenuPool CustomizemodMenuPool;
    private static UIMenu CustomizemainMenu;
    private static UIMenu CustomizeOptions;
    public SaveCar SC = new SaveCar();
    private static string GarageNum;
    private static Vector3 CustomizeMenuMarker = new Vector3(-1393f, -476f, 77f);
    private static string Decal;
    public bool freezeExtraChairProps;
    public int VehicleWarehouseBought;
    public string HostName = "Alan";
    public string Uicolour = "b";
    public ScriptSettings HostNameSettings;
    public Vector3 EnterMarkerAMazebank;
    public Vector3 EnterMarkerBMazebank;
    public Vector3 EnterMarkerCMazebank;
    public Vector3 EnterMarkerAArcaduis;
    public Vector3 EnterMarkerBArcaduis;
    public Vector3 EnterMarkerCArcaduis;
    public Vector3 EnterMarkerALombok;
    public Vector3 EnterMarkerBLombok;
    public Vector3 EnterMarkerCLombok;
    public Vector3 EnterMarkerAMazebankWest;
    public Vector3 EnterMarkerBMazebankWest;
    public Vector3 EnterMarkerCMazebankWest;
    public Vector3 ExitMarkerMazeBank;
    public Vector3 ExitMarkerArcadius;
    public Vector3 ExitMarkerLombok;
    public Vector3 ExitMarkerMazeBankWest;
    public Vector3 MenuMarkerMazeBank = new Vector3(-83.41f, -816.838f, 35f);
    public Vector3 MenuMarkerArcadius = new Vector3(-144.336f, -577.952f, 31f);
    public Vector3 MenuMarkerLombok = new Vector3(-1536.83f, -578.003f, 24f);
    public Vector3 MenuMarkerMazeBankWest = new Vector3(-1363.9f, -472.358f, 31f);
    public Vector3 Vehicle1Loc = new Vector3(-1391.87f, -480f, 57f);
    public Vector3 Vehicle2Loc = new Vector3(-1389.51f, -477.102f, 57f);
    public Vector3 Vehicle3Loc = new Vector3(-1386.06f, -473.006f, 57f);
    public Vector3 Vehicle4Loc = new Vector3(-1382.66f, -471.287f, 57f);
    public Vehicle Vehicle4;
    public Vector3 Vehicle5Loc = new Vector3(-1379.43f, -471.817f, 57f);
    public Vehicle Vehicle5;
    public Vector3 Vehicle6Loc = new Vector3(-1373.43f, -474.25f, 57f);
    public Vehicle Vehicle6;
    public Vector3 Vehicle7Loc = new Vector3(-1370.94f, -480.595f, 57f);
    public Vehicle Vehicle7;
    public Vector3 Vehicle8Loc = new Vector3(-1391.87f, -480f, 62f);
    public Vehicle Vehicle8;
    public Vector3 Vehicle9Loc = new Vector3(-1389.51f, -477.102f, 62f);
    public Vehicle Vehicle9;
    public Vector3 Vehicle10Loc = new Vector3(-1386.06f, -473.006f, 62f);
    public Vehicle Vehicle10;
    public Vector3 Vehicle11Loc = new Vector3(-1382.66f, -471.287f, 62f);
    public Vehicle Vehicle11;
    public Vector3 Vehicle12Loc = new Vector3(-1379.43f, -471.817f, 62f);
    public Vehicle Vehicle12;
    public Vector3 Vehicle13Loc = new Vector3(-1373.43f, -474.25f, 62f);
    public Vehicle Vehicle13;
    public Vector3 Vehicle14Loc = new Vector3(-1370.94f, -480.595f, 62f);
    public Vehicle Vehicle14;
    public Vector3 Vehicle15Loc = new Vector3(-1391.87f, -480f, 67f);
    public Vehicle Vehicle15;
    public Vector3 Vehicle16Loc = new Vector3(-1389.51f, -477.102f, 67f);
    public Vehicle Vehicle16;
    public Vector3 Vehicle17Loc = new Vector3(-1386.06f, -473.006f, 67f);
    public Vehicle Vehicle17;
    public Vector3 Vehicle18Loc = new Vector3(-1382.66f, -471.287f, 67f);
    public Vehicle Vehicle18;
    public Vector3 Vehicle19Loc = new Vector3(-1379.43f, -471.817f, 67f);
    public Vehicle Vehicle19;
    public Vector3 Vehicle20Loc = new Vector3(-1373.43f, -474.25f, 67f);
    public Vehicle Vehicle20;
    private MenuPool EXmodMenuPool;
    private UIMenu GarageMenu;
    private UIMenu EXmainMenu;
    public Vector3 EntryMarker = new Vector3(-1384f, -478f, 73f);
    public string path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankWestGarage//";
    public Vehicle SaveVehicle;
    public Vector3 RemoveMarker = new Vector3(-1388.21f, -487.512f, 56f);
    private MenuPool modMenuPool2;
    private UIMenu RemoveMenu;
    private UIMenu mainMenu2;
    public string EXGarageNum;
    public Camera Cam;
    public bool CameraOn;
    public Vector3 GarageCamPos = new Vector3(-1396f, -482f, 63f);
    public float GarageCamRot = -86f;
    private Vector3 P;
    public bool ISinviewMode;
    public bool SetupMod;
    public int Location;
    public Vector3 LastEnterMarker;
    public float M;
    public string Price = "000";
    public string Model = "";
    public string man = "";
    public string ListPath = "scripts\\HKH191sBusinessMods\\ExecutiveBusiness\\MilitaryTrader\\AllVehicles.ini";
    public bool PurchasedVehicle_AwaitMenuClose;
    public bool CheckedDoorGunLocker;
    public bool CheckedDoorMoneyVault;
    public Prop GunLockerDoor;
    public Prop MoneyVaultDoor;
    public bool isGLOpen;
    public bool isMVOpen;
    public List<Prop> Chairs = new List<Prop>();
    public string TEMP_CurrentText = "HKH";
    public int TEMP_currentFont = 5;
    public int TEMP_currentColor = 1;
    public List<string> ExProp = new List<string>();
    private List<string> CashProp = new List<string>();
    public int AmountOfCash;
    public bool StockSupplyRunMission;
    public bool SellStockDeliveryMission;
    public Vehicle StockVeh;
    public List<Vector3> SellStockLoc = new List<Vector3>();
    public int SellStockPointsBeenAt;
    public List<Prop> SellStockProps = new List<Prop>();
    public Prop SellStockProp1;
    public Prop SellStockProp2;
    public Prop SellStockProp3;
    public Prop SellStockProp4;
    public Prop SellStockProp5;
    public Prop SellStockProp6;
    public Prop SellStockProp7;
    public Prop SellStockProp8;
    public Prop SellStockProp9;
    public List<string> CrateProps = new List<string>()
    {
      "ex_prop_crate_xldiam",
      "ex_prop_crate_wlife_sc",
      "ex_prop_crate_wlife_bc",
      "ex_prop_crate_watch",
      "ex_prop_crate_tob_sc",
      "ex_prop_crate_tob_bc",
      "ex_prop_crate_shide",
      "ex_prop_crate_pharma_sc",
      "ex_prop_crate_pharma_bc",
      "ex_prop_crate_oegg",
      "ex_prop_crate_narc_sc",
      "ex_prop_crate_narc_bc",
      "ex_prop_crate_money_sc",
      "ex_prop_crate_money_bc",
      "ex_prop_crate_minig",
      "ex_prop_crate_med_sc",
      "ex_prop_crate_med_bc",
      "ex_prop_crate_jewels_sc",
      "ex_prop_crate_jewels_racks_sc",
      "ex_prop_crate_jewels_racks_bc",
      "ex_prop_crate_jewels_bc",
      "ex_prop_crate_highend_pharma_sc",
      "ex_prop_crate_highend_pharma_bc",
      "ex_prop_crate_gems_sc",
      "ex_prop_crate_gems_bc",
      "ex_prop_crate_furjacket_sc",
      "ex_prop_crate_furjacket_bc",
      "ex_prop_crate_freel",
      "ex_prop_crate_expl_sc",
      "ex_prop_crate_expl_bc",
      "ex_prop_crate_elec_sc",
      "ex_prop_crate_elec_bc",
      "ex_prop_crate_clothing_sc",
      "ex_prop_crate_clothing_bc",
      "ex_prop_crate_closed_sc",
      "ex_prop_crate_closed_rw",
      "ex_prop_crate_closed_mw",
      "ex_prop_crate_closed_ms",
      "ex_prop_crate_closed_bc",
      "ex_prop_crate_bull_sc_02",
      "ex_prop_crate_bull_bc_02",
      "ex_prop_crate_biohazard_sc",
      "ex_prop_crate_biohazard_bc",
      "ex_prop_crate_art_sc",
      "ex_prop_crate_art_bc",
      "ex_prop_crate_art_02_sc",
      "ex_prop_crate_art_02_bc",
      "ex_prop_crate_ammo_sc",
      "ex_prop_crate_ammo_bc"
    };
    public List<Vector3> DropPoint = new List<Vector3>();
    public List<Blip> DropBlip = new List<Blip>();
    public List<Ped> SuppyGuards = new List<Ped>();
    public bool CreateSupplyVehicle;
    public bool GotVehicle;
    public int SupplyMission = 1;
    public int missionnum;
    public Blip SupplyGarageBlip;
    public Vector3 Sam1Loc;
    public Vector3 Sam2Loc;
    public Vector3 Sam3Loc;
    public Vehicle Sam1;
    public Vehicle Sam2;
    public Vehicle Sam3;
    public Blip Sam1blip;
    public Blip Sam2blip;
    public Blip Sam3blip;
    public Blip EndPointBlip;
    public Vector3 EndPointVec;
    public List<Vector3> AssistantpPostion;
    public List<float> AssistantpRotation;
    public bool AssistantCreatedPeds;
    private Vector3 Assistant_1 = new Vector3(-139.1157f, -634.3423f, 167.9f);
    private Vector3 Assistant_2 = new Vector3(-1379.47f, -477.5772f, 71f);
    private Vector3 Assistant_3 = new Vector3(-1570.8f, -575.1425f, 107.5f);
    private UIMenu weaponsMenu;
    public Vector3 GunLockerMarker;
    private UIMenu MK2Pumpshotgun;
    private UIMenu MK2SNSPistol;
    private UIMenu MK2Revolver;
    private UIMenu Mk2SpecialCarbine;
    private UIMenu MK2Bullpup;
    private UIMenu MK2MarksmanRifle;
    private UIMenu MK2Pistol;
    private UIMenu MK2SMG;
    private UIMenu MK2LMG;
    private UIMenu MK2Carbine;
    private UIMenu MK2AssaultRifle;
    private UIMenu MK2Sniper;
    private MenuPool GunmodMenuPool;
    private UIMenu GunmainMenu;
    public int Tintscount = 32;
    public Vector3 MazeBankGunLocker = new Vector3(-82.9624f, -802.754f, 242.5f);
    public Vector3 ArcadiusGunLocker = new Vector3(-124.166f, -639.419f, 167.5f);
    public Vector3 MazeBankWestGunLocker = new Vector3(-1374.6f, -462.811f, 71f);
    public Vector3 LombokGunLocker = new Vector3(-1555.5f, -572.4f, 107.5f);
    public bool Read;
    private MenuPool MoneymodMenuPool;
    private UIMenu MoneymainMenu;
    public float MoneyStored;
    public float Commission;
    public UIMenu MoneyMenu;
    public Vector3 MoneyStorageMarker;
    public DateTime Date;
    public Vector3 MazeBankVault = new Vector3(-81.6547f, -799.386f, 242.5f);
    public Vector3 ArcadiusVault = new Vector3(-123.875f, -643.292f, 167.5f);
    public Vector3 MazeBankWestVault = new Vector3(-1370.88f, -462.07f, 71f);
    public Vector3 LombokVault = new Vector3(-1553.15f, -575.316f, 107.5f);
    public bool read;
    public readonly List<object> VaultdoorsL = new List<object>()
    {
      (object) "ex_prop_safedoor_office3c_l",
      (object) "ex_prop_safedoor_office3a_l",
      (object) "ex_prop_safedoor_office2a_l",
      (object) "ex_prop_safedoor_office1c_l",
      (object) "ex_prop_safedoor_office1b_l",
      (object) "ex_prop_safedoor_office1a_l"
    };
    public readonly List<object> VaultdoorsR = new List<object>()
    {
      (object) "ex_prop_safedoor_office3c_r",
      (object) "ex_prop_safedoor_office3a_r",
      (object) "ex_prop_safedoor_office2a_r",
      (object) "ex_prop_safedoor_office1c_r",
      (object) "ex_prop_safedoor_office1b_r",
      (object) "ex_prop_safedoor_office1a_r"
    };
    public SubBusinesses CargoWarehouseScript;
    public VehicleWarehouse VehicleWarehouseScript;
    public ScriptSettings WarehouseConfig;
    public UIResRectangle RectangleGUI = new UIResRectangle(new Point(0, 0), new Size(0, 0));
    public List<UIMenu> GUIMenus = new List<UIMenu>();
    public int CurrentWarehousePrice;
    public int CurrentWarehouseIndex;
    public Scaleform GUIscaleform;
    public int GUIMT;
    public float GUIPosY;
    public float GUIPosX;
    public bool AdhawlScaleOn;
    public bool SecuroservCargoOn;
    public bool SecuroservVehicleOn;
    public bool HangerCargoCrateGUION;
    public bool NightclubManagementOn;
    public bool BunkerLogisiticsGUIOn;
    public int frame;
    public float Screen;
    public float Tab;
    public bool GUIOn;
    public bool ShowingOverlay;
    public bool SellingCargo;
    public bool StealingCargo;
    public int OverlayIndex;
    public int SellType;
    public int GUIAPP;
    public int GUIBIX;
    public bool GUICheckBool;
    public GTA.Control Key = GTA.Control.Attack;
    public GTA.Control BackKey = GTA.Control.Aim;
    public string SS_Name = "HKH191";
    public string SS_Company = "Executive Office";
    public int SourceCrateCostMultiplier;
    public int SellCrateCostMultiplier;
    public int SourceCrateAmtMultiplier;
    public int SellCrateAmtMultiplier;
    public int SS_WarehousesOwned = 1;
    public int SS_CollectionsFailed;
    public int SS_CollectionsCompleted = 4;
    public int SS_TotalSalesMade = 11;
    public int SS_TotalSalesFailed = 1;
    public int SS_TotalEarnings = 250000;
    public int SS_VehicleWarehouseTotalEarnings = 250000;
    public int SS_Warehouse1Index = 5;
    public int SS_Warehouse1Stock = 7;
    public int SS_Warehouse2Index = 6;
    public int SS_Warehouse2Stock = 21;
    public int SS_Warehouse3Index = 1;
    public int SS_Warehouse3Stock = 2;
    public int SS_Warehouse4Index = 14;
    public int SS_Warehouse4Stock = 8;
    public int SS_Warehouse5Index = 11;
    public int SS_Warehouse5Stock = 60;
    public float SS_Warehouse1Rating;
    public int SS_Warehouse1SalesMade;
    public int SS_Warehouse1SalesFailed;
    public int SS_Warehouse1LifetimeEarnings;
    public int SS_Warehouse1SpecialItems = 3;
    public float SS_Warehouse2Rating;
    public int SS_Warehouse2SalesMade;
    public int SS_Warehouse2SalesFailed;
    public int SS_Warehouse2LifetimeEarnings;
    public int SS_Warehouse2SpecialItems = 3;
    public float SS_Warehouse3Rating;
    public int SS_Warehouse3SalesMade;
    public int SS_Warehouse3SalesFailed;
    public int SS_Warehouse3LifetimeEarnings;
    public int SS_Warehouse3SpecialItems = 3;
    public float SS_Warehouse4Rating;
    public int SS_Warehouse4SalesMade;
    public int SS_Warehouse4SalesFailed;
    public int SS_Warehouse4LifetimeEarnings;
    public int SS_Warehouse4SpecialItems = 3;
    public float SS_Warehouse5Rating;
    public int SS_Warehouse5SalesMade;
    public int SS_Warehouse5SalesFailed;
    public int SS_Warehouse5LifetimeEarnings;
    public int SS_Warehouse5SpecialItems = 3;
    public int SS_VehiclesExportedSuccess = 45;
    public int SS_VehiclesExportedFail = 45;
    public int SS_VehicleSalesMade;
    public int SS_VehicleStealSuccess = 5;
    public int SS_VehicleStealFail = 5;
    public int SS_VehiclesStolenSuccess = 5;
    public int SS_VehiclesStolenFail = 1;
    public int SS_TotalExportEarnings = 1250000;
    public int SS_SpecialItems = 3;
    public int VehicleWarehouseIndex = 3;
    public int SS_VehicleWarehouseLoc = 4;
    public int SS_Warehouse1CurrentValue = 241000;
    public int SS_Warehouse2CurrentValue = 210000;
    public int SS_Warehouse3CurrentValue = 180000;
    public int SS_Warehouse4CurrentValue = 311000;
    public int SS_Warehouse5CurrentValue = 271000;
    public float SS_VehiclesTotalCurrentValue;
    public int SS_CurrentVehiclesAmt;
    public float SS_SuccessRate = 8f;
    public float SS_SaleSuccessRate = 98f;
    public float SS_VehiclesExportedTotal = 91f;
    public float SS_StealSuccessTotal = 96f;
    public float SS_VehiclesStolenTotal = 98f;
    public int SS_SourceVehicleWait;
    public int WarehouseSelected;
    public int VehiclesInWarehouse = 12;
    public List<ExecutiveTower.CargoWarehouseData> CargoWarehouses = new List<ExecutiveTower.CargoWarehouseData>()
    {
      new ExecutiveTower.CargoWarehouseData(0, 0, 265000, 16, new Vector3(234.2376f, -1946.627f, 23.1f), "Convenience Store Lockup", "Rancho", "Rancho Warehouse", 250000, "DYN_MPWH_12"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 325000, 16, new Vector3(896.4013f, -1035.933f, 35.7f), "Celltowa Unit", "La Mesa", "La Mesa Warehouse", 318000, "DYN_MPWH_3"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 375000, 16, new Vector3(-1082.821f, -1261.822f, 4.6f), "White Widow Garage", "La Puerta", "La Puerta Warehouse", 360000, "DYN_MPWH_2"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 380000, 16, new Vector3(51.31f, -2570.59f, 5f), "Pacific Bait Storage", "Elysian Island 1", "Elysian Island Warehouse", 376000, "DYN_MPWH_1"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 400000, 16, new Vector3(274.46f, -3015.293f, 4.69f), "Pier 400 Utility Building", "Elysian Island", "Elysian Island Warehouse", 392000, "DYN_MPWH_9"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 412000, 16, new Vector3(-424.789f, 185.59f, 79.8f), "Foreclosed Garage", "West Vinewood", "West Vinewood Warehouse", 400000, "DYN_MPWH_5"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 902000, 42, new Vector3(1569.81f, -2130.083f, 77.33f), "GEE Warehouse", "El Burro Heights", "El Burro Heights Warehouse", 880000, "DYN_MPWH_10"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 914000, 42, new Vector3(-1268.769f, -812.7471f, 16.108f), "Derriere Lingerie Backlot", "Del Perro", "Del Perro Warehouse", 902000, "DYN_MPWH_7"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 931000, 42, new Vector3(-528.27f, -1784.095f, 20.55f), "Fridgit Annexe", "La Puerta", "La Puerta Warehouse", 925000, "DYN_MPWH_13"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 952000, 42, new Vector3(359.2f, 326.078f, 102.88f), "Discount Retail Unit", "Downtown Vinewood", "Downtown Vinewood Warehouse", 948000, "DYN_MPWH_10"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 976000, 42, new Vector3(-295.311f, -1353.118f, 30.31f), "Disused Factory Outlet", "Strawberry", "Strawberry Warehouse", 971000, "DYN_MPWH_14"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 1002000, 42, new Vector3(-315.2554f, -2697.967f, 6.55f), "LS Marine Building 3", "Elysian Island", "Elysian Island Warehouse", 994000, "DYN_MPWH_11"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 1010000, 42, new Vector3(540.4222f, -1945.05f, 23.98f), "Old Power Station", "Rancho", "Rancho Warehouse", 1000000, "DYN_MPWH_4"),
      new ExecutiveTower.CargoWarehouseData(0, 1, 1025000, 42, new Vector3(500.0675f, -651.895f, 23.9f), "Railyard Warehouse", "La Mesa", "La Mesa Warehouse", 1017000, "DYN_MPWH_12"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 1910000, 111, new Vector3(1013.557f, -2150.798f, 30.53f), "Wholesale Furniture", "Cypress Flats", "Cypress Flats Warehouse", 1900000, "DYN_MPWH_18"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 2165000, 111, new Vector3(-262.9621f, 202.4988f, 84.37f), "West Vinewood Backlot", "West Vinewood", "West Vinewood Warehouse", 2135000, "DYN_MPWH_20"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 2400000, 111, new Vector3(-1070.599f, -2003.346f, 14.79f), "Xero Gas Factory", "LSIA", "LSIA Warehouse", 2365000, "DYN_MPWH_6"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 2630000, 111, new Vector3(962.5995f, -1557.725f, 29.8f), "Logistics Depot", "La Mesa", "La Mesa Warehouse", 2600000, "DYN_MPWH_21"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 3000000, 111, new Vector3(-873.377f, -2734.696f, 12.92f), "Bilgeco Warehouse", "LSIA", "LSIA Warehouse", 2825000, "DYN_MPWH_8"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 3100000, 111, new Vector3(95.899f, -2216.529f, 5.171f), "Walker & Sons Warehouse", "Banning", "Banning Warehouse", 3040000, "DYN_MPWH_16"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 3300000, 111, new Vector3(1018.735f, -2511.857f, 27.47f), "Cypress Warehouses", "Cypress Flats", "Cypress Flats Warehouse", 3265000, "DYN_MPWH_19"),
      new ExecutiveTower.CargoWarehouseData(0, 2, 3550000, 111, new Vector3(759.7921f, -899.2148f, 24.21f), "Darnel Bros Warehouse", "La Mesa", "La Mesa Warehouse", 3500000, "DYN_MPWH_17"),
      new ExecutiveTower.CargoWarehouseData(0, 0, 995000, 16, new Vector3(137.067f, -2472.874f, 5.1f), "Seweage Co", "Chum St", "Chum St Warehouse", 975000, ""),
      new ExecutiveTower.CargoWarehouseData(0, 0, 1100000, 16, new Vector3(675.2f, -2726.29f, 6.17f), "Fuel Station Warehouse", "Elysian Island Island", "Elysian Island Warehouse", 1150000, ""),
      new ExecutiveTower.CargoWarehouseData(0, 1, 2055000, 42, new Vector3(-520.1091f, -2903.51f, 5f), "Post Op Warehouse", "Elysian Island", "Elysian Island Warehouse", 2045000, ""),
      new ExecutiveTower.CargoWarehouseData(0, 2, 2055000, 111, new Vector3(1234.361f, -3201.442f, 4.52f), "United Stats Post Warehouse", "Buccaneer Way", "Buccaneer Way Warehouse", 2045000, ""),
      new ExecutiveTower.CargoWarehouseData(0, 2, 2055000, 111, new Vector3(-1327.592f, -237.636f, 41.71f), "Rockford Hills Storage", "Rockford Hills", "Rockford Hills Warehouse", 2045000, "")
    };
    public List<ExecutiveTower.VehicleWarehouseData> VehicleWarehouses = new List<ExecutiveTower.VehicleWarehouseData>()
    {
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(804.2842f, -2224.391f, 28.4f), "Cypress Flats Vehicle Warehouse", "Cypress Flats", "IE_WH_TXD_1", 2675000, 2700000, "There's no more discreet place to locate a gigantic storage unit than in a neighborhood full of other gigantic storage units. And compared to them, whatever you're planning will almost look legal."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(-66.34f, -1827.459f, 25.9f), "Davis Vehicle Warehouse", "Davis", "IE_WH_TXD_2", 2495000, 2500000, "Does it qualify as a bonded warehouse if the government just doesn't know it exists? We think so, and we've got another warehouse full of lawyers who'll say the same. On the market for a limited time only."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(1763.221f, -1654.817f, 111.6f), "El Burro Heights Vehicle Warehouse", "El Burro Heights", "IE_WH_TXD_3", 1635000, 1700000, "Who would locate an off-the-books vehicle depot in the middle of a suburban wasteland where the white picket fences got burned for fuel a decade ago? A visionary venture capitalist with an eye on privacy, that's who."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(144.3986f, -3002.219f, 6.03f), "Elysian Island Vehicle Warehouse", "lysian Island", "IE_WH_TXD_4", 1950000, 2000000, "In a recent survey of warehouse owners in the port area of Los Santos, 94% self-identity as radical entrepreneurs while only 2% could spell the word 'tax'. Welcome home."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(998.3342f, -1858.597f, 29.88f), "La Mesa Vehicle Warehouse", "La Mesa", "IE_WH_TXD_5", 1500000, 1550000, "Sure, this part of La Mesa won the LSPD's 'Most Gang-Related Stabbings' award three years running. But the previous owner of this spacious depot had the largest collection of authentic Customs and Border Protection agency badges in the state, and his widow is throwing them in as a sweetener. You can't say fairer than that."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(-634.8254f, -1780.845f, 23f), "La Puerta Vehicle Warehouse", "La Puerta", "IE_WH_TXD_6", 2735000, 2750000, "If buying a red brick warehouse in a blue collar neighborhood and filling it with unregistered super cars doesn't count as gentrification, then nothing does. Throw in a flat white served in a chemistry beaker and consider this community regenerated."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(-1156.016f, -2174.042f, 12.21f), "LSIA Vehicle Warehouse", "LSIA", "IE_WH_TXD_7", 2170000, 2200000, "If you want your business to inspire the masses, this is the location for you. Because when they're queuing for another cavity search at LSIA, the sight of you stepping off your private jet to take delivery of a million dollar hypercar will be just the motivation they need to get off their asses and start being incredibly rich."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(-512.1462f, -2198.591f, 5.39f), "LSIA Vehicle Warehouse", "LSIA", "IE_WH_TXD_8", 2300000, 2350000, "It's a sad day for democracy when political correctness, liberal media elites and nineteen counts of human trafficking conspire to bring down one of the oldest storage companies in the state. Lesson learned: don't deal in goods that can testify against you in court, and this place could serve you for decades to come."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(1211.081f, -1262.385f, 34.22f), "Murrieta Heights Vehicle Warehouse", "Murrieta Heights", "IE_WH_TXD_9", 2850000, 3000000, "Here at SecuroServ, we have a dream that one day everyone living in Murrieta Heights will be a billionaire crimelord with an enormous portfolio of nearly-new luxury cars. But we also know that every journey of a thousand miles begins with a single warehouse full of stolen goods. Step up, be the hope, pocket the change."),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(254.6f, -3057f, 4.8f), "Elysian Island Vehicle Warehouse", "Elysian Island", "", 1850000, 2000000, "A Custom Warehouse Located at Elysian Island "),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(943f, -1494f, 29.08f), "La Mesa Vehicle Warehouse", "La Mesa", "", 2250000, 2300000, "A Custom Warehouse Located at La Mesa "),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(-2036.8f, -272.4f, 22.38f), "Pacific Bluffs Vehicle Warehouse", "Pacific Bluffs", "", 2450000, 2500000, "A Custom Warehouse Located at Pacific Bluffs "),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(544.3f, -211.5f, 52.55f), "Hawick Vehicle Warehouse", "Hawick", "", 1450000, 1500000, "A Custom Warehouse Located at Hawick"),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(39.9f, -1283.7f, 28.28f), "Strawberry Vehicle Warehouse", "Strawberry", "", 1950000, 2000000, "A Custom Warehouse Located at Strawberry"),
      new ExecutiveTower.VehicleWarehouseData(0, new Vector3(497.4f, -635.5f, 23.94f), "La Mesa Vehicle Warehouse", "La Mesa", "", 1950000, 2000000, "A Custom Warehouse Located at La Mesa (2)")
    };
    public int Lastmodel;
    public int lastValidSkin;
    public bool SwitchModel;
    public List<Vector3> SelectedSellPoints = new List<Vector3>();
    public List<Vector3> CompletedSellPoints = new List<Vector3>();
    public List<Vector3> GroundDropPoint_BC = new List<Vector3>()
    {
      new Vector3(338.4105f, 3564.933f, 33.46082f),
      new Vector3(90.74469f, 3734.106f, 40.01419f),
      new Vector3(360.1537f, 4443.778f, 62.92328f),
      new Vector3(1316.729f, 4328.159f, 38.12376f),
      new Vector3(1838.777f, 4822.32f, 44.27086f),
      new Vector3(2043.971f, 4984.791f, 40.8699f),
      new Vector3(2436.609f, 4990.096f, 46.02332f),
      new Vector3(2591.881f, 4649.492f, 33.62912f),
      new Vector3(2718.125f, 4274.942f, 47.24967f),
      new Vector3(2488.223f, 3734.939f, 42.97411f),
      new Vector3(2176.326f, 3507.188f, 45.4706f),
      new Vector3(2396.697f, 3323.55f, 47.6274f),
      new Vector3(2635.238f, 3267.645f, 55.22104f),
      new Vector3(1987.776f, 3029.115f, 47.04488f),
      new Vector3(1741.064f, 3043.006f, 61.3792f),
      new Vector3(1577.296f, 2906.428f, 56.80774f),
      new Vector3(1123.176f, 2660.472f, 37.99625f),
      new Vector3(750.7753f, 2565.746f, 75.84059f),
      new Vector3(393.6532f, 2582.341f, 43.51351f),
      new Vector3(410.9716f, 2980.257f, 40.81686f),
      new Vector3(264.5997f, 3179.692f, 42.51227f),
      new Vector3(-234.4132f, 3087.198f, 38.14804f),
      new Vector3(-629.2133f, 2918.847f, 14.99539f),
      new Vector3(-1024.824f, 2776.701f, 24.42429f),
      new Vector3(-1493.264f, 2779.57f, 19.52092f),
      new Vector3(-1622.469f, 3200.645f, 30.25848f),
      new Vector3(-1721.159f, 2636.903f, 0.9020873f),
      new Vector3(-2772.632f, 2710.068f, 2.152616f),
      new Vector3(-1911.859f, 2047.034f, 140.7344f),
      new Vector3(-264.4362f, 2189.669f, 129.7881f),
      new Vector3(-287.0154f, 2558.63f, 73.35431f),
      new Vector3(-109.3444f, 2802.475f, 53.58705f),
      new Vector3(178.8037f, 2239.836f, 90.10175f),
      new Vector3(814.9496f, 2184.514f, 52.28234f),
      new Vector3(1238.013f, 1852.569f, 79.6578f),
      new Vector3(1528.807f, 1719.899f, 110.1068f),
      new Vector3(2323.921f, 2538.036f, 46.66751f),
      new Vector3(2981.492f, 3487.853f, 71.25694f),
      new Vector3(2893.471f, 4469.159f, 48.09846f),
      new Vector3(3321.512f, 5149.677f, 18.70039f),
      new Vector3(2206.274f, 5596.936f, 53.60205f)
    };
    public List<Vector3> GroundDropPoint_LS = new List<Vector3>()
    {
      new Vector3(-262.0311f, 195.8023f, 85.16026f),
      new Vector3(-1487.499f, -201.5679f, 50.39709f),
      new Vector3(-1422.425f, -240.4453f, 46.37913f),
      new Vector3(-1318.59f, -232.9813f, 43.02388f),
      new Vector3(-1169.022f, -751.374f, 19.22467f),
      new Vector3(-1207.11f, -1074.41f, 8.312729f),
      new Vector3(-754.6543f, -1038.178f, 12.79302f),
      new Vector3(-452.0849f, -940.5854f, 23.66427f),
      new Vector3(-331.9252f, -757.4856f, 53.35413f),
      new Vector3(36.6026f, -411.8505f, 40.0701f),
      new Vector3(334.5783f, -213.6587f, 54.08014f),
      new Vector3(579.2178f, 130.9492f, 98.041f),
      new Vector3(137.2357f, -242.9576f, 51.5365f),
      new Vector3(477.3281f, -581.4378f, 28.6183f),
      new Vector3(500.6329f, -506.8322f, 25.34557f),
      new Vector3(474.9978f, -1281.376f, 29.59866f),
      new Vector3(490.2281f, -1335.528f, 29.32614f),
      new Vector3(488.9641f, -1507.831f, 29.28663f),
      new Vector3(552.4913f, -1826.242f, 25.17233f),
      new Vector3(545.2916f, -1941.088f, 24.98512f),
      new Vector3(412.9511f, -2066.52f, 21.47118f),
      new Vector3(90.98637f, -2233.042f, 6.03968f),
      new Vector3(-253.1606f, -2254f, 7.900317f),
      new Vector3(-339.4914f, -2436.446f, 5.940394f),
      new Vector3(271.5289f, -3011.571f, 5.794857f),
      new Vector3(507.9313f, -2118.953f, 5.923953f),
      new Vector3(377.3893f, -1830.509f, 28.76753f),
      new Vector3(459.7094f, -1360.975f, 43.4966f),
      new Vector3(700.5648f, -1106.737f, 22.46314f),
      new Vector3(653.9521f, -442.3446f, 24.71997f),
      new Vector3(-728.8388f, -760.2722f, 35.585f),
      new Vector3(-916.3595f, -781.7725f, 15.87423f),
      new Vector3(-1249.986f, -631.8416f, 40.35752f),
      new Vector3(-1481.926f, -660.1251f, 28.94311f),
      new Vector3(-1574.033f, 408.5303f, 107.2125f)
    };
    public List<Vector3> AirSellPoints = new List<Vector3>()
    {
      new Vector3(142.9343f, 6914.887f, 19.29789f),
      new Vector3(291.3384f, 6499.594f, 28.78313f),
      new Vector3(757.7981f, 6452.818f, 30.86196f),
      new Vector3(2256.923f, 5614.318f, 53.31849f),
      new Vector3(2379.987f, 5053.654f, 45.44461f),
      new Vector3(2072.918f, 5084.007f, 42.33178f),
      new Vector3(1730.037f, 4860.375f, 39.50177f),
      new Vector3(1377.788f, 4358.424f, 42.43552f),
      new Vector3(890.6893f, 3579.15f, 32.36761f),
      new Vector3(869.2792f, 2863.958f, 56.00978f),
      new Vector3(527.7366f, 3092.536f, 39.46517f),
      new Vector3(392.4561f, 2973.885f, 40.018f),
      new Vector3(212.2625f, 3030.897f, 41.46631f),
      new Vector3(217.7538f, 2460.63f, 55.17255f),
      new Vector3(180.3113f, 2249.292f, 89.51086f),
      new Vector3(-258.0314f, 1026.052f, 233.1569f),
      new Vector3(-815.6135f, 863.9863f, 202.044f),
      new Vector3(-1560.356f, 846.2502f, 182.2905f),
      new Vector3(-522.7313f, 211.7888f, 93.40929f),
      new Vector3(-253.5001f, -187.6828f, 77.33955f),
      new Vector3(39.57681f, -387.5955f, 72.94682f),
      new Vector3(-162.263f, -1072.698f, 41.13926f),
      new Vector3(-448.5564f, -1589.815f, -0.7476568f),
      new Vector3(-203.1636f, -1810.336f, -0.1749601f),
      new Vector3(527.9789f, -2395.045f, 4.866005f),
      new Vector3(673.2985f, -1735.707f, 8.156456f),
      new Vector3(585.2514f, -1032.77f, 8.873472f),
      new Vector3(763.2703f, -285.6783f, 58.89305f),
      new Vector3(393.7914f, 808.2f, 188.6591f),
      new Vector3(-2547.925f, 3882.809f, 2.265001f),
      new Vector3(-2206.595f, 5109.48f, 10.2239f),
      new Vector3(-1808.578f, 5500.877f, 9.868484f),
      new Vector3(-1274.257f, 5357.082f, 2.61005f),
      new Vector3(-894.6169f, 6039.076f, 41.42483f),
      new Vector3(-641.7639f, 6300.4f, 2.548452f),
      new Vector3(101.7068f, 6720.847f, 40.32216f),
      new Vector3(85.64242f, 7019.84f, 10.33254f),
      new Vector3(91.11735f, 7119.979f, 25.57077f),
      new Vector3(-118.0909f, 7274.998f, 15.71198f),
      new Vector3(212.161f, 7401.202f, 15.63491f),
      new Vector3(1601.31f, 6624.853f, 14.7691f),
      new Vector3(3457.082f, 5869.54f, 0.5336733f),
      new Vector3(3629.815f, 5676.708f, 7.189864f),
      new Vector3(3257.696f, 5181.274f, 18.71513f),
      new Vector3(3670.324f, 4957.411f, 15.70396f),
      new Vector3(4122.448f, 4503.318f, 16.15442f),
      new Vector3(3929.639f, 4391.797f, 15.64299f),
      new Vector3(3811.919f, 4463.106f, 3.14999f),
      new Vector3(4061.834f, 4220.689f, 9.964996f),
      new Vector3(3938.668f, 4030.557f, 3.773781f),
      new Vector3(3941.106f, 3704.395f, 20.78075f),
      new Vector3(3708.714f, 3096.141f, 9.729301f),
      new Vector3(3477.062f, 2796.258f, 11.38898f),
      new Vector3(3458.979f, 2585.261f, 15.70652f),
      new Vector3(3285.49f, 2200.374f, 1.187321f),
      new Vector3(3135.44f, 2005.745f, 9.799809f),
      new Vector3(2977.936f, 1859.366f, 12.29116f),
      new Vector3(3107.809f, 1156.429f, 17.08418f),
      new Vector3(2995.529f, 868.1177f, 10.58837f),
      new Vector3(2935.602f, 708.0146f, 0.8921661f),
      new Vector3(3107.87f, 624.568f, 10.37827f),
      new Vector3(2924.56f, 378.6835f, 1.738621f),
      new Vector3(3258.943f, -143.0432f, 15.82851f),
      new Vector3(2829.321f, -628.1918f, 0.9898243f),
      new Vector3(2851.669f, -1335.525f, 13.45509f),
      new Vector3(2824.25f, -1483.526f, 11.20686f),
      new Vector3(2617.836f, -1676.538f, 19.4633f),
      new Vector3(2450.235f, -1953.551f, 60.66158f),
      new Vector3(2316.828f, -2124.865f, 1.076571f),
      new Vector3(1807.449f, -2708.403f, 1.074924f),
      new Vector3(1417.394f, -2750.26f, 2.793983f),
      new Vector3(1303.811f, -2725.18f, 1.115398f),
      new Vector3(1169.412f, -2674.187f, 3.598064f),
      new Vector3(968.1642f, -2626.891f, 4.435923f),
      new Vector3(1287.15f, -3069.081f, 4.906601f),
      new Vector3(1288.359f, -3331.024f, 4.903426f),
      new Vector3(508.2104f, -3366.036f, 5.069911f),
      new Vector3(117.208f, -3333.155f, 5.016824f),
      new Vector3(-759.6255f, -3243.744f, 13.14648f),
      new Vector3(-1044.988f, -3501.196f, 13.14841f),
      new Vector3(-1320.263f, -3200.409f, 13.1467f),
      new Vector3(-1454.023f, -2929.56f, 13.31358f),
      new Vector3(-1507.422f, -2584.384f, 13.75464f),
      new Vector3(-1370.566f, -2191.398f, 13.93104f),
      new Vector3(-1241.077f, -1856.326f, 0.6324749f),
      new Vector3(-1469.659f, -1481.27f, 1.152094f),
      new Vector3(-1532.163f, -1264.186f, 1.099478f),
      new Vector3(-1785.938f, -999.5118f, 1.474227f),
      new Vector3(-1928.561f, -771.367f, 1.793015f),
      new Vector3(-1702.465f, -201.0395f, 55.70387f),
      new Vector3(-1550.158f, -266.4189f, 47.26624f),
      new Vector3(-1054.454f, -681.3167f, 21.69321f),
      new Vector3(-930.5082f, -725.9016f, 18.91875f),
      new Vector3(-1091.46f, -974.295f, 2.95294f),
      new Vector3(-1526.987f, -990.1545f, 12.01739f),
      new Vector3(-1819.574f, -1249.881f, 12.01735f),
      new Vector3(-2109.117f, -1013.269f, 7.970045f),
      new Vector3(-2178.404f, -413.3558f, 12.19503f),
      new Vector3(-2224.494f, 191.7505f, 193.6117f),
      new Vector3(-2644.671f, 1444.412f, 128.0838f),
      new Vector3(-2823.629f, 1424.163f, 99.8154f),
      new Vector3(-2307.263f, 2481.316f, 2.257484f),
      new Vector3(-2422.007f, 2527.542f, 1.727083f),
      new Vector3(-2704.059f, 2654.977f, 1.203823f),
      new Vector3(-2762.171f, 2715.103f, 1.216527f),
      new Vector3(-2900.167f, 3095.061f, 1.596127f),
      new Vector3(-3099.238f, 1744.895f, 34.21094f),
      new Vector3(-3245.414f, 1302.68f, 2.242867f),
      new Vector3(-3264.443f, 1178.125f, 1.48119f),
      new Vector3(-3289.997f, 1010.866f, 1.791059f),
      new Vector3(-3187.021f, 743.3129f, 1.071545f),
      new Vector3(-3084.087f, 498.2883f, 1.39183f),
      new Vector3(-3156.147f, 292.091f, 1.352177f),
      new Vector3(-3104.177f, 76.16432f, 0.7282944f),
      new Vector3(-2436.101f, -314.0953f, 2.894951f),
      new Vector3(-1739.873f, 158.1663f, 63.37101f),
      new Vector3(-1493.539f, 175.6694f, 54.70207f),
      new Vector3(-1233.095f, 80.76678f, 53.44827f),
      new Vector3(-1163.586f, -22.84781f, 44.96262f),
      new Vector3(-1002.538f, -40.59651f, 43.57173f),
      new Vector3(-509.9043f, -233.3065f, 35.21329f),
      new Vector3(-389.1174f, -278.8406f, 33.62776f),
      new Vector3(-354.0632f, -303.7758f, 31.1349f),
      new Vector3(-129.8553f, -447.6499f, 33.44976f),
      new Vector3(681.5182f, -485.8087f, 14.36395f),
      new Vector3(1166.885f, -147.3212f, 55.76991f),
      new Vector3(1273.343f, -54.4118f, 60.78726f)
    };
    public List<Vector3> WaterSellPoints = new List<Vector3>()
    {
      new Vector3(599.541f, -2336.73f, 0.0f),
      new Vector3(767.9865f, -2904.438f, 0.0f),
      new Vector3(1190.201f, -2886.793f, 0.0f),
      new Vector3(1309f, -3079.063f, 0.0f),
      new Vector3(1283.459f, -3356.579f, 0.2615672f),
      new Vector3(1140.264f, -3358.832f, 0.2615671f),
      new Vector3(282.1375f, -3346.672f, 0.6252037f),
      new Vector3(121.0077f, -2791.2f, -0.6475241f),
      new Vector3(159.3044f, -2686.311f, 0.2615678f),
      new Vector3(37.39562f, -2783.954f, 1.443386f),
      new Vector3(-61.52f, -2764.369f, 0.7161138f),
      new Vector3(-82.58383f, -2762.556f, -0.03936636f),
      new Vector3(-119.3027f, -2744.307f, 0.4151789f),
      new Vector3(-207.5031f, -2720.166f, -0.403002f),
      new Vector3(-292.5135f, -2798.402f, 1.142453f),
      new Vector3(-392.2332f, -2858.028f, 1.142453f),
      new Vector3(-540.6699f, -2776.649f, 1.142453f),
      new Vector3(-345.7127f, -2557.428f, 0.5060892f),
      new Vector3(-425.0461f, -2239.414f, 0.1424533f),
      new Vector3(-90.71731f, -2269.053f, 0.3242664f),
      new Vector3(94.78544f, -2264.441f, 0.1424504f),
      new Vector3(2668.643f, -1800.947f, 0.6879092f),
      new Vector3(2933.277f, 1485.321f, 0.415181f),
      new Vector3(3819.087f, 3711.157f, 0.8697297f),
      new Vector3(3879.662f, 4462.737f, 0.3242743f),
      new Vector3(-1347.97f, 6731.339f, 0.1424577f),
      new Vector3(-1618.083f, 5272.68f, 1.233367f),
      new Vector3(-3441.143f, 966.4492f, 0.5060942f),
      new Vector3(-2002.154f, -1044.844f, 1.597005f),
      new Vector3(-1908.545f, -2684.218f, 0.3242776f),
      new Vector3(-637.0583f, -2508.152f, 0.8697339f),
      new Vector3(-365.6855f, -2313.352f, -0.1302645f),
      new Vector3(476.5973f, -2225.528f, 0.5970083f),
      new Vector3(960.0664f, -2677.66f, 0.5970084f),
      new Vector3(423.7486f, -3203.884f, 0.5970045f),
      new Vector3(324.4364f, -2888.487f, 2.597004f),
      new Vector3(454.7864f, -2812.363f, 1.051549f),
      new Vector3(431.4216f, -2733.468f, 1.051549f),
      new Vector3(136.7685f, -2272.946f, 1.051548f),
      new Vector3(-281.639f, -2541.726f, 0.7788212f),
      new Vector3(-465.1034f, -2427.18f, 0.7788212f),
      new Vector3(-556.7281f, -2872.181f, 0.7788218f)
    };
    public List<ExecutiveTower.Flare> SellPointsSmoke_Air = new List<ExecutiveTower.Flare>();
    public List<ExecutiveTower.Flare> SellPointsSmoke_Water = new List<ExecutiveTower.Flare>();
    public List<ExecutiveTower.Flare> Cargo = new List<ExecutiveTower.Flare>();
    public List<Vector3> CargoDropped = new List<Vector3>();
    public List<int> SmokeParticles = new List<int>();
    public List<ExecutiveTower.Flare> SmokePropaParticles = new List<ExecutiveTower.Flare>();
    public bool SupplyMissionOn;
    public int SupplyMissionID;
    public int SupplyMissionStage;
    public int SupplyMissionType;
    public List<Vehicle> SupplyMissionVehicles = new List<Vehicle>();
    public List<Ped> SupplyMissionPeds = new List<Ped>();
    public List<Prop> SupplyMissionProps = new List<Prop>();
    public List<Blip> SupplyMissionBlips = new List<Blip>();
    public Vehicle SupplyMissionMainVehicle;
    public Vector3 AreaOffset;
    public Prop DeliverCrate1;
    public Prop DeliverCrate1Fake;
    public Blip DeliverLocBlip1;
    public bool DeliveredtoLoc1;
    public Vector3 AreaOffset1;
    public Prop DeliverCrate2;
    public Prop DeliverCrate2Fake;
    public Blip DeliverLocBlip2;
    public bool DeliveredtoLoc2;
    public Vector3 AreaOffset2;
    public Prop DeliverCrate3;
    public Prop DeliverCrate3Fake;
    public Blip DeliverLocBlip3;
    public bool DeliveredtoLoc3;
    public Vector3 AreaOffset3;
    public Prop DeliverCrate4;
    public Prop DeliverCrate4Fake;
    public Blip DeliverLocBlip4;
    public bool DeliveredtoLoc4;
    public Vector3 AreaOffset4;
    public Prop DeliverCrate5;
    public Prop DeliverCrate5Fake;
    public Blip DeliverLocBlip5;
    public bool DeliveredtoLoc5;
    public Vector3 AreaOffset5;
    public List<PedHash> EnemyPedhashes = new List<PedHash>()
    {
      PedHash.Hillbilly01AMM,
      PedHash.Hillbilly02AMM,
      PedHash.ONeil,
      PedHash.SalvaBoss01GMY,
      PedHash.Salton04AMM,
      PedHash.SalvaGoon01GMY,
      PedHash.SalvaGoon02GMY,
      PedHash.SalvaGoon03GMY,
      PedHash.MilitaryBum,
      PedHash.Lost02GMY,
      PedHash.Lost01GFY
    };
    public List<VehicleHash> EnemyVehiclehashes = new List<VehicleHash>()
    {
      VehicleHash.Technical,
      VehicleHash.Dune,
      VehicleHash.Manchez,
      VehicleHash.DLoader,
      VehicleHash.BfInjection,
      VehicleHash.BF400,
      VehicleHash.Mesa,
      VehicleHash.Rebel,
      VehicleHash.Rebel2,
      VehicleHash.Blazer,
      VehicleHash.Rebel2
    };
    public int EnemySpawnSet;
    public bool WaitingForEnemySpawn;
    public List<Vector3> BrickadeSpawnPos = new List<Vector3>()
    {
      new Vector3(973.9282f, -1504.946f, 31.63f),
      new Vector3(733.6379f, -1996.565f, 29.63f),
      new Vector3(530.2698f, -1857.719f, 25.69f),
      new Vector3(169.6421f, -1520.013f, 29.49f),
      new Vector3(514.2137f, -571.242f, 25.2f),
      new Vector3(63.69f, -398.55f, 40.26f),
      new Vector3(-60.73f, -189.64f, 52.41f),
      new Vector3(-208.2718f, 18.15f, 56.25f),
      new Vector3(-335.56f, -1396.98f, 31.056f),
      new Vector3(-240.74f, -1672.214f, 33.85f),
      new Vector3(-260.43f, -2473.976f, 6.34f),
      new Vector3(-84.05f, 97.36f, 73.22f)
    };
    public List<ExecutiveTower.SpawnH> BrickadeSpawnH = new List<ExecutiveTower.SpawnH>()
    {
      new ExecutiveTower.SpawnH(new Vector3(973.9282f, -1504.946f, 31.63f), 0.0f),
      new ExecutiveTower.SpawnH(new Vector3(733.6379f, -1996.565f, 29.63f), 173f),
      new ExecutiveTower.SpawnH(new Vector3(530.2698f, -1857.719f, 25.69f), 141f),
      new ExecutiveTower.SpawnH(new Vector3(169.6421f, -1520.013f, 29.49f), 37f),
      new ExecutiveTower.SpawnH(new Vector3(514.2137f, -571.242f, 25.2f), 174f),
      new ExecutiveTower.SpawnH(new Vector3(63.69f, -398.55f, 40.26f), -20f),
      new ExecutiveTower.SpawnH(new Vector3(-60.73f, -189.64f, 52.41f), 67f),
      new ExecutiveTower.SpawnH(new Vector3(-208.2718f, 18.15f, 56.25f), 69f),
      new ExecutiveTower.SpawnH(new Vector3(-335.56f, -1396.98f, 31.056f), -179f),
      new ExecutiveTower.SpawnH(new Vector3(-240.74f, -1672.214f, 33.85f), -179f),
      new ExecutiveTower.SpawnH(new Vector3(-260.43f, -2473.976f, 6.34f), -131f),
      new ExecutiveTower.SpawnH(new Vector3(-84.05f, 97.36f, 73.22f), 68f)
    };
    public List<ExecutiveTower.SpawnH> Cuban800SpawnH = new List<ExecutiveTower.SpawnH>()
    {
      new ExecutiveTower.SpawnH(new Vector3(-1042.79f, -3488.871f, 14.77f), 2.9f),
      new ExecutiveTower.SpawnH(new Vector3(-1065.169f, -3471.22f, 14.77f), -7.7f),
      new ExecutiveTower.SpawnH(new Vector3(-926.99f, -3096.54f, 14.57f), 98.11f),
      new ExecutiveTower.SpawnH(new Vector3(-1218.016f, -2888.023f, 14.57f), 97.4f),
      new ExecutiveTower.SpawnH(new Vector3(-1370.94f, -2421.087f, 14.57f), 90.7f),
      new ExecutiveTower.SpawnH(new Vector3(-1710.592f, -3146.551f, 14.58f), 16.73f),
      new ExecutiveTower.SpawnH(new Vector3(-1213.214f, -3364.88f, 14.57f), -10f)
    };
    public List<ExecutiveTower.SpawnH> TugSpawnH = new List<ExecutiveTower.SpawnH>()
    {
      new ExecutiveTower.SpawnH(new Vector3(-481.78f, -2280.69f, 0.8f), 160f),
      new ExecutiveTower.SpawnH(new Vector3(-298.94f, -2384.505f, 1.271f), -39.58f),
      new ExecutiveTower.SpawnH(new Vector3(88.34f, -2266.75f, 0.81f), -92.05f),
      new ExecutiveTower.SpawnH(new Vector3(-904.4f, -1448.64f, 0.93f), -68.98f),
      new ExecutiveTower.SpawnH(new Vector3(92.466f, -2449.216f, 1.4f), 53.62f),
      new ExecutiveTower.SpawnH(new Vector3(321.0196f, -2977.834f, 0.64f), -177f)
    };
    public Vector3 CurrentWarehousePos;
    public int AmttoDeliver;
    public int Selectedpoints;
    public int PointstoGoto;
    public bool WaitingForDrop;
    public int CrateSelected;
    public int CrateSpawn;
    public Vehicle DeliveryVehicle1;
    public Vehicle DeliveryVehicle2;
    public Vehicle DeliveryVehicle3;
    public Vehicle DeliveryVehicle4;
    public bool DeliveredVehicle1;
    public bool DeliveredVehicle2;
    public bool DeliveredVehicle3;
    public bool DeliveredVehicle4;
    public bool NearLoc1;
    public bool NearLoc2;
    public bool NearLoc3;
    public bool NearLoc4;
    public int SellMission = 1;
    public int WheelType;
    public int Delivered;
    public int Deliveries;
    public Ped DeliverPed;
    public bool FirsttimeSmoke;
    public float PercentageSell;
    public int LiveryColor;
    public bool PreviewingDesigns;
    public UIMenu Designs;
    public bool GotBreefCase;
    public GTA.Model BreefCaseModel;
    public Prop BreefCase;
    public bool SpawnedBreefcase;
    public Vehicle Bike1;
    public Blip Bike1Blip;
    public Vehicle Bike2;
    public Blip Bike2Blip;
    public Vehicle Bike3;
    public Blip Bike3Blip;
    public Vehicle Bike4;
    public Blip Bike4Blip;
    public Vehicle Bike5;
    public Blip Bike5Blip;
    public Vector3 PointA = new Vector3(2779.51f, 4403.84f, 49f);
    public Vector3 PointB = new Vector3(-78.89f, 6295.56f, 32f);
    public Vector3 PointC = new Vector3(1152.06f, 3263.91f, 40f);
    public Vector3 PointD = new Vector3(2293f, 3016.64f, 47f);
    public Vector3 PointE = new Vector3(2527.61f, 2844.2f, 3.3f);
    public Vector3 Spawn = new Vector3(2688.31f, 5127.53f, 45f);
    public Vector3 Spawn1 = new Vector3(2688.31f, 5127.53f, 45f);
    public Vector3 Spawn2 = new Vector3(2694.31f, 5127.53f, 45f);
    public Vector3 Spawn3 = new Vector3(2696.31f, 5127.53f, 45f);
    public Vector3 Spawn4 = new Vector3(2700.31f, 5127.53f, 45f);
    public Blip CaseBlip;
    public List<Ped> PG = new List<Ped>();
    public bool NotGotCargo1;
    public bool NotGotCargo2;
    public bool NotGotCargo3;
    public bool NotGotCargo4;
    public bool NotGotCargo5;
    public Prop CargoCrate1;
    public Prop CargoCrate2;
    public Prop CargoCrate3;
    public Prop CargoCrate4;
    public Prop CargoCrate5;
    public Vector3 PickupPoint;
    public int RecoveryAmtVehicles;
    public VehicleClass VClass;
    public static List<GTA.Model> TVModels = new List<GTA.Model>()
    {
      (GTA.Model) 1036195894,
      (GTA.Model) 777010715,
      (GTA.Model) -1073182005,
      (GTA.Model) 1653710254,
      (GTA.Model) 170618079,
      (GTA.Model) -897601557,
      (GTA.Model) -1546399138,
      (GTA.Model) -1223496606,
      (GTA.Model) -1820646534,
      (GTA.Model) 608950395
    };
    public static int rendertargetid;
    public static int ex_rendertargetid;
    public static int rendertargetid2;
    public static bool TVOn = false;
    public static bool SubtitleOn = false;
    public static int TV_Volume = 0;
    public static int TV_Channel;
    public static List<int> TVChannelList = new List<int>()
    {
      0,
      1
    };
    public static Camera TVCamera;
    public Prop TV;
    public int Scene1;
    public Prop Computer;
    public Vector3 ComputerPos = new Vector3(0.0f, 0.0f, 0.0f);
    public UIMenu ModShopMenuMenu;
    public bool ModShopMenuOpen;
    public bool FirstLoad;
    public Scaleform SimeonText1;
    public bool SnowON;
    public int VehicleWarehouseSelected;
    public int CrateType;
    public string CrateTypeString;
    public int NewCrateTimer;
    public int Source1Price;
    public int Source2Price;
    public int Source3Price;
    public int CratesToSource;
    public List<Ped> SourceASellMissionPeds = new List<Ped>();
    public List<Vehicle> SourceASellMissionVehicles = new List<Vehicle>();
    public List<Prop> SourceASellMissionProps = new List<Prop>();
    public List<Blip> SourceASellMissionBlips = new List<Blip>();
    public bool GotCrate1;
    public bool GotCrate2;
    public bool GotCrate3;
    public bool DeliveredCrate1;
    public bool DeliveredCrate2;
    public bool DeliveredCrate3;
    public Vehicle CrateVeh1;
    public Vehicle CrateVeh2;
    public Vehicle CrateVeh3;
    public Prop FakeCratePickup;
    public Prop Crate1;
    public Vector3 Crate1Spawn;
    public Prop Crate2;
    public Vector3 Crate2Spawn;
    public Prop Crate3;
    public Vector3 Crate3Spawn;
    public Vector3 crateSpawn;
    public bool SpawnedSignalFlare;
    public GTA.Model weaponAsset;
    public bool GotCrate;
    public bool NearCrate;
    public bool ReturningToWarehouse;
    public Prop CurrentCrate;
    public int CratesCollected;
    public Vehicle SourceVehicle1;
    public Vehicle SourceVehicle2;
    public Vehicle SourceVehicle3;
    public int SourcingMissionType;
    public int SourcingMission;
    public bool SourcingMissionOn;
    public Vector3 WarehouseDeliverPos;
    public Blip DeliverPointBlip;
    public bool CreatedDeliverPoint;
    public int CurrentWarehouse = 1;
    public bool SpawnedCrate;
    public List<ExecutiveTower.NamedLocation> HyperCarLocations = new List<ExecutiveTower.NamedLocation>()
    {
      new ExecutiveTower.NamedLocation(new Vector3(-1508.256f, 30.67f, 55.196f), 315f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1564.654f, -78.32f, 53.41f), 282f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-924.65f, 9.92f, 45.99f), 210f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-879.83f, 31.5f, 48.75f), 278f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-958.42f, 115.123f, 55.75f), 310f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-888.75f, 369.06f, 84.0368f), 296f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1096.187f, 438.18f, 74.28f), 247f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-585.54f, 528.03f, 106.96f), 218f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1877.557f, 201.68f, 83.29f), 186f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1934.902f, 184.2074f, 83.59f), 307f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1987.221f, 604.74f, 116.98f), 235f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1788.307f, 457.87f, 127.58f), 75f, "")
    };
    public List<ExecutiveTower.NamedLocation> SportCarLocations = new List<ExecutiveTower.NamedLocation>()
    {
      new ExecutiveTower.NamedLocation(new Vector3(389.2255f, 113.17f, 101.15f), 250f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(334.46f, -92.48f, 67.107f), 66f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-91.077f, -48.037f, 61.61f), 73f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-332.05f, -179.769f, 37.87f), 111f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-681.43f, -349.013f, 33.5f), 68f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1399.515f, 30.25f, 52.147f), 60f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1356.174f, -206.85f, 47.62f), 141f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1339.361f, -474.52f, 32.81f), 218f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-958.42f, 115.123f, 55.75f), 310f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-888.75f, 369.06f, 84.0368f), 296f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1096.187f, 438.18f, 74.28f), 247f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-585.54f, 528.03f, 106.96f), 218f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1877.557f, 201.68f, 83.29f), 186f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1934.902f, 184.2074f, 83.59f), 307f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1987.221f, 604.74f, 116.98f), 235f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1788.307f, 457.87f, 127.58f), 75f, "")
    };
    public List<ExecutiveTower.NamedLocation> PulloverLocations = new List<ExecutiveTower.NamedLocation>()
    {
      new ExecutiveTower.NamedLocation(new Vector3(-1903.381f, 162.16f, 81.27f), 223f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1263.63f, -89.04f, 43.67f), 241f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-157.55f, -419.86f, 32.99f), 342f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-144.28f, 79.89f, 69.99f), 241f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(126.84f, -905.758f, 29.32f), 160f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-74.25f, -920.25f, 28.49f), 70f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-798.86f, -826.425f, 19.77f), 88f, ""),
      new ExecutiveTower.NamedLocation(new Vector3(-1263.072f, -615.21f, 26.28f), 124f, "")
    };
    public VehicleColor PrimaryColor;
    public VehicleColor SecondaryColor;
    public Ped ArresetPed;
    public List<Ped> Gang = new List<Ped>();
    public List<Vehicle> GangVehicles = new List<Vehicle>();
    public bool isAtSubBusiness;
    public float SpawnAttackerTimer;
    public bool RaidSetup;
    public bool StartedRaid;
    public bool WaitingForRaid;
    public int RaidType;
    public int RaidEnemyTime;
    public int CurrentTime;
    public int RaidHour;
    public bool AwaitingAraid;
    public int RaidCurrentTime;
    public int RaidTiggerHour = 1;
    public bool MISC_DisableRaids;
    public bool PlayingRaid;
    public string SpecialCrateID;
    public int NextSpecialCrateMission;
    public int SpecialCargoCounter;
    public int SpecialCargoMissionEndTimer;
    public int SupplyCounter;
    public int CargoMissionTimer;
    public string Crate1StringID;
    public string Crate2StringID;
    public string Crate3StringID;
    public int MissionWait;
    public int MissionWait2;

    private void LoadIniFile_Garages(string iniName)
    {
      try
      {
        this.Config_Garages = ScriptSettings.Load(iniName);
        this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusA", "Decor", this.ADecor);
        this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusA", "Lighting", this.ALighting);
        this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusA", "Numbering", this.ANumbering);
        this.MDecor = this.Config_Garages.GetValue<string>("MazeBankA", "Decor", this.MDecor);
        this.MLighting = this.Config_Garages.GetValue<string>("MazeBankA", "Lighting", this.MLighting);
        this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankA", "Numbering", this.MNumbering);
        this.MWDecor = this.Config_Garages.GetValue<string>("MBWestA", "Decor", this.MWDecor);
        this.MWLighting = this.Config_Garages.GetValue<string>("MBWestA", "Lighting", this.MWLighting);
        this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestA", "Numbering", this.MWNumbering);
        this.LDecor = this.Config_Garages.GetValue<string>("LombokA", "Decor", this.LDecor);
        this.LLighting = this.Config_Garages.GetValue<string>("LombokA", "Lighting", this.LLighting);
        this.LNumbering = this.Config_Garages.GetValue<string>("LombokA", "Numbering", this.LNumbering);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Open60CarGarage.ini Failed To Load.");
      }
    }

    public void RefreshInterior(int Interior, int Propid)
    {
      if (Propid == 1)
      {
        for (int index = 1; index < 5; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("garage_decor_0" + index.ToString()));
      }
      if (Propid == 2)
      {
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("lighting_option0" + index.ToString()));
      }
      if (Propid == 3)
      {
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n1"));
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n2"));
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n3"));
      }
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
    }

    public void RefreshInterior(int Interior, string prop, int Propid)
    {
      if (Propid == 1)
      {
        for (int index = 1; index < 5; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("garage_decor_0" + index.ToString()));
      }
      if (Propid == 2)
      {
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("lighting_option0" + index.ToString()));
      }
      if (Propid == 3)
      {
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n1"));
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n2"));
        for (int index = 1; index < 10; ++index)
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) ("numbering_style0" + index.ToString() + "_n3"));
      }
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) Interior, (InputArgument) prop);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
    }

    public void SetupInterior()
    {
      float TotalPrice = 0.0f;
      UIMenu uiMenu = ExecutiveTower.modMenuPool_Garages.AddSubMenu(this.InteriorOptions_Garages, "Interior Options");
      this.GUIMenus.Add(uiMenu);
      List<object> Decor = new List<object>();
      List<object> DecorPrice = new List<object>();
      Decor.Add((object) "garage_decor_01");
      DecorPrice.Add((object) 0);
      Decor.Add((object) "garage_decor_02");
      DecorPrice.Add((object) 285000);
      Decor.Add((object) "garage_decor_03");
      DecorPrice.Add((object) 415000);
      Decor.Add((object) "garage_decor_04");
      DecorPrice.Add((object) 500000);
      List<object> LIGHTING = new List<object>();
      List<object> LIGHTINGPrice = new List<object>();
      LIGHTING.Add((object) "lighting_option01");
      LIGHTINGPrice.Add((object) 0);
      LIGHTING.Add((object) "lighting_option02");
      LIGHTINGPrice.Add((object) 81500);
      LIGHTING.Add((object) "lighting_option03");
      LIGHTINGPrice.Add((object) 85000);
      LIGHTING.Add((object) "lighting_option04");
      LIGHTINGPrice.Add((object) 87500);
      LIGHTING.Add((object) "lighting_option05");
      LIGHTINGPrice.Add((object) 92500);
      LIGHTING.Add((object) "lighting_option06");
      LIGHTINGPrice.Add((object) 99500);
      LIGHTING.Add((object) "lighting_option07");
      LIGHTINGPrice.Add((object) 105000);
      LIGHTING.Add((object) "lighting_option08");
      LIGHTINGPrice.Add((object) 127500);
      LIGHTING.Add((object) "lighting_option09");
      LIGHTINGPrice.Add((object) 150000);
      List<object> Numbering = new List<object>();
      List<object> NumberingPrice = new List<object>();
      Numbering.Add((object) "numbering_style01_n1");
      NumberingPrice.Add((object) 0);
      Numbering.Add((object) "numbering_style02_n1");
      NumberingPrice.Add((object) 62000);
      Numbering.Add((object) "numbering_style03_n1");
      NumberingPrice.Add((object) 75000);
      Numbering.Add((object) "numbering_style04_n1");
      NumberingPrice.Add((object) 87500);
      Numbering.Add((object) "numbering_style05_n1");
      NumberingPrice.Add((object) 100000);
      Numbering.Add((object) "numbering_style06_n1");
      NumberingPrice.Add((object) 132500);
      Numbering.Add((object) "numbering_style07_n1");
      NumberingPrice.Add((object) 165000);
      Numbering.Add((object) "numbering_style08_n1");
      NumberingPrice.Add((object) 197500);
      Numbering.Add((object) "numbering_style09_n1");
      NumberingPrice.Add((object) 250000);
      Numbering.Add((object) "numbering_style01_n2");
      NumberingPrice.Add((object) 0);
      Numbering.Add((object) "numbering_style02_n2");
      NumberingPrice.Add((object) 62000);
      Numbering.Add((object) "numbering_style03_n2");
      NumberingPrice.Add((object) 75000);
      Numbering.Add((object) "numbering_style04_n2");
      NumberingPrice.Add((object) 87500);
      Numbering.Add((object) "numbering_style05_n2");
      NumberingPrice.Add((object) 100000);
      Numbering.Add((object) "numbering_style06_n2");
      NumberingPrice.Add((object) 132500);
      Numbering.Add((object) "numbering_style07_n2");
      NumberingPrice.Add((object) 165000);
      Numbering.Add((object) "numbering_style08_n2");
      NumberingPrice.Add((object) 197500);
      Numbering.Add((object) "numbering_style09_n2");
      NumberingPrice.Add((object) 250000);
      Numbering.Add((object) "numbering_style01_n3");
      NumberingPrice.Add((object) 0);
      Numbering.Add((object) "numbering_style02_n3");
      NumberingPrice.Add((object) 62000);
      Numbering.Add((object) "numbering_style03_n3");
      NumberingPrice.Add((object) 75000);
      Numbering.Add((object) "numbering_style04_n3");
      NumberingPrice.Add((object) 87500);
      Numbering.Add((object) "numbering_style05_n3");
      NumberingPrice.Add((object) 100000);
      Numbering.Add((object) "numbering_style06_n3");
      NumberingPrice.Add((object) 132500);
      Numbering.Add((object) "numbering_style07_n3");
      NumberingPrice.Add((object) 165000);
      Numbering.Add((object) "numbering_style08_n3");
      NumberingPrice.Add((object) 197500);
      Numbering.Add((object) "numbering_style09_n3");
      NumberingPrice.Add((object) 250000);
      UIMenuListItem D = new UIMenuListItem("Decor : ", Decor, 0);
      uiMenu.AddItem((UIMenuItem) D);
      UIMenuListItem L = new UIMenuListItem("Lighting : ", LIGHTING, 0);
      uiMenu.AddItem((UIMenuItem) L);
      UIMenuListItem N = new UIMenuListItem("Numbering : ", Numbering, 0);
      uiMenu.AddItem((UIMenuItem) N);
      UIMenuItem BuySet = new UIMenuItem("Buy Interior Set ~g~$0");
      uiMenu.AddItem(BuySet);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != BuySet)
          return;
        if ((double) Game.Player.Money >= (double) TotalPrice)
        {
          Game.Player.Money -= (int) TotalPrice;
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0)
          {
            if (ExecutiveTower.Garage_Garages.Equals("GarageA"))
            {
              this.Config_Garages.SetValue<string>("MazeBankA", "Decor", this.MDecor);
              this.Config_Garages.SetValue<string>("MazeBankA", "Lighting", this.MLighting);
              this.Config_Garages.SetValue<string>("MazeBankA", "Numbering", this.MNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageB"))
            {
              this.Config_Garages.SetValue<string>("MazeBankB", "Decor", this.MDecor);
              this.Config_Garages.SetValue<string>("MazeBankB", "Lighting", this.MLighting);
              this.Config_Garages.SetValue<string>("MazeBankB", "Numbering", this.MNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageC"))
            {
              this.Config_Garages.SetValue<string>("MazeBankC", "Decor", this.MDecor);
              this.Config_Garages.SetValue<string>("MazeBankC", "Lighting", this.MLighting);
              this.Config_Garages.SetValue<string>("MazeBankC", "Numbering", this.MNumbering);
              this.Config_Garages.Save();
            }
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0)
          {
            if (ExecutiveTower.Garage_Garages.Equals("GarageA"))
            {
              this.Config_Garages.SetValue<string>("LombokA", "Decor", this.LDecor);
              this.Config_Garages.SetValue<string>("LombokA", "Lighting", this.LLighting);
              this.Config_Garages.SetValue<string>("LombokA", "Numbering", this.LNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageB"))
            {
              this.Config_Garages.SetValue<string>("LombokB", "Decor", this.LDecor);
              this.Config_Garages.SetValue<string>("LombokB", "Lighting", this.LLighting);
              this.Config_Garages.SetValue<string>("LombokB", "Numbering", this.LNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageC"))
            {
              this.Config_Garages.SetValue<string>("LombokC", "Decor", this.LDecor);
              this.Config_Garages.SetValue<string>("LombokC", "Lighting", this.LLighting);
              this.Config_Garages.SetValue<string>("LombokC", "Numbering", this.LNumbering);
              this.Config_Garages.Save();
            }
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0)
          {
            if (ExecutiveTower.Garage_Garages.Equals("GarageA"))
            {
              this.Config_Garages.SetValue<string>("ArcadiusA", "Decor", this.ADecor);
              this.Config_Garages.SetValue<string>("ArcadiusA", "Lighting", this.ALighting);
              this.Config_Garages.SetValue<string>("ArcadiusA", "Numbering", this.ANumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageB"))
            {
              this.Config_Garages.SetValue<string>("ArcadiusB", "Decor", this.ADecor);
              this.Config_Garages.SetValue<string>("ArcadiusB", "Lighting", this.ALighting);
              this.Config_Garages.SetValue<string>("ArcadiusB", "Numbering", this.ANumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageC"))
            {
              this.Config_Garages.SetValue<string>("ArcadiusC", "Decor", this.ADecor);
              this.Config_Garages.SetValue<string>("ArcadiusC", "Lighting", this.ALighting);
              this.Config_Garages.SetValue<string>("ArcadiusC", "Numbering", this.ANumbering);
              this.Config_Garages.Save();
            }
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 3.0)
          {
            if (ExecutiveTower.Garage_Garages.Equals("GarageA"))
            {
              this.Config_Garages.SetValue<string>("MBWestA", "Decor", this.MWDecor);
              this.Config_Garages.SetValue<string>("MBWestA", "Lighting", this.MWLighting);
              this.Config_Garages.SetValue<string>("MBWestA", "Numbering", this.MWNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageB"))
            {
              this.Config_Garages.SetValue<string>("MBWestB", "Decor", this.MWDecor);
              this.Config_Garages.SetValue<string>("MBWestB", "Lighting", this.MWLighting);
              this.Config_Garages.SetValue<string>("MBWestB", "Numbering", this.MWNumbering);
              this.Config_Garages.Save();
            }
            if (ExecutiveTower.Garage_Garages.Equals("GarageC"))
            {
              this.Config_Garages.SetValue<string>("MBWestC", "Decor", this.MWDecor);
              this.Config_Garages.SetValue<string>("MBWestC", "Lighting", this.MWLighting);
              this.Config_Garages.SetValue<string>("MBWestC", "Numbering", this.MWNumbering);
              this.Config_Garages.Save();
            }
          }
          if (ExecutiveTower.Garage_Garages.Equals("GarageA"))
          {
            this.Delete();
            this.Load();
          }
          if (ExecutiveTower.Garage_Garages.Equals("GarageB"))
          {
            this.Delete();
            this.LoadB();
          }
          if (ExecutiveTower.Garage_Garages.Equals("GarageC"))
          {
            this.Delete();
            this.LoadC();
          }
          UI.Notify(this.GetHostName() + " Executive Garage Interior Has been Set!");
        }
        else
          UI.Notify(this.GetHostName() + " You do not have enought Money to change the look of the Executive Garage");
      });
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, float> target1 = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__2.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, float>> p2 = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__2;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__1.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, object, object>> p1 = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__0, DecorPrice[D.Index], LIGHTINGPrice[L.Index]);
        object obj2 = NumberingPrice[N.Index];
        object obj3 = target2((CallSite) p1, obj1, obj2);
        TotalPrice = target1((CallSite) p2, obj3);
        BuySet.Text = "Change Interior Set ~g~$" + TotalPrice.ToString("N");
        if (item == D)
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__3 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__3.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__3, this, num, Decor[D.Index], 1);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__4 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.MDecor = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__4, Decor[D.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__5 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__5 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__5.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__5, this, num, Decor[D.Index], 1);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__6 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.LDecor = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__6, Decor[D.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__7 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__7 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__7.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__7, this, num, Decor[D.Index], 1);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__8 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ADecor = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__8.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__8, Decor[D.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__9 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__9.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__9, this, num, Decor[D.Index], 1);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.MWDecor = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__10.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__10, Decor[D.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
        }
        if (item == L)
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__11 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__11 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__11.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__11, this, num, LIGHTING[L.Index], 2);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__12 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.MLighting = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__12.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__12, LIGHTING[L.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__13 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__13.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__13, this, num, LIGHTING[L.Index], 2);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__14 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.LLighting = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__14.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__14, LIGHTING[L.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__15 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__15.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__15, this, num, LIGHTING[L.Index], 2);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__16 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.ALighting = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__16.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__16, LIGHTING[L.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 3.0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
            int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Z);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__17 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__17.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__17, this, num, LIGHTING[L.Index], 2);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__18 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.MWLighting = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__18.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__18, LIGHTING[L.Index]);
            UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
          }
        }
        if (item != N)
          return;
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
          int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerMB_Garages.Z);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__19 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__19.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__19, this, num, Numbering[N.Index], 3);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MNumbering = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__20.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__20, Numbering[N.Index]);
          UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
          int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerL_Garages.Z);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__21 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__21.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__21, this, num, Numbering[N.Index], 3);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.LNumbering = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__22.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__22, Numbering[N.Index]);
          UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
          int num = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerA_Garages.Z);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__23 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__23 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__23.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__23, this, num, Numbering[N.Index], 3);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ANumbering = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__24.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__24, Numbering[N.Index]);
          UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) >= 3.0)
          return;
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
        int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.X, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.Y, (InputArgument) ExecutiveTower.MenuMarkerMBW_Garages.Z);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__25 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__25 = CallSite<Action<CallSite, ExecutiveTower, int, object, int>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "RefreshInterior", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__25.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__25, this, num1, Numbering[N.Index], 3);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__26 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MWNumbering = ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__26.Target((CallSite) ExecutiveTower.\u003C\u003Eo__28.\u003C\u003Ep__26, Numbering[N.Index]);
        UI.Notify(this.GetHostName() + " Interior will only save when you hit Buy!");
      });
    }

    public void LoadC()
    {
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.DisableGarageA();
      this.DisableGarageB();
      this.DisableGarageC();
      this.EnableGarageC();
    }

    public void LoadB()
    {
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.DisableGarageA();
      this.DisableGarageB();
      this.DisableGarageC();
      this.EnableGarageB();
    }

    public void Load()
    {
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.DisableGarageA();
      this.DisableGarageB();
      this.DisableGarageC();
      this.EnableGarageA();
    }

    public void Delete()
    {
      this.DisableGarageA();
      this.DisableGarageB();
      this.DisableGarageC();
    }

    public void EnableGarageA()
    {
      ExecutiveTower.Garage_Garages = "GarageA";
      ExecutiveTower.MenuMarkerA_Garages = new Vector3(-177f, -588f, 135f);
      ExecutiveTower.MenuMarkerL_Garages = new Vector3(-1582f, -583f, 85f);
      ExecutiveTower.MenuMarkerMBW_Garages = new Vector3(-1375f, -487f, 56f);
      ExecutiveTower.MenuMarkerMB_Garages = new Vector3(-76f, -836f, 221f);
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_a";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_a";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_a";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_a";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusA", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusA", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusA", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankA", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankA", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankA", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestA", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestA", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestA", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokA", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokA", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokA", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -84.2193, (InputArgument) -823.0851, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.84, (InputArgument) -478.7402, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1581.112, (InputArgument) -567.245, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -191.0133, (InputArgument) -579.1428, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -84.2193, (InputArgument) -823.0851, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.84, (InputArgument) -478.7402, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1581.112, (InputArgument) -567.245, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -191.0133, (InputArgument) -579.1428, (InputArgument) 135.0);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ADecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ALighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ANumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
    }

    public void EnableGarageB()
    {
      ExecutiveTower.Garage_Garages = "GarageB";
      ExecutiveTower.MenuMarkerA_Garages = new Vector3(-102f, -573f, 135f);
      ExecutiveTower.MenuMarkerMB_Garages = new Vector3(-55f, -817f, 221f);
      ExecutiveTower.MenuMarkerMBW_Garages = new Vector3(-1375f, -487f, 41f);
      ExecutiveTower.MenuMarkerL_Garages = new Vector3(-1584f, -560f, 85f);
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_b";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_b";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_b";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_b";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusB", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusB", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusB", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankB", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankB", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankB", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestB", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestB", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestB", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokB", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokB", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokB", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -69.8627, (InputArgument) -824.7498, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.86, (InputArgument) -478.7574, (InputArgument) 48.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1568.739, (InputArgument) -562.0455, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -117.4989, (InputArgument) -568.1132, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -69.8627, (InputArgument) -824.7498, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.86, (InputArgument) -478.7574, (InputArgument) 48.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1568.739, (InputArgument) -562.0455, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -117.4989, (InputArgument) -568.1132, (InputArgument) 135.0);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ADecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ALighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ANumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
    }

    public void EnableGarageC()
    {
      ExecutiveTower.Garage_Garages = "GarageC";
      ExecutiveTower.MenuMarkerL_Garages = new Vector3(-1561f, -559f, 85f);
      ExecutiveTower.MenuMarkerMBW_Garages = new Vector3(-1388f, -465f, 57f);
      ExecutiveTower.MenuMarkerMB_Garages = new Vector3(-94f, -820f, 221f);
      ExecutiveTower.MenuMarkerA_Garages = new Vector3(-148f, -640f, 135f);
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_c";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_c";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_c";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_c";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusC", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusC", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusC", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankC", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankC", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankC", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestC", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestC", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestC", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokC", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokC", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokC", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -80.4318, (InputArgument) -813.2536, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1374.682, (InputArgument) -474.3586, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1563.557, (InputArgument) -574.4314, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -136.078, (InputArgument) -630.1852, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -80.4318, (InputArgument) -813.2536, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1374.682, (InputArgument) -474.3586, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1563.557, (InputArgument) -574.4314, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -136.078, (InputArgument) -630.1852, (InputArgument) 135.0);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num1, (InputArgument) this.MNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num2, (InputArgument) this.MWNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LDecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LLighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) this.LNumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ADecor);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ALighting);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num4, (InputArgument) this.ANumbering);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
    }

    public void DisableGarageA()
    {
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_a";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_a";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_a";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_a";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusA", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusA", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusA", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankA", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankA", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankA", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestA", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestA", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestA", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokA", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokA", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokA", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -84.2193, (InputArgument) -823.0851, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.84, (InputArgument) -478.7402, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1581.112, (InputArgument) -567.245, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -191.0133, (InputArgument) -579.1428, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
    }

    public void DisableGarageB()
    {
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_b";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_b";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_b";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_b";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusB", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusB", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusB", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankB", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankB", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankB", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestB", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestB", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestB", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokB", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokB", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokB", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -69.8627, (InputArgument) -824.7498, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1388.86, (InputArgument) -478.7574, (InputArgument) 48.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1568.739, (InputArgument) -562.0455, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -117.4989, (InputArgument) -568.1132, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
    }

    public void DisableGarageC()
    {
      ExecutiveTower.MazeBank = "imp_dt1_11_cargarage_c";
      ExecutiveTower.MazeBankWest = "imp_sm_15_cargarage_c";
      ExecutiveTower.Arcadius = "imp_dt1_02_cargarage_c";
      ExecutiveTower.Lombank = "imp_sm_13_cargarage_c";
      this.LoadIniFile_Garages("scripts//Open60CarGarage.ini");
      this.ADecor = this.Config_Garages.GetValue<string>("ArcadiusC", "Decor", this.ADecor);
      this.ALighting = this.Config_Garages.GetValue<string>("ArcadiusC", "Lighting", this.ALighting);
      this.ANumbering = this.Config_Garages.GetValue<string>("ArcadiusC", "Numbering", this.ANumbering);
      this.MDecor = this.Config_Garages.GetValue<string>("MazeBankC", "Decor", this.MDecor);
      this.MLighting = this.Config_Garages.GetValue<string>("MazeBankC", "Lighting", this.MLighting);
      this.MNumbering = this.Config_Garages.GetValue<string>("MazeBankC", "Numbering", this.MNumbering);
      this.MWDecor = this.Config_Garages.GetValue<string>("MBWestC", "Decor", this.MWDecor);
      this.MWLighting = this.Config_Garages.GetValue<string>("MBWestC", "Lighting", this.MWLighting);
      this.MWNumbering = this.Config_Garages.GetValue<string>("MBWestC", "Numbering", this.MWNumbering);
      this.LDecor = this.Config_Garages.GetValue<string>("LombokC", "Decor", this.LDecor);
      this.LLighting = this.Config_Garages.GetValue<string>("LombokC", "Lighting", this.LLighting);
      this.LNumbering = this.Config_Garages.GetValue<string>("LombokC", "Numbering", this.LNumbering);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBank);
      int Interior1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -80.4318, (InputArgument) -813.2536, (InputArgument) 221.0);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.MazeBankWest);
      int Interior2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1374.682, (InputArgument) -474.3586, (InputArgument) 56.1);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Lombank);
      int Interior3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1563.557, (InputArgument) -574.4314, (InputArgument) 85.5);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) ExecutiveTower.Arcadius);
      int Interior4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -136.078, (InputArgument) -630.1852, (InputArgument) 135.0);
      this.RefreshInterior(Interior1, 1);
      this.RefreshInterior(Interior1, 2);
      this.RefreshInterior(Interior1, 3);
      this.RefreshInterior(Interior2, 1);
      this.RefreshInterior(Interior2, 2);
      this.RefreshInterior(Interior2, 3);
      this.RefreshInterior(Interior3, 1);
      this.RefreshInterior(Interior3, 2);
      this.RefreshInterior(Interior3, 3);
      this.RefreshInterior(Interior4, 1);
      this.RefreshInterior(Interior4, 2);
      this.RefreshInterior(Interior4, 3);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.MazeBankWest);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Lombank);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) ExecutiveTower.Arcadius);
    }

    public GTA.Model RequestModel(string Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(VehicleHash Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(PedHash Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(int Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(250);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    private void SetupAircraftStorage()
    {
      this.AircraftStorageMarker = World.CreateBlip(this.AircraftStorageLoc);
      this.AircraftStorageMarker.Sprite = BlipSprite.Hangar;
      this.AircraftStorageMarker.Color = BlipColor.White;
      this.AircraftStorageMarker.Name = "Combined Aircraft Storage";
      this.AircraftStorageMarker.IsShortRange = true;
      this.AircraftStorageMarker.Alpha = 0;
    }

    private void SetupVehicleStorage()
    {
      this.LotBlip = World.CreateBlip(this.LotLoc);
      this.LotBlip.Sprite = BlipSprite.Garage2;
      this.LotBlip.Color = BlipColor.White;
      this.LotBlip.Name = "Combined Vehicle Storage";
      this.LotBlip.Alpha = 0;
      this.LotBlip.IsShortRange = true;
    }

    private void SetupDock()
    {
      this.DockBlip = World.CreateBlip(this.Dockloc);
      this.DockBlip.Sprite = BlipSprite.HotProperty;
      this.DockBlip.Color = BlipColor.White;
      this.DockBlip.Name = "Combined Boat Storage";
      this.DockBlip.IsShortRange = true;
      this.DockBlip.Alpha = 0;
    }

    public void GetBusinesslocations()
    {
      if (this.BusinessLocation == 0)
      {
        this.ChairPos = new Vector3(-125.6f, -641.625f, 167.3204f);
        this.P_Rotation = 97f;
        this.AssistantRot = 10f;
        this.CEO_ChairRot = 180f;
        this.Assistant_ChairRot = -138f;
        this.AssistantChair = new Vector3(-139.1f, -633.8f, 167.9f);
        this.AssistantPos = new Vector3(-139.1157f, -633.6f, 167.9f);
        this.CEOChairPos = new Vector3(-125.77f, -642.02f, 167.9f);
        this.ModShopEnter = new Vector3(-139.15f, -620.7f, 167.5f);
        ExecutiveTower.Exit = new Vector3(-146f, -604f, 166f);
        ExecutiveTower.CustomizeMenuMarker = new Vector3(-142f, -598f, 166f);
        this.VehicleAPos = new Vector3(-144f, -594f, 166f);
        this.ModShopInfoMarker = new Vector3(-156.88f, -597.19f, 166.5f);
        this.ModShopOrderCar = new Vector3(-144.05f, -587.7f, 166.5f);
        this.ChangeBusinessNameCameraPos = new Vector3(-139.0167f, -632.7963f, 170.2f);
        this.ChangeBusinessNameCameraRotation = -178f;
        this.TowerIn = "Mazebank";
        this.EnterMarkerA = new Vector3(-141.682f, -620.7f, 168f);
        this.EnterMarkerB = new Vector3(-142.028f, -617.47f, 168.82f);
        this.EnterMarkerC = new Vector3(-139.682f, -617.782f, 168.82f);
        this.ExitMarkerA = new Vector3(-198.649f, -580.765f, 136f);
        this.ExitMarkerB = new Vector3(-124f, -571f, 135.5f);
        this.ExitMarkerC = new Vector3(-135.68f, -622.827f, 136f);
        this.MarkerEnter = new Vector3(-116.292f, -606.989f, 35f);
        this.MarkerExit = new Vector3(-139.7103f, -628.6006f, 167.82f);
        this.MenuMarker = new Vector3(-147.381f, -640.501f, 167f);
        this.RoofEnterMarker = new Vector3(-134.68f, -636.725f, 167f);
        this.RoofExitMarker = new Vector3(-133.469f, -584.263f, 200f);
        this.HeliSpawn = new Vector3(-145.584f, -592.121f, 210f);
        this.CarSpawn = new Vector3(-144.336f, -577.952f, 31f);
        this.GarageMarker = new Vector3(-147.53f, -586.003f, 31f);
        this.VehicleSpawn = new Vector3(-36f, -939.158f, 29.5f);
        this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
        this.AircraftStorageLoc = new Vector3(1679f, 3238f, 40f);
        this.Dockloc = new Vector3(3865f, 4463.66f, 2f);
        this.LotLoc = new Vector3(863f, 2173f, 51f);
        this.Radiopos = new Vector3(-79.33f, -804.844f, 243f);
        this.SleepPos = new Vector3(-127.36f, -633.138f, 168f);
        this.MBTOfficeSitRespawnPos = new Vector3(-67.7f, -804.6f, 241f);
        this.MBTOfficeSitPos = new Vector3(-67.7f, -804.6f, 242f);
        this.LoungeSitRot = 132f;
        ExecutiveTower.Path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//ArcadiusGarage//";
      }
      if (this.BusinessLocation == 1)
      {
        this.ChairPos = new Vector3(-80.6432f, -801.6765f, 242f);
        this.P_Rotation = -109f;
        this.AssistantRot = 180f;
        this.CEO_ChairRot = 0.0f;
        this.Assistant_ChairRot = 20f;
        this.AssistantChair = new Vector3(-72.4f, -814.6f, 242.4f);
        this.AssistantPos = new Vector3(-72.4f, -814.6f, 242.5f);
        this.CEOChairPos = new Vector3(-80.68f, -801.2f, 242.4f);
        this.ModShopEnter = new Vector3(-77.81f, -826.19f, 242.5f);
        ExecutiveTower.Exit = new Vector3(-69.87f, -827.998f, 284f);
        this.ModShopInfoMarker = new Vector3(-82.45f, -827.35f, 284f);
        this.ModShopOrderCar = new Vector3(-76.51f, -813.43f, 284f);
        ExecutiveTower.CustomizeMenuMarker = new Vector3(-69f, -821f, 284f);
        this.VehicleAPos = new Vector3(-75f, -819f, 284f);
        this.TowerIn = "Arcadius";
        this.ChangeBusinessNameCameraPos = new Vector3(-72.507f, -815.188f, 245f);
        this.ChangeBusinessNameCameraRotation = -22f;
        this.EnterMarkerA = new Vector3(-75.52f, -826.96f, 243.286f);
        this.EnterMarkerB = new Vector3(-76.52f, -830.295f, 243.286f);
        this.EnterMarkerC = new Vector3(-78.9021f, -829.46f, 243.286f);
        this.MarkerEnter = new Vector3(-62.03f, -793.789f, 43f);
        this.MarkerExit = new Vector3(-73.9f, -819.158f, 242f);
        this.MenuMarker = new Vector3(-62f, -812.158f, 242.5f);
        this.RoofEnterMarker = new Vector3(-74.52767f, -809.6809f, 242.5f);
        this.RoofExitMarker = new Vector3(-66f, -819.158f, 320.5f);
        this.HeliSpawn = new Vector3(-75f, -818.158f, 325.5f);
        this.CarSpawn = new Vector3(-83f, -815.158f, 35f);
        this.GarageMarker = new Vector3(-82.16116f, -810.6047f, 35f);
        this.WherehouseEnter = new Vector3(926f, -2306.158f, 28.5f);
        this.VehicleSpawn = new Vector3(-36f, -939.158f, 29.5f);
        this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
        this.AircraftStorageLoc = new Vector3(1679f, 3238f, 40f);
        this.Dockloc = new Vector3(3865f, 4463.66f, 2f);
        this.LotLoc = new Vector3(863f, 2173f, 51f);
        this.Radiopos = new Vector3(-79.33f, -804.844f, 243f);
        this.AssistantChair = new Vector3(-72.4f, -814.6f, 242.4f);
        this.AssistantPos = new Vector3(-72.4f, -814.6f, 242.5f);
        this.SleepPos = new Vector3(-127.36f, -633.138f, 168f);
        this.MBTOfficeSitRespawnPos = new Vector3(-139f, -645.622f, 167.3f);
        this.MBTOfficeSitPos = new Vector3(-137f, -644.622f, 167.3f);
        ExecutiveTower.Path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankGarage//";
      }
      if (this.BusinessLocation == 2)
      {
        this.ChairPos = new Vector3(-1555.582f, -575.1f, 107.1f);
        this.P_Rotation = 124f;
        this.AssistantRot = 38f;
        this.CEO_ChairRot = 200f;
        this.Assistant_ChairRot = -85f;
        this.AssistantChair = new Vector3(-1570.704f, -575.1425f, 107.6f);
        this.AssistantPos = new Vector3(-1570.8f, -574.95f, 107.5f);
        this.CEOChairPos = new Vector3(-1555.582f, -575.1f, 107.6f);
        this.ModShopEnter = new Vector3(-1577.68f, -563.5f, 107.5f);
        ExecutiveTower.Exit = new Vector3(-1578f, -584f, 104f);
        this.ModShopInfoMarker = new Vector3(-1588.24f, -576.22f, 104.5f);
        this.ModShopOrderCar = new Vector3(-1575.5f, -568.22f, 104.5f);
        this.ChangeBusinessNameCameraPos = new Vector3(-1571.149f, -574.5823f, 110f);
        this.ChangeBusinessNameCameraRotation = -142f;
        this.TowerIn = "Lombok";
        ExecutiveTower.CustomizeMenuMarker = new Vector3(-1573f, -578f, 104f);
        this.VehicleAPos = new Vector3(-1578f, -577f, 104f);
        this.EnterMarkerA = new Vector3(-1579.99f, -564.723f, 108f);
        this.EnterMarkerB = new Vector3(-1581.77f, -562.214f, 108.214f);
        this.EnterMarkerC = new Vector3(-1579.76f, -561.138f, 108.523f);
        this.ExitMarkerA = new Vector3(-1586.37f, -561.844f, 86f);
        this.ExitMarkerB = new Vector3(-1563f, -557f, 86.5f);
        this.ExitMarkerC = new Vector3(-1558f, -579f, 86f);
        this.MarkerEnter = new Vector3(-1582.3f, -557.1933f, 33.5f);
        this.MarkerExit = new Vector3(-1573.788f, -571.0647f, 107.5f);
        this.MenuMarker = new Vector3(-1574.97f, -584.364f, 107f);
        this.RoofEnterMarker = new Vector3(-1565.7f, -575.6f, 107f);
        this.RoofExitMarker = new Vector3(-1563.06f, -569f, 114f);
        this.HeliSpawn = new Vector3(-1581.08f, -570.092f, 116f);
        this.CarSpawn = new Vector3(-1541.52f, -570.96f, 25f);
        this.GarageMarker = new Vector3(-1541.52f, -570.96f, 25f);
        this.VehicleSpawn = new Vector3(-36f, -939.158f, 29.5f);
        this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
        this.AircraftStorageLoc = new Vector3(1679f, 3238f, 40f);
        this.Dockloc = new Vector3(3865f, 4463.66f, 2f);
        this.LotLoc = new Vector3(863f, 2173f, 51f);
        this.Radiopos = new Vector3(-79.33f, -804.844f, 243f);
        this.SleepPos = new Vector3(-1560f, -568f, 108f);
        this.MBTOfficeSitRespawnPos = new Vector3(-1564.72f, -583.497f, 107f);
        this.MBTOfficeSitPos = new Vector3(-1564.72f, -583.497f, 107f);
        ExecutiveTower.Path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//LombokGarage//";
      }
      if (this.BusinessLocation != 3)
        return;
      this.ChairPos = new Vector3(-1372.401f, -464.029f, 70.55f);
      this.P_Rotation = -162f;
      this.AssistantRot = 103f;
      this.CEO_ChairRot = -90f;
      this.Assistant_ChairRot = -45f;
      this.AssistantChair = new Vector3(-1379.6f, -477.4772f, 71f);
      this.AssistantPos = new Vector3(-1379.8f, -477.4772f, 71f);
      this.CEOChairPos = new Vector3(-1372.233f, -464.029f, 71.05f);
      this.ModShopEnter = new Vector3(-1392.98f, -478.18f, 71.5f);
      ExecutiveTower.Exit = new Vector3(-1397f, -470f, 77f);
      this.ModShopInfoMarker = new Vector3(-1386.417f, -464.88f, 77.5f);
      this.ModShopOrderCar = new Vector3(-1384.97f, -480.77f, 77.5f);
      this.ChangeBusinessNameCameraPos = new Vector3(-1380.734f, -477.8593f, 73.6f);
      this.ChangeBusinessNameCameraRotation = -83f;
      this.TowerIn = "MazebankWest";
      ExecutiveTower.CustomizeMenuMarker = new Vector3(-1393f, -476f, 77f);
      this.VehicleAPos = new Vector3(-1389f, -473f, 78f);
      this.EnterMarkerA = new Vector3(-1392.3f, -480.558f, 72f);
      this.EnterMarkerB = new Vector3(-1395.77f, -481.078f, 72f);
      this.EnterMarkerC = new Vector3(-1396.13f, -478.686f, 72f);
      this.ExitMarkerA = new Vector3(-1395.37f, -480.7f, 57f);
      this.ExitMarkerB = new Vector3(-1395f, -480f, 49f);
      this.ExitMarkerC = new Vector3(-1367.492f, -472.5f, 57f);
      this.MarkerEnter = new Vector3(-1380f, -501.789f, 32f);
      this.MarkerExit = new Vector3(-1384.56f, -478.158f, 71f);
      this.MenuMarker = new Vector3(-1372.93f, -485.139f, 71f);
      this.RoofEnterMarker = new Vector3(-1376.52f, -472.758f, 71f);
      this.RoofExitMarker = new Vector3(-1368.32f, -471f, 83f);
      this.HeliSpawn = new Vector3(-1391f, -478.158f, 91f);
      this.CarSpawn = new Vector3(-1373f, -473.96f, 31f);
      this.GarageMarker = new Vector3(-1370.227f, -473.4323f, 30.5f);
      this.VehicleSpawn = new Vector3(-36f, -939.158f, 29.5f);
      this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
      this.AircraftStorageLoc = new Vector3(1679f, 3238f, 40f);
      this.Dockloc = new Vector3(3865f, 4463.66f, 2f);
      this.LotLoc = new Vector3(863f, 2173f, 51f);
      this.Radiopos = new Vector3(-79.33f, -804.844f, 243f);
      this.SleepPos = new Vector3(-1381.42f, -465f, 72f);
      this.MBTOfficeSitRespawnPos = new Vector3(-1369.1f, -476.9f, 70.5f);
      this.MBTOfficeSitPos = new Vector3(-1369.1f, -476.9f, 70.5f);
      this.LoungeSitRot = 80f;
      ExecutiveTower.Path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankWestGarage//";
    }

    private void LoadMain(string iniName)
    {
      try
      {
        this.MainConfigFile = ScriptSettings.Load(iniName);
        this.ArcadiusBlip_Colour = this.MainConfigFile.GetValue<BlipColor>("Misc", "ArcadiusBlip_Colour", this.ArcadiusBlip_Colour);
        this.ArcadiusMarkerColorString = this.MainConfigFile.GetValue<string>("Misc", "ArcadiusMarkerColor", this.ArcadiusMarkerColorString);
        if (this.ArcadiusMarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.ArcadiusMarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.ArcadiusMarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.ArcadiusMarkerColorString.Contains("ARGB"))
          this.ArcadiusMarkerColor = Color.FromName(this.ArcadiusMarkerColorString);
        this.MazeBankBlip_Colour = this.MainConfigFile.GetValue<BlipColor>("Misc", "MazeBankBlip_Colour", this.MazeBankBlip_Colour);
        this.MazeBankMarkerColorString = this.MainConfigFile.GetValue<string>("Misc", "MazeBankMarkerColor", this.MazeBankMarkerColorString);
        if (this.MazeBankMarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.MazeBankMarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.MazeBankMarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.MazeBankMarkerColorString.Contains("ARGB"))
          this.MazeBankMarkerColor = Color.FromName(this.MazeBankMarkerColorString);
        this.MBWBlip_Colour = this.MainConfigFile.GetValue<BlipColor>("Misc", "MBWBlip_Colour", this.MBWBlip_Colour);
        this.MBWMarkerColorString = this.MainConfigFile.GetValue<string>("Misc", "MBWsMarkerColor", this.MBWMarkerColorString);
        if (this.MBWMarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.MBWMarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.MBWMarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.MBWMarkerColorString.Contains("ARGB"))
          this.MBWMarkerColor = Color.FromName(this.MBWMarkerColorString);
        this.LombokBlip_Colour = this.MainConfigFile.GetValue<BlipColor>("Misc", "LombokBlip_Colour", this.LombokBlip_Colour);
        this.LombokMarkerColorString = this.MainConfigFile.GetValue<string>("Misc", "LombokMarkerColor", this.LombokMarkerColorString);
        if (this.LombokMarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.LombokMarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.LombokMarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.LombokMarkerColorString.Contains("ARGB"))
          this.LombokMarkerColor = Color.FromName(this.LombokMarkerColorString);
        this.UseInduvidualTowerColors = this.MainConfigFile.GetValue<bool>("Misc", "UseInduvidualTowerColors", this.UseInduvidualTowerColors);
        this.BusinessUpgradeIncreaseGain = this.MainConfigFile.GetValue<float>("Prices", "BusinessUpgradeIncreaseGain", this.BusinessUpgradeIncreaseGain);
        this.BusinessUpgradeBasePrice = this.MainConfigFile.GetValue<float>("Prices", "BusinessUpgradeBasePrice", this.BusinessUpgradeBasePrice);
        this.IncreaseStockMinAmount = this.MainConfigFile.GetValue<float>("Prices", "IncreaseStockMinAmount", this.IncreaseStockMinAmount);
        this.IncreaseStockMaxAmount = this.MainConfigFile.GetValue<float>("Prices", "IncreaseStockMaxAmount", this.IncreaseStockMaxAmount);
        this.DecreaseStockMinAmount = this.MainConfigFile.GetValue<float>("Prices", "DecreaseStockMinAmount", this.DecreaseStockMinAmount);
        this.DecreaseStockMaxAmount = this.MainConfigFile.GetValue<float>("Prices", "DecreaseStockMaxAmount", this.DecreaseStockMaxAmount);
        this.BusinessLocation = this.MainConfigFile.GetValue<int>("Misc", "BusinessLocation", this.BusinessLocation);
        this.GetBusinesslocations();
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Main.ini Failed To Load.");
      }
    }

    public void MainModRefresh()
    {
      UI.Notify("~g~ Found Refresh Sequence~w~");
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.BusinessLocation = this.MainConfigFile.GetValue<int>("Misc", "BusinessLocation", this.BusinessLocation);
      this.GetBusinesslocations();
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
      this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
      Script.Wait(500);
      this.SetupMarker();
    }

    public void MainModDestroy()
    {
      if (!(this.TowerBlip != (Blip) null))
        return;
      this.TowerBlip.Remove();
    }

    private void CheckHostName(string iniName)
    {
      try
      {
        this.HostNameSettings = ScriptSettings.Load(iniName);
        this.HostName = this.HostNameSettings.GetValue<string>("Misc", "HostName", this.HostName);
        this.Uicolour = this.HostNameSettings.GetValue<string>("Misc", "Uicolour", this.Uicolour);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public string GetHostName()
    {
      this.CheckHostName("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.HostName = this.Config.GetValue<string>("Misc", "HostName", this.HostName);
      this.Uicolour = this.Config.GetValue<string>("Misc", "Uicolour", this.Uicolour);
      string str = "~" + this.Uicolour + "~";
      return this.HostName;
    }

    public int GetLocation()
    {
      if (this.Location == 1)
      {
        this.Vehicle1Loc = new Vector3(-86.7646f, -822.949f, 222f);
        this.Vehicle2Loc = new Vector3(-83.3558f, -818.657f, 222f);
        this.Vehicle3Loc = new Vector3(-79.7936f, -817.925f, 222f);
        this.Vehicle4Loc = new Vector3(-74.5332f, -819.925f, 222f);
        this.Vehicle5Loc = new Vector3(-70.821f, -823.925f, 222f);
        this.Vehicle6Loc = new Vector3(-69.0828f, -828.925f, 222f);
        this.Vehicle7Loc = new Vector3(-69.7485f, -835.925f, 222f);
        this.Vehicle8Loc = new Vector3(-86.7646f, -822.949f, 226f);
        this.Vehicle9Loc = new Vector3(-83.46613f, -820.5163f, 226f);
        this.Vehicle10Loc = new Vector3(-79.7936f, -817.925f, 226f);
        this.Vehicle11Loc = new Vector3(-74.5332f, -819.925f, 226f);
        this.Vehicle12Loc = new Vector3(-70.821f, -823.925f, 226f);
        this.Vehicle13Loc = new Vector3(-69.0828f, -828.925f, 226f);
        this.Vehicle14Loc = new Vector3(-69.7485f, -835.925f, 226f);
        this.Vehicle15Loc = new Vector3(-86.7646f, -822.949f, 232f);
        this.Vehicle16Loc = new Vector3(-84.3558f, -819.657f, 232f);
        this.Vehicle17Loc = new Vector3(-79.7936f, -817.925f, 232f);
        this.Vehicle18Loc = new Vector3(-74.5332f, -819.925f, 232f);
        this.Vehicle19Loc = new Vector3(-70.821f, -823.925f, 232f);
        this.Vehicle20Loc = new Vector3(-69.0828f, -828.925f, 232f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankGarage//";
      }
      if (this.Location == 2)
      {
        this.Vehicle1Loc = new Vector3(-193.84f, -581.638f, 136.001f);
        this.Vehicle2Loc = new Vector3(-192.04f, -577.038f, 136.001f);
        this.Vehicle3Loc = new Vector3(-187.78f, -573.438f, 136f);
        this.Vehicle4Loc = new Vector3(-180.65f, -572.287f, 136f);
        this.Vehicle5Loc = new Vector3(-176.275f, -574f, 136f);
        this.Vehicle6Loc = new Vector3(-171.991f, -578.646f, 136f);
        this.Vehicle7Loc = new Vector3(-174.321f, -583.959f, 136f);
        this.Vehicle8Loc = new Vector3(-193.84f, -581.638f, 141.001f);
        this.Vehicle9Loc = new Vector3(-192.04f, -577.038f, 141.001f);
        this.Vehicle10Loc = new Vector3(-187.78f, -573.438f, 141f);
        this.Vehicle11Loc = new Vector3(-180.65f, -572.287f, 141f);
        this.Vehicle12Loc = new Vector3(-176.275f, -574f, 141f);
        this.Vehicle13Loc = new Vector3(-171.991f, -578.646f, 141f);
        this.Vehicle14Loc = new Vector3(-174.321f, -583.959f, 141f);
        this.Vehicle15Loc = new Vector3(-193.84f, -581.638f, 146.001f);
        this.Vehicle16Loc = new Vector3(-192.04f, -577.038f, 146.001f);
        this.Vehicle17Loc = new Vector3(-187.78f, -573.438f, 146f);
        this.Vehicle18Loc = new Vector3(-180.65f, -572.287f, 146f);
        this.Vehicle19Loc = new Vector3(-176.275f, -574f, 146f);
        this.Vehicle20Loc = new Vector3(-174.321f, -583.959f, 146f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//ArcadiusGarage//";
      }
      if (this.Location == 3)
      {
        this.Vehicle1Loc = new Vector3(-1582.344f, -567.1028f, 86f);
        this.Vehicle2Loc = new Vector3(-1579.37f, -564.844f, 86f);
        this.Vehicle3Loc = new Vector3(-1575.37f, -565.884f, 86f);
        this.Vehicle4Loc = new Vector3(-1570.71f, -571.287f, 86f);
        this.Vehicle5Loc = new Vector3(-1569.88f, -577.817f, 86f);
        this.Vehicle6Loc = new Vector3(-1571f, -581.892f, 86f);
        this.Vehicle7Loc = new Vector3(-1576.15f, -583.959f, 86f);
        this.Vehicle8Loc = new Vector3(-1584.59f, -564.426f, 92f);
        this.Vehicle9Loc = new Vector3(-1579.37f, -564.844f, 92f);
        this.Vehicle10Loc = new Vector3(-1575.37f, -565.884f, 92f);
        this.Vehicle11Loc = new Vector3(-1570.71f, -571.287f, 92f);
        this.Vehicle12Loc = new Vector3(-1569.88f, -577.817f, 92f);
        this.Vehicle13Loc = new Vector3(-1571f, -581.892f, 92f);
        this.Vehicle14Loc = new Vector3(-1576.15f, -583.959f, 92f);
        this.Vehicle15Loc = new Vector3(-1584.59f, -564.426f, 97f);
        this.Vehicle16Loc = new Vector3(-1579.37f, -564.844f, 97f);
        this.Vehicle17Loc = new Vector3(-1575.37f, -565.884f, 97f);
        this.Vehicle18Loc = new Vector3(-1570.71f, -571.287f, 97f);
        this.Vehicle19Loc = new Vector3(-1569.88f, -577.817f, 97f);
        this.Vehicle20Loc = new Vector3(-1571f, -581.892f, 97f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//LombokGarage//";
      }
      if (this.Location == 4)
      {
        this.Vehicle1Loc = new Vector3(-1391.87f, -480f, 57f);
        this.Vehicle2Loc = new Vector3(-1389.51f, -477.102f, 57f);
        this.Vehicle3Loc = new Vector3(-1386.06f, -473.006f, 57f);
        this.Vehicle4Loc = new Vector3(-1382.66f, -471.287f, 57f);
        this.Vehicle5Loc = new Vector3(-1379.43f, -471.817f, 57f);
        this.Vehicle6Loc = new Vector3(-1373.43f, -474.25f, 57f);
        this.Vehicle7Loc = new Vector3(-1370.94f, -480.595f, 57f);
        this.Vehicle8Loc = new Vector3(-1391.87f, -480f, 62f);
        this.Vehicle9Loc = new Vector3(-1389.51f, -477.102f, 62f);
        this.Vehicle10Loc = new Vector3(-1386.06f, -473.006f, 62f);
        this.Vehicle11Loc = new Vector3(-1382.66f, -471.287f, 62f);
        this.Vehicle12Loc = new Vector3(-1379.43f, -471.817f, 62f);
        this.Vehicle13Loc = new Vector3(-1373.43f, -474.25f, 62f);
        this.Vehicle14Loc = new Vector3(-1370.94f, -480.595f, 62f);
        this.Vehicle15Loc = new Vector3(-1391.87f, -480f, 67f);
        this.Vehicle16Loc = new Vector3(-1389.51f, -477.102f, 67f);
        this.Vehicle17Loc = new Vector3(-1386.06f, -473.006f, 67f);
        this.Vehicle18Loc = new Vector3(-1382.66f, -471.287f, 67f);
        this.Vehicle19Loc = new Vector3(-1379.43f, -471.817f, 67f);
        this.Vehicle20Loc = new Vector3(-1373.43f, -474.25f, 67f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankWestGarage//";
      }
      return this.Location;
    }

    public int GetLocation(int Loc)
    {
      this.Location = Loc;
      if (this.Location == 1)
      {
        this.Vehicle1Loc = new Vector3(-86.7646f, -822.949f, 222f);
        this.Vehicle2Loc = new Vector3(-83.3558f, -818.657f, 222f);
        this.Vehicle3Loc = new Vector3(-79.7936f, -817.925f, 222f);
        this.Vehicle4Loc = new Vector3(-74.5332f, -819.925f, 222f);
        this.Vehicle5Loc = new Vector3(-70.821f, -823.925f, 222f);
        this.Vehicle6Loc = new Vector3(-69.0828f, -828.925f, 222f);
        this.Vehicle7Loc = new Vector3(-69.7485f, -835.925f, 222f);
        this.Vehicle8Loc = new Vector3(-86.7646f, -822.949f, 226f);
        this.Vehicle9Loc = new Vector3(-83.46613f, -820.5163f, 226f);
        this.Vehicle10Loc = new Vector3(-79.7936f, -817.925f, 226f);
        this.Vehicle11Loc = new Vector3(-74.5332f, -819.925f, 226f);
        this.Vehicle12Loc = new Vector3(-70.821f, -823.925f, 226f);
        this.Vehicle13Loc = new Vector3(-69.0828f, -828.925f, 226f);
        this.Vehicle14Loc = new Vector3(-69.7485f, -835.925f, 226f);
        this.Vehicle15Loc = new Vector3(-86.7646f, -822.949f, 232f);
        this.Vehicle16Loc = new Vector3(-84.3558f, -819.657f, 232f);
        this.Vehicle17Loc = new Vector3(-79.7936f, -817.925f, 232f);
        this.Vehicle18Loc = new Vector3(-74.5332f, -819.925f, 232f);
        this.Vehicle19Loc = new Vector3(-70.821f, -823.925f, 232f);
        this.Vehicle20Loc = new Vector3(-69.0828f, -828.925f, 232f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankGarage//";
      }
      if (this.Location == 2)
      {
        this.Vehicle1Loc = new Vector3(-193.84f, -581.638f, 136.001f);
        this.Vehicle2Loc = new Vector3(-192.04f, -577.038f, 136.001f);
        this.Vehicle3Loc = new Vector3(-187.78f, -573.438f, 136f);
        this.Vehicle4Loc = new Vector3(-180.65f, -572.287f, 136f);
        this.Vehicle5Loc = new Vector3(-176.275f, -574f, 136f);
        this.Vehicle6Loc = new Vector3(-171.991f, -578.646f, 136f);
        this.Vehicle7Loc = new Vector3(-174.321f, -583.959f, 136f);
        this.Vehicle8Loc = new Vector3(-193.84f, -581.638f, 141.001f);
        this.Vehicle9Loc = new Vector3(-192.04f, -577.038f, 141.001f);
        this.Vehicle10Loc = new Vector3(-187.78f, -573.438f, 141f);
        this.Vehicle11Loc = new Vector3(-180.65f, -572.287f, 141f);
        this.Vehicle12Loc = new Vector3(-176.275f, -574f, 141f);
        this.Vehicle13Loc = new Vector3(-171.991f, -578.646f, 141f);
        this.Vehicle14Loc = new Vector3(-174.321f, -583.959f, 141f);
        this.Vehicle15Loc = new Vector3(-193.84f, -581.638f, 146.001f);
        this.Vehicle16Loc = new Vector3(-192.04f, -577.038f, 146.001f);
        this.Vehicle17Loc = new Vector3(-187.78f, -573.438f, 146f);
        this.Vehicle18Loc = new Vector3(-180.65f, -572.287f, 146f);
        this.Vehicle19Loc = new Vector3(-176.275f, -574f, 146f);
        this.Vehicle20Loc = new Vector3(-174.321f, -583.959f, 146f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//ArcadiusGarage//";
      }
      if (this.Location == 3)
      {
        this.Vehicle1Loc = new Vector3(-1582.344f, -567.1028f, 86f);
        this.Vehicle2Loc = new Vector3(-1579.37f, -564.844f, 86f);
        this.Vehicle3Loc = new Vector3(-1575.37f, -565.884f, 86f);
        this.Vehicle4Loc = new Vector3(-1570.71f, -571.287f, 86f);
        this.Vehicle5Loc = new Vector3(-1569.88f, -577.817f, 86f);
        this.Vehicle6Loc = new Vector3(-1571f, -581.892f, 86f);
        this.Vehicle7Loc = new Vector3(-1576.15f, -583.959f, 86f);
        this.Vehicle8Loc = new Vector3(-1584.59f, -564.426f, 92f);
        this.Vehicle9Loc = new Vector3(-1579.37f, -564.844f, 92f);
        this.Vehicle10Loc = new Vector3(-1575.37f, -565.884f, 92f);
        this.Vehicle11Loc = new Vector3(-1570.71f, -571.287f, 92f);
        this.Vehicle12Loc = new Vector3(-1569.88f, -577.817f, 92f);
        this.Vehicle13Loc = new Vector3(-1571f, -581.892f, 92f);
        this.Vehicle14Loc = new Vector3(-1576.15f, -583.959f, 92f);
        this.Vehicle15Loc = new Vector3(-1584.59f, -564.426f, 97f);
        this.Vehicle16Loc = new Vector3(-1579.37f, -564.844f, 97f);
        this.Vehicle17Loc = new Vector3(-1575.37f, -565.884f, 97f);
        this.Vehicle18Loc = new Vector3(-1570.71f, -571.287f, 97f);
        this.Vehicle19Loc = new Vector3(-1569.88f, -577.817f, 97f);
        this.Vehicle20Loc = new Vector3(-1571f, -581.892f, 97f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//LombokGarage//";
      }
      if (this.Location == 4)
      {
        this.Vehicle1Loc = new Vector3(-1391.87f, -480f, 57f);
        this.Vehicle2Loc = new Vector3(-1389.51f, -477.102f, 57f);
        this.Vehicle3Loc = new Vector3(-1386.06f, -473.006f, 57f);
        this.Vehicle4Loc = new Vector3(-1382.66f, -471.287f, 57f);
        this.Vehicle5Loc = new Vector3(-1379.43f, -471.817f, 57f);
        this.Vehicle6Loc = new Vector3(-1373.43f, -474.25f, 57f);
        this.Vehicle7Loc = new Vector3(-1370.94f, -480.595f, 57f);
        this.Vehicle8Loc = new Vector3(-1391.87f, -480f, 62f);
        this.Vehicle9Loc = new Vector3(-1389.51f, -477.102f, 62f);
        this.Vehicle10Loc = new Vector3(-1386.06f, -473.006f, 62f);
        this.Vehicle11Loc = new Vector3(-1382.66f, -471.287f, 62f);
        this.Vehicle12Loc = new Vector3(-1379.43f, -471.817f, 62f);
        this.Vehicle13Loc = new Vector3(-1373.43f, -474.25f, 62f);
        this.Vehicle14Loc = new Vector3(-1370.94f, -480.595f, 62f);
        this.Vehicle15Loc = new Vector3(-1391.87f, -480f, 67f);
        this.Vehicle16Loc = new Vector3(-1389.51f, -477.102f, 67f);
        this.Vehicle17Loc = new Vector3(-1386.06f, -473.006f, 67f);
        this.Vehicle18Loc = new Vector3(-1382.66f, -471.287f, 67f);
        this.Vehicle19Loc = new Vector3(-1379.43f, -471.817f, 67f);
        this.Vehicle20Loc = new Vector3(-1373.43f, -474.25f, 67f);
        this.path = "scripts//HKH191sBusinessMods//ExecutiveBusiness//MazeBankWestGarage//";
      }
      return Loc;
    }

    public void DeleteCarinSlot(string Slot, Vehicle V)
    {
      this.SC.LoadIniFile(this.path + this.EXGarageNum + "//" + Slot + ".ini");
      UI.Notify(this.path + this.EXGarageNum + "//" + Slot + ".ini");
      this.SC.SaveName();
      V.Delete();
    }

    public void VehiclePurchaseSaveVehicle(UIMenu ParentMenu)
    {
    }

    public void VehiclePurchaseMenuVehicles(UIMenu ParentMenu)
    {
    }

    public void RemoveCar()
    {
      UIMenu uiMenu1 = this.EXmodMenuPool.AddSubMenu(this.RemoveMenu, "Remove Vehicle");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem Slot1A = new UIMenuItem("Slot 1");
      uiMenu1.AddItem(Slot1A);
      UIMenuItem Slot2A = new UIMenuItem("Slot 2");
      uiMenu1.AddItem(Slot2A);
      UIMenuItem Slot3A = new UIMenuItem("Slot 3");
      uiMenu1.AddItem(Slot3A);
      UIMenuItem Slot4A = new UIMenuItem("Slot 4");
      uiMenu1.AddItem(Slot4A);
      UIMenuItem Slot5A = new UIMenuItem("Slot 5");
      uiMenu1.AddItem(Slot5A);
      UIMenuItem Slot6A = new UIMenuItem("Slot 6");
      uiMenu1.AddItem(Slot6A);
      UIMenuItem Slot7A = new UIMenuItem("Slot 7");
      uiMenu1.AddItem(Slot7A);
      UIMenuItem Slot8A = new UIMenuItem("Slot 8");
      uiMenu1.AddItem(Slot8A);
      UIMenuItem Slot9A = new UIMenuItem("Slot 9");
      uiMenu1.AddItem(Slot9A);
      UIMenuItem Slot10A = new UIMenuItem("Slot 10");
      uiMenu1.AddItem(Slot10A);
      UIMenuItem Slot11A = new UIMenuItem("Slot 11");
      uiMenu1.AddItem(Slot11A);
      UIMenuItem Slot12A = new UIMenuItem("Slot 12");
      uiMenu1.AddItem(Slot12A);
      UIMenuItem Slot13A = new UIMenuItem("Slot 13");
      uiMenu1.AddItem(Slot13A);
      UIMenuItem Slot14A = new UIMenuItem("Slot 14");
      uiMenu1.AddItem(Slot14A);
      UIMenuItem Slot15A = new UIMenuItem("Slot 15");
      uiMenu1.AddItem(Slot15A);
      UIMenuItem Slot16A = new UIMenuItem("Slot 16");
      uiMenu1.AddItem(Slot16A);
      UIMenuItem Slot17A = new UIMenuItem("Slot 17");
      uiMenu1.AddItem(Slot17A);
      UIMenuItem Slot18A = new UIMenuItem("Slot 18");
      uiMenu1.AddItem(Slot18A);
      UIMenuItem Slot19A = new UIMenuItem("Slot 19");
      uiMenu1.AddItem(Slot19A);
      UIMenuItem Slot20A = new UIMenuItem("Slot 20");
      uiMenu1.AddItem(Slot20A);
      List<object> objectList1 = new List<object>();
      VehicleHash[] values = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 1; index < values.Length; ++index)
        objectList1.Add((object) values[index]);
      List<object> listofSlots = new List<object>();
      listofSlots.Add((object) "Slot1");
      listofSlots.Add((object) "Slot2");
      listofSlots.Add((object) "Slot3");
      listofSlots.Add((object) "Slot4");
      listofSlots.Add((object) "Slot5");
      listofSlots.Add((object) "Slot6");
      listofSlots.Add((object) "Slot7");
      listofSlots.Add((object) "Slot8");
      listofSlots.Add((object) "Slot9");
      listofSlots.Add((object) "Slot10");
      listofSlots.Add((object) "Slot11");
      listofSlots.Add((object) "Slot12");
      listofSlots.Add((object) "Slot13");
      listofSlots.Add((object) "Slot14");
      listofSlots.Add((object) "Slot15");
      listofSlots.Add((object) "Slot16");
      listofSlots.Add((object) "Slot17");
      listofSlots.Add((object) "Slot18");
      listofSlots.Add((object) "Slot19");
      listofSlots.Add((object) "Slot20");
      UIMenu uiMenu2 = this.EXmodMenuPool.AddSubMenu(this.RemoveMenu, "Add vehicle in Slot");
      this.GUIMenus.Add(uiMenu2);
      List<object> LogList = new List<object>();
      string[] logFile = File.ReadAllLines(this.ListPath);
      foreach (string str in logFile)
        LogList.Add((object) str);
      this.LoadIniFile(this.ListPath);
      List<object> objectList2 = new List<object>()
      {
        (object) "None",
        (object) "Super",
        (object) "Sport",
        (object) "Armoured",
        (object) "SportClassic",
        (object) "Compact",
        (object) "Coupe",
        (object) "Bikes",
        (object) "Offroad",
        (object) "Sedan",
        (object) "Suv",
        (object) "Vans"
      };
      UIMenuListItem Ve = new UIMenuListItem("Vehicle : ", LogList, 0);
      uiMenu2.AddItem((UIMenuItem) Ve);
      UIMenuItem VDName = new UIMenuItem("Vehicle Spawn Name  : Dukes2");
      uiMenu2.AddItem(VDName);
      UIMenuItem VName = new UIMenuItem("Vehicle Full Name  : Imponte Dukes");
      uiMenu2.AddItem(VName);
      UIMenuItem PuchaseV = new UIMenuItem("Purchase Vehicle : $0");
      uiMenu2.AddItem(PuchaseV);
      List<object> STlist = new List<object>();
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem1);
      UIMenuItem Search = new UIMenuItem("Enter Vehicle Name");
      uiMenu2.AddItem(Search);
      UIMenuListItem Ve2 = new UIMenuListItem("Vehicle : ", STlist, 0);
      uiMenu2.AddItem((UIMenuItem) Ve2);
      UIMenuItem uiMenuItem2 = new UIMenuItem("Search Term  : NULL");
      uiMenu2.AddItem(uiMenuItem2);
      UIMenuItem VDName2 = new UIMenuItem("Vehicle Spawn Name  : NULL");
      uiMenu2.AddItem(VDName2);
      UIMenuItem VName2 = new UIMenuItem("Vehicle Full Name  : NULL");
      uiMenu2.AddItem(VName2);
      UIMenuItem PuchaseV2 = new UIMenuItem("Purchase Vehicle : NULL");
      uiMenu2.AddItem(PuchaseV2);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem3);
      UIMenuListItem ListSlot = new UIMenuListItem("Slot: ", listofSlots, 0);
      uiMenu2.AddItem((UIMenuItem) ListSlot);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == Ve)
        {
          try
          {
            string[] separator = new string[2]{ " = ", "," };
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string[] strArray = ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__0, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
            for (int index1 = 0; index1 < strArray.Length; ++index1)
            {
              this.Price = strArray[1];
              this.Model = strArray[2];
              this.man = strArray[0];
              VDName.Text = "Vehicle Spawn Name : " + this.Model;
              VName.Text = "Vehicle Full Name  : " + this.man;
              PuchaseV.Text = "Purchase Vehicle : " + this.Price;
            }
          }
          catch
          {
          }
        }
        if (item != Ve2)
          return;
        try
        {
          string[] separator = new string[2]{ " = ", "," };
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__1.Target((CallSite) ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__1, STlist[Ve2.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName2.Text = "Vehicle Spawn Name : " + this.Model;
            VName2.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV2.Text = "Purchase Vehicle : " + this.Price;
          }
        }
        catch
        {
        }
      });
      string SearchTerm;
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Search)
        {
          try
          {
            if (STlist.Count > 0)
              STlist.Clear();
            SearchTerm = Game.GetUserInput(32);
            SearchTerm = SearchTerm.ToUpper();
            UI.Notify("Search Term : " + SearchTerm);
            bool flag = false;
            foreach (string str in logFile)
            {
              if (str.ToUpper().Contains(SearchTerm))
              {
                UI.Notify("Found Match");
                STlist.Add((object) str);
                flag = true;
              }
            }
            if (!flag)
            {
              UI.Notify("Found No Match");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Invalid Search Term Entered");
          }
        }
        try
        {
          this.M = (float) int.Parse(this.Price);
        }
        catch (Exception ex)
        {
        }
        if (item == PuchaseV2)
        {
          if ((double) Game.Player.Money > (double) this.M)
          {
            try
            {
              Game.Player.Money -= (int) this.M;
              this.DestoryCars();
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__2 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string str = ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__2, listofSlots[ListSlot.Index]);
              this.SC.LoadIniFile(this.path + this.EXGarageNum + "//" + str + ".ini");
              UI.Notify(this.path + this.EXGarageNum + "//" + str + ".ini");
              Vector3 position = Game.Player.Character.Position;
              this.SC.Save();
              this.SC.LoadIniFile(this.path + this.EXGarageNum + "//" + str + ".ini");
              try
              {
                Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
                this.SC.SaveName(vehicle.DisplayName);
                UI.Notify("Garage will Refresh when this Menu has closed");
                this.PurchasedVehicle_AwaitMenuClose = true;
                vehicle.Delete();
              }
              catch (NullReferenceException ex)
              {
                UI.Notify("~r~error ~w~ Invalid Vehicle Name!");
              }
            }
            catch (Exception ex)
            {
            }
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this vehicle!");
        }
        if (item != PuchaseV)
          return;
        if ((double) Game.Player.Money > (double) this.M)
        {
          try
          {
            Game.Player.Money -= (int) this.M;
            this.DestoryCars();
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string str = ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__3.Target((CallSite) ExecutiveTower.\u003C\u003Eo__417.\u003C\u003Ep__3, listofSlots[ListSlot.Index]);
            this.SC.LoadIniFile(this.path + this.EXGarageNum + "//" + str + ".ini");
            UI.Notify(this.path + this.EXGarageNum + "//" + str + ".ini");
            Vector3 position = Game.Player.Character.Position;
            this.SC.Save();
            try
            {
              this.SC.LoadIniFile(this.path + this.EXGarageNum + "//" + str + ".ini");
              Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
              this.SC.SaveName(vehicle.DisplayName);
              UI.Notify("Garage will Refresh when this Menu has closed");
              this.PurchasedVehicle_AwaitMenuClose = true;
              vehicle.Delete();
            }
            catch (Exception ex)
            {
            }
          }
          catch (Exception ex)
          {
          }
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this vehicle!");
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Slot1A && (Entity) this.Vehicle1 != (Entity) null)
          this.DeleteCarinSlot("Slot1", this.Vehicle1);
        if (item == Slot2A && (Entity) this.Vehicle2 != (Entity) null)
          this.DeleteCarinSlot("Slot2", this.Vehicle2);
        if (item == Slot3A && (Entity) this.Vehicle3 != (Entity) null)
          this.DeleteCarinSlot("Slot3", this.Vehicle3);
        if (item == Slot4A && (Entity) this.Vehicle4 != (Entity) null)
          this.DeleteCarinSlot("Slot4", this.Vehicle4);
        if (item == Slot5A && (Entity) this.Vehicle5 != (Entity) null)
          this.DeleteCarinSlot("Slot5", this.Vehicle5);
        if (item == Slot6A && (Entity) this.Vehicle6 != (Entity) null)
          this.DeleteCarinSlot("Slot6", this.Vehicle6);
        if (item == Slot7A && (Entity) this.Vehicle7 != (Entity) null)
          this.DeleteCarinSlot("Slot7", this.Vehicle7);
        if (item == Slot8A && (Entity) this.Vehicle8 != (Entity) null)
          this.DeleteCarinSlot("Slot8", this.Vehicle8);
        if (item == Slot9A && (Entity) this.Vehicle9 != (Entity) null)
          this.DeleteCarinSlot("Slot9", this.Vehicle9);
        if (item == Slot10A && (Entity) this.Vehicle10 != (Entity) null)
          this.DeleteCarinSlot("Slot10", this.Vehicle10);
        if (item == Slot11A && (Entity) this.Vehicle11 != (Entity) null)
          this.DeleteCarinSlot("Slot11", this.Vehicle11);
        if (item == Slot12A && (Entity) this.Vehicle12 != (Entity) null)
          this.DeleteCarinSlot("Slot12", this.Vehicle12);
        if (item == Slot13A && (Entity) this.Vehicle13 != (Entity) null)
          this.DeleteCarinSlot("Slot13", this.Vehicle13);
        if (item == Slot14A && (Entity) this.Vehicle14 != (Entity) null)
          this.DeleteCarinSlot("Slot14", this.Vehicle14);
        if (item == Slot15A && (Entity) this.Vehicle15 != (Entity) null)
          this.DeleteCarinSlot("Slot15", this.Vehicle15);
        if (item == Slot16A && (Entity) this.Vehicle16 != (Entity) null)
          this.DeleteCarinSlot("Slot16", this.Vehicle16);
        if (item == Slot17A && (Entity) this.Vehicle17 != (Entity) null)
          this.DeleteCarinSlot("Slot17", this.Vehicle17);
        if (item == Slot18A && (Entity) this.Vehicle18 != (Entity) null)
          this.DeleteCarinSlot("Slot18", this.Vehicle18);
        if (item == Slot19A && (Entity) this.Vehicle19 != (Entity) null)
          this.DeleteCarinSlot("Slot19", this.Vehicle19);
        if (item != Slot20A || !((Entity) this.Vehicle20 != (Entity) null))
          return;
        this.DeleteCarinSlot("Slot20", this.Vehicle20);
      });
    }

    public void SaveLocalcar(string G, Vehicle V, string Slot)
    {
      if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if (Game.Player.Character.CurrentVehicle.DisplayName != "RHINO" || Game.Player.Character.CurrentVehicle.DisplayName != "KHANJALI" || Game.Player.Character.CurrentVehicle.DisplayName != "CHERNOBOG")
        {
          if ((Entity) this.SaveVehicle != (Entity) null)
            this.SaveVehicle = (Vehicle) null;
          string str = G;
          this.EXGarageNum = G;
          UI.Notify(this.path + str + "//" + Slot + ".ini");
          this.SC.LoadIniFile(this.path + str + "//" + Slot + ".ini");
          this.SC.VehicleName = "null";
          Script.Wait(50);
          this.SC.SaveWithoutDelete();
          Script.Wait(50);
          V = Game.Player.Character.CurrentVehicle;
          Script.Wait(50);
          UI.Notify(this.GetHostName() + " your " + V.FriendlyName + ", has been Saved into  " + G + ", " + Slot);
          Script.Wait(50);
          this.SC.Save();
          this.DestoryCars();
          Script.Wait(50);
          this.GetGarageActive();
        }
        else
          this.DisplayHelpTextThisFrame("You cannot save this vehicle");
      }
      else
        this.DisplayHelpTextThisFrame("Bring a vehicle to save");
    }

    public void GetGarageActive()
    {
      int location = this.GetLocation();
      this.GetLocation(location);
      if (location == 1)
      {
        if (this.EXGarageNum.Equals("GarageA"))
        {
          this.LastEnterMarker = this.EnterMarkerAMazebank;
          this.RemoveMarker = new Vector3(-88f, -831.57f, 221f);
          this.ExitMarkerMazeBank = new Vector3(-91.54f, -821.351f, 222f);
          this.GarageCamPos = new Vector3(-92f, -822f, 228f);
          this.GarageCamRot = -117f;
          this.EXGarageNum = "GarageA";
          this.DestoryCars();
          this.Load();
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          this.Load();
          this.CreateCars("GarageA");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
        }
        if (this.EXGarageNum.Equals("GarageB"))
        {
          this.LastEnterMarker = this.EnterMarkerBMazebank;
          this.RemoveMarker = new Vector3(-61f, -828f, 221f);
          this.ExitMarkerMazeBank = new Vector3(-71f, -832f, 222f);
          this.GarageCamPos = new Vector3(-70f, -831f, 228f);
          this.GarageCamRot = -22f;
          this.EXGarageNum = "GarageB";
          this.DestoryCars();
          this.LoadB();
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          this.LoadB();
          this.CreateCarsB("GarageB");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
        }
        if (this.EXGarageNum.Equals("GarageC"))
        {
          this.LastEnterMarker = this.EnterMarkerCMazebank;
          this.RemoveMarker = new Vector3(-88f, -809f, 221f);
          this.ExitMarkerMazeBank = new Vector3(-78.61f, -806.4f, 222f);
          this.GarageCamPos = new Vector3(-78f, -806f, 232f);
          this.GarageCamRot = 168f;
          this.EXGarageNum = "GarageC";
          this.DestoryCars();
          this.LoadC();
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
          Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
          this.LoadC();
          this.CreateCarsC("GarageC");
          Game.Player.Character.Position = this.ExitMarkerMazeBank;
        }
      }
      if (location == 2)
      {
        if (this.EXGarageNum.Equals("GarageA"))
        {
          this.LastEnterMarker = this.EnterMarkerAArcaduis;
          this.RemoveMarker = new Vector3(-190.843f, -588.043f, 135f);
          this.ExitMarkerArcadius = new Vector3(-198.649f, -580.765f, 135.5f);
          this.GarageCamPos = new Vector3(-198f, -578f, 142f);
          this.GarageCamRot = -108f;
          Game.Player.Character.Position = this.ExitMarkerArcadius;
          this.Load();
          this.CreateCars("GarageA");
        }
        if (this.EXGarageNum.Equals("GarageB"))
        {
          this.LastEnterMarker = this.EnterMarkerBArcaduis;
          this.RemoveMarker = new Vector3(-114f, -576f, 135f);
          this.ExitMarkerArcadius = new Vector3(-124f, -571f, 135.5f);
          this.GarageCamPos = new Vector3(-124f, -571f, 144f);
          this.GarageCamRot = -40f;
          Game.Player.Character.Position = this.ExitMarkerArcadius;
          this.LoadB();
          this.CreateCarsB("GarageB");
        }
        if (this.EXGarageNum.Equals("GarageC"))
        {
          this.LastEnterMarker = this.EnterMarkerCArcaduis;
          this.RemoveMarker = new Vector3(-144f, -628f, 135f);
          this.ExitMarkerArcadius = new Vector3(-135.68f, -622.827f, 136f);
          this.GarageCamPos = new Vector3(-135.7f, -622.9f, 148.5f);
          this.GarageCamRot = 144f;
          Game.Player.Character.Position = this.ExitMarkerArcadius;
          this.LoadC();
          this.CreateCarsC("GarageC");
        }
      }
      if (location == 3)
      {
        if (this.EXGarageNum.Equals("GarageA"))
        {
          this.LastEnterMarker = this.EnterMarkerALombok;
          this.RemoveMarker = new Vector3(-1588.75f, -572.097f, 85.5f);
          this.ExitMarkerLombok = new Vector3(-1586.37f, -561.844f, 86f);
          this.GarageCamPos = new Vector3(-1586.37f, -561.844f, 94f);
          this.GarageCamRot = 114f;
          this.Load();
          Game.Player.Character.Position = this.ExitMarkerLombok;
          this.CreateCars("GarageA");
        }
        if (this.EXGarageNum.Equals("GarageB"))
        {
          this.LastEnterMarker = this.EnterMarkerBLombok;
          this.RemoveMarker = new Vector3(-1573.461f, -554.4f, 85.5f);
          this.ExitMarkerLombok = new Vector3(-1563f, -557f, 86.5f);
          this.GarageCamPos = new Vector3(-1565.1f, -561f, 93f);
          this.GarageCamRot = 106f;
          this.LoadB();
          Game.Player.Character.Position = this.ExitMarkerLombok;
          this.CreateCarsB("GarageB");
        }
        if (this.EXGarageNum.Equals("GarageC"))
        {
          this.LastEnterMarker = this.EnterMarkerCLombok;
          this.RemoveMarker = new Vector3(-1556f, -569f, 85.5f);
          this.ExitMarkerLombok = new Vector3(-1558f, -579f, 86f);
          this.GarageCamPos = new Vector3(-1560f, -577.6f, 92f);
          this.GarageCamRot = 32f;
          this.LoadC();
          Game.Player.Character.Position = this.ExitMarkerLombok;
          this.CreateCarsC("GarageC");
        }
      }
      if (location != 4)
        return;
      if (this.EXGarageNum.Equals("GarageA"))
      {
        this.LastEnterMarker = this.EnterMarkerAMazebankWest;
        this.RemoveMarker = new Vector3(-1388.21f, -487.512f, 55.5f);
        this.ExitMarkerMazeBankWest = new Vector3(-1395.37f, -480.7f, 57f);
        this.GarageCamPos = new Vector3(-1396f, -482f, 63f);
        this.GarageCamRot = -86f;
        this.Load();
        Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
        this.CreateCars("GarageA");
      }
      if (this.EXGarageNum.Equals("GarageB"))
      {
        this.LastEnterMarker = this.EnterMarkerBMazebankWest;
        this.RemoveMarker = new Vector3(-1387f, -487f, 48f);
        this.ExitMarkerMazeBankWest = new Vector3(-1395f, -480f, 49f);
        this.GarageCamPos = new Vector3(-1395f, -480f, 63f);
        this.GarageCamRot = -21f;
        this.LoadB();
        Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
        this.CreateCarsB("GarageB");
      }
      if (!this.EXGarageNum.Equals("GarageC"))
        return;
      this.LastEnterMarker = this.EnterMarkerCMazebankWest;
      this.RemoveMarker = new Vector3(-1375.5f, -465.6f, 49f);
      this.ExitMarkerMazeBankWest = new Vector3(-1367.492f, -472.5f, 57f);
      this.GarageCamPos = new Vector3(-1367.492f, -472.5f, 64f);
      this.GarageCamRot = 99f;
      this.LoadC();
      Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
      this.CreateCarsC("GarageC");
    }

    private void EXSetupGarage()
    {
      List<object> items = new List<object>();
      items.Add((object) "False");
      items.Add((object) "True");
      List<object> garage = new List<object>();
      garage.Add((object) "GarageA");
      garage.Add((object) "GarageB");
      garage.Add((object) "GarageC");
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1");
      Slots.Add((object) "Slot2");
      Slots.Add((object) "Slot3");
      Slots.Add((object) "Slot4");
      Slots.Add((object) "Slot5");
      Slots.Add((object) "Slot6");
      Slots.Add((object) "Slot7");
      Slots.Add((object) "Slot8");
      Slots.Add((object) "Slot9");
      Slots.Add((object) "Slot10");
      Slots.Add((object) "Slot11");
      Slots.Add((object) "Slot12");
      Slots.Add((object) "Slot13");
      Slots.Add((object) "Slot14");
      Slots.Add((object) "Slot15");
      Slots.Add((object) "Slot16");
      Slots.Add((object) "Slot17");
      Slots.Add((object) "Slot18");
      Slots.Add((object) "Slot19");
      Slots.Add((object) "Slot20");
      UIMenu uiMenu1 = this.EXmodMenuPool.AddSubMenu(this.GarageMenu, "Enter Garage");
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem g = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu1.AddItem((UIMenuItem) g);
      UIMenuListItem s = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu1.AddItem((UIMenuItem) s);
      UIMenuItem CarinSlot = new UIMenuItem("Car : ");
      uiMenu1.AddItem(CarinSlot);
      UIMenuItem Set = new UIMenuItem("Save Current Car");
      uiMenu1.AddItem(Set);
      UIMenu uiMenu2 = this.EXmodMenuPool.AddSubMenu(this.GarageMenu, "View Car");
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem E = new UIMenuListItem("View Area: ", items, 0);
      uiMenu2.AddItem((UIMenuItem) E);
      UIMenuListItem g1 = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu2.AddItem((UIMenuItem) g1);
      UIMenuListItem s1 = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu2.AddItem((UIMenuItem) s1);
      UIMenuItem CarinSlot1 = new UIMenuItem("Car : ");
      uiMenu2.AddItem(CarinSlot1);
      UIMenuItem Drive = new UIMenuItem("Drive This Car");
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Drive)
          return;
        this.ISinviewMode = false;
        if (this.Location == 1)
          Game.Player.Character.Position = this.MenuMarkerMazeBank;
        if (this.Location == 2)
          Game.Player.Character.Position = this.MenuMarkerArcadius;
        if (this.Location == 3)
          Game.Player.Character.Position = this.MenuMarkerLombok;
        if (this.Location == 4)
          Game.Player.Character.Position = this.MenuMarkerMazeBankWest;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.FreezePosition = false;
        if (this.Cam != (Camera) null)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          World.RenderingCamera = this.Cam;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
        }
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
        {
          CarinSlot1.Text = this.SC.VehicleName;
          try
          {
            if (!(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null"))
              return;
            this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
            GTA.Model model = this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
            Vector3 position = new Vector3();
            if (this.Location == 1)
              position = this.MenuMarkerMazeBank;
            if (this.Location == 2)
              position = this.MenuMarkerArcadius;
            if (this.Location == 3)
              position = this.MenuMarkerLombok;
            if (this.Location == 4)
              position = this.MenuMarkerMazeBankWest;
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageA") && this.PurchasedGarageLevel1 == 1)
            {
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              Game.Player.Character.SetIntoVehicle(this.Vehicle1, VehicleSeat.Driver);
              this.Vehicle1 = (Vehicle) null;
            }
            else if (g1.IndexToItem(g1.Index).Equals((object) "GarageA") && this.PurchasedGarageLevel1 != 1)
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to request a vehicle from this garage!");
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageB") && this.PurchasedGarageLevel2 == 1)
            {
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              Game.Player.Character.SetIntoVehicle(this.Vehicle1, VehicleSeat.Driver);
              this.Vehicle1 = (Vehicle) null;
            }
            else if (g1.IndexToItem(g1.Index).Equals((object) "GarageB") && this.PurchasedGarageLevel2 != 1)
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to request a vehicle from this garage!");
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageC") && this.PurchasedGarageLevel3 == 1)
            {
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              Game.Player.Character.SetIntoVehicle(this.Vehicle1, VehicleSeat.Driver);
              this.Vehicle1 = (Vehicle) null;
            }
            else
            {
              if (!g1.IndexToItem(g1.Index).Equals((object) "GarageC") || this.PurchasedGarageLevel3 == 1)
                return;
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to request a vehicle from this garage!");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
          }
        }
        else
        {
          if (!this.SC.VehicleName.Equals("null"))
            return;
          CarinSlot1.Text = "No car in slot";
        }
      });
      uiMenu2.AddItem(Drive);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == E)
        {
          if (E.IndexToItem(E.Index) == (object) "True")
          {
            this.ISinviewMode = true;
            this.P = Game.Player.Character.Position;
            if (this.Cam != (Camera) null)
            {
              World.RenderingCamera = this.Cam;
              Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
              this.Cam.IsActive = false;
              this.Cam.Destroy();
            }
            this.Cam = World.CreateCamera(new Vector3(400f, -958f, -98f), new Vector3(0.0f, 0.0f, 86f), 90f);
            Game.Player.Character.Position = this.Cam.Position;
            Game.Player.Character.Rotation = this.Cam.Rotation;
            Game.Player.Character.IsVisible = false;
            Game.Player.Character.FreezePosition = true;
            this.Cam.IsActive = true;
            this.Cam.FarClip = 2000f;
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          }
          else if (E.IndexToItem(E.Index) == (object) "False")
          {
            this.ISinviewMode = false;
            if (this.Location == 1)
              Game.Player.Character.Position = this.MenuMarkerMazeBank;
            if (this.Location == 2)
              Game.Player.Character.Position = this.MenuMarkerArcadius;
            if (this.Location == 3)
              Game.Player.Character.Position = this.MenuMarkerLombok;
            if (this.Location == 4)
              Game.Player.Character.Position = this.MenuMarkerMazeBankWest;
            Game.Player.Character.IsVisible = true;
            Game.Player.Character.FreezePosition = false;
            if (this.Cam != (Camera) null)
            {
              if ((Entity) this.Vehicle1 != (Entity) null)
                this.Vehicle1.Delete();
              World.RenderingCamera = this.Cam;
              Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
              this.Cam.IsActive = false;
              this.Cam.Destroy();
            }
          }
        }
        if (item == g1)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
          if (!this.SC.VehicleName.Equals("null"))
          {
            CarinSlot1.Text = this.SC.VehicleName;
            try
            {
              if (this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null")
              {
                this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
                this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
                this.SC.Load(this.Vehicle1);
                this.Vehicle1.IsDriveable = true;
                this.Vehicle1.EngineRunning = true;
                this.Vehicle1.HighBeamsOn = true;
              }
            }
            catch (Exception ex)
            {
              UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
            }
          }
          else if (this.SC.VehicleName.Equals("null"))
            CarinSlot1.Text = "No car in slot";
        }
        if (item != s1)
          return;
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
          CarinSlot1.Text = this.SC.VehicleName;
        else if (this.SC.VehicleName.Equals("null"))
          CarinSlot1.Text = "No car in slot";
        try
        {
          if (!(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null"))
            return;
          this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
          this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
          this.SC.Load(this.Vehicle1);
          this.Vehicle1.IsDriveable = true;
          this.Vehicle1.EngineRunning = true;
          this.Vehicle1.HighBeamsOn = true;
        }
        catch (Exception ex)
        {
          UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
        }
      });
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == g)
        {
          this.SC.LoadIniFile(this.path + g.IndexToItem(g.Index)?.ToString() + "//" + s.IndexToItem(s.Index)?.ToString() + ".ini");
          if (!this.SC.VehicleName.Equals("null"))
            CarinSlot.Text = this.SC.VehicleName;
          else if (this.SC.VehicleName.Equals("null"))
            CarinSlot.Text = "No car in slot";
        }
        if (item != s)
          return;
        this.SC.LoadIniFile(this.path + g.IndexToItem(g.Index)?.ToString() + "//" + s.IndexToItem(s.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
        {
          CarinSlot.Text = this.SC.VehicleName;
        }
        else
        {
          if (!this.SC.VehicleName.Equals("null"))
            return;
          CarinSlot.Text = "No car in slot";
        }
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Set)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__3.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p3 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__3;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__0, garage[g.Index], "GarageA");
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        object obj2;
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__2, obj1))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          obj2 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__1.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__1, obj1, this.PurchasedGarageLevel1 == 1);
        }
        else
          obj2 = obj1;
        if (target1((CallSite) p3, obj2))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__4 = CallSite<Action<CallSite, ExecutiveTower, object, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__4, this, garage[g.Index], this.Vehicle1, Slots[s.Index]);
        }
        else
          UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to save a vehicle into this garage!");
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__8.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p8 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__8;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__5.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__5, garage[g.Index], "GarageB");
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        object obj4;
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__7.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__7, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          obj4 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__6, obj3, this.PurchasedGarageLevel2 == 1);
        }
        else
          obj4 = obj3;
        if (target2((CallSite) p8, obj4))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__9 = CallSite<Action<CallSite, ExecutiveTower, object, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__9.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__9, this, garage[g.Index], this.Vehicle1, Slots[s.Index]);
        }
        else
          UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to save a vehicle into this garage!");
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__13.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p13 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__13;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__10.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__10, garage[g.Index], "GarageC");
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__12 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsFalse, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        object obj6;
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        if (!ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__12.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__12, obj5))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.And, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          obj6 = ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__11.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__11, obj5, this.PurchasedGarageLevel3 == 1);
        }
        else
          obj6 = obj5;
        if (target3((CallSite) p13, obj6))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__14 = CallSite<Action<CallSite, ExecutiveTower, object, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__14.Target((CallSite) ExecutiveTower.\u003C\u003Eo__420.\u003C\u003Ep__14, this, garage[g.Index], this.Vehicle1, Slots[s.Index]);
        }
        else
          UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to save a vehicle into this garage!");
      });
    }

    public void LoadCarinToRealWorld(Vehicle V)
    {
      Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
      if (this.Location == 1)
      {
        currentVehicle.Position = new Vector3(-81.31041f, -805.5f, 35.9f);
        currentVehicle.Rotation = new Vector3(0.0f, 0.0f, -13f);
      }
      if (this.Location == 2)
      {
        currentVehicle.Position = new Vector3(-148.28f, -591.094f, 31.77f);
        currentVehicle.Rotation = new Vector3(0.0f, 0.0f, 154f);
      }
      if (this.Location == 3)
      {
        currentVehicle.Position = new Vector3(-1547.49f, -566.3286f, 25f);
        currentVehicle.Rotation = new Vector3(0.0f, 0.0f, 35f);
      }
      if (this.Location == 4)
      {
        currentVehicle.Position = new Vector3(-1372.57f, -473.9286f, 30.8f);
        currentVehicle.Rotation = new Vector3(0.0f, 0.0f, 103f);
      }
      Game.Player.Character.SetIntoVehicle(currentVehicle, VehicleSeat.Driver);
      this.DestoryCars();
      currentVehicle.IsDriveable = true;
      currentVehicle.Rotation = new Vector3(0.0f, 0.0f, -12f);
      this.SaveVehicle = currentVehicle;
      this.SaveVehicle.IsDriveable = true;
      this.SaveVehicle.Repair();
    }

    public void CreateCars(string Garage)
    {
      this.GetLocation();
      this.DestoryCars();
      if (this.Location == 1)
      {
        UI.Notify("Entering ~b~ Mazebank Garage, Level A");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), this.Vehicle1Loc, 250f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), this.Vehicle2Loc, 220f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), this.Vehicle3Loc, 190f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), this.Vehicle4Loc, 140f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), this.Vehicle5Loc, 120f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), this.Vehicle6Loc, 80f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), this.Vehicle7Loc, 60f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), this.Vehicle8Loc, 250f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), this.Vehicle9Loc, 220f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), this.Vehicle10Loc, 190f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), this.Vehicle11Loc, 140f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), this.Vehicle12Loc, 120f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), this.Vehicle13Loc, 80f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), this.Vehicle14Loc, 60f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), this.Vehicle15Loc, 250f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), this.Vehicle16Loc, 220f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), this.Vehicle17Loc, 190f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), this.Vehicle18Loc, 140f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), this.Vehicle19Loc, 120f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), this.Vehicle20Loc, 80f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("check");
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ MB Garage : Somthing while went wrong loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 2)
      {
        UI.Notify("Entering ~y~ Arcadius Garage, Level A");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), this.Vehicle1Loc, 260f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), this.Vehicle2Loc, 250f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), this.Vehicle3Loc, 220f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), this.Vehicle4Loc, 180f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), this.Vehicle5Loc, 160f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), this.Vehicle6Loc, 130f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), this.Vehicle7Loc, 90f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), this.Vehicle8Loc, 250f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), this.Vehicle9Loc, 220f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), this.Vehicle10Loc, 190f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), this.Vehicle11Loc, 140f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(1000);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), this.Vehicle12Loc, 120f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), this.Vehicle13Loc, 80f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), this.Vehicle14Loc, 60f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), this.Vehicle15Loc, 250f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), this.Vehicle16Loc, 220f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), this.Vehicle17Loc, 190f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), this.Vehicle18Loc, 140f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), this.Vehicle19Loc, 120f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), this.Vehicle20Loc, 80f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~Arcadius Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 3)
      {
        UI.Notify("Entering ~g~ Lombok Garage, Level A");
        try
        {
          this.DestoryCars();
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), this.Vehicle1Loc, 220f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), this.Vehicle2Loc, 200f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), this.Vehicle3Loc, 170f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), this.Vehicle4Loc, 130f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), this.Vehicle5Loc, 90f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), this.Vehicle6Loc, 70f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), this.Vehicle7Loc, 40f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), this.Vehicle8Loc, 220f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), this.Vehicle9Loc, 200f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), this.Vehicle10Loc, 170f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), this.Vehicle11Loc, 130f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), this.Vehicle12Loc, 90f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), this.Vehicle13Loc, 70f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), this.Vehicle14Loc, 40f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), this.Vehicle15Loc, 220f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), this.Vehicle16Loc, 200f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), this.Vehicle17Loc, 170f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), this.Vehicle18Loc, 130f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), this.Vehicle19Loc, 90f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), this.Vehicle20Loc, 70f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ Lombok Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location != 4)
        return;
      UI.Notify("Entering ~r~ Mazebank West Garage, Level A");
      try
      {
        this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
        this.Cam.IsActive = true;
        this.Cam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        World.RenderingCamera = this.Cam;
        this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
        GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
        GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
        GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
        GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
        GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
        GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
        GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
        GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
        GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
        GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
        GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
        GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
        GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
        GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
        GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
        GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
        GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
        GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
        GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
        GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
        if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), this.Vehicle1Loc, 280f);
          this.SC.Load(this.Vehicle1);
          this.Vehicle1.IsDriveable = false;
        }
        Script.Wait(100);
        if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), this.Vehicle2Loc, 260f);
          this.SC.Load(this.Vehicle2);
          this.Vehicle2.IsDriveable = false;
        }
        Script.Wait(100);
        if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), this.Vehicle3Loc, 240f);
          this.SC.Load(this.Vehicle3);
          this.Vehicle3.IsDriveable = false;
        }
        Script.Wait(100);
        if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), this.Vehicle4Loc, 200f);
          this.SC.Load(this.Vehicle4);
          this.Vehicle4.IsDriveable = false;
        }
        Script.Wait(100);
        if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), this.Vehicle5Loc, 160f);
          this.SC.Load(this.Vehicle5);
          this.Vehicle5.IsDriveable = false;
        }
        Script.Wait(100);
        if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), this.Vehicle6Loc, 120f);
          this.SC.Load(this.Vehicle6);
          this.Vehicle6.IsDriveable = false;
        }
        Script.Wait(100);
        if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), this.Vehicle7Loc, 100f);
          this.SC.Load(this.Vehicle7);
          this.Vehicle7.IsDriveable = false;
        }
        Script.Wait(100);
        if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), this.Vehicle8Loc, 280f);
          this.SC.Load(this.Vehicle8);
          this.Vehicle8.IsDriveable = false;
        }
        Script.Wait(100);
        if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), this.Vehicle9Loc, 260f);
          this.SC.Load(this.Vehicle9);
          this.Vehicle9.IsDriveable = false;
        }
        Script.Wait(100);
        if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), this.Vehicle10Loc, 240f);
          this.SC.Load(this.Vehicle10);
          this.Vehicle10.IsDriveable = false;
        }
        Script.Wait(100);
        if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), this.Vehicle11Loc, 200f);
          this.SC.Load(this.Vehicle11);
          this.Vehicle11.IsDriveable = false;
        }
        Script.Wait(100);
        if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), this.Vehicle12Loc, 160f);
          this.SC.Load(this.Vehicle12);
          this.Vehicle12.IsDriveable = false;
        }
        Script.Wait(100);
        if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), this.Vehicle13Loc, 120f);
          this.SC.Load(this.Vehicle13);
          this.Vehicle13.IsDriveable = false;
        }
        Script.Wait(100);
        if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), this.Vehicle14Loc, 100f);
          this.SC.Load(this.Vehicle14);
          this.Vehicle14.IsDriveable = false;
        }
        Script.Wait(100);
        if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), this.Vehicle15Loc, 280f);
          this.SC.Load(this.Vehicle15);
          this.Vehicle15.IsDriveable = false;
        }
        Script.Wait(100);
        if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), this.Vehicle16Loc, 260f);
          this.SC.Load(this.Vehicle16);
          this.Vehicle16.IsDriveable = false;
        }
        Script.Wait(100);
        if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), this.Vehicle17Loc, 240f);
          this.SC.Load(this.Vehicle17);
          this.Vehicle17.IsDriveable = false;
        }
        Script.Wait(100);
        if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), this.Vehicle18Loc, 200f);
          this.SC.Load(this.Vehicle18);
          this.Vehicle18.IsDriveable = false;
        }
        Script.Wait(100);
        if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), this.Vehicle19Loc, 160f);
          this.SC.Load(this.Vehicle19);
          this.Vehicle19.IsDriveable = false;
        }
        Script.Wait(100);
        if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), this.Vehicle20Loc, 120f);
          this.SC.Load(this.Vehicle20);
          this.Vehicle20.IsDriveable = false;
        }
        Script.Wait(1000);
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
      }
      catch (NullReferenceException ex)
      {
        this.DestoryCars();
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
        UI.Notify("~r~ MB West Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
      }
    }

    public void CreateCarsB(string Garage)
    {
      this.GetLocation();
      this.DestoryCars();
      if (this.Location == 1)
      {
        UI.Notify("Entering ~b~ Mazebank Garage, Level B");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-70.2711f, -826.8696f, 222f), -25f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-73.76723f, -824.5197f, 222f), -41f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-73.04182f, -818.4375f, 222f), -83f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-72.4165f, -814.0573f, 222f), -109f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-68.98511f, -810.698f, 222f), -149f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-64.88562f, -809.4186f, 222f), -166f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-61.0218f, -19.4146f, 222f), 165f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-70.07818f, -825.6768f, 227.5f), -23f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-73.24563f, -821.9006f, 227.5f), -57f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-73.1344f, -817.1733f, 227.5f), -88f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-72.14056f, -813.3441f, 227.5f), -106f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-68.26353f, -809.7794f, 227.5f), -153f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-63.29549f, -808.6285f, 227.5f), -169f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-58.50552f, -810.4388f, 227.5f), 147f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-69.48569f, -826.6625f, 233f), -23f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-73.19532f, -822.8828f, 233f), -41f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-73.28661f, -817.7896f, 223f), -86f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-72.26071f, -813.6663f, 233f), -118f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-68.5387f, -810.1066f, 233f), -154f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-63.52324f, -809.2012f, 233f), -179f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("check");
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ MB Garage : Somthing while went wrong loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 2)
      {
        UI.Notify("Entering ~y~ Arcadius Garage, Level B");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-118.4488f, -568.9133f, 135f), -76f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-117.2522f, -564.1476f, 135f), -110f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-112.6833f, -560.2687f, 135f), -154f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-107.6727f, -559.0156f, 135f), 176f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-103.3766f, -559.8804f, 135f), 149f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-99.72032f, -562.8496f, 135f), 134f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-98.051f, -567.6396f, 135f), 109f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-120.2475f, -570.5226f, 141f), -73f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-120.2462f, -565.5642f, 141f), -104f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-116.7568f, -561.8176f, 141f), -124f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-111.7953f, -559.467f, 141f), -166f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(1000);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-106.3135f, -559.286f, 141f), 164f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-102.0925f, -561.3776f, 141f), 132f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-99.29642f, -565.3086f, 141f), 106f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-118.0052f, -570.5624f, 146f), -73f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-118.9528f, -565.3614f, 146f), -100f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-114.5229f, -561.4692f, 146f), -135f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-109.6162f, -559.7176f, 146f), -171f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-103.3077f, -560.0453f, 146f), 145f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-99.92867f, -564.658f, 146f), 108f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~Arcadius Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 3)
      {
        UI.Notify("Entering ~g~ Lombok Garage, Level B");
        try
        {
          this.DestoryCars();
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-1567.54f, -560.4421f, 86f), 125f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-1566.408f, -565.0009f, 86f), 78f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-1570.059f, -568.749f, 86f), 42f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-1573.875f, -572.1433f, 86f), 26f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-1579.078f, -572.9344f, 86f), -9f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-1583.895f, -571.2186f, 86f), -37f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-1587.211f, -567.0649f, 86f), -67f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-1568.037f, -560.6381f, 91.5f), 122f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-1566.678f, -565.0072f, 91.5f), 88f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-1569.567f, -569.4794f, 91.5f), 47f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-1573.71f, -572.2516f, 91.5f), 24f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-1578.29f, -573.201f, 91.5f), -10f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-1582.908f, -571.5598f, 91.5f), -33f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-1586.295f, -567.6017f, 91.5f), -63f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-1569.748f, -560.0134f, 97f), 124f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-1567.309f, -566.0513f, 97f), 77f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-1570.702f, -569.3779f, 97f), 48f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-1575.191f, -572.3546f, 97f), 23f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-1579.922f, -573.0893f, 97f), -12f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-1584.65f, -570.5655f, 97f), -52f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ Lombok Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location != 4)
        return;
      UI.Notify("Entering ~r~ Mazebank West Garage, Level B");
      try
      {
        this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
        this.Cam.IsActive = true;
        this.Cam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        World.RenderingCamera = this.Cam;
        this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
        GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
        GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
        GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
        GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
        GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
        GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
        GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
        GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
        GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
        GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
        GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
        GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
        GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
        GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
        GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
        GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
        GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
        GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
        GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
        GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
        if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-1390.633f, -480.9386f, 49f), -82f);
          this.SC.Load(this.Vehicle1);
          this.Vehicle1.IsDriveable = false;
        }
        if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-1389.229f, -476.0135f, 49f), -122f);
          this.SC.Load(this.Vehicle2);
          this.Vehicle2.IsDriveable = false;
        }
        if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-1385.129f, -473.5116f, 49f), -148f);
          this.SC.Load(this.Vehicle3);
          this.Vehicle3.IsDriveable = false;
        }
        if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-1380.659f, -472.4142f, 49f), -174f);
          this.SC.Load(this.Vehicle4);
          this.Vehicle4.IsDriveable = false;
        }
        Script.Wait(100);
        if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-1375.456f, -473.3281f, 49f), 151f);
          this.SC.Load(this.Vehicle5);
          this.Vehicle5.IsDriveable = false;
        }
        Script.Wait(100);
        if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-1371.837f, -476.9982f, 49f), 122f);
          this.SC.Load(this.Vehicle6);
          this.Vehicle6.IsDriveable = false;
        }
        Script.Wait(100);
        if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-1370.605f, -482.6583f, 49f), 84f);
          this.SC.Load(this.Vehicle7);
          this.Vehicle7.IsDriveable = false;
        }
        Script.Wait(100);
        if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-1390.089f, -479.693f, 54f), -84f);
          this.SC.Load(this.Vehicle8);
          this.Vehicle8.IsDriveable = false;
        }
        Script.Wait(100);
        if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-1388.318f, -475.618f, 54f), -119f);
          this.SC.Load(this.Vehicle9);
          this.Vehicle9.IsDriveable = false;
        }
        Script.Wait(100);
        if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-1384.606f, -472.6351f, 54f), -151f);
          this.SC.Load(this.Vehicle10);
          this.Vehicle10.IsDriveable = false;
        }
        Script.Wait(100);
        if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-1380.145f, -471.6216f, 54f), -179f);
          this.SC.Load(this.Vehicle11);
          this.Vehicle11.IsDriveable = false;
        }
        Script.Wait(100);
        if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-1375.407f, -472.7158f, 54f), 156f);
          this.SC.Load(this.Vehicle12);
          this.Vehicle12.IsDriveable = false;
        }
        Script.Wait(100);
        if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-1371.857f, -476.4938f, 54f), 124f);
          this.SC.Load(this.Vehicle13);
          this.Vehicle13.IsDriveable = false;
        }
        Script.Wait(100);
        if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-1370.998f, -482.3607f, 54f), 88f);
          this.SC.Load(this.Vehicle14);
          this.Vehicle14.IsDriveable = false;
        }
        Script.Wait(100);
        if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-1390.047f, -479.2014f, 60f), -92f);
          this.SC.Load(this.Vehicle15);
          this.Vehicle15.IsDriveable = false;
        }
        Script.Wait(100);
        if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-1387.488f, -474.278f, 60f), -130f);
          this.SC.Load(this.Vehicle16);
          this.Vehicle16.IsDriveable = false;
        }
        Script.Wait(100);
        if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-1383.304f, -472.247f, 60f), -148f);
          this.SC.Load(this.Vehicle17);
          this.Vehicle17.IsDriveable = false;
        }
        Script.Wait(100);
        if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-1378.312f, -471.9342f, 60f), -179f);
          this.SC.Load(this.Vehicle18);
          this.Vehicle18.IsDriveable = false;
        }
        Script.Wait(100);
        if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-1373.819f, -474.4786f, 60f), 144f);
          this.SC.Load(this.Vehicle19);
          this.Vehicle19.IsDriveable = false;
        }
        Script.Wait(100);
        if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-1370.55f, -479.3656f, 60f), 111f);
          this.SC.Load(this.Vehicle20);
          this.Vehicle20.IsDriveable = false;
        }
        Script.Wait(1000);
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
      }
      catch (NullReferenceException ex)
      {
        this.DestoryCars();
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
        UI.Notify("~r~ MB West Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
      }
    }

    public void CreateCarsC(string Garage)
    {
      this.GetLocation();
      this.DestoryCars();
      if (this.Location == 1)
      {
        UI.Notify("Entering ~b~ Mazebank Garage, Level C");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-81.37733f, -810.9051f, 222f), 154f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-77.89558f, -813.4459f, 222f), 135f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-75.9632f, -817.5024f, 222f), 107f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-77.20504f, -822.2921f, 222f), 69f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-79.94383f, -826.2318f, 222f), 57f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-83.53253f, -828.9781f, 222f), 20f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-87.86437f, -828.8202f, 222f), -19f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-79.86745f, -811.0082f, 227f), 153f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-76.95218f, -815.3591f, 227f), 113f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-76.98785f, -820.9608f, 227f), 87f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-78.84373f, -825.7121f, 227f), 55f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-82.226f, -828.0981f, 227f), 26f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-86.78304f, -829.1721f, 227f), 4f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-91.17034f, -828.0345f, 227f), -27f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-81.56258f, -810.4487f, 233f), 161f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-77.17245f, -812.9786f, 233f), 145f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-75.97137f, -816.0875f, 233f), 102f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-77.61166f, -823.8719f, 233f), 65f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-80.42077f, -828.093f, 233f), 46f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-86.24499f, -829.2704f, 233f), -7f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("check");
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ MB Garage : Somthing while went wrong loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 2)
      {
        UI.Notify("Entering ~y~ Arcadius Garage, Level C");
        try
        {
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-135.6965f, -628.89f, 135.4f), 171f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-131.6502f, -631.4502f, 135.4f), 124f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-132.1329f, -636.776f, 135.4f), 94f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-133.0233f, -642.1616f, 135.4f), 67f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-135.7614f, -646.7772f, 135.4f), 29f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-141.4673f, -647.1396f, 135.4f), -6f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-145.9743f, -644.9752f, 135.4f), -35f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-135.6371f, -626.5749f, 141f), 160f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-131.2842f, -628.7686f, 141f), 140f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-130.566f, -634.3511f, 141f), 116f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-131.9964f, -639.488f, 141f), 79f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(1000);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-134.3625f, -643.8727f, 141f), 36f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-136.4909f, -646.857f, 141f), 9f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-143.9758f, -646.711f, 141f), -20f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-136.786f, -626.8116f, 146f), 167f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-132.1332f, -629.1005f, 146f), 141f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-131.5975f, -634.7267f, 146f), 108f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-131.5883f, -640.2911f, 146f), 77f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-134.2228f, -645.3201f, 146f), 37f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-139.3347f, -647.1439f, 146f), 7f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~Arcadius Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location == 3)
      {
        UI.Notify("Entering ~g~ Lombok Garage, Level C");
        try
        {
          this.DestoryCars();
          this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
          this.Cam.IsActive = true;
          this.Cam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          World.RenderingCamera = this.Cam;
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
          if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
            this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-1560.333f, -576.4962f, 86f), 28f);
            this.SC.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = false;
          }
          Script.Wait(100);
          if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
            this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-1564.888f, -577.6354f, 86f), 6f);
            this.SC.Load(this.Vehicle2);
            this.Vehicle2.IsDriveable = false;
          }
          Script.Wait(100);
          if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
            this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-1569.964f, -575.5043f, 86f), -34f);
            this.SC.Load(this.Vehicle3);
            this.Vehicle3.IsDriveable = false;
          }
          Script.Wait(100);
          if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
            this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-1573.362f, -571.2855f, 86f), -53f);
            this.SC.Load(this.Vehicle4);
            this.Vehicle4.IsDriveable = false;
          }
          Script.Wait(100);
          if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
            this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-1575.769f, -566.2643f, 86f), -92f);
            this.SC.Load(this.Vehicle5);
            this.Vehicle5.IsDriveable = false;
          }
          Script.Wait(100);
          if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
            this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-1574.727f, -561.1215f, 86f), -120f);
            this.SC.Load(this.Vehicle6);
            this.Vehicle6.IsDriveable = false;
          }
          Script.Wait(100);
          if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
            this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-1570.371f, -557.194f, 86f), -155f);
            this.SC.Load(this.Vehicle7);
            this.Vehicle7.IsDriveable = false;
          }
          Script.Wait(100);
          if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
            this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-1561.192f, -575.3031f, 92f), 31f);
            this.SC.Load(this.Vehicle8);
            this.Vehicle8.IsDriveable = false;
          }
          Script.Wait(100);
          if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
            this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-1565.62f, -576.8162f, 92f), -7f);
            this.SC.Load(this.Vehicle9);
            this.Vehicle9.IsDriveable = false;
          }
          Script.Wait(100);
          if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
            this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-1570.641f, 574.7653f, 92f), -25f);
            this.SC.Load(this.Vehicle10);
            this.Vehicle10.IsDriveable = false;
          }
          Script.Wait(100);
          if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
            this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-1574.411f, -571.1575f, 92f), -51f);
            this.SC.Load(this.Vehicle11);
            this.Vehicle11.IsDriveable = false;
          }
          Script.Wait(100);
          if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
            this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-1575.183f, -565.741f, 92f), -92f);
            this.SC.Load(this.Vehicle12);
            this.Vehicle12.IsDriveable = false;
          }
          Script.Wait(100);
          if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
            this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-1574.165f, -561.4612f, 92f), -105f);
            this.SC.Load(this.Vehicle13);
            this.Vehicle13.IsDriveable = false;
          }
          Script.Wait(100);
          if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
            this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-1570.912f, -557.4077f, 92f), -144f);
            this.SC.Load(this.Vehicle14);
            this.Vehicle14.IsDriveable = false;
          }
          Script.Wait(100);
          if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
            this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-1561.87f, -575.3336f, 97f), 30f);
            this.SC.Load(this.Vehicle15);
            this.Vehicle15.IsDriveable = false;
          }
          Script.Wait(100);
          if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
            this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-1566.24f, -576.4327f, 97f), 4f);
            this.SC.Load(this.Vehicle16);
            this.Vehicle16.IsDriveable = false;
          }
          Script.Wait(100);
          if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
            this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-1571.51f, -573.1127f, 97f), -36f);
            this.SC.Load(this.Vehicle17);
            this.Vehicle17.IsDriveable = false;
          }
          Script.Wait(100);
          if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
            this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-1574.798f, -568.4197f, 97f), -71f);
            this.SC.Load(this.Vehicle18);
            this.Vehicle18.IsDriveable = false;
          }
          Script.Wait(100);
          if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
            this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-1574.767f, -563.0508f, 97f), -105f);
            this.SC.Load(this.Vehicle19);
            this.Vehicle19.IsDriveable = false;
          }
          Script.Wait(100);
          if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
          {
            this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
            this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-1572.001f, -558.0671f, 97f), -136f);
            this.SC.Load(this.Vehicle20);
            this.Vehicle20.IsDriveable = false;
          }
          Script.Wait(1000);
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
        }
        catch (NullReferenceException ex)
        {
          this.DestoryCars();
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
          this.EXGarageNum = Garage;
          UI.Notify("~r~ Lombok Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
        }
      }
      if (this.Location != 4)
        return;
      UI.Notify("Entering ~r~ Mazebank West Garage, Level C");
      try
      {
        this.Cam = World.CreateCamera(this.GarageCamPos, new Vector3(0.0f, 0.0f, this.GarageCamRot), 140f);
        this.Cam.IsActive = true;
        this.Cam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        World.RenderingCamera = this.Cam;
        this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
        GTA.Model model1 = this.SC.CheckCar(this.path + Garage + "//Slot1.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
        GTA.Model model2 = this.SC.CheckCar(this.path + Garage + "//Slot2.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
        GTA.Model model3 = this.SC.CheckCar(this.path + Garage + "//Slot3.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
        GTA.Model model4 = this.SC.CheckCar(this.path + Garage + "//Slot4.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
        GTA.Model model5 = this.SC.CheckCar(this.path + Garage + "//Slot5.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
        GTA.Model model6 = this.SC.CheckCar(this.path + Garage + "//Slot6.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
        GTA.Model model7 = this.SC.CheckCar(this.path + Garage + "//Slot7.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
        GTA.Model model8 = this.SC.CheckCar(this.path + Garage + "//Slot8.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
        GTA.Model model9 = this.SC.CheckCar(this.path + Garage + "//Slot9.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
        GTA.Model model10 = this.SC.CheckCar(this.path + Garage + "//Slot10.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
        GTA.Model model11 = this.SC.CheckCar(this.path + Garage + "//Slot11.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
        GTA.Model model12 = this.SC.CheckCar(this.path + Garage + "//Slot12.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
        GTA.Model model13 = this.SC.CheckCar(this.path + Garage + "//Slot13.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
        GTA.Model model14 = this.SC.CheckCar(this.path + Garage + "//Slot14.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
        GTA.Model model15 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
        GTA.Model model16 = this.SC.CheckCar(this.path + Garage + "//Slot15.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
        GTA.Model model17 = this.SC.CheckCar(this.path + Garage + "//Slot17.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
        GTA.Model model18 = this.SC.CheckCar(this.path + Garage + "//Slot18.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
        GTA.Model model19 = this.SC.CheckCar(this.path + Garage + "//Slot19.ini");
        this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
        GTA.Model model20 = this.SC.CheckCar(this.path + Garage + "//Slot20.ini");
        if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot1.ini");
          this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot1.ini"), new Vector3(-1372.435f, -473.5627f, 56.5f), 90f);
          this.SC.Load(this.Vehicle1);
          this.Vehicle1.IsDriveable = false;
        }
        Script.Wait(100);
        if (model2 != (GTA.Model) "null" && model2 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot2.ini");
          this.Vehicle2 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot2.ini"), new Vector3(-1374.664f, -478.1669f, 56.5f), 54f);
          this.SC.Load(this.Vehicle2);
          this.Vehicle2.IsDriveable = false;
        }
        Script.Wait(100);
        if (model3 != (GTA.Model) "null" && model3 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot3.ini");
          this.Vehicle3 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot3.ini"), new Vector3(-1378.949f, -480.6223f, 56.5f), 20f);
          this.SC.Load(this.Vehicle3);
          this.Vehicle3.IsDriveable = false;
        }
        Script.Wait(100);
        if (model4 != (GTA.Model) "null" && model4 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot4.ini");
          this.Vehicle4 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot4.ini"), new Vector3(-1384.301f, -481.3455f, 56.5f), 10f);
          this.SC.Load(this.Vehicle4);
          this.Vehicle4.IsDriveable = false;
        }
        Script.Wait(100);
        if (model5 != (GTA.Model) "null" && model5 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot5.ini");
          this.Vehicle5 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot5.ini"), new Vector3(-1389.118f, -480.1346f, 56.5f), -23f);
          this.SC.Load(this.Vehicle5);
          this.Vehicle5.IsDriveable = false;
        }
        Script.Wait(100);
        if (model6 != (GTA.Model) "null" && model6 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot6.ini");
          this.Vehicle6 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot6.ini"), new Vector3(-1392.874f, -476.0489f, 56.5f), -58f);
          this.SC.Load(this.Vehicle6);
          this.Vehicle6.IsDriveable = false;
        }
        Script.Wait(100);
        if (model7 != (GTA.Model) "null" && model7 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot7.ini");
          this.Vehicle7 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot7.ini"), new Vector3(-1393.504f, -471.216f, 56.5f), -87f);
          this.SC.Load(this.Vehicle7);
          this.Vehicle7.IsDriveable = false;
        }
        Script.Wait(100);
        if (model8 != (GTA.Model) "null" && model8 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot8.ini");
          this.Vehicle8 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot8.ini"), new Vector3(-1372.733f, -473.4268f, 62f), 91f);
          this.SC.Load(this.Vehicle8);
          this.Vehicle8.IsDriveable = false;
        }
        Script.Wait(100);
        if (model9 != (GTA.Model) "null" && model9 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot9.ini");
          this.Vehicle9 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot9.ini"), new Vector3(-1373.496f, -478.5602f, 62f), 66f);
          this.SC.Load(this.Vehicle9);
          this.Vehicle9.IsDriveable = false;
        }
        Script.Wait(100);
        if (model10 != (GTA.Model) "null" && model10 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot10.ini");
          this.Vehicle10 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot10.ini"), new Vector3(-1378.015f, -480.3366f, 62f), 36f);
          this.SC.Load(this.Vehicle10);
          this.Vehicle10.IsDriveable = false;
        }
        Script.Wait(100);
        if (model11 != (GTA.Model) "null" && model11 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot11.ini");
          this.Vehicle11 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot11.ini"), new Vector3(-1382.614f, -481.2255f, 62f), 15f);
          this.SC.Load(this.Vehicle11);
          this.Vehicle11.IsDriveable = false;
        }
        Script.Wait(100);
        if (model12 != (GTA.Model) "null" && model12 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot12.ini");
          this.Vehicle12 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot12.ini"), new Vector3(-1387.945f, -479.8246f, 62f), -33f);
          this.SC.Load(this.Vehicle12);
          this.Vehicle12.IsDriveable = false;
        }
        Script.Wait(100);
        if (model13 != (GTA.Model) "null" && model13 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot13.ini");
          this.Vehicle13 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot13.ini"), new Vector3(-1392.101f, -476.3488f, 62f), -52f);
          this.SC.Load(this.Vehicle13);
          this.Vehicle13.IsDriveable = false;
        }
        Script.Wait(100);
        if (model14 != (GTA.Model) "null" && model14 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot14.ini");
          this.Vehicle14 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot14.ini"), new Vector3(-1393.325f, -471.1151f, 62f), -83f);
          this.SC.Load(this.Vehicle14);
          this.Vehicle14.IsDriveable = false;
        }
        Script.Wait(100);
        if (model15 != (GTA.Model) "null" && model15 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot15.ini");
          this.Vehicle15 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot15.ini"), new Vector3(-1372.63f, -473.4203f, 67.5f), 97f);
          this.SC.Load(this.Vehicle15);
          this.Vehicle15.IsDriveable = false;
        }
        Script.Wait(100);
        if (model16 != (GTA.Model) "null" && model16 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot16.ini");
          this.Vehicle16 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot16.ini"), new Vector3(-1374.594f, -478.605f, 67.5f), 58f);
          this.SC.Load(this.Vehicle16);
          this.Vehicle16.IsDriveable = false;
        }
        Script.Wait(100);
        if (model17 != (GTA.Model) "null" && model17 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot17.ini");
          this.Vehicle17 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot17.ini"), new Vector3(-1379.651f, -480.7039f, 67.5f), 24f);
          this.SC.Load(this.Vehicle17);
          this.Vehicle17.IsDriveable = false;
        }
        Script.Wait(100);
        if (model18 != (GTA.Model) "null" && model18 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot18.ini");
          this.Vehicle18 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot18.ini"), new Vector3(-1384.49f, -481.574f, 67.5f), 1f);
          this.SC.Load(this.Vehicle18);
          this.Vehicle18.IsDriveable = false;
        }
        Script.Wait(100);
        if (model19 != (GTA.Model) "null" && model19 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot19.ini");
          this.Vehicle19 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot19.ini"), new Vector3(-1389.365f, -479.3559f, 67.5f), -31f);
          this.SC.Load(this.Vehicle19);
          this.Vehicle19.IsDriveable = false;
        }
        Script.Wait(100);
        if (model20 != (GTA.Model) "null" && model20 != (GTA.Model) (string) null)
        {
          this.SC.LoadIniFile(this.path + Garage + "//Slot20.ini");
          this.Vehicle20 = World.CreateVehicle(this.SC.CheckCar(this.path + Garage + "//Slot20.ini"), new Vector3(-1392.702f, -474.5348f, 67.5f), -70f);
          this.SC.Load(this.Vehicle20);
          this.Vehicle20.IsDriveable = false;
        }
        Script.Wait(1000);
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
      }
      catch (NullReferenceException ex)
      {
        this.DestoryCars();
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
        this.EXGarageNum = Garage;
        UI.Notify("~r~ MB West Garage : Somthing went wrong while loading these vehicles, please retry, if it persists check the vehicle ini files for invald vehiclenames ~w~");
      }
    }

    public void DestoryCars()
    {
      if ((Entity) this.Vehicle1 != (Entity) null)
        this.Vehicle1.Delete();
      if ((Entity) this.Vehicle2 != (Entity) null)
        this.Vehicle2.Delete();
      if ((Entity) this.Vehicle3 != (Entity) null)
        this.Vehicle3.Delete();
      if ((Entity) this.Vehicle4 != (Entity) null)
        this.Vehicle4.Delete();
      if ((Entity) this.Vehicle5 != (Entity) null)
        this.Vehicle5.Delete();
      if ((Entity) this.Vehicle5 != (Entity) null)
        this.Vehicle5.Delete();
      if ((Entity) this.Vehicle6 != (Entity) null)
        this.Vehicle6.Delete();
      if ((Entity) this.Vehicle7 != (Entity) null)
        this.Vehicle7.Delete();
      if ((Entity) this.Vehicle8 != (Entity) null)
        this.Vehicle8.Delete();
      if ((Entity) this.Vehicle9 != (Entity) null)
        this.Vehicle9.Delete();
      if ((Entity) this.Vehicle10 != (Entity) null)
        this.Vehicle10.Delete();
      if ((Entity) this.Vehicle11 != (Entity) null)
        this.Vehicle11.Delete();
      if ((Entity) this.Vehicle12 != (Entity) null)
        this.Vehicle12.Delete();
      if ((Entity) this.Vehicle13 != (Entity) null)
        this.Vehicle13.Delete();
      if ((Entity) this.Vehicle14 != (Entity) null)
        this.Vehicle14.Delete();
      if ((Entity) this.Vehicle15 != (Entity) null)
        this.Vehicle15.Delete();
      if ((Entity) this.Vehicle16 != (Entity) null)
        this.Vehicle16.Delete();
      if ((Entity) this.Vehicle17 != (Entity) null)
        this.Vehicle17.Delete();
      if ((Entity) this.Vehicle18 != (Entity) null)
        this.Vehicle18.Delete();
      if ((Entity) this.Vehicle19 != (Entity) null)
        this.Vehicle19.Delete();
      if (!((Entity) this.Vehicle20 != (Entity) null))
        return;
      this.Vehicle20.Delete();
    }

    public void SpawnAChair(string Prop, Vector3 Pos, Vector3 Rot)
    {
      try
      {
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        GTA.Model model = new GTA.Model(Prop);
        model.Request(250);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(50);
          if ((Entity) this.AssistantChairProp != (Entity) null)
            this.AssistantChairProp.Delete();
          this.AssistantChairProp = World.CreateProp(model, Pos, Rot, true, false);
          this.AssistantChairProp.FreezePosition = true;
        }
        model.MarkAsNoLongerNeeded();
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Error~w~ Could not find Chair Prop Model!, Model has been added to ini, no need to take action");
        UI.Notify("~g~ HKH191~w~ Chair Prop Models Were not found, please Reload the mod ");
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.ChairModelAssistant = "ex_prop_offchair_exec_02";
        this.Config.SetValue<string>("Misc", "ChairModelAssistant", this.ChairModelAssistant);
        this.ChairModelCEO = "ex_prop_offchair_exec_02";
        this.Config.SetValue<string>("Misc", "ChairModelCEO", this.ChairModelCEO);
        this.Config.Save();
      }
    }

    public void SpawnCEOChair(string Prop, Vector3 Pos, Vector3 Rot)
    {
      try
      {
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        GTA.Model model = new GTA.Model(Prop);
        model.Request(250);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(50);
          if ((Entity) this.CEOChairProp != (Entity) null)
            this.CEOChairProp.Delete();
          this.CEOChairProp = World.CreateProp(model, Pos, Rot, true, false);
          this.CEOChairProp.FreezePosition = true;
        }
        model.MarkAsNoLongerNeeded();
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Error~w~ Could not find Chair Prop Model!, Model has been added to ini, no need to take action");
        UI.Notify("~g~ HKH191~w~ Chair Prop Models Were not found, please Reload the mod ");
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.ChairModelAssistant = "ex_prop_offchair_exec_02";
        this.Config.SetValue<string>("Misc", "ChairModelAssistant", this.ChairModelAssistant);
        this.ChairModelCEO = "ex_prop_offchair_exec_02";
        this.Config.SetValue<string>("Misc", "ChairModelCEO", this.ChairModelCEO);
        this.Config.Save();
      }
    }

    public void SetupAssistant(Ped MBTOfficeAssistant, float rot)
    {
      try
      {
        MBTOfficeAssistant.Task.PlayAnimation("anim@amb@office@pa@female@", "pa_base", 8f, -1, true, -1f);
        Function.Call(Hash._0x8E2530AA8ADA980E, (InputArgument) MBTOfficeAssistant, (InputArgument) rot);
        Function.Call(Hash._0x428CA6DBD1094446, (InputArgument) MBTOfficeAssistant, (InputArgument) true);
        Function.Call(Hash._0x3882114BDE571AD4, (InputArgument) MBTOfficeAssistant, (InputArgument) true);
        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) MBTOfficeAssistant, (InputArgument) 1862763509);
        if (!(MBTOfficeAssistant.Model == (GTA.Model) PedHash.ExecutivePAFemale01) && !(MBTOfficeAssistant.Model == (GTA.Model) PedHash.ExecutivePAFemale02) && !(MBTOfficeAssistant.Model == (GTA.Model) PedHash.ExecutivePAMale01))
          return;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 0, (InputArgument) 1, (InputArgument) 3, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 2, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 3, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 4, (InputArgument) 1, (InputArgument) 2, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 6, (InputArgument) 2, (InputArgument) 2, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 7, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 8, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) MBTOfficeAssistant, (InputArgument) 11, (InputArgument) 1, (InputArgument) 2, (InputArgument) 0);
      }
      catch (NullReferenceException ex)
      {
      }
    }

    public void RefreshInteriors(int D)
    {
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
      this.SpawnCEOChair(this.ChairModelCEO.ToString(), this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03c");
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      if (this.Design == 0)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02b");
      }
      if (this.Design == 1)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02c");
      }
      if (this.Design == 2)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02a");
      }
      if (this.Design == 3)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01a");
      }
      if (this.Design == 4)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01b");
      }
      if (this.Design == 5)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01c");
      }
      if (this.Design == 6)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03a");
      }
      if (this.Design == 7)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03b");
      }
      if (this.Design == 8)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03c");
      }
      if (this.BusinessLocation == 0)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 1)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -75.8466, (InputArgument) -826.9893, (InputArgument) 243.3859);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 2)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1579.756, (InputArgument) -565.0661, (InputArgument) 108.523);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 3)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1392.542, (InputArgument) -480.4011, (InputArgument) 72.04211);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      this.CreateChairs();
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
      this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
    }

    public void TEMP_RefreshInteriors(int D)
    {
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
      this.SpawnCEOChair(this.ChairModelCEO.ToString(), this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03c");
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      if (D == 0)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02b");
      }
      if (D == 1)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02c");
      }
      if (D == 2)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02a");
      }
      if (D == 3)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01a");
      }
      if (D == 4)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01b");
      }
      if (D == 5)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01c");
      }
      if (D == 6)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03a");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03a");
      }
      if (D == 7)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03b");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03b");
      }
      if (D == 8)
      {
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03c");
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03c");
      }
      if (this.BusinessLocation == 0)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 1)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -75.8466, (InputArgument) -826.9893, (InputArgument) 243.3859);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 2)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1579.756, (InputArgument) -565.0661, (InputArgument) 108.523);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      if (this.BusinessLocation == 3)
      {
        int Interior = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1392.542, (InputArgument) -480.4011, (InputArgument) 72.04211);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
        this.DisableExProps(Interior);
        this.DisableCashProps(Interior);
        this.EnableCashProps(Interior);
        this.EnableExProps(Interior);
        Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) Interior);
      }
      this.CreateChairs();
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
      this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
    }

    public void CreateChairs()
    {
      foreach (Prop chair in this.Chairs)
      {
        if ((Entity) chair != (Entity) null)
          chair.Delete();
      }
      if (this.BusinessLocation == 0)
      {
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.7f, -643.7015f, 167.8166f), new Vector3(0.0f, 0.0f, -84.00002f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(145.7287f, -643.5414f, 167.8166f), new Vector3(0.0f, 0.0f, -84.00002f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.6016f, -644.7513f, 167.8166f), new Vector3(0.0f, 0.0f, -84.00002f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-147.991f, -642.5672f, 167.8166f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-147.7413f, -644.9435f, 167.8166f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-147.8656f, -643.7602f, 167.8166f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.443f, -636.5549f, 167.821f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.6024f, -635.0388f, 167.821f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.8513f, -642.3751f, 167.8166f), new Vector3(0.0f, 0.0f, -84.00002f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-145.2837f, -638.0711f, 167.821f), new Vector3(0.0f, 0.0f, 95.99995f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-146.5158f, -645.9868f, 167.8166f), new Vector3(0.0f, 0.0f, -174f), false, false));
      }
      if (this.BusinessLocation == 1)
      {
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-59.87846f, -809.4096f, 242.482f), new Vector3(0.0f, 0.0f, -110f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-60.28873f, -810.5369f, 242.482f), new Vector3(0.0f, 0.0f, -110f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-61.89497f, -808.6694f, 242.482f), new Vector3(0.0f, 0.0f, 69.99997f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-61.47887f, -807.5262f, 242.482f), new Vector3(0.0f, 0.0f, 69.99997f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-62.2961f, -809.7715f, 242.482f), new Vector3(0.0f, 0.0f, 69.99997f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-60.11559f, -806.8165f, 242.482f), new Vector3(0.0f, 0.0f, -20.00003f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-65.73589f, -816.2562f, 242.4865f), new Vector3(0.0f, 0.0f, -110f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-59.47151f, -808.2916f, 242.482f), new Vector3(0.0f, 0.0f, -110f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-65.21446f, -814.8236f, 242.4865f), new Vector3(0.0f, 0.0f, -110f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-64.69304f, -813.3911f, 242.4865f), new Vector3(0.0f, 0.0f, -110f), false, false));
      }
      if (this.BusinessLocation == 2)
      {
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1573.018f, -588.8682f, 107.5191f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1571.435f, -589.1591f, 107.5191f), new Vector3(0.0f, 0.0f, -144.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1574.423f, -586.9352f, 107.5191f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1574.326f, -581.6877f, 107.5235f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1572.666f, -585.6989f, 107.5191f), new Vector3(0.0f, 0.0f, -54.00008f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1571.976f, -586.6477f, 107.5191f), new Vector3(0.0f, 0.0f, -54.00008f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1573.718f, -587.9056f, 107.5191f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1571.261f, -587.632f, 107.5191f), new Vector3(0.0f, 0.0f, -54.00008f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1575.222f, -580.4544f, 107.5235f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1576.118f, -579.221f, 107.5235f), new Vector3(0.0f, 0.0f, 125.9999f), false, false));
      }
      if (this.BusinessLocation == 3)
      {
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1375.373f, -483.6967f, 71.04272f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1378.393f, -484.121f, 71.04272f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1376.883f, -483.9089f, 71.04272f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1369.597f, -486.0786f, 71.03829f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1371.052f, -484.1138f, 71.03829f), new Vector3(0.0f, 0.0f, 7.999947f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1369.891f, -483.9506f, 71.0829f), new Vector3(0.0f, 0.0f, 7.999947f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1368.686f, -483.7813f, 71.03829f), new Vector3(0.0f, 0.0f, 7.999947f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1367.419f, -484.6518f, 71.03829f), new Vector3(0.0f, 0.0f, -82.00005f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1368.419f, -485.913f, 71.03829f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
        this.Chairs.Add(World.CreateProp((GTA.Model) -1278649385, new Vector3(-1370.785f, -486.2455f, 71.03829f), new Vector3(0.0f, 0.0f, -172.0001f), false, false));
      }
      foreach (Prop chair in this.Chairs)
      {
        if ((Entity) chair != (Entity) null && this.freezeExtraChairProps)
          chair.FreezePosition = true;
      }
    }

    private void CreateOText(int office)
    {
      switch (this.OStage)
      {
        case 0:
          this.DeleteOText();
          this.OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "ORGANISATION_NAME");
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "prop_ex_office_text", (InputArgument) 0);
          if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) -2082168399))
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) -2082168399);
          this.OSF1 = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "prop_ex_office_text");
          this.OStage = 1;
          break;
        case 1:
          if (Function.Call<bool>(Hash._0x85F01B8D5B90570E, (InputArgument) this.OSMovie))
          {
            Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.OSMovie, (InputArgument) "SET_ORGANISATION_NAME");
            if (office == 1)
            {
              this.officetext = this.CurrentText;
              this.ao = this.currentColor;
              this.bo = this.currentFont;
            }
            if (office == 2)
            {
              this.officetext = this.CurrentText;
              this.ao = this.currentColor;
              this.bo = this.currentFont;
            }
            if (office == 3)
            {
              this.officetext = this.CurrentText;
              this.ao = this.currentColor;
              this.bo = this.currentFont;
            }
            if (office == 4)
            {
              this.officetext = this.CurrentText;
              this.ao = this.currentColor;
              this.bo = this.currentFont;
            }
            Function.Call((Hash) 8646405517797544368, (InputArgument) this.officetext);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 0);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) this.ao);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) this.bo);
            Function.Call(Hash._0xC6796A8FFA375E53);
            Function.Call((Hash) 3671366047641330747, (InputArgument) this.OSMovie, (InputArgument) 1);
            this.OStage = 2;
            break;
          }
          this.OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "ORGANISATION_NAME");
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.OSF1);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          Function.Call(Hash._0xB8A850F20A067EB6, (InputArgument) 73, (InputArgument) 73);
          Function.Call(Hash._0x54972ADAF0294A93, (InputArgument) this.OSMovie, (InputArgument) 0.196f, (InputArgument) 0.245f, (InputArgument) 0.46f, (InputArgument) 0.66f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) 0);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void DeleteOText()
    {
      if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
        Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "prop_ex_office_text");
      this.OStage = 0;
    }

    private void DeleteOText1()
    {
      if (!this.CleanUpO1 && !this.CleanUpO2 && (!this.CleanUpO3 && !this.CleanUpO4))
        return;
      if (Function.Call<int>(Hash._0x2107BA504071A6BB, (InputArgument) Game.Player.Character) != 0)
        return;
      if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
        Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "prop_ex_office_text");
      this.OStage = 0;
      this.CleanUpO1 = false;
      this.CleanUpO2 = false;
      this.CleanUpO3 = false;
      this.CleanUpO4 = false;
    }

    private void TEMP_CreateOText(int office)
    {
      switch (this.OStage)
      {
        case 0:
          UI.Notify("0 " + this.OSMovie.ToString());
          this.TEMP_DeleteOText();
          UI.Notify("1");
          this.OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "ORGANISATION_NAME");
          UI.Notify("2");
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "prop_ex_office_text", (InputArgument) 0);
          UI.Notify("3");
          if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) (float) Function.Call<long>(Hash._0xD24D37CC275948CC, (InputArgument) "ex_prop_ex_office_text")))
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) (float) Function.Call<long>(Hash._0xD24D37CC275948CC, (InputArgument) "ex_prop_ex_office_text"));
          this.OSF1 = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "prop_ex_office_text");
          UI.Notify("4");
          this.OStage = 1;
          break;
        case 1:
          if (Function.Call<bool>(Hash._0x85F01B8D5B90570E, (InputArgument) this.OSMovie))
          {
            Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.OSMovie, (InputArgument) "SET_ORGANISATION_NAME");
            this.officetext = this.TEMP_CurrentText;
            this.ao = this.TEMP_currentColor;
            this.bo = this.TEMP_currentFont;
            Function.Call((Hash) 8646405517797544368, (InputArgument) this.officetext);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 0);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) this.ao);
            Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) this.bo);
            Function.Call(Hash._0xC6796A8FFA375E53);
            Function.Call((Hash) 3671366047641330747, (InputArgument) this.OSMovie, (InputArgument) 1);
            this.OStage = 2;
            break;
          }
          this.OSMovie = Function.Call<int>(Hash._0x11FE353CF9733E6F, (InputArgument) "ORGANISATION_NAME");
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.OSF1);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          Function.Call(Hash._0xB8A850F20A067EB6, (InputArgument) 73, (InputArgument) 73);
          Function.Call(Hash._0x54972ADAF0294A93, (InputArgument) this.OSMovie, (InputArgument) 0.196f, (InputArgument) 0.245f, (InputArgument) 0.46f, (InputArgument) 0.66f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) 0);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void TEMP_DeleteOText()
    {
      if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
        Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "prop_ex_office_text");
      this.OStage = 0;
    }

    private void TEMP_DeleteOText1()
    {
      if (!this.CleanUpO1 && !this.CleanUpO2 && (!this.CleanUpO3 && !this.CleanUpO4))
        return;
      if (Function.Call<int>(Hash._0x2107BA504071A6BB, (InputArgument) Game.Player.Character) != 0)
        return;
      if (Function.Call<bool>(Hash._0x85F01B8D5B90570E, (InputArgument) this.OSMovie))
        Function.Call(Hash._0x1D132D614DD86811, (InputArgument) this.OSMovie);
      if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "prop_ex_office_text"))
        Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "prop_ex_office_text");
      this.OStage = 0;
      this.CleanUpO1 = false;
      this.CleanUpO2 = false;
      this.CleanUpO3 = false;
      this.CleanUpO4 = false;
    }

    public void SetCashProps()
    {
      this.CashProp.Add("cash_set_01");
      this.CashProp.Add("cash_set_02");
      this.CashProp.Add("cash_set_03");
      this.CashProp.Add("cash_set_04");
      this.CashProp.Add("cash_set_05");
      this.CashProp.Add("cash_set_06");
      this.CashProp.Add("cash_set_07");
      this.CashProp.Add("cash_set_08");
      this.CashProp.Add("cash_set_09");
      this.CashProp.Add("cash_set_10");
      this.CashProp.Add("cash_set_11");
      this.CashProp.Add("cash_set_12");
      this.CashProp.Add("cash_set_13");
      this.CashProp.Add("cash_set_14");
      this.CashProp.Add("cash_set_15");
      this.CashProp.Add("cash_set_16");
      this.CashProp.Add("cash_set_17");
      this.CashProp.Add("cash_set_18");
      this.CashProp.Add("cash_set_19");
      this.CashProp.Add("cash_set_20");
      this.CashProp.Add("cash_set_21");
      this.CashProp.Add("cash_set_22");
      this.CashProp.Add("cash_set_23");
      this.CashProp.Add("cash_set_24");
    }

    public void DisableCashProps(int Interior)
    {
      for (int index = 0; index < 24; ++index)
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) this.CashProp[index]);
    }

    public void EnableCashProps(int Interior)
    {
      if (this.Config == null)
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      if (this.AmountOfCash < 0)
        this.AmountOfCash = 0;
      if (this.AmountOfCash > 23)
        this.AmountOfCash = 24;
      this.Config.SetValue<int>("Design", "AmountOfCash", this.AmountOfCash);
      this.Config.Save();
      for (int index = 0; index <= this.AmountOfCash; ++index)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) Interior, (InputArgument) this.CashProp[index]);
      if (this.AmountOfCash < 0)
        this.AmountOfCash = 0;
      if (this.AmountOfCash > 23)
        this.AmountOfCash = 24;
      this.Config.SetValue<int>("Design", "AmountOfCash", this.AmountOfCash);
      this.Config.Save();
    }

    public void SetExProps()
    {
      this.ExProp.Add("swag_silver");
      this.ExProp.Add("swag_silver2");
      this.ExProp.Add("swag_silver3");
      this.ExProp.Add("swag_drugbags");
      this.ExProp.Add("swag_drugbags2");
      this.ExProp.Add("swag_drugbags3");
      this.ExProp.Add("swag_booze_cigs");
      this.ExProp.Add("swag_booze_cigs2");
      this.ExProp.Add("swag_booze_cigs3");
      this.ExProp.Add("swag_electronic");
      this.ExProp.Add("swag_electronic2");
      this.ExProp.Add("swag_electronic3");
      this.ExProp.Add("swag_drugstatue");
      this.ExProp.Add("swag_drugstatue2");
      this.ExProp.Add("swag_drugstatue3");
      this.ExProp.Add("swag_ivory");
      this.ExProp.Add("swag_ivory2");
      this.ExProp.Add("swag_ivory3");
      this.ExProp.Add("swag_pills");
      this.ExProp.Add("swag_pills2");
      this.ExProp.Add("swag_pills3");
      this.ExProp.Add("swag_jewelwatch");
      this.ExProp.Add("swag_jewelwatch2");
      this.ExProp.Add("swag_jewelwatch3");
      this.ExProp.Add("swag_furcoats");
      this.ExProp.Add("swag_furcoats2");
      this.ExProp.Add("swag_furcoats3");
      this.ExProp.Add("swag_art");
      this.ExProp.Add("swag_art2");
      this.ExProp.Add("swag_art3");
      this.ExProp.Add("swag_guns");
      this.ExProp.Add("swag_guns2");
      this.ExProp.Add("swag_guns3");
      this.ExProp.Add("swag_med");
      this.ExProp.Add("swag_med2");
      this.ExProp.Add("swag_med3");
      this.ExProp.Add("swag_gems");
      this.ExProp.Add("swag_gems2");
      this.ExProp.Add("swag_gems3");
      this.ExProp.Add("swag_counterfeit");
      this.ExProp.Add("swag_counterfeit2");
      this.ExProp.Add("swag_counterfeit3");
    }

    public void DisableExProps(int Interior)
    {
      int num = this.ExProp.Count - 1;
      for (int index = 0; index < num; ++index)
      {
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) Interior, (InputArgument) this.ExProp[index]);
        if (this.Config == null)
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        if (!this.Config.GetValue<bool>("Design", this.ExProp[index] + " Enabled", false))
        {
          this.Config.SetValue<bool>("Design", this.ExProp[index] + " Enabled", false);
          this.Config.Save();
        }
      }
    }

    public void EnableExProps(int Interior)
    {
      int num = this.ExProp.Count - 1;
      for (int index = 0; index < num; ++index)
      {
        if (this.Config == null)
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.Config.GetValue<bool>("Design", this.ExProp[index] + " Enabled", false);
        if (this.Config.GetValue<bool>("Design", this.ExProp[index] + " Enabled", false))
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) Interior, (InputArgument) this.ExProp[index]);
      }
    }

    private void CheckForScriptEnabled(string iniName)
    {
      try
      {
        this.ScriptConfig = ScriptSettings.Load(iniName);
        this.IsScriptEnabled = this.ScriptConfig.GetValue<bool>("Executive Business", "ExecutiveBusinessMain", this.IsScriptEnabled);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public ExecutiveTower(bool Create)
    {
      this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
      int num = this.IsScriptEnabled ? 1 : 0;
    }

    public ExecutiveTower()
    {
      this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
      if (!this.IsScriptEnabled)
        return;
      this.CargoWarehouseScript = new SubBusinesses(1);
      this.VehicleWarehouseScript = new VehicleWarehouse(1);
      this.LoadIniFile_Garages("scripts//HKH191sBusinessMods//Open60CarGarage.ini");
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.SetExProps();
      this.SetCashProps();
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.SetCashProps();
      this.Allstocks = new AllStocks();
      this.CreateBanner();
      this.Setup();
      this.Tick += new EventHandler(this.OnTick);
      this.Aborted += new EventHandler(this.OnShutdown);
      this.AssistantpPostion = new List<Vector3>();
      this.AssistantpRotation = new List<float>();
      this.AssistantCreatedPeds = false;
      this.SetupAircraftStorage();
      this.SetupVehicleStorage();
      this.SetupDock();
      ExecutiveTower.CustomizemodMenuPool = new MenuPool();
      ExecutiveTower.CustomizemainMenu = new UIMenu("Executive Business", "Select an Option");
      this.GUIMenus.Add(ExecutiveTower.CustomizemainMenu);
      ExecutiveTower.CustomizemodMenuPool.Add(ExecutiveTower.CustomizemainMenu);
      ExecutiveTower.CustomizeOptions = ExecutiveTower.CustomizemodMenuPool.AddSubMenu(ExecutiveTower.CustomizemainMenu, "Floor Decal");
      this.GUIMenus.Add(ExecutiveTower.CustomizeOptions);
      this.SetupDecalOptions();
    }

    public void SetupAssistant(Vector3 Pos, float rot)
    {
    }

    public void LoadIntoModShopOnFoot()
    {
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_c");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_sm_15_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_dt1_02_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_sm_13_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_dt1_11_modgarage");
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
      int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
      int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
      int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
      int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
      int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.BusinessLocation = this.MainConfigFile.GetValue<int>("Misc", "BusinessLocation", this.BusinessLocation);
      this.GetBusinesslocations();
    }

    public void LoadIntoModShop(string Slot, string Garage)
    {
      Game.FadeScreenOut(800);
      Script.Wait(1500);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "mp_sm_15_cargarage_c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_c");
      ExecutiveTower.Saveloc = Slot;
      ExecutiveTower.GarageNum = Garage;
      ExecutiveTower.VehicleA = Game.Player.Character.CurrentVehicle;
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_sm_15_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_dt1_02_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_sm_13_modgarage");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "imp_dt1_11_modgarage");
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
      int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
      int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
      int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
      int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
      int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
      Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
      this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.BusinessLocation = this.MainConfigFile.GetValue<int>("Misc", "BusinessLocation", this.BusinessLocation);
      this.GetBusinesslocations();
      ExecutiveTower.VehicleA.Position = this.VehicleAPos;
      ExecutiveTower.VehicleA.Rotation = new Vector3(0.0f, 0.0f, 45f);
      Game.Player.Character.Position = ExecutiveTower.Exit;
      Game.Player.Character.SetIntoVehicle(ExecutiveTower.VehicleA, VehicleSeat.Driver);
      Script.Wait(1500);
      Game.FadeScreenIn(800);
    }

    private void SetupDecalOptions()
    {
      UIMenu uiMenu = ExecutiveTower.CustomizemodMenuPool.AddSubMenu(ExecutiveTower.CustomizeOptions, "Decals");
      this.GUIMenus.Add(uiMenu);
      List<object> items = new List<object>();
      List<object> DCAlsP = new List<object>();
      List<object> DCAlsProp = new List<object>();
      items.Add((object) "No Decal");
      DCAlsP.Add((object) 0);
      DCAlsProp.Add((object) "nodecal");
      items.Add((object) "Decal 1");
      DCAlsP.Add((object) 420000);
      DCAlsProp.Add((object) "floor_vinyl_01");
      items.Add((object) "Decal 2");
      DCAlsP.Add((object) 465000);
      DCAlsProp.Add((object) "floor_vinyl_02");
      items.Add((object) "Decal 3");
      DCAlsP.Add((object) 500000);
      DCAlsProp.Add((object) "floor_vinyl_03");
      items.Add((object) "Decal 4");
      DCAlsP.Add((object) 395000);
      DCAlsProp.Add((object) "floor_vinyl_04");
      items.Add((object) "Decal 5");
      DCAlsP.Add((object) 370000);
      DCAlsProp.Add((object) "floor_vinyl_05");
      items.Add((object) "Decal 6");
      DCAlsP.Add((object) 170000);
      DCAlsProp.Add((object) "floor_vinyl_06");
      items.Add((object) "Decal 7");
      DCAlsP.Add((object) 220000);
      DCAlsProp.Add((object) "floor_vinyl_07");
      items.Add((object) "Decal 8");
      DCAlsP.Add((object) 182000);
      DCAlsProp.Add((object) "floor_vinyl_08");
      items.Add((object) "Decal 9");
      DCAlsP.Add((object) 207500);
      DCAlsProp.Add((object) "floor_vinyl_9");
      items.Add((object) "Decal 10");
      DCAlsP.Add((object) 195000);
      DCAlsProp.Add((object) "floor_vinyl_10");
      items.Add((object) "Decal 11");
      DCAlsP.Add((object) 345000);
      DCAlsProp.Add((object) "floor_vinyl_11");
      items.Add((object) "Decal 12");
      DCAlsP.Add((object) 320000);
      DCAlsProp.Add((object) "floor_vinyl_12");
      items.Add((object) "Decal 13");
      DCAlsP.Add((object) 295000);
      DCAlsProp.Add((object) "floor_vinyl_13");
      items.Add((object) "Decal 14");
      DCAlsP.Add((object) 245000);
      DCAlsProp.Add((object) "floor_vinyl_14");
      items.Add((object) "Decal 15");
      DCAlsP.Add((object) 270000);
      DCAlsProp.Add((object) "floor_vinyl_15");
      items.Add((object) "Decal 16");
      DCAlsP.Add((object) 132500);
      DCAlsProp.Add((object) "floor_vinyl_16");
      items.Add((object) "Decal 17");
      DCAlsP.Add((object) 145000);
      DCAlsProp.Add((object) "floor_vinyl_17");
      items.Add((object) "Decal 18");
      DCAlsP.Add((object) 120000);
      DCAlsProp.Add((object) "floor_vinyl_18");
      items.Add((object) "Decal 19");
      DCAlsP.Add((object) 157500);
      DCAlsProp.Add((object) "floor_vinyl_19");
      UIMenuListItem DecalID = new UIMenuListItem("Decal : ", items, 0);
      uiMenu.AddItem((UIMenuItem) DecalID);
      UIMenuItem BuyDecal = new UIMenuItem("Buy Decal ~g~$0");
      uiMenu.AddItem(BuyDecal);
      uiMenu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        BuyDecal.Text = "Buy Decal ~g~$" + ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__0, DCAlsP[DecalID.Index]).ToString("N");
        if (DecalID.Index > 0)
        {
          int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
          int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
          int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
          int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.Decal = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__1.Target((CallSite) ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__1, DCAlsProp[DecalID.Index]);
          int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
          int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
          int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
          int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
        }
        else
        {
          int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
          int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
          int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
          int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
          ExecutiveTower.Decal = "nodecal";
          int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
          int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
          int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
          int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
        }
      });
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != BuyDecal)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__3.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p3 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__3;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__2 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.GreaterThanOrEqual, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__2, Game.Player.Money, DCAlsP[DecalID.Index]);
        if (!target1((CallSite) p3, obj1))
          return;
        Player player1 = Game.Player;
        Player player2 = player1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, int> target2 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__5.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, int>> p5 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__5;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__4 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.SubtractAssign, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__4, player1.Money, DCAlsP[DecalID.Index]);
        int num1 = target2((CallSite) p5, obj2);
        player2.Money = num1;
        if (DecalID.Index > 0)
        {
          int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
          int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
          int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
          int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.Decal = ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__542.\u003C\u003Ep__6, DCAlsProp[DecalID.Index]);
          int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
          int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
          int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
          int num9 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num9, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num9);
        }
        else
        {
          int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num2);
          int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num3);
          int num4 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num4, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num4);
          int num5 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num5, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num5);
          ExecutiveTower.Decal = "nodecal";
          int num6 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1391.245f, (InputArgument) -473.9638f, (InputArgument) 77.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num6, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num6);
          int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -146.6166f, (InputArgument) -596.6301f, (InputArgument) 166f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num7);
          int num8 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1578.023f, (InputArgument) -576.4251f, (InputArgument) 104.2f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num8, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num8);
          int num9 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 73.9039f, (InputArgument) -821.6204f, (InputArgument) 284f);
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num9, (InputArgument) ExecutiveTower.Decal);
          Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num9);
        }
        this.Config.SetValue<string>("Decal", "Decal", ExecutiveTower.Decal);
        this.Config.Save();
      });
    }

    private void SetupMarker()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Remove();
      if (this.BusinessLocation == 0)
      {
        this.TowerBlip = World.CreateBlip(this.ArcadiusTowerPos);
        this.TowerBlip.Sprite = BlipSprite.Office;
        if (this.purchaselvl >= 1)
        {
          this.TowerBlip.Color = this.ArcadiusBlip_Colour;
          this.TowerBlip.Alpha = (int) byte.MaxValue;
        }
        if (this.purchaselvl == 0)
        {
          this.TowerBlip.Color = BlipColor.White;
          this.TowerBlip.Alpha = 0;
        }
        this.TowerBlip.Name = "Arcadius Tower Office";
        this.TowerBlip.IsShortRange = true;
      }
      if (this.BusinessLocation == 1)
      {
        this.TowerBlip = World.CreateBlip(this.MazeBankTowerPos);
        this.TowerBlip.Sprite = BlipSprite.Office;
        if (this.purchaselvl >= 1)
        {
          this.TowerBlip.Color = this.MazeBankBlip_Colour;
          this.TowerBlip.Alpha = (int) byte.MaxValue;
        }
        if (this.purchaselvl == 0)
        {
          this.TowerBlip.Color = BlipColor.White;
          this.TowerBlip.Alpha = 0;
        }
        this.TowerBlip.Name = "Maze Bank Tower Office";
        this.TowerBlip.IsShortRange = true;
      }
      if (this.BusinessLocation == 3)
      {
        this.TowerBlip = World.CreateBlip(this.MazeBankWestTowerPos);
        this.TowerBlip.Sprite = BlipSprite.Office;
        if (this.purchaselvl >= 1)
        {
          this.TowerBlip.Color = this.MBWBlip_Colour;
          this.TowerBlip.Alpha = (int) byte.MaxValue;
        }
        if (this.purchaselvl == 0)
        {
          this.TowerBlip.Color = BlipColor.White;
          this.TowerBlip.Alpha = 0;
        }
        this.TowerBlip.Name = "Maze Bank West Tower Office";
        this.TowerBlip.IsShortRange = true;
      }
      if (this.BusinessLocation != 2)
        return;
      this.TowerBlip = World.CreateBlip(this.LombokTowerPos);
      this.TowerBlip.Sprite = BlipSprite.Office;
      if (this.purchaselvl >= 1)
      {
        this.TowerBlip.Color = this.LombokBlip_Colour;
        this.TowerBlip.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.TowerBlip.Color = BlipColor.White;
        this.TowerBlip.Alpha = 0;
      }
      this.TowerBlip.Name = "Lombank Tower Office";
      this.TowerBlip.IsShortRange = true;
    }

    private void LoadIniFile(string iniName)
    {
      try
      {
        this.Config = ScriptSettings.Load(iniName);
        this.Key1 = this.Config.GetValue<Keys>("Configurations", "Key1", this.Key1);
        this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
        this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
        this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.BuzzardBought = this.Config.GetValue<int>("Setup", "BuzzardBought", this.BuzzardBought);
        this.FMJBought = this.Config.GetValue<int>("Setup", "FMJBought", this.FMJBought);
        this.A911Bought = this.Config.GetValue<int>("Setup", "911Bought", this.A911Bought);
        this.X80Bought = this.Config.GetValue<int>("Setup", "X80Bought", this.X80Bought);
        this.SEVEN70Bought = this.Config.GetValue<int>("Setup", "SEVEN70Bought", this.SEVEN70Bought);
        this.GunLockerBought = this.Config.GetValue<int>("Setup", "GunLockerBought", this.GunLockerBought);
        this.MoneyVaultBought = this.Config.GetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought);
        this.AATrailerABought = this.Config.GetValue<int>("Setup", "AATrailerABought", this.AATrailerABought);
        this.AATrailerBBought = this.Config.GetValue<int>("Setup", "AATrailerBBought", this.AATrailerBBought);
        this.AATrailerCBought = this.Config.GetValue<int>("Setup", " AATrailerCBought", this.AATrailerCBought);
        this.ValkyrieBought = this.Config.GetValue<int>("Setup", "ValkyrieBought", this.ValkyrieBought);
        this.SavageBought = this.Config.GetValue<int>("Setup", "SavageBought", this.SavageBought);
        this.HunterBought = this.Config.GetValue<int>("Setup", "HunterBought", this.HunterBought);
        this.AkulaBought = this.Config.GetValue<int>("Setup", "AkulaBought", this.AkulaBought);
        this.AnnihilatorBought = this.Config.GetValue<int>("Setup", "AnnihilatorBought", this.AnnihilatorBought);
        this.UseCustomWaitTime = this.Config.GetValue<int>("Setup", "UseCustomWaitTime", this.UseCustomWaitTime);
        this.turretedlimo = this.Config.GetValue<int>("Setup", "turretedlimo", this.turretedlimo);
        this.Design = this.Config.GetValue<int>("Design", "InteriorDesign", this.Design);
        this.AmountOfCash = this.Config.GetValue<int>("Design", "AmountOfCash", this.AmountOfCash);
        this.currentColor = this.Config.GetValue<int>("Design - OrganisationName", "CurrentColor", this.currentColor);
        this.currentFont = this.Config.GetValue<int>("Design - OrganisationName", "CurrentFont", this.currentFont);
        this.CurrentText = this.Config.GetValue<string>("Design - OrganisationName", "CurrentText", this.CurrentText);
        this.AssistantPedModelType = this.Config.GetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
        if (this.AssistantPedModelType.Equals("String"))
          this.AssistantPedModelString = this.Config.GetValue<string>("Misc", "AssistantPedModel", this.AssistantPedModelString);
        if (this.AssistantPedModelType.Equals("Pedhash"))
          this.AssistantPedModelPedHash = this.Config.GetValue<PedHash>("Misc", "AssistantPedModel", this.AssistantPedModelPedHash);
        this.ChairModelAssistant = this.Config.GetValue<string>("Misc", "ChairModelAssistant", this.ChairModelAssistant);
        this.ChairModelCEO = this.Config.GetValue<string>("Misc", "ChairModelCEO", this.ChairModelCEO);
        if (this.ChairModelAssistant.Equals("1") || this.ChairModelAssistant.Equals("2") || (this.ChairModelAssistant.Equals("3") || this.ChairModelAssistant.Equals("4")))
        {
          this.ChairModelAssistant = "ex_prop_offchair_exec_02";
          this.Config.SetValue<string>("Misc", "ChairModelAssistant", this.ChairModelAssistant);
          this.Config.Save();
        }
        if (this.ChairModelCEO.Equals("1") || this.ChairModelCEO.Equals("2") || (this.ChairModelCEO.Equals("3") || this.ChairModelCEO.Equals("4")))
        {
          this.ChairModelCEO = "ex_prop_offchair_exec_02";
          this.Config.SetValue<string>("Misc", "ChairModelCEO", this.ChairModelCEO);
          this.Config.Save();
        }
        this.SS_WarehousesOwned = this.Config.GetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
        this.CargoWarehouseScript.SS_WarehousesOwned = this.SS_WarehousesOwned;
        this.SS_CollectionsFailed = this.Config.GetValue<int>("CargoWarehouses", "CollectionsFailed", this.SS_CollectionsFailed);
        this.CargoWarehouseScript.SS_CollectionsFailed = this.SS_CollectionsFailed;
        this.SS_CollectionsCompleted = this.Config.GetValue<int>("CargoWarehouses", "CollectionsCompleted", this.SS_CollectionsCompleted);
        this.CargoWarehouseScript.SS_CollectionsCompleted = this.SS_CollectionsCompleted;
        this.SS_Warehouse1Index = this.Config.GetValue<int>("CargoWarehouses-1", "Warehouse1Index", this.SS_Warehouse1Index);
        this.CargoWarehouseScript.SS_Warehouse1Index = this.SS_Warehouse1Index;
        this.SS_Warehouse1Stock = this.Config.GetValue<int>("CargoWarehouses-1", "Warehouse1Stock", this.SS_Warehouse1Stock);
        this.SS_Warehouse1SalesMade = this.Config.GetValue<int>("CargoWarehouses-1", "Warehouse1SalesMade", this.SS_Warehouse1SalesMade);
        this.CargoWarehouseScript.SS_Warehouse1SalesMade = this.SS_Warehouse1SalesMade;
        this.SS_Warehouse1SalesFailed = this.Config.GetValue<int>("CargoWarehouses-1", "Warehouse1SalesFailed", this.SS_Warehouse1SalesFailed);
        this.CargoWarehouseScript.SS_Warehouse1SalesFailed = this.SS_Warehouse1SalesFailed;
        this.SS_Warehouse1LifetimeEarnings = this.Config.GetValue<int>("CargoWarehouses-1", "Warehouse1LifetimeEarnings", this.SS_Warehouse1LifetimeEarnings);
        this.CargoWarehouseScript.SS_Warehouse1LifetimeEarnings = this.SS_Warehouse1LifetimeEarnings;
        this.SS_Warehouse2Index = this.Config.GetValue<int>("CargoWarehouses-2", "Warehouse2Index", this.SS_Warehouse2Index);
        this.CargoWarehouseScript.SS_Warehouse2Index = this.SS_Warehouse2Index;
        this.SS_Warehouse2Stock = this.Config.GetValue<int>("CargoWarehouses-2", "Warehouse2Stock", this.SS_Warehouse2Stock);
        this.SS_Warehouse2SalesMade = this.Config.GetValue<int>("CargoWarehouses-2", "Warehouse2SalesMade", this.SS_Warehouse2SalesMade);
        this.CargoWarehouseScript.SS_Warehouse2SalesMade = this.SS_Warehouse2SalesMade;
        this.SS_Warehouse2SalesFailed = this.Config.GetValue<int>("CargoWarehouses-2", "Warehouse2SalesFailed", this.SS_Warehouse2SalesFailed);
        this.CargoWarehouseScript.SS_Warehouse2SalesFailed = this.SS_Warehouse2SalesFailed;
        this.SS_Warehouse2LifetimeEarnings = this.Config.GetValue<int>("CargoWarehouses-2", "Warehouse2LifetimeEarnings", this.SS_Warehouse2LifetimeEarnings);
        this.CargoWarehouseScript.SS_Warehouse2LifetimeEarnings = this.SS_Warehouse2LifetimeEarnings;
        this.SS_Warehouse3Index = this.Config.GetValue<int>("CargoWarehouses-3", "Warehouse3Index", this.SS_Warehouse3Index);
        this.CargoWarehouseScript.SS_Warehouse3Index = this.SS_Warehouse3Index;
        this.SS_Warehouse3Stock = this.Config.GetValue<int>("CargoWarehouses-3", "Warehouse3Stock", this.SS_Warehouse3Stock);
        this.SS_Warehouse3SalesMade = this.Config.GetValue<int>("CargoWarehouses-3", "Warehouse3SalesMade", this.SS_Warehouse3SalesMade);
        this.CargoWarehouseScript.SS_Warehouse3SalesMade = this.SS_Warehouse3SalesMade;
        this.SS_Warehouse3SalesFailed = this.Config.GetValue<int>("CargoWarehouses-3", "Warehouse3SalesFailed", this.SS_Warehouse3SalesFailed);
        this.CargoWarehouseScript.SS_Warehouse3SalesFailed = this.SS_Warehouse3SalesFailed;
        this.SS_Warehouse3LifetimeEarnings = this.Config.GetValue<int>("CargoWarehouses-3", "Warehouse3LifetimeEarnings", this.SS_Warehouse3LifetimeEarnings);
        this.CargoWarehouseScript.SS_Warehouse3LifetimeEarnings = this.SS_Warehouse3LifetimeEarnings;
        this.SS_Warehouse4Index = this.Config.GetValue<int>("CargoWarehouses-4", "Warehouse4Index", this.SS_Warehouse4Index);
        this.CargoWarehouseScript.SS_Warehouse4Index = this.SS_Warehouse4Index;
        this.SS_Warehouse4Stock = this.Config.GetValue<int>("CargoWarehouses-4", "Warehouse4Stock", this.SS_Warehouse4Stock);
        this.SS_Warehouse4SalesMade = this.Config.GetValue<int>("CargoWarehouses-4", "Warehouse4SalesMade", this.SS_Warehouse4SalesMade);
        this.CargoWarehouseScript.SS_Warehouse4SalesMade = this.SS_Warehouse4SalesMade;
        this.SS_Warehouse4SalesFailed = this.Config.GetValue<int>("CargoWarehouses-4", "Warehouse4SalesFailed", this.SS_Warehouse4SalesFailed);
        this.CargoWarehouseScript.SS_Warehouse4SalesFailed = this.SS_Warehouse4SalesFailed;
        this.SS_Warehouse4LifetimeEarnings = this.Config.GetValue<int>("CargoWarehouses-4", "Warehouse4LifetimeEarnings", this.SS_Warehouse4LifetimeEarnings);
        this.CargoWarehouseScript.SS_Warehouse4LifetimeEarnings = this.SS_Warehouse4LifetimeEarnings;
        this.SS_Warehouse5Index = this.Config.GetValue<int>("CargoWarehouses-5", "Warehouse5Index", this.SS_Warehouse5Index);
        this.CargoWarehouseScript.SS_Warehouse5Index = this.SS_Warehouse5Index;
        this.SS_Warehouse5Stock = this.Config.GetValue<int>("CargoWarehouses-5", "Warehouse5Stock", this.SS_Warehouse5Stock);
        this.SS_Warehouse5SalesMade = this.Config.GetValue<int>("CargoWarehouses-5", "Warehouse5SalesMade", this.SS_Warehouse5SalesMade);
        this.CargoWarehouseScript.SS_Warehouse5SalesMade = this.SS_Warehouse5SalesMade;
        this.SS_Warehouse5SalesFailed = this.Config.GetValue<int>("CargoWarehouses-5", "Warehouse5SalesFailed", this.SS_Warehouse5SalesFailed);
        this.CargoWarehouseScript.SS_Warehouse5SalesFailed = this.SS_Warehouse5SalesFailed;
        this.SS_Warehouse5LifetimeEarnings = this.Config.GetValue<int>("CargoWarehouses-5", "Warehouse5LifetimeEarnings", this.SS_Warehouse5LifetimeEarnings);
        this.CargoWarehouseScript.SS_Warehouse5LifetimeEarnings = this.SS_Warehouse5LifetimeEarnings;
        this.SS_TotalSalesMade = this.SS_Warehouse1SalesMade + this.SS_Warehouse2SalesMade + this.SS_Warehouse3SalesMade + this.SS_Warehouse4SalesMade + this.SS_Warehouse5SalesMade;
        this.SS_TotalSalesFailed = this.SS_Warehouse1SalesFailed + this.SS_Warehouse2SalesFailed + this.SS_Warehouse3SalesFailed + this.SS_Warehouse4SalesFailed + this.SS_Warehouse5SalesFailed;
        this.SS_TotalEarnings = this.SS_Warehouse1LifetimeEarnings + this.SS_Warehouse2LifetimeEarnings + this.SS_Warehouse3LifetimeEarnings + this.SS_Warehouse4LifetimeEarnings + this.SS_Warehouse5LifetimeEarnings;
        this.CargoWarehouseScript.SS_TotalEarnings = this.SS_TotalEarnings;
        this.CargoWarehouseScript.SS_TotalSalesMade = this.SS_TotalSalesMade;
        this.SourceCrateCostMultiplier = this.Config.GetValue<int>("CargoWarehouses-misc", "SourceCrateCostMultiplier", this.SourceCrateCostMultiplier);
        if (this.SourceCrateCostMultiplier <= 0)
        {
          this.SourceCrateCostMultiplier = 1;
          this.Config.SetValue<int>("CargoWarehouses-misc", "SourceCrateCostMultiplier", 1);
          this.Config.Save();
        }
        this.CargoWarehouseScript.SourceCrateCostMultiplier = this.SourceCrateCostMultiplier;
        this.SellCrateCostMultiplier = this.Config.GetValue<int>("CargoWarehouses-misc", "SellCrateCostMultiplier", this.SellCrateCostMultiplier);
        if (this.SellCrateCostMultiplier <= 0)
        {
          this.SellCrateCostMultiplier = 1;
          this.Config.SetValue<int>("CargoWarehouses-misc", "SellCrateCostMultiplier", 1);
          this.Config.Save();
        }
        this.CargoWarehouseScript.SellCrateCostMultiplier = this.SellCrateCostMultiplier;
        this.SourceCrateAmtMultiplier = this.Config.GetValue<int>("CargoWarehouses-misc", "SourceCrateAmtMultiplier", this.SourceCrateAmtMultiplier);
        if (this.SourceCrateAmtMultiplier <= 0)
        {
          this.SourceCrateAmtMultiplier = 1;
          this.Config.SetValue<int>("CargoWarehouses-misc", "SourceCrateAmtMultiplier", 1);
          this.Config.Save();
        }
        this.CargoWarehouseScript.SourceCrateAmtMultiplier = this.SourceCrateAmtMultiplier;
        this.SellCrateAmtMultiplier = this.Config.GetValue<int>("CargoWarehouses-misc", "SellCrateAmtMultiplier", this.SellCrateAmtMultiplier);
        if (this.SellCrateAmtMultiplier <= 0)
        {
          this.SellCrateAmtMultiplier = 1;
          this.Config.SetValue<int>("CargoWarehouses-misc", "SellCrateAmtMultiplier", 1);
          this.Config.Save();
        }
        this.Config.Save();
        this.CargoWarehouseScript.SellCrateAmtMultiplier = this.SellCrateAmtMultiplier;
        this.CargoWarehouseScript.AHC_Company = this.CurrentText;
        this.SS_CurrentVehiclesAmt = this.VehicleWarehouseScript.GetVehicleCount();
        this.SS_Warehouse1Stock = this.SS_Warehouse1Index == -1 ? 0 : this.CargoWarehouseScript.GetCrateCountByID(1);
        this.SS_Warehouse2Stock = this.SS_Warehouse2Index == -1 ? 0 : this.CargoWarehouseScript.GetCrateCountByID(2);
        this.SS_Warehouse3Stock = this.SS_Warehouse3Index == -1 ? 0 : this.CargoWarehouseScript.GetCrateCountByID(3);
        this.SS_Warehouse4Stock = this.SS_Warehouse4Index == -1 ? 0 : this.CargoWarehouseScript.GetCrateCountByID(4);
        this.SS_Warehouse5Stock = this.SS_Warehouse5Index == -1 ? 0 : this.CargoWarehouseScript.GetCrateCountByID(5);
        this.CargoWarehouseScript.SS_Warehouse1Stock = this.SS_Warehouse1Stock;
        this.CargoWarehouseScript.SS_Warehouse2Stock = this.SS_Warehouse2Stock;
        this.CargoWarehouseScript.SS_Warehouse3Stock = this.SS_Warehouse3Stock;
        this.CargoWarehouseScript.SS_Warehouse4Stock = this.SS_Warehouse4Stock;
        this.CargoWarehouseScript.SS_Warehouse5Stock = this.SS_Warehouse5Stock;
        this.Config.SetValue<int>("CargoWarehouses-1", "Warehouse1Stock", this.SS_Warehouse1Stock);
        this.Config.SetValue<int>("CargoWarehouses-2", "Warehouse2Stock", this.SS_Warehouse2Stock);
        this.Config.SetValue<int>("CargoWarehouses-3", "Warehouse3Stock", this.SS_Warehouse3Stock);
        this.Config.SetValue<int>("CargoWarehouses-4", "Warehouse4Stock", this.SS_Warehouse4Stock);
        this.Config.SetValue<int>("CargoWarehouses-5", "Warehouse5Stock", this.SS_Warehouse5Stock);
        this.Config.Save();
        this.SS_VehiclesExportedSuccess = this.Config.GetValue<int>("VehicleWarehouses", "VehiclesExportedSuccess", this.SS_VehiclesExportedSuccess);
        this.VehicleWarehouseScript.SS_VehiclesExportedSuccess = this.SS_VehiclesExportedSuccess;
        this.SS_VehiclesExportedFail = this.Config.GetValue<int>("VehicleWarehouses", "VehiclesExportedFail", this.SS_VehiclesExportedFail);
        this.VehicleWarehouseScript.SS_VehiclesExportedFail = this.SS_VehiclesExportedFail;
        this.SS_VehicleStealSuccess = this.Config.GetValue<int>("VehicleWarehouses", "VehicleStealSuccess", this.SS_VehicleStealSuccess);
        this.VehicleWarehouseScript.SS_VehicleStealSuccess = this.SS_VehicleStealSuccess;
        this.SS_VehicleStealFail = this.Config.GetValue<int>("VehicleWarehouses", "VehicleStealFail", this.SS_VehicleStealFail);
        this.VehicleWarehouseScript.SS_VehicleStealFail = this.SS_VehicleStealFail;
        this.SS_VehiclesStolenSuccess = this.Config.GetValue<int>("VehicleWarehouses", "VehiclesStolenSuccess", this.SS_VehiclesStolenSuccess);
        this.VehicleWarehouseScript.SS_VehiclesStolenSuccess = this.SS_VehiclesStolenSuccess;
        this.SS_VehiclesStolenFail = this.Config.GetValue<int>("VehicleWarehouses", "VehiclesStolenFail", this.SS_VehiclesStolenFail);
        this.VehicleWarehouseScript.SS_VehiclesStolenFail = this.SS_VehiclesStolenFail;
        this.SS_TotalExportEarnings = this.Config.GetValue<int>("VehicleWarehouses", "TotalExportEarnings", this.SS_TotalExportEarnings);
        this.VehicleWarehouseScript.SS_TotalExportEarnings = this.SS_TotalExportEarnings;
        this.VehicleWarehouseIndex = this.Config.GetValue<int>("VehicleWarehouses", "VehicleWarehouseIndex", this.VehicleWarehouseIndex);
        this.VehicleWarehouseScript.VehicleWarehouseIndex = this.VehicleWarehouseIndex;
        this.SS_VehicleWarehouseLoc = this.Config.GetValue<int>("VehicleWarehouses", "VehicleWarehouseLoc", this.SS_VehicleWarehouseLoc);
        this.VehicleWarehouseScript.SS_VehicleWarehouseLoc = this.SS_VehicleWarehouseLoc;
        this.SS_VehicleWarehouseTotalEarnings = this.Config.GetValue<int>("VehicleWarehouses", "VehicleWarehouseTotalEarnings", this.SS_VehicleWarehouseTotalEarnings);
        this.VehicleWarehouseScript.SS_VehicleWarehouseTotalEarnings = this.SS_VehicleWarehouseTotalEarnings;
        this.CargoWarehouseScript.SS_WarehousesOwned = this.SS_WarehousesOwned;
        this.CargoWarehouseScript.ResetData();
        this.VehicleWarehouseScript.ResetData();
        this.freezeExtraChairProps = this.Config.GetValue<bool>("Misc", "freezeExtraChairProps", this.freezeExtraChairProps);
        this.PurchasedGarageLevel1 = this.Config.GetValue<int>("Garage", "PurchasedGarageLevel1", this.PurchasedGarageLevel1);
        this.PurchasedGarageLevel2 = this.Config.GetValue<int>("Garage", "PurchasedGarageLevel2", this.PurchasedGarageLevel2);
        this.PurchasedGarageLevel3 = this.Config.GetValue<int>("Garage", "PurchasedGarageLevel3", this.PurchasedGarageLevel3);
        this.PurchasedGarageModShop = this.Config.GetValue<int>("Garage", "PurchasedGarageModShop", this.PurchasedGarageModShop);
        this.VehicleWarehouseBought = this.Config.GetValue<int>("Setup", "VehicleWarehouseBought", this.VehicleWarehouseBought);
        this.VehicleWarehouseScript.VehicleWarehouseBought = this.VehicleWarehouseBought;
        this.maxstocks = 10 * this.purchaselvl;
        float num = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
        this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
        this.increaseGain = num;
        this.MoneyVaultBought = this.Config.GetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought);
        this.Commission = this.Config.GetValue<float>("ADDON2", "COMMISSION", this.Commission);
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED", this.MoneyStored);
        if (this.VehicleWarehouseScript.SC != null)
          return;
        this.VehicleWarehouseScript.SC = new SaveCar();
      }
      catch (Exception ex)
      {
      }
    }

    private void LIFWarehouseConfig(string iniName)
    {
      try
      {
        this.WarehouseConfig = ScriptSettings.Load(iniName);
        this.WarehousePos = this.WarehouseConfig.GetValue<string>("Position", "WarehousePos", this.WarehousePos);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Executive Business Config  File Failed To Load.");
      }
    }

    public void SetBanner(UIMenu menu) => menu.SetBannerType(this.RectangleGUI);

    public void CreateBanner()
    {
      this.RectangleGUI = new UIResRectangle();
      this.RectangleGUI.Color = Color.FromArgb((int) byte.MaxValue, 0, 0, 0);
    }

    private string func_715(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SVM_VEH_1";
        case 1:
          return "SVM_VEH_2";
        case 2:
          return "SVM_VEH_3";
        case 3:
          return "SVM_VEH_4";
        case 4:
          return "SVM_VEH_5";
        case 5:
          return "SVM_VEH_6";
        case 6:
          return "SVM_VEH_7";
        case 7:
          return "SVM_VEH_8";
        default:
          return "";
      }
    }

    private string func_716(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SVM_MIS_1";
        case 1:
          return "SVM_MIS_2";
        case 2:
          return "SVM_MIS_3";
        case 3:
          return "SVM_MIS_4";
        case 4:
          return "SVM_MIS_5";
        case 5:
          return "SVM_MIS_6";
        case 6:
          return "SVM_MIS_7";
        case 7:
          return "SVM_MIS_8";
        default:
          return "";
      }
    }

    private string func_369(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "DYN_MPWH_1";
        case 2:
          return "DYN_MPWH_2";
        case 3:
          return "DYN_MPWH_3";
        case 4:
          return "DYN_MPWH_4";
        case 5:
          return "DYN_MPWH_5";
        case 6:
          return "DYN_MPWH_6";
        case 7:
          return "DYN_MPWH_7";
        case 8:
          return "DYN_MPWH_8";
        case 9:
          return "DYN_MPWH_9";
        case 10:
          return "DYN_MPWH_10";
        case 11:
          return "DYN_MPWH_11";
        case 12:
          return "DYN_MPWH_12";
        case 13:
          return "DYN_MPWH_13";
        case 14:
          return "DYN_MPWH_14";
        case 15:
          return "DYN_MPWH_15";
        case 16:
          return "DYN_MPWH_16";
        case 17:
          return "DYN_MPWH_17";
        case 18:
          return "DYN_MPWH_18";
        case 19:
          return "DYN_MPWH_19";
        case 20:
          return "DYN_MPWH_20";
        case 21:
          return "DYN_MPWH_21";
        case 22:
          return "DYN_MPWH_22";
        default:
          return "";
      }
    }

    private string func_370(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "MP_WHOUSE_0DES";
        case 2:
          return "MP_WHOUSE_1DES";
        case 3:
          return "MP_WHOUSE_2DES";
        case 4:
          return "MP_WHOUSE_3DES";
        case 5:
          return "MP_WHOUSE_4DES";
        case 6:
          return "MP_WHOUSE_5DES";
        case 7:
          return "MP_WHOUSE_6DES";
        case 8:
          return "MP_WHOUSE_7DES";
        case 9:
          return "MP_WHOUSE_8DES";
        case 10:
          return "MP_WHOUSE_9DES";
        case 11:
          return "MP_WHOUSE_10DES";
        case 12:
          return "MP_WHOUSE_11DES";
        case 13:
          return "MP_WHOUSE_12DES";
        case 14:
          return "MP_WHOUSE_13DES";
        case 15:
          return "MP_WHOUSE_14DES";
        case 16:
          return "MP_WHOUSE_15DES";
        case 17:
          return "MP_WHOUSE_16DES";
        case 18:
          return "MP_WHOUSE_17DES";
        case 19:
          return "MP_WHOUSE_18DES";
        case 20:
          return "MP_WHOUSE_19DES";
        case 21:
          return "MP_WHOUSE_20DES";
        case 22:
          return "MP_WHOUSE_21DES";
        default:
          return "";
      }
    }

    public static Vector3 GenerateSpawnPos(
      Vector3 desiredPos,
      ExecutiveTower.Nodetype roadtype,
      bool sidewalk)
    {
      Vector3 zero = Vector3.Zero;
      bool flag = false;
      OutputArgument outputArgument = new OutputArgument();
      int num1 = 1;
      int num2 = 0;
      if (roadtype == ExecutiveTower.Nodetype.AnyRoad)
        num2 = 1;
      if (roadtype == ExecutiveTower.Nodetype.Road)
        num2 = 0;
      if (roadtype == ExecutiveTower.Nodetype.Offroad)
      {
        num2 = 1;
        flag = true;
      }
      if (roadtype == ExecutiveTower.Nodetype.Water)
        num2 = 3;
      int num3 = Function.Call<int>(Hash._0x22D7275A79FE8215, (InputArgument) desiredPos.X, (InputArgument) desiredPos.Y, (InputArgument) desiredPos.Z, (InputArgument) num1, (InputArgument) num2, (InputArgument) 300f, (InputArgument) 300f);
      if (flag)
      {
        while (true)
        {
          if (!Function.Call<bool>(Hash._0x4F5070AA58F69279, (InputArgument) num3) && num1 < 500)
          {
            ++num1;
            num3 = Function.Call<int>(Hash._0x22D7275A79FE8215, (InputArgument) desiredPos.X, (InputArgument) desiredPos.Y, (InputArgument) desiredPos.Z, (InputArgument) num1, (InputArgument) num2, (InputArgument) 300f, (InputArgument) 300f);
          }
          else
            break;
        }
      }
      Function.Call(Hash._0x703123E5E7D429C2, (InputArgument) num3, (InputArgument) outputArgument);
      Vector3 position = outputArgument.GetResult<Vector3>();
      if (sidewalk)
        position = World.GetNextPositionOnSidewalk(position);
      return position;
    }

    public void CreateSmoke(Vector3 X)
    {
      Vector3 vector3 = X;
      for (int index = 0; index < 100; ++index)
      {
        Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_oddjobtraffickingair");
        Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_oddjobtraffickingair");
      }
      X = new Vector3(vector3.X, vector3.Y, World.GetGroundHeight(new Vector3(vector3.X, vector3.Y, vector3.Z + 500f)));
      Prop prop = World.CreateProp(this.RequestModel("prop_flare_01b"), X, false, false);
      this.SupplyMissionProps.Add(prop);
      int num = Function.Call<int>(Hash._0xE184F4F0DC5910E7, (InputArgument) "scr_crate_drop_flare", (InputArgument) X.X, (InputArgument) X.Y, (InputArgument) X.Z, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 5f, (InputArgument) false, (InputArgument) false, (InputArgument) false, (InputArgument) false);
      this.SetRange(num, 100000f);
      this.SetColor(num, (float) byte.MaxValue, 0.0f, 0.0f, true);
      this.SmokeParticles.Add(num);
      this.SmokePropaParticles.Add(new ExecutiveTower.Flare(prop, num, true));
    }

    private void SetColor(int particle, float r, float g, float b, bool p1) => Function.Call(Hash._0x7F8F65877F88783B, (InputArgument) particle, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) p1);

    private void SetRange(int handle, float range) => Function.Call(Hash._0xDCB194B85EF7B541, (InputArgument) handle, (InputArgument) range);

    private int GetBoneByName(Entity entity, string name) => Function.Call<int>(Hash._0xFB71170B7E76ACBA, (InputArgument) entity, (InputArgument) name);

    public void CreateSmoke_SellMission(ExecutiveTower.Flare X)
    {
      Vector3 location = X.Location;
      X.Created = true;
      for (int index = 0; index < 100; ++index)
      {
        Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_oddjobtraffickingair");
        Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_oddjobtraffickingair");
      }
      Prop prop = World.CreateProp(this.RequestModel("prop_flare_01b"), X.Location, false, false);
      X.FlareProp = prop;
      this.SupplyMissionProps.Add(prop);
      int num = Function.Call<int>(Hash._0xE184F4F0DC5910E7, (InputArgument) "scr_crate_drop_flare", (InputArgument) X.Location.X, (InputArgument) X.Location.Y, (InputArgument) X.Location.Z, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 5f, (InputArgument) false, (InputArgument) false, (InputArgument) false, (InputArgument) false);
      this.SetRange(num, 100000f);
      this.SetColor(num, (float) byte.MaxValue, 0.0f, 0.0f, true);
      X.FlareID_1 = num;
      this.SmokeParticles.Add(num);
    }

    private float progresswidth(float percent) => 0.08f * percent;

    private float progressxcoord(float percent) => 0.9f + 0.04f * percent;

    private void drawSprite2(
      string textureDict,
      string textureName,
      float screenX,
      float screenY,
      float width,
      float height,
      int r,
      int g,
      int b,
      int alpha)
    {
      Function.Call(Hash._0xDFA2EF8E04127DD5, (InputArgument) textureDict, (InputArgument) 0);
      if (!Function.Call<bool>(Hash._0x0145F696AAAAD2E4, (InputArgument) textureDict))
        return;
      Function.Call(Hash._0xE7FFAE5EBF23D890, (InputArgument) textureDict, (InputArgument) textureName, (InputArgument) screenX, (InputArgument) screenY, (InputArgument) width, (InputArgument) height, (InputArgument) 0, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) alpha, (InputArgument) 0);
    }

    private void drawText(string text, float x, float y, float scale, int r, int g, int b)
    {
      Function.Call(Hash._0x25FBB336DF1804CB, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0xBE6B23FFA53FB442, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) (int) byte.MaxValue);
      Function.Call(Hash._0x07C837F9A01C34C9, (InputArgument) 0.0f, (InputArgument) scale);
      Function.Call(Hash._0xCD015E5BB0D96A57, (InputArgument) x, (InputArgument) y, (InputArgument) 0.1);
    }

    private void Setup()
    {
      ExecutiveTower.modMenuPool_Garages = new MenuPool();
      ExecutiveTower.mainMenu_Garages = new UIMenu("Interior Options", "Select an Option");
      this.GUIMenus.Add(ExecutiveTower.mainMenu_Garages);
      ExecutiveTower.modMenuPool_Garages.Add(ExecutiveTower.mainMenu_Garages);
      this.InteriorOptions_Garages = ExecutiveTower.modMenuPool_Garages.AddSubMenu(ExecutiveTower.mainMenu_Garages, "Interior Options");
      this.GUIMenus.Add(this.InteriorOptions_Garages);
      this.SetupInterior();
      this.DisableGarageA();
      this.DisableGarageB();
      this.DisableGarageC();
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_c");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_a");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_b");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_c");
      Ped character = Game.Player.Character;
      Prop[] nearbyProps = World.GetNearbyProps(new Vector3(-577.5f, 40.1f, 92.2f), 3f);
      int index1 = 0;
      for (int index2 = nearbyProps.Length - 1; index1 <= index2; ++index1)
      {
        if (!ExecutiveTower.TVOn && (Entity) character.CurrentVehicle == (Entity) null && ExecutiveTower.TVModels.Contains(nearbyProps[index1].Model) && (double) character.Position.DistanceTo(nearbyProps[index1].Position) <= 2.0)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to turn on TV");
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.TV = nearbyProps[index1];
            Function.Call(Hash._0x845BAD77CC770633, (InputArgument) this.TV);
            if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "tvscreen"))
              Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "tvscreen", (InputArgument) false);
            if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "ex_tvscreen"))
              Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "ex_tvscreen", (InputArgument) false);
            if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) this.TV.Model))
            {
              Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) this.TV.Model);
              ExecutiveTower.rendertargetid = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "tvscreen");
              ExecutiveTower.ex_rendertargetid = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "ex_tvscreen");
            }
            ExecutiveTower.TV_Channel = new System.Random().Next(2);
            Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) ExecutiveTower.TV_Channel);
            Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) ExecutiveTower.TV_Volume);
            ExecutiveTower.TVOn = true;
          }
        }
        else if (ExecutiveTower.TVOn && (Entity) character.CurrentVehicle == (Entity) null && ExecutiveTower.TVModels.Contains(nearbyProps[index1].Model) && (double) character.Position.DistanceTo(nearbyProps[index1].Position) <= 2.0)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to turn off TV ~INPUT_COVER~ Change Channel");
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            Script.Wait(1000);
            if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "tvscreen"))
              Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "tvscreen");
            if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "ex_tvscreen"))
              Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "ex_tvscreen");
            ExecutiveTower.TVOn = false;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.VehicleRadioWheel))
          {
            switch (ExecutiveTower.TV_Channel)
            {
              case 0:
                ExecutiveTower.TV_Channel = 1;
                break;
              case 1:
                ExecutiveTower.TV_Channel = 0;
                break;
            }
            Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) ExecutiveTower.TV_Channel);
            ExecutiveTower.TVOn = true;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.Jump) && !ExecutiveTower.SubtitleOn)
          {
            Function.Call(Hash._0x873FA65C778AD970, (InputArgument) true);
            ExecutiveTower.SubtitleOn = true;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.Jump) && ExecutiveTower.SubtitleOn)
          {
            Function.Call(Hash._0x873FA65C778AD970, (InputArgument) false);
            ExecutiveTower.SubtitleOn = false;
          }
        }
      }
      this.IsSittinginCeoSeat = false;
      this.waittime = this.Allstocks.waittime;
      this.SetupMarker();
      this.modMenuPool = new MenuPool();
      this.mainMenu = new UIMenu("Executive Business", "Select an Option");
      this.GUIMenus.Add(this.mainMenu);
      this.modMenuPool.Add(this.mainMenu);
      UIMenuItem OpenGUI = new UIMenuItem("                 Open Secroserv Panel          ");
      this.mainMenu.AddItem(OpenGUI);
      this.mainMenu.AddItem(new UIMenuItem("                                        "));
      this.mainMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != OpenGUI)
          return;
        this.SS_Warehouse1Stock = this.CargoWarehouseScript.GetCrateCountByID(1);
        this.SS_Warehouse2Stock = this.CargoWarehouseScript.GetCrateCountByID(2);
        this.SS_Warehouse3Stock = this.CargoWarehouseScript.GetCrateCountByID(3);
        this.SS_Warehouse4Stock = this.CargoWarehouseScript.GetCrateCountByID(4);
        this.SS_Warehouse5Stock = this.CargoWarehouseScript.GetCrateCountByID(5);
        this.Config.SetValue<int>("CargoWarehouses", "Warehouse1Stock", this.SS_Warehouse1Stock);
        this.Config.SetValue<int>("CargoWarehouses", "Warehouse2Stock", this.SS_Warehouse2Stock);
        this.Config.SetValue<int>("CargoWarehouses", "Warehouse3Stock", this.SS_Warehouse3Stock);
        this.Config.SetValue<int>("CargoWarehouses", "Warehouse4Stock", this.SS_Warehouse4Stock);
        this.Config.SetValue<int>("CargoWarehouses", "Warehouse5Stock", this.SS_Warehouse5Stock);
        this.Config.Save();
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.Screen = 3f;
        this.frame = 0;
        int num = new System.Random().Next(0, 1000);
        if (num >= 0 && num < 100)
        {
          this.CrateType = 1;
          this.CrateTypeString = "Animal Materials";
        }
        if (num >= 100 && num < 200)
        {
          this.CrateType = 2;
          this.CrateTypeString = "Art & Antiques";
        }
        if (num >= 200 && num < 300)
        {
          this.CrateType = 3;
          this.CrateTypeString = "Bullion";
        }
        if (num >= 300 && num < 400)
        {
          this.CrateType = 4;
          this.CrateTypeString = "Counterfeit Goods";
        }
        if (num >= 400 && num < 500)
        {
          this.CrateType = 5;
          this.CrateTypeString = "Electronic Goods";
        }
        if (num >= 500 && num < 600)
        {
          this.CrateType = 6;
          this.CrateTypeString = "Gemstones";
        }
        if (num >= 600 && num < 700)
        {
          this.CrateType = 7;
          this.CrateTypeString = "Jewelry";
        }
        if (num >= 700 && num < 800)
        {
          this.CrateType = 8;
          this.CrateTypeString = "Medical Supplies";
        }
        if (num >= 800 && num < 900)
        {
          this.CrateType = 9;
          this.CrateTypeString = "Narcotics";
        }
        if (num >= 900 && num < 1000)
        {
          this.CrateType = 10;
          this.CrateTypeString = "Tobacco & Alcohol";
        }
        if (num >= 1000 && num < 1000)
        {
          this.CrateType = 11;
          this.CrateTypeString = "Weapons & Ammo";
        }
        this.SecuroservCargoOn = true;
        this.GUIOn = true;
        this.SS_VehiclesTotalCurrentValue = this.VehicleWarehouseScript.GetWarehouseValue();
        UI.Notify("Open GUI");
      });
      this.OrganizationOptions = this.modMenuPool.AddSubMenu(this.mainMenu, "Organization Options");
      this.GUIMenus.Add(this.OrganizationOptions);
      this.methgarage = this.modMenuPool.AddSubMenu(this.mainMenu, "Purchase Options");
      this.GUIMenus.Add(this.methgarage);
      this.ProductStock = this.modMenuPool.AddSubMenu(this.mainMenu, "Product Options");
      this.GUIMenus.Add(this.ProductStock);
      this.Sourcingmenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Source a vehicle (Old)");
      this.GUIMenus.Add(this.Sourcingmenu);
      this.Sourcingmenu2 = this.modMenuPool.AddSubMenu(this.mainMenu, "Source a vehicle (Expanded)");
      this.GUIMenus.Add(this.Sourcingmenu2);
      this.SupplyRunsmenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Supply Runs (Missions)");
      this.GUIMenus.Add(this.SupplyRunsmenu);
      this.AssetRecoveryMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Asset Recovery (Missions)");
      this.GUIMenus.Add(this.AssetRecoveryMenu);
      this.SpecialMissions = this.modMenuPool.AddSubMenu(this.mainMenu, "Special Missions (Missions)");
      this.GUIMenus.Add(this.SpecialMissions);
      this.ModShopMenuMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Get Vehicle to Modify");
      this.GUIMenus.Add(this.ModShopMenuMenu);
      this.Garage = this.modMenuPool.AddSubMenu(this.mainMenu, "Garage");
      this.GUIMenus.Add(this.Garage);
      this.Setupbuisness();
      this.SetupGarage();
      this.SetupProduct();
      this.SetupSourcing();
      this.SetupSourcing2();
      this.SetupOrganization();
      this.Supplyruns();
      this.SetupAssetRecovery();
      this.SetupSpecialMissions();
      this.DropPoint.Add(new Vector3(966f, -126f, 74f));
      this.DropPoint.Add(new Vector3(200f, 383f, 107f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-1539f, -76f, 53f));
      this.DropPoint.Add(new Vector3(-2077f, -313f, 12f));
      this.DropPoint.Add(new Vector3(-1451f, -364f, 43f));
      this.DropPoint.Add(new Vector3(-587f, -1112f, 22f));
      this.DropPoint.Add(new Vector3(102.6f, 6634.6f, 30f));
      this.DropPoint.Add(new Vector3(-172.8f, 6452.8f, 29f));
      this.DropPoint.Add(new Vector3(-265.1f, 6335.5f, 30f));
      this.DropPoint.Add(new Vector3(-697.3f, 5772.9f, 15f));
      this.DropPoint.Add(new Vector3(-575.2f, 5335.6f, 68f));
      this.DropPoint.Add(new Vector3(35.9f, 6284.5f, 29f));
      this.DropPoint.Add(new Vector3(1724f, 6399.4f, 31f));
      this.DropPoint.Add(new Vector3(2467.7f, 4961.9f, 43f));
      this.DropPoint.Add(new Vector3(2104.9f, 4767.5f, 39f));
      this.DropPoint.Add(new Vector3(1501.6f, 3763.7f, 31f));
      this.DropPoint.Add(new Vector3(1374.5f, 3602.9f, 33f));
      this.DropPoint.Add(new Vector3(1689.4f, 3310.9f, 39f));
      this.DropPoint.Add(new Vector3(1989f, 3032f, 46f));
      this.DropPoint.Add(new Vector3(2320.1f, 2499.5f, 45f));
      this.DropPoint.Add(new Vector3(2365.2f, 2644.9f, 45f));
      this.DropPoint.Add(new Vector3(2411.1f, 3058.2f, 46f));
      this.DropPoint.Add(new Vector3(2812.8f, 1589.4f, 22f));
      this.DropPoint.Add(new Vector3(-1567.1f, 2770.7f, 15f));
      this.DropPoint.Add(new Vector3(-1911.4f, 2061f, 138f));
      this.DropPoint.Add(new Vector3(-310.8f, 2739.6f, 65f));
      this.DropPoint.Add(new Vector3(-288.5f, 2568.7f, 70f));
      this.DropPoint.Add(new Vector3(-85.6f, 2805.1f, 51f));
      this.DropPoint.Add(new Vector3(42.2f, 2786f, 56f));
      this.DropPoint.Add(new Vector3(216.7f, 2462.3f, 54f));
      this.GunmodMenuPool = new MenuPool();
      this.GunmainMenu = new UIMenu("Executive Business", "Select an Option");
      this.GUIMenus.Add(this.GunmainMenu);
      this.GunmodMenuPool.Add(this.GunmainMenu);
      this.weaponsMenu = this.GunmodMenuPool.AddSubMenu(this.GunmainMenu, "Weapons");
      this.GUIMenus.Add(this.weaponsMenu);
      this.SetupWeapons();
      this.MoneymodMenuPool = new MenuPool();
      this.MoneymainMenu = new UIMenu("Executive Business", "Select an Option");
      this.GUIMenus.Add(this.MoneymainMenu);
      this.MoneymodMenuPool.Add(this.MoneymainMenu);
      this.MoneyMenu = this.MoneymodMenuPool.AddSubMenu(this.MoneymainMenu, "Money Options");
      this.GUIMenus.Add(this.MoneyMenu);
      this.SetupMoneyMenu();
      this.SetupMod = true;
      this.EnterMarkerAMazebank = new Vector3(-75.52f, -826.96f, 243.286f);
      this.EnterMarkerBMazebank = new Vector3(-76.52f, -830.295f, 243.286f);
      this.EnterMarkerCMazebank = new Vector3(-78.9021f, -829.46f, 243.286f);
      this.ExitMarkerMazeBank = new Vector3(-91.54f, -821.351f, 222f);
      this.EnterMarkerAArcaduis = new Vector3(-141.682f, -620.7f, 168f);
      this.EnterMarkerBArcaduis = new Vector3(-142.028f, -617.47f, 168.82f);
      this.EnterMarkerCArcaduis = new Vector3(-139.682f, -617.782f, 168.82f);
      this.ExitMarkerArcadius = new Vector3(-198.649f, -580.765f, 136f);
      this.EnterMarkerALombok = new Vector3(-1579.99f, -564.723f, 108f);
      this.EnterMarkerBLombok = new Vector3(-1581.77f, -562.214f, 108.214f);
      this.EnterMarkerCLombok = new Vector3(-1579.76f, -561.138f, 108.523f);
      this.ExitMarkerLombok = new Vector3(-1586.37f, -561.844f, 86f);
      this.EnterMarkerAMazebankWest = new Vector3(-1392.3f, -480.558f, 72f);
      this.EnterMarkerBMazebankWest = new Vector3(-1395.77f, -481.078f, 72f);
      this.EnterMarkerCMazebankWest = new Vector3(-1396.13f, -478.686f, 72f);
      this.ExitMarkerMazeBankWest = new Vector3(-1395.37f, -480.7f, 57f);
      this.EXmodMenuPool = new MenuPool();
      this.EXmainMenu = new UIMenu("Executive Business", "Select an Option");
      this.GUIMenus.Add(this.EXmainMenu);
      this.EXmodMenuPool.Add(this.EXmainMenu);
      this.GarageMenu = this.EXmodMenuPool.AddSubMenu(this.EXmainMenu, "Garage Options");
      this.GUIMenus.Add(this.GarageMenu);
      this.modMenuPool2 = new MenuPool();
      this.mainMenu2 = new UIMenu("Remove a Vehicle", "Select an Option");
      this.GUIMenus.Add(this.mainMenu2);
      this.modMenuPool2.Add(this.mainMenu2);
      this.RemoveMenu = this.modMenuPool2.AddSubMenu(this.mainMenu2, "Remove A Vehicle");
      this.GUIMenus.Add(this.RemoveMenu);
      this.EXSetupGarage();
      this.RemoveCar();
      this.ModShopMenu();
      for (int index2 = 0; index2 < this.GUIMenus.Count<UIMenu>(); ++index2)
        this.SetBanner(this.GUIMenus[index2]);
    }

    public void Check2()
    {
      this.Read = false;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankGunLocker) < 40.0 && !this.Read)
      {
        this.Read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadiusGunLocker) < 40.0 && !this.Read)
      {
        this.Read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankWestGunLocker) < 40.0 && !this.Read)
      {
        this.Read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.LombokGunLocker) >= 40.0 || this.Read)
        return;
      this.Read = true;
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
    }

    public void SetLivery(string Weapon, string Component) => Function.Call((Hash) 11521724316029606125, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component), (InputArgument) this.LiveryColor);

    public int GetLivery(string Weapon, string Component) => Function.Call<int>((Hash) 17340547693307858733, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component));

    public bool CheckWeaponCamo(Weapon Weapon)
    {
      bool flag = false;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        flag = true;
      return flag;
    }

    public void SetWeaponLivery(Weapon Weapon)
    {
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (!Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        return;
      this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
    }

    public int GetWeaponLivery(Weapon Weapon)
    {
      int num = 0;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      int livery;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
      return num;
    }

    private void SetupWeapons()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Classic Black");
      items1.Add((object) "Classic Gray");
      items1.Add((object) "Classic Two-Tone");
      items1.Add((object) "Classic White");
      items1.Add((object) "Classic Beige");
      items1.Add((object) "Classic Green");
      items1.Add((object) "Classic Blue");
      items1.Add((object) "Classic Earth");
      items1.Add((object) "Classic Brown & Black");
      items1.Add((object) "Red Contrast");
      items1.Add((object) "Blue Contrast");
      items1.Add((object) "Yellow Contrast");
      items1.Add((object) "Orange Contrast");
      items1.Add((object) "Bold Pink");
      items1.Add((object) "Bold Purple & Yellow");
      items1.Add((object) "Bold Orange");
      items1.Add((object) "Bold Green & Purple");
      items1.Add((object) "Bold Red & Black");
      items1.Add((object) "Bold Green & Black");
      items1.Add((object) "Bold Cyan & Black");
      items1.Add((object) "Bold Yellow & Black");
      items1.Add((object) "Bold Red & White");
      items1.Add((object) "Bold Blue & White");
      items1.Add((object) "Metallic Gold");
      items1.Add((object) "Metallic Platinum");
      items1.Add((object) "Metallic Gray & Lilac");
      items1.Add((object) "Metallic Purple & Lime");
      items1.Add((object) "Metallic Red");
      items1.Add((object) "Metallic Green");
      items1.Add((object) "Metallic Blue");
      items1.Add((object) "Metallic White & Aqua");
      items1.Add((object) "Metallic Red & Yellow");
      List<object> items2 = new List<object>();
      items2.Add((object) "Grey");
      items2.Add((object) "Dark Grey");
      items2.Add((object) "Black");
      items2.Add((object) "White");
      items2.Add((object) "Blue ");
      items2.Add((object) "Cyan");
      items2.Add((object) "Aqua");
      items2.Add((object) "Cool Blue");
      items2.Add((object) "Dark Blue");
      items2.Add((object) "Royal Blue");
      items2.Add((object) "Plum");
      items2.Add((object) "Dark Purple");
      items2.Add((object) "Purple");
      items2.Add((object) "Red");
      items2.Add((object) "Wine Red");
      items2.Add((object) "Magenta");
      items2.Add((object) "Pink ");
      items2.Add((object) "Salmon");
      items2.Add((object) "Hot Pink");
      items2.Add((object) "Rust Orange ");
      items2.Add((object) "Brown");
      items2.Add((object) "Earth");
      items2.Add((object) "Orange");
      items2.Add((object) "Light Orange");
      items2.Add((object) "Dark Yellow");
      items2.Add((object) "Yellow");
      items2.Add((object) "Light Brown");
      items2.Add((object) "Lime Green");
      items2.Add((object) "Olive");
      items2.Add((object) "Moss");
      items2.Add((object) "Turquoise");
      items2.Add((object) "Dark Green");
      float CPrice = 34000f;
      List<object> Mk2Weapons = new List<object>();
      Mk2Weapons.Add((object) WeaponHash.AssaultrifleMk2);
      Mk2Weapons.Add((object) WeaponHash.BullpupRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CarbineRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CombatMGMk2);
      Mk2Weapons.Add((object) WeaponHash.HeavySniperMk2);
      Mk2Weapons.Add((object) WeaponHash.MarksmanRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.PistolMk2);
      Mk2Weapons.Add((object) WeaponHash.PumpShotgunMk2);
      Mk2Weapons.Add((object) WeaponHash.RevolverMk2);
      Mk2Weapons.Add((object) WeaponHash.SMGMk2);
      Mk2Weapons.Add((object) WeaponHash.SNSPistolMk2);
      Mk2Weapons.Add((object) WeaponHash.SpecialCarbineMk2);
      List<object> Components = new List<object>();
      Components.Add((object) WeaponComponent.AssaultRifleClip01);
      Components.Add((object) WeaponComponent.AssaultRifleClip02);
      UIMenu uiMenu1 = this.GunmodMenuPool.AddSubMenu(this.weaponsMenu, "Mk2 Weapons (Advanced)");
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem W = new UIMenuListItem("Weapon : ", Mk2Weapons, 0);
      uiMenu1.AddItem((UIMenuItem) W);
      UIMenuListItem C = new UIMenuListItem("Component  : ", Components, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      UIMenuItem Enable = new UIMenuItem("Enable Component : $" + CPrice.ToString("N"));
      uiMenu1.AddItem(Enable);
      UIMenuItem DIsable = new UIMenuItem("Disable Component");
      uiMenu1.AddItem(DIsable);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem1);
      UIMenuListItem WT = new UIMenuListItem("Tint ", items1, 0);
      uiMenu1.AddItem((UIMenuItem) WT);
      UIMenuItem getTintAV = new UIMenuItem("Buy Tint: $10,000");
      uiMenu1.AddItem(getTintAV);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem2);
      UIMenuListItem WT2 = new UIMenuListItem("Livery Tint ", items2, 0);
      uiMenu1.AddItem((UIMenuItem) WT2);
      UIMenuItem getTintAV2 = new UIMenuItem("Buy Livery Tint: $10,000");
      uiMenu1.AddItem(getTintAV2);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == W)
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p1 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__0 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__0, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
          if (target1((CallSite) p1, obj1))
          {
            Components.Clear();
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__2 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__2, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            foreach (WeaponComponent weaponComponent in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) weaponComponent.GetHashCode()))
                  Components.Add((object) weaponComponent);
              }
              catch
              {
              }
            }
          }
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target2 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__4.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p4 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__4;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__3.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__3, Components[C.Index]);
          string str = target2((CallSite) p4, obj2);
          if (str.Contains("Muzzle"))
          {
            CPrice = 45700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
        }
        if (item != C)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p6 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__5.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__5, Components[C.Index]);
        string str1 = target((CallSite) p6, obj);
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Sights"))
        {
          CPrice = 24700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Tracer"))
        {
          CPrice = 42700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("FMJ"))
        {
          CPrice = 73000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ArmourPiercing"))
        {
          CPrice = 63000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Incediary"))
        {
          CPrice = 49000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ClipExplosive"))
        {
          CPrice = 115450f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Grip"))
        {
          CPrice = 14080f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Supp"))
        {
          CPrice = 40250f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Clip02"))
        {
          CPrice = 60000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo01"))
        {
          CPrice = 40000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo02"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo03"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo04"))
        {
          CPrice = 45500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo05"))
        {
          CPrice = 49500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo06"))
        {
          CPrice = 75500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo07"))
        {
          CPrice = 51500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo08"))
        {
          CPrice = 53500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo09"))
        {
          CPrice = 55500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo10"))
        {
          CPrice = 60500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (!str1.Contains("Independence"))
          return;
        CPrice = 100500f;
        Enable.Text = "Enable Component : $" + CPrice.ToString("N");
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTintAV2)
        {
          this.LiveryColor = WT2.Index;
          if (Game.Player.Character.Weapons.Current != null)
            this.SetWeaponLivery(Game.Player.Character.Weapons.Current);
        }
        if (item == getTintAV)
        {
          try
          {
            int index1 = WT.Index;
            Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.Weapons.Current.GetHashCode(), (InputArgument) index1);
            Game.Player.Character.Weapons.Current.Tint = (WeaponTint) index1;
            Game.Player.Money -= 10000;
          }
          catch (Exception ex)
          {
            UI.Notify("Error");
          }
        }
        if (item == Enable)
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p8 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__7.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__7, Components[C.Index]);
          string str = target1((CallSite) p8, obj1);
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if ((double) Game.Player.Money >= (double) CPrice)
          {
            Game.Player.Money -= (int) CPrice;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__10.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool>> p10 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__10;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__9 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj2 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__9.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__9, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
            if (target2((CallSite) p10, obj2))
            {
              if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) C.IndexToItem(C.Index).GetHashCode()))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__11 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__11 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__11.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__11, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__12 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__12 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__12.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__12, Game.Player.Character.Weapons.Current, Components[C.Index], true);
              }
            }
          }
        }
        if (item != DIsable)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__14.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p14 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__14;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__13 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__13.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__13, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
        if (!target3((CallSite) p14, obj3))
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__19 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__19.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p19 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__19;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool, object> target5 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__18.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool, object>> p18 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__18;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__17 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__17 = CallSite<Func<CallSite, System.Type, Hash, object, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Call", (IEnumerable<System.Type>) new System.Type[1]
          {
            typeof (bool)
          }, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, System.Type, Hash, object, object, object> target6 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__17.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, System.Type, Hash, object, object, object>> p17 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__17;
        System.Type type = typeof (Function);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__15 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__15.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__15, Mk2Weapons[W.Index]);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__16.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__16, Components[C.Index]);
        object obj6 = target6((CallSite) p17, type, Hash._0x5CEE3DF569CECAB0, obj4, obj5);
        object obj7 = target5((CallSite) p18, obj6, true);
        if (!target4((CallSite) p19, obj7))
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__20 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__20 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__20.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__20, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__21 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__21 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__21.Target((CallSite) ExecutiveTower.\u003C\u003Eo__764.\u003C\u003Ep__21, Game.Player.Character.Weapons.Current, Components[C.Index], false);
      });
      UIMenu uiMenu2 = this.GunmodMenuPool.AddSubMenu(this.weaponsMenu, "Scifi Weapons");
      this.GUIMenus.Add(uiMenu2);
      UIMenu menu = this.GunmodMenuPool.AddSubMenu(this.weaponsMenu, "Mk2 Weapons");
      this.GUIMenus.Add(menu);
      UIMenu uiMenu3 = this.GunmodMenuPool.AddSubMenu(this.weaponsMenu, "Normal Weapons");
      this.GUIMenus.Add(uiMenu3);
      List<object> items3 = new List<object>();
      for (int index = 0; index < this.Tintscount; ++index)
        items3.Add((object) index);
      this.MK2Pumpshotgun = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Pump Shotgun");
      this.GUIMenus.Add(this.MK2Pumpshotgun);
      this.MK2SNSPistol = this.GunmodMenuPool.AddSubMenu(menu, "MK2 SNS Pistol");
      this.GUIMenus.Add(this.MK2SNSPistol);
      this.MK2Revolver = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Revolver");
      this.GUIMenus.Add(this.MK2Revolver);
      this.Mk2SpecialCarbine = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Special Carbine");
      this.GUIMenus.Add(this.Mk2SpecialCarbine);
      this.MK2Bullpup = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Bullpup Rifle");
      this.GUIMenus.Add(this.MK2Bullpup);
      this.MK2MarksmanRifle = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Marksmans Rifle");
      this.GUIMenus.Add(this.MK2MarksmanRifle);
      this.MK2Pistol = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Pistol");
      this.GUIMenus.Add(this.MK2Pistol);
      this.MK2SMG = this.GunmodMenuPool.AddSubMenu(menu, "MK2 SMG");
      this.GUIMenus.Add(this.MK2SMG);
      this.MK2LMG = this.GunmodMenuPool.AddSubMenu(menu, "MK2 LMG");
      this.GUIMenus.Add(this.MK2LMG);
      this.MK2Carbine = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Carbine");
      this.GUIMenus.Add(this.MK2Carbine);
      this.MK2AssaultRifle = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Assault Rifle");
      this.GUIMenus.Add(this.MK2AssaultRifle);
      this.MK2Sniper = this.GunmodMenuPool.AddSubMenu(menu, "MK2 Sniper");
      this.GUIMenus.Add(this.MK2Sniper);
      UIMenuItem mk2ShotgunP = new UIMenuItem("MK2 Pump Shotgun: $75,000");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunP);
      UIMenuItem mk2Shotgunclip = new UIMenuItem("Normal Shells : $0");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip);
      UIMenuItem mk2Shotgunclip1 = new UIMenuItem("Dragon's Breath Shells : $65,200");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip1);
      UIMenuItem mk2Shotgunclip3 = new UIMenuItem("Flechette Shells: $75,140");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip3);
      UIMenuItem mk2Shotgunclip2 = new UIMenuItem("Steel Buckshot Shells: $96,645");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip2);
      UIMenuItem mk2Shotgunclip4 = new UIMenuItem("Explosive Shells: $145,850");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip4);
      UIMenuItem mk2Shotgunsights = new UIMenuItem("Holographic Sight: $29,260");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights);
      UIMenuItem mk2Shotgunsights2 = new UIMenuItem("Small Scope: $39,920");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights2);
      UIMenuItem mk2Shotgunsights3 = new UIMenuItem("Medium Scope: $50,785");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights3);
      UIMenuItem mk2Shotgunflashlight = new UIMenuItem("Flashlight: $10,500");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunflashlight);
      UIMenuItem mk2ShotgunSuppressor = new UIMenuItem("Suppressor: $45,860");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunSuppressor);
      UIMenuItem mk2Shotgunmuzzle = new UIMenuItem("Muzzle Brake: $37,650");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunmuzzle);
      UIMenuListItem list1 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Pumpshotgun.AddItem((UIMenuItem) list1);
      UIMenuItem getTint1 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pumpshotgun.AddItem(getTint1);
      UIMenuItem mk2Snspistol = new UIMenuItem("MK2 SNS Pistol: $35,000");
      this.MK2SNSPistol.AddItem(mk2Snspistol);
      UIMenuItem mk2Snspistolclipn = new UIMenuItem("Default Clip: $8,000");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipn);
      UIMenuItem mk2Snspistolclipe = new UIMenuItem("Extended Clip: $18,300");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipe);
      UIMenuItem mk2Snspistolclip1 = new UIMenuItem("Tracer Rounds: $34,320");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip1);
      UIMenuItem mk2Snspistolclip2 = new UIMenuItem("Incendiary Rounds: $41,700");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip2);
      UIMenuItem mk2Snspistolclip3 = new UIMenuItem("Hollow Point Rounds : $47,580");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip3);
      UIMenuItem mk2Snspistolclip4 = new UIMenuItem("Full Metal Jacket Rounds: $62,400");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip4);
      UIMenuItem mk2Snspistolflash = new UIMenuItem("Flashlight: $7,500");
      this.MK2SNSPistol.AddItem(mk2Snspistolflash);
      UIMenuItem mk2Snspistolscope1 = new UIMenuItem("Mounted Scope: $16,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolscope1);
      UIMenuItem mk2Snspistolsuppressor = new UIMenuItem("Suppressor: $28,750");
      this.MK2SNSPistol.AddItem(mk2Snspistolsuppressor);
      UIMenuItem mk2Snspistolcomp = new UIMenuItem("Compensator: $21,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolcomp);
      UIMenuListItem list2 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2SNSPistol.AddItem((UIMenuItem) list2);
      UIMenuItem getTint2 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SNSPistol.AddItem(getTint2);
      UIMenuItem mk2Revolver = new UIMenuItem("MK2 Revolver: $35,000");
      this.MK2Revolver.AddItem(mk2Revolver);
      UIMenuItem mk2Revolverclip = new UIMenuItem("Normal Rounds: $0");
      this.MK2Revolver.AddItem(mk2Revolverclip);
      UIMenuItem mk2Revolverclip1 = new UIMenuItem("Tracer Rounds: $31,460");
      this.MK2Revolver.AddItem(mk2Revolverclip1);
      UIMenuItem mk2Revolverclip2 = new UIMenuItem("Incendiary Rounds: $38,225");
      this.MK2Revolver.AddItem(mk2Revolverclip2);
      UIMenuItem mk2Revolverclip3 = new UIMenuItem("Hollow Point Rounds: $43,615");
      this.MK2Revolver.AddItem(mk2Revolverclip3);
      UIMenuItem mk2Revolverclip4 = new UIMenuItem("Full Metal Jacket Rounds: $57,200");
      this.MK2Revolver.AddItem(mk2Revolverclip4);
      UIMenuItem mk2Revolversights = new UIMenuItem("Holographic Sight: $16,250");
      this.MK2Revolver.AddItem(mk2Revolversights);
      UIMenuItem mk2Revolversights1 = new UIMenuItem("Small Scope: $25,450");
      this.MK2Revolver.AddItem(mk2Revolversights1);
      UIMenuItem mk2Revolverflashlight = new UIMenuItem("Flashlight: $7,500");
      this.MK2Revolver.AddItem(mk2Revolverflashlight);
      UIMenuItem mk2RevolverComp = new UIMenuItem("Compensator: $21,250");
      this.MK2Revolver.AddItem(mk2RevolverComp);
      UIMenuListItem list3 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Revolver.AddItem((UIMenuItem) list3);
      UIMenuItem getTint3 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Revolver.AddItem(getTint3);
      UIMenuItem mk2SCarbine = new UIMenuItem("MK2 Special Carbine: $65,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbine);
      UIMenuItem mk2SCarbineclip = new UIMenuItem("Default Clip: $5,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip);
      UIMenuItem mk2SCarbineclip1 = new UIMenuItem("Extended Clip: $26,450");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip1);
      UIMenuItem mk2SCarbineclip2 = new UIMenuItem("Tracer Rounds: $61,465");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip2);
      UIMenuItem mk2SCarbineclip3 = new UIMenuItem("Incendiary Rounds : $70,950");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip3);
      UIMenuItem mk2SCarbineclip4 = new UIMenuItem("Armor Piercing Rounds : $90,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip4);
      UIMenuItem mk2SCarbineclip5 = new UIMenuItem("Full Metal Jacket Rounds : $104,775");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip5);
      UIMenuItem mk2SCarbineflash = new UIMenuItem("Flashlight: $10,500");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineflash);
      UIMenuItem mk2SCarbinesight1 = new UIMenuItem("Holographic Sight: $19,600");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight1);
      UIMenuItem mk2SCarbinesight2 = new UIMenuItem("Small Scope: $23,730");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight2);
      UIMenuItem mk2SCarbinesight3 = new UIMenuItem("Large Scope: $34,020");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight3);
      UIMenuItem mk2SCarbinesupressor = new UIMenuItem("Suppressor : $40,250");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesupressor);
      UIMenuItem mk2SCarbinemuzzle = new UIMenuItem("Muzzle : $29,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinemuzzle);
      UIMenuItem mk2SCarbinegrip = new UIMenuItem("Grip : $14,080");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinegrip);
      UIMenuListItem list4 = new UIMenuListItem("Tint ", items3, 0);
      this.Mk2SpecialCarbine.AddItem((UIMenuItem) list4);
      UIMenuItem getTint4 = new UIMenuItem("Buy Tint: $10,000");
      this.Mk2SpecialCarbine.AddItem(getTint4);
      UIMenuItem mk2Bullpup = new UIMenuItem("MK2 Bullpup Rifle: $60,000");
      this.MK2Bullpup.AddItem(mk2Bullpup);
      UIMenuItem mk2Bullpupclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2Bullpup.AddItem(mk2Bullpupclip1);
      UIMenuItem mk2Bullpupclip2 = new UIMenuItem("Extended Clip : $22,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip2);
      UIMenuItem mk2Bullpupclip3 = new UIMenuItem("Tracer Rounds : $44,350");
      this.MK2Bullpup.AddItem(mk2Bullpupclip3);
      UIMenuItem mk2Bullpupclip4 = new UIMenuItem("Incendiary Rounds : $52,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip4);
      UIMenuItem mk2Bullpupclip5 = new UIMenuItem("Armor Piercing Rounds  : $87,320");
      this.MK2Bullpup.AddItem(mk2Bullpupclip5);
      UIMenuItem mk2Bullpupclip6 = new UIMenuItem("Full Metal Jacket Rounds : $77,490");
      this.MK2Bullpup.AddItem(mk2Bullpupclip6);
      UIMenuItem mk2Bullpupflash = new UIMenuItem("Flashlight  : $10,500");
      this.MK2Bullpup.AddItem(mk2Bullpupflash);
      UIMenuItem mk2Bullpupsight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2Bullpup.AddItem(mk2Bullpupsight1);
      UIMenuItem mk2Bullpupsight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2Bullpup.AddItem(mk2Bullpupsight2);
      UIMenuItem mk2Bullpupsight3 = new UIMenuItem("Medium Scope : $34,020");
      this.MK2Bullpup.AddItem(mk2Bullpupsight3);
      UIMenuItem mk2BullpupBarrel = new UIMenuItem("Heavy Barrel : $49,000");
      this.MK2Bullpup.AddItem(mk2BullpupBarrel);
      UIMenuItem mk2BullpupGrip = new UIMenuItem("Grip : $14,080");
      this.MK2Bullpup.AddItem(mk2BullpupGrip);
      UIMenuItem mk2Bullpupmuzzle = new UIMenuItem("Muzzle  : $29,750");
      this.MK2Bullpup.AddItem(mk2Bullpupmuzzle);
      UIMenuItem mk2BullpupSuppressor = new UIMenuItem("Suppressor  : $40,250");
      this.MK2Bullpup.AddItem(mk2BullpupSuppressor);
      UIMenuListItem list5 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Bullpup.AddItem((UIMenuItem) list5);
      UIMenuItem getTint5 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Bullpup.AddItem(getTint5);
      UIMenuItem mk2marksman = new UIMenuItem("MK2 Marksman Rifle : $80,000");
      this.MK2MarksmanRifle.AddItem(mk2marksman);
      UIMenuItem mk2marksmanclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip1);
      UIMenuItem mk2marksmanclip2 = new UIMenuItem("Extended Clip : $26,850");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip2);
      UIMenuItem mk2marksmanclip3 = new UIMenuItem("Tracer Rounds : $49,775");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip3);
      UIMenuItem mk2marksmanclip4 = new UIMenuItem("Incendiary Rounds : $57,295");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip4);
      UIMenuItem mk2marksmanclip5 = new UIMenuItem("Armor Piercing Rounds  : $73,560");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip5);
      UIMenuItem mk2marksmanclip6 = new UIMenuItem("Full Metal Jacket Rounds : $85,570");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip6);
      UIMenuItem mk2marksmanflash = new UIMenuItem("Flashlight  : $11,250");
      this.MK2MarksmanRifle.AddItem(mk2marksmanflash);
      UIMenuItem mk2marksmansight1 = new UIMenuItem("Holographic Sight  : $11,485");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight1);
      UIMenuItem mk2marksmansight2 = new UIMenuItem("Large Scope  : $17,870");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight2);
      UIMenuItem mk2marksmansight3 = new UIMenuItem("Zoom Scope  : $27,150");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight3);
      UIMenuItem mk2marksmanGrip = new UIMenuItem("Grip  : $14,080");
      this.MK2MarksmanRifle.AddItem(mk2marksmanGrip);
      UIMenuItem mk2marksmanmuzzle = new UIMenuItem("Muzzle  : $44,620");
      this.MK2MarksmanRifle.AddItem(mk2marksmanmuzzle);
      UIMenuItem mk2marksmanSuppressor = new UIMenuItem("Suppressor  : $60,375");
      this.MK2MarksmanRifle.AddItem(mk2marksmanSuppressor);
      UIMenuListItem list6 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2MarksmanRifle.AddItem((UIMenuItem) list6);
      UIMenuItem getTint6 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2MarksmanRifle.AddItem(getTint6);
      UIMenuItem mk2pistol = new UIMenuItem("MK2 Pistol : $20,000");
      this.MK2Pistol.AddItem(mk2pistol);
      UIMenuItem mk2pistolClip = new UIMenuItem("Default Clip : $0");
      this.MK2Pistol.AddItem(mk2pistolClip);
      UIMenuItem mk2pistolClip1 = new UIMenuItem("Extended Clip : $15,250");
      this.MK2Pistol.AddItem(mk2pistolClip1);
      UIMenuItem mk2pistolClip2 = new UIMenuItem("Tracer Rounds : $32,850");
      this.MK2Pistol.AddItem(mk2pistolClip2);
      UIMenuItem mk2pistolClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2Pistol.AddItem(mk2pistolClip3);
      UIMenuItem mk2pistolClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2Pistol.AddItem(mk2pistolClip4);
      UIMenuItem mk2pistolClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2Pistol.AddItem(mk2pistolClip5);
      UIMenuItem mk2pistolSight1 = new UIMenuItem("Mounted Scope : $16,250");
      this.MK2Pistol.AddItem(mk2pistolSight1);
      UIMenuItem mk2pistolflash = new UIMenuItem("Flashlight : $7,500");
      this.MK2Pistol.AddItem(mk2pistolflash);
      UIMenuItem mk2pistolsupp = new UIMenuItem("Suppressor : $28,750");
      this.MK2Pistol.AddItem(mk2pistolsupp);
      UIMenuItem mk2pistolcomp = new UIMenuItem("Compensator : $21,250");
      this.MK2Pistol.AddItem(mk2pistolcomp);
      UIMenuListItem list7 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Pistol.AddItem((UIMenuItem) list7);
      UIMenuItem getTint7 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pistol.AddItem(getTint7);
      UIMenuItem mk2smg = new UIMenuItem("MK2 SMG : $25,000");
      this.MK2SMG.AddItem(mk2smg);
      UIMenuItem mk2smgclip = new UIMenuItem("Default Clip : $0");
      this.MK2SMG.AddItem(mk2smgclip);
      UIMenuItem mk2smgclip1 = new UIMenuItem("Extended Clip : $18,300");
      this.MK2SMG.AddItem(mk2smgclip1);
      UIMenuItem mk2smgClip2 = new UIMenuItem("Tracer Rounds : $28,600");
      this.MK2SMG.AddItem(mk2smgClip2);
      UIMenuItem mk2smgClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2SMG.AddItem(mk2smgClip3);
      UIMenuItem mk2smgClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2SMG.AddItem(mk2smgClip4);
      UIMenuItem mk2smgClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2SMG.AddItem(mk2smgClip5);
      this.MK2SMG.AddItem(new UIMenuItem("Flashlight : $7,500"));
      UIMenuItem mk2smgsight1 = new UIMenuItem("Holographic Sight : $15,200");
      this.MK2SMG.AddItem(mk2smgsight1);
      UIMenuItem mk2smgsight2 = new UIMenuItem("Small Scope: $19,950");
      this.MK2SMG.AddItem(mk2smgsight2);
      UIMenuItem mk2smgsight3 = new UIMenuItem("Holographic Sight : $24,100");
      this.MK2SMG.AddItem(mk2smgsight3);
      UIMenuItem mk2smgsupp = new UIMenuItem("Suppressor  : $34,500");
      this.MK2SMG.AddItem(mk2smgsupp);
      UIMenuItem mk2smgmuzzle = new UIMenuItem("Muzzle : $25,500");
      this.MK2SMG.AddItem(mk2smgmuzzle);
      UIMenuItem mk2smgbarrel = new UIMenuItem("Barrel : $22,500");
      this.MK2SMG.AddItem(mk2smgbarrel);
      UIMenuListItem list8 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2SMG.AddItem((UIMenuItem) list8);
      UIMenuItem getTint8 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SMG.AddItem(getTint8);
      UIMenuItem mk2carbine = new UIMenuItem("MK2 Carbine : $35,000");
      this.MK2Carbine.AddItem(mk2carbine);
      UIMenuItem mk2carbineClip1 = new UIMenuItem("Default Clip: $0");
      this.MK2Carbine.AddItem(mk2carbineClip1);
      UIMenuItem mk2carbineClip2 = new UIMenuItem("Extended Clip: $25,925");
      this.MK2Carbine.AddItem(mk2carbineClip2);
      UIMenuItem mk2carbineClip3 = new UIMenuItem("Tracer Rounds: $44,700");
      this.MK2Carbine.AddItem(mk2carbineClip3);
      UIMenuItem mk2carbineClip4 = new UIMenuItem("Incendiary Rounds : $51,600");
      this.MK2Carbine.AddItem(mk2carbineClip4);
      UIMenuItem mk2carbineClip5 = new UIMenuItem("Armor Piercing Rounds: $66,000 ");
      this.MK2Carbine.AddItem(mk2carbineClip5);
      UIMenuItem mk2carbineClip6 = new UIMenuItem("Full Metal Jacket Rounds: $76,200 ");
      this.MK2Carbine.AddItem(mk2carbineClip6);
      UIMenuItem mk2carbineGrip = new UIMenuItem("Grip: $14,080 ");
      this.MK2Carbine.AddItem(mk2carbineGrip);
      UIMenuItem mk2carbineFlash = new UIMenuItem("Flashlight: $10,500 ");
      this.MK2Carbine.AddItem(mk2carbineFlash);
      UIMenuItem mk2carbineSight1 = new UIMenuItem("Holographic Sight: $19,600  ");
      this.MK2Carbine.AddItem(mk2carbineSight1);
      UIMenuItem mk2carbineSight2 = new UIMenuItem("Small Scope: $23,730 ");
      this.MK2Carbine.AddItem(mk2carbineSight2);
      UIMenuItem mk2carbineSight3 = new UIMenuItem("Large Scope: $34,020 ");
      this.MK2Carbine.AddItem(mk2carbineSight3);
      UIMenuItem mk2carbineSupp = new UIMenuItem("Suppressor: $40,250 ");
      this.MK2Carbine.AddItem(mk2carbineSupp);
      UIMenuListItem list9 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Carbine.AddItem((UIMenuItem) list9);
      UIMenuItem getTint9 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Carbine.AddItem(getTint9);
      UIMenuItem mk2AR = new UIMenuItem("MK2 Assault Rifle : $30,000");
      this.MK2AssaultRifle.AddItem(mk2AR);
      UIMenuItem mk2ARClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2AssaultRifle.AddItem(mk2ARClip1);
      UIMenuItem mk2ARClip2 = new UIMenuItem("Extended Clip: $22,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip2);
      UIMenuItem mk2ARClip3 = new UIMenuItem("Tracer Rounds  : $42,700");
      this.MK2AssaultRifle.AddItem(mk2ARClip3);
      UIMenuItem mk2ARClip4 = new UIMenuItem("Incendiary Rounds  : $49,400");
      this.MK2AssaultRifle.AddItem(mk2ARClip4);
      UIMenuItem mk2ARClip5 = new UIMenuItem("Armor Piercing Rounds : $63,200");
      this.MK2AssaultRifle.AddItem(mk2ARClip5);
      UIMenuItem mk2ARClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $73,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip6);
      UIMenuItem mk2ARClipFlash = new UIMenuItem("Flashlight : $10,500");
      this.MK2AssaultRifle.AddItem(mk2ARClipFlash);
      UIMenuItem mk2ARClipSight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight1);
      UIMenuItem mk2ARClipSight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight2);
      UIMenuItem mk2ARClipSight3 = new UIMenuItem("Large Scope : $33,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight3);
      UIMenuItem mk2ARClipGrip = new UIMenuItem("Grip : $14,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipGrip);
      UIMenuItem mk2ARsuppressor = new UIMenuItem("Suppressor : $40,250");
      this.MK2AssaultRifle.AddItem(mk2ARsuppressor);
      UIMenuListItem list10 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2AssaultRifle.AddItem((UIMenuItem) list10);
      UIMenuItem getTint10 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2AssaultRifle.AddItem(getTint10);
      UIMenuItem mk2lmg = new UIMenuItem("MK2 LMG : $95,000");
      this.MK2LMG.AddItem(mk2lmg);
      UIMenuItem mk2lmgClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2LMG.AddItem(mk2lmgClip1);
      UIMenuItem mk2lmgClip2 = new UIMenuItem("Extended Clip : $28,975");
      this.MK2LMG.AddItem(mk2lmgClip2);
      UIMenuItem mk2lmgClip3 = new UIMenuItem("Tracer Rounds : $57,100");
      this.MK2LMG.AddItem(mk2lmgClip3);
      UIMenuItem mk2lmgClip4 = new UIMenuItem("Incendiary Rounds : $64,650");
      this.MK2LMG.AddItem(mk2lmgClip4);
      UIMenuItem mk2lmgClip5 = new UIMenuItem("Armor Piercing Rounds : $82,550");
      this.MK2LMG.AddItem(mk2lmgClip5);
      UIMenuItem mk2lmgClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $94,950");
      this.MK2LMG.AddItem(mk2lmgClip6);
      UIMenuItem mk2lmgGrip = new UIMenuItem("Grip : $20,180");
      this.MK2LMG.AddItem(mk2lmgGrip);
      UIMenuItem mk2lmgSight1 = new UIMenuItem("Holographic Sight : $26,600");
      this.MK2LMG.AddItem(mk2lmgSight1);
      UIMenuItem mk2lmgSight2 = new UIMenuItem("Small Scope : $36,290");
      this.MK2LMG.AddItem(mk2lmgSight2);
      UIMenuItem mk2lmgSight3 = new UIMenuItem("Large Scope : $46,170");
      this.MK2LMG.AddItem(mk2lmgSight3);
      UIMenuItem mk2lmgMuzzle = new UIMenuItem("Flat Muzzle Brake : $40,375");
      this.MK2LMG.AddItem(mk2lmgMuzzle);
      UIMenuItem mk2lmgBarrel = new UIMenuItem("Heavy Barrel : $66,500");
      this.MK2LMG.AddItem(mk2lmgBarrel);
      UIMenuListItem list11 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2LMG.AddItem((UIMenuItem) list11);
      UIMenuItem getTint11 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2LMG.AddItem(getTint11);
      UIMenuItem mk2sniper = new UIMenuItem("MK2 Heavy Sniper : $100,000");
      this.MK2Sniper.AddItem(mk2sniper);
      UIMenuItem mk2sniperClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2Sniper.AddItem(mk2sniperClip1);
      UIMenuItem mk2sniperClip2 = new UIMenuItem("Extended Clip : $35,025");
      this.MK2Sniper.AddItem(mk2sniperClip2);
      UIMenuItem mk2sniperClip3 = new UIMenuItem("Incendiary Rounds : $59,275");
      this.MK2Sniper.AddItem(mk2sniperClip3);
      UIMenuItem mk2sniperClip4 = new UIMenuItem("Armor Piercing Rounds : $76,100");
      this.MK2Sniper.AddItem(mk2sniperClip4);
      UIMenuItem mk2sniperClip5 = new UIMenuItem("Full Metal Jacket Rounds : $88,525");
      this.MK2Sniper.AddItem(mk2sniperClip5);
      UIMenuItem mk2sniperClip6 = new UIMenuItem("Explosive Rounds : $115,450");
      this.MK2Sniper.AddItem(mk2sniperClip6);
      UIMenuItem mk2sniperSight1 = new UIMenuItem("Zoom scope : $20.200");
      this.MK2Sniper.AddItem(mk2sniperSight1);
      UIMenuItem mk2sniperSight2 = new UIMenuItem("Advanced Scope : $32,000");
      this.MK2Sniper.AddItem(mk2sniperSight2);
      UIMenuItem mk2sniperSight3 = new UIMenuItem("Night Vision Scope : $57,400");
      this.MK2Sniper.AddItem(mk2sniperSight3);
      UIMenuItem mk2sniperSight4 = new UIMenuItem("Thermal Scope : $69,000");
      this.MK2Sniper.AddItem(mk2sniperSight4);
      UIMenuItem mk2sniperSupp = new UIMenuItem("Suppressor : $40,250");
      this.MK2Sniper.AddItem(mk2sniperSupp);
      UIMenuItem mk2sniperMuzzle = new UIMenuItem("Bell-End Muzzle Brake : $57,790");
      this.MK2Sniper.AddItem(mk2sniperMuzzle);
      UIMenuItem mk2sniperBarrel = new UIMenuItem("Heavy Barrel : $27,500");
      this.MK2Sniper.AddItem(mk2sniperBarrel);
      UIMenuListItem list12 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Sniper.AddItem((UIMenuItem) list12);
      UIMenuItem getTint12 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Sniper.AddItem(getTint12);
      List<object> items4 = new List<object>();
      WeaponHash[] allweaponhashes = (WeaponHash[]) Enum.GetValues(typeof (WeaponHash));
      for (int index = 0; index < allweaponhashes.Length; ++index)
        items4.Add((object) allweaponhashes[index]);
      UIMenuListItem list = new UIMenuListItem("Weapon: ", items4, 0);
      uiMenu3.AddItem((UIMenuItem) list);
      UIMenuItem getWeapon = new UIMenuItem("Buy Weapon : $10000");
      uiMenu3.AddItem(getWeapon);
      UIMenuItem RayGun = new UIMenuItem("Ray Gun : $100,000");
      uiMenu2.AddItem(RayGun);
      UIMenuItem UnholyHellbringer = new UIMenuItem("UnholyHellbringer : $250,000");
      uiMenu2.AddItem(UnholyHellbringer);
      UIMenuItem Widowmaker = new UIMenuItem("Widowmaker : $1,000,000");
      uiMenu2.AddItem(Widowmaker);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getWeapon)
          return;
        WeaponHash hash = allweaponhashes[list.Index];
        switch (hash)
        {
          case WeaponHash.HeavySniperMk2:
          case WeaponHash.AssaultrifleMk2:
          case WeaponHash.PumpShotgunMk2:
          case WeaponHash.MarksmanRifleMk2:
          case WeaponHash.SMGMk2:
          case WeaponHash.BullpupRifleMk2:
          case WeaponHash.SNSPistolMk2:
          case WeaponHash.SpecialCarbineMk2:
          case WeaponHash.PistolMk2:
          case WeaponHash.RevolverMk2:
          case WeaponHash.CombatMGMk2:
          case WeaponHash.CarbineRifleMk2:
            UI.Notify(this.GetHostName() + " Boss, this is a MKII weapon please perchase it from the MkII page");
            break;
          default:
            Game.Player.Character.Weapons.Give(hash, 9999, true, true);
            Game.Player.Money -= 10000;
            break;
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RayGun)
        {
          if (Game.Player.Money >= 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2939590305U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
        }
        if (item == UnholyHellbringer)
        {
          if (Game.Player.Money >= 250000)
          {
            Game.Player.Money -= 250000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1198256469, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
        }
        if (item != Widowmaker)
          return;
        if (Game.Player.Money >= 1000000)
        {
          Game.Player.Money -= 1000000;
          Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3056410471U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
      });
      this.MK2Sniper.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint12)
        {
          int index1 = list12.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) list12.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2sniper)
        {
          if (Game.Player.Money > 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4196276776U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip2)
        {
          if (Game.Player.Money > 35025)
          {
            Game.Player.Money -= 35025;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 752418717);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip3)
        {
          if (Game.Player.Money > 59275)
          {
            Game.Player.Money -= 59275;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 247526935);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip4)
        {
          if (Game.Player.Money > 76100)
          {
            Game.Player.Money -= 76100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4164277972U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip5)
        {
          if (Game.Player.Money > 88525)
          {
            Game.Player.Money -= 88525;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1005144310);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip6)
        {
          if (Game.Player.Money > 115450)
          {
            Game.Player.Money -= 115450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2313935527U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight1)
        {
          if (Game.Player.Money > 20200)
          {
            Game.Player.Money -= 20200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2193687427U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight2)
        {
          if (Game.Player.Money > 32000)
          {
            Game.Player.Money -= 32000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3159677559U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight3)
        {
          if (Game.Player.Money > 57400)
          {
            Game.Player.Money -= 57400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3061846192U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight4)
        {
          if (Game.Player.Money > 69000)
          {
            Game.Player.Money -= 69000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 776198721);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSupp)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2890063729U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperMuzzle)
        {
          if (Game.Player.Money > 57790)
          {
            Game.Player.Money -= 57790;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1764221345);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2sniperBarrel)
          return;
        if (Game.Player.Money > 27500)
        {
          Game.Player.Money -= 27500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2425761975U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2LMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint11)
        {
          int index1 = list11.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) list11.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2lmg)
        {
          if (Game.Player.Money > 95000)
          {
            Game.Player.Money -= 95000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1227564412);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip2)
        {
          if (Game.Player.Money > 28975)
          {
            Game.Player.Money -= 28975;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 400507625);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip3)
        {
          if (Game.Player.Money > 57100)
          {
            Game.Player.Money -= 57100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 4133787461U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip4)
        {
          if (Game.Player.Money > 64650)
          {
            Game.Player.Money -= 64650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3274096058U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip5)
        {
          if (Game.Player.Money > 82550)
          {
            Game.Player.Money -= 82550;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 696788003);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip6)
        {
          if (Game.Player.Money > 94950)
          {
            Game.Player.Money -= 94950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1475288264);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgGrip)
        {
          if (Game.Player.Money > 20180)
          {
            Game.Player.Money -= 20180;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight1)
        {
          if (Game.Player.Money > 26600)
          {
            Game.Player.Money -= 26600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight2)
        {
          if (Game.Player.Money > 36290)
          {
            Game.Player.Money -= 36290;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight3)
        {
          if (Game.Player.Money > 46170)
          {
            Game.Player.Money -= 46170;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgMuzzle)
        {
          if (Game.Player.Money > 40375)
          {
            Game.Player.Money -= 40375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3113485012U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2lmgBarrel)
          return;
        if (Game.Player.Money > 66500)
        {
          Game.Player.Money -= 66500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3051509595U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Carbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint9)
        {
          int index1 = list9.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) list9.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2carbine)
        {
          if (Game.Player.Money > 35000)
          {
            Game.Player.Money -= 35000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip1)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1283078430);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip2)
        {
          if (Game.Player.Money > 25925)
          {
            Game.Player.Money -= 25925;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1574296533);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip3)
        {
          if (Game.Player.Money > 44700)
          {
            Game.Player.Money -= 44700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 391640422);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip4)
        {
          if (Game.Player.Money > 51600)
          {
            Game.Player.Money -= 51600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1025884839);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip5)
        {
          if (Game.Player.Money > 66000)
          {
            Game.Player.Money -= 66000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 626875735);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip6)
        {
          if (Game.Player.Money > 76000)
          {
            Game.Player.Money -= 76000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1141059345);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2carbineSupp)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2205435306U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2SMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint8)
        {
          int index1 = list8.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) list8.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2smg)
        {
          if (Game.Player.Money > 25000)
          {
            Game.Player.Money -= 25000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1277460590);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgclip1)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3112393518U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip2)
        {
          if (Game.Player.Money > 32850)
          {
            Game.Player.Money -= 32850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2146055916);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3650233061U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 974903034);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip5)
        {
          if (Game.Player.Money > 52000)
          {
            Game.Player.Money -= 52000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 190476639);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight1)
        {
          if (Game.Player.Money > 15200)
          {
            Game.Player.Money -= 15200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2681951826U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight2)
        {
          if (Game.Player.Money > 19950)
          {
            Game.Player.Money -= 19950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3842157419U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight3)
        {
          if (Game.Player.Money > 24100)
          {
            Game.Player.Money -= 24100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsupp)
        {
          if (Game.Player.Money > 34500)
          {
            Game.Player.Money -= 34500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgmuzzle)
        {
          if (Game.Player.Money > 25500)
          {
            Game.Player.Money -= 25500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3113485012U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2smgbarrel)
          return;
        if (Game.Player.Money > 22500)
        {
          Game.Player.Money -= 22500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3641720545U);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2AssaultRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint10)
        {
          int index1 = list10.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) list10.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2AR)
        {
          if (Game.Player.Money > 30000)
          {
            Game.Player.Money -= 30000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2249208895U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip2)
        {
          if (Game.Player.Money > 22000)
          {
            Game.Player.Money -= 22000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3509242479U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip3)
        {
          if (Game.Player.Money > 42700)
          {
            Game.Player.Money -= 42700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4012669121U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip4)
        {
          if (Game.Player.Money > 49400)
          {
            Game.Player.Money -= 49400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4218476627U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip5)
        {
          if (Game.Player.Money > 63200)
          {
            Game.Player.Money -= 63200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2816286296U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip6)
        {
          if (Game.Player.Money > 73000)
          {
            Game.Player.Money -= 73000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1675665560);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipGrip)
        {
          if (Game.Player.Money > 14000)
          {
            Game.Player.Money -= 14000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight3)
        {
          if (Game.Player.Money > 33000)
          {
            Game.Player.Money -= 33000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2ARsuppressor)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2805810788U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Pistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint7)
        {
          int index1 = list7.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) list7.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2pistol)
        {
          if (Game.Player.Money > 20000)
          {
            Game.Player.Money -= 20000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2499030370U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip1)
        {
          if (Game.Player.Money > 15250)
          {
            Game.Player.Money -= 15250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1591132456);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip2)
        {
          if (Game.Player.Money > 28600)
          {
            Game.Player.Money -= 28600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 634039983);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 733837882);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2248057097U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip5)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1329061674);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolSight1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolsupp)
        {
          if (Game.Player.Money > 28750)
          {
            Game.Player.Money -= 28750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1709866683);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2pistolcomp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 568543123);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Pumpshotgun.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint1)
        {
          int index1 = list1.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) list1.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Shotgunclip4)
        {
          if (Game.Player.Money > 145000)
          {
            Game.Player.Money -= 145000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1004815965);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -845938367);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip2)
        {
          if (Game.Player.Money > 96645)
          {
            Game.Player.Money -= 96645;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1315288101);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip3)
        {
          if (Game.Player.Money > 75140)
          {
            Game.Player.Money -= 75140;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -380098265);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip1)
        {
          if (Game.Player.Money > 65200)
          {
            Game.Player.Money -= 65200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1618338827);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ShotgunP)
        {
          if (Game.Player.Money > 75000)
          {
            Game.Player.Money -= 75000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunflashlight)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights)
        {
          if (Game.Player.Money > 29320)
          {
            Game.Player.Money -= 29320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights2)
        {
          if (Game.Player.Money > 39920)
          {
            Game.Player.Money -= 39920;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights3)
        {
          if (Game.Player.Money > 50785)
          {
            Game.Player.Money -= 50785;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ShotgunSuppressor)
        {
          if (Game.Player.Money > 45860)
          {
            Game.Player.Money -= 45860;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1404903567);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Shotgunmuzzle)
          return;
        if (Game.Player.Money > 37650)
        {
          Game.Player.Money -= 37650;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1602080333);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2SNSPistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint2)
        {
          int index1 = list2.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) list2.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Snspistol)
        {
          if (Game.Player.Money > 45000)
          {
            Game.Player.Money -= 45000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipn)
        {
          if (Game.Player.Money > 8000)
          {
            Game.Player.Money -= 8000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 21392614);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipe)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -829683854);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip1)
        {
          if (Game.Player.Money > 34320)
          {
            Game.Player.Money -= 34320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1876057490);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip2)
        {
          if (Game.Player.Money > 41700)
          {
            Game.Player.Money -= 41700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -424845447);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip3)
        {
          if (Game.Player.Money > 47580)
          {
            Game.Player.Money -= 47580;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1928301566);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip4)
        {
          if (Game.Player.Money > 62400)
          {
            Game.Player.Money -= 62400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1055790298);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolcomp)
        {
          if (Game.Player.Money > 21250)
          {
            Game.Player.Money -= 21250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1434287169);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1246324211);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolscope1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1205768792);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Snspistolsuppressor)
          return;
        if (Game.Player.Money > 28750)
        {
          Game.Player.Money -= 28750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1709866683);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Revolver.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint3)
        {
          int index1 = list3.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) list3.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Revolver)
        {
          if (Game.Player.Money > 85000)
          {
            Game.Player.Money -= 85000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -1172055874);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip1)
        {
          if (Game.Player.Money > 31460)
          {
            Game.Player.Money -= 31460;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -958864266);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip2)
        {
          if (Game.Player.Money > 38225)
          {
            Game.Player.Money -= 38225;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 15712037);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip3)
        {
          if (Game.Player.Money > 43615)
          {
            Game.Player.Money -= 43615;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 284438159);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip4)
        {
          if (Game.Player.Money > 57200)
          {
            Game.Player.Money -= 57200;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 231258687);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolversights)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolversights1)
        {
          if (Game.Player.Money > 25450)
          {
            Game.Player.Money -= 25450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverflashlight)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 899381934);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2RevolverComp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 654802123);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.Mk2SpecialCarbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint4)
        {
          int index1 = list4.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) list4.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2SCarbine)
        {
          if (Game.Player.Money > 65000)
          {
            Game.Player.Money -= 65000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 382112385);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip1)
        {
          if (Game.Player.Money > 26450)
          {
            Game.Player.Money -= 26450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -568352468);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip2)
        {
          if (Game.Player.Money > 61465)
          {
            Game.Player.Money -= 61465;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -2023373174);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip3)
        {
          if (Game.Player.Money > 70950)
          {
            Game.Player.Money -= 70950;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -570355066);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip4)
        {
          if (Game.Player.Money > 90750)
          {
            Game.Player.Money -= 90750;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1362433589);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip5)
        {
          if (Game.Player.Money > 104775)
          {
            Game.Player.Money -= 104775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1346235024);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -966040254);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesupressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1489156508);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinemuzzle)
        {
          if (Game.Player.Money > 29750)
          {
            Game.Player.Money -= 29750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1181482284);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2SCarbinegrip)
          return;
        if (Game.Player.Money > 14080)
        {
          Game.Player.Money -= 14080;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1654288262);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Bullpup.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint5)
        {
          int index1 = list5.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) list5.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Bullpup)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 25766362);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip2)
        {
          if (Game.Player.Money > 22100)
          {
            Game.Player.Money -= 22100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -273676760);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip3)
        {
          if (Game.Player.Money > 44350)
          {
            Game.Player.Money -= 44350;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2111807319);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip4)
        {
          if (Game.Player.Money > 52100)
          {
            Game.Player.Money -= 52100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1449330342);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip5)
        {
          if (Game.Player.Money > 87320)
          {
            Game.Player.Money -= 87320;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -89655827);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip6)
        {
          if (Game.Player.Money > 77490)
          {
            Game.Player.Money -= 77490;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1130501904);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -944910075);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupBarrel)
        {
          if (Game.Player.Money > 49000)
          {
            Game.Player.Money -= 49000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1704640795);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1654288262);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupSuppressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2089531990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Bullpupmuzzle)
          return;
        if (Game.Player.Money > 29750)
        {
          Game.Player.Money -= 29750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1181482284);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2MarksmanRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint6)
        {
          int index1 = list6.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) list6.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2marksman)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1797182002);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip3)
        {
          if (Game.Player.Money > 49775)
          {
            Game.Player.Money -= 49775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -679861550);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip4)
        {
          if (Game.Player.Money > 57295)
          {
            Game.Player.Money -= 57295;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1842849902);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip5)
        {
          if (Game.Player.Money > 73560)
          {
            Game.Player.Money -= 73560;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -193998727);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip6)
        {
          if (Game.Player.Money > 85570)
          {
            Game.Player.Money -= 85570;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -515203373);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip2)
        {
          if (Game.Player.Money > 26850)
          {
            Game.Player.Money -= 26850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -422587990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanflash)
        {
          if (Game.Player.Money > 11250)
          {
            Game.Player.Money -= 11250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight1)
        {
          if (Game.Player.Money > 11485)
          {
            Game.Player.Money -= 11485;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight2)
        {
          if (Game.Player.Money > 17870)
          {
            Game.Player.Money -= 17870;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -966040254);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight3)
        {
          if (Game.Player.Money > 27150)
          {
            Game.Player.Money -= 27150;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1528590652);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1654288262);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanSuppressor)
        {
          if (Game.Player.Money > 60375)
          {
            Game.Player.Money -= 60375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -2089531990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2marksmanmuzzle)
          return;
        if (Game.Player.Money > 44620)
        {
          Game.Player.Money -= 44620;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1181482284);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
    }

    public void SetupMoneyMenu()
    {
      UIMenu uiMenu = this.MoneymodMenuPool.AddSubMenu(this.MoneyMenu, "Money Options");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem WithDraw = new UIMenuItem("Withdraw");
      uiMenu.AddItem(WithDraw);
      UIMenuItem Deposit2 = new UIMenuItem("Deposit");
      uiMenu.AddItem(Deposit2);
      UIMenuItem balance = new UIMenuItem("Show Balance");
      uiMenu.AddItem(balance);
      UIMenuItem SFAB = new UIMenuItem("Show Total Account Balance");
      uiMenu.AddItem(SFAB);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SFAB)
        {
          long num1 = 0;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 1.ToString() + "]", this.MoneyStored);
          long num2 = num1 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 2.ToString() + "]", this.MoneyStored);
          long num3 = num2 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 3.ToString() + "]", this.MoneyStored);
          long num4 = num3 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 4.ToString() + "]", this.MoneyStored);
          long num5 = num4 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 5.ToString() + "]", this.MoneyStored);
          long num6 = num5 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 6.ToString() + "]", this.MoneyStored);
          long num7 = num6 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 7.ToString() + "]", this.MoneyStored);
          long num8 = num7 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 8.ToString() + "]", this.MoneyStored);
          long num9 = num8 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 9.ToString() + "]", this.MoneyStored);
          long num10 = num9 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 10.ToString() + "]", this.MoneyStored);
          UI.Notify("Money in Account ~g~$" + (num10 + (long) this.MoneyStored).ToString("N"));
        }
        if (item == WithDraw)
          this.Withdrawl();
        if (item == Deposit2)
          this.Deposit();
        if (item != balance)
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        UI.Notify("Offic Assistant : Money in bank ~g~$" + this.MoneyStored.ToString("N"));
      });
    }

    public void Check1()
    {
      this.read = false;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankVault) < 40.0 && !this.read)
      {
        this.read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadiusVault) < 40.0 && !this.read)
      {
        this.read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankWestVault) < 40.0 && !this.read)
      {
        this.read = true;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.LombokVault) >= 40.0 || this.read)
        return;
      this.read = true;
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
    }

    private void Deposit()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if (int.Parse(userInput) <= Game.Player.Money)
      {
        this.MoneyStored = (float) int.Parse(userInput);
        Game.Player.Money -= int.Parse(userInput);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED", this.MoneyStored + this.Config.GetValue<float>("ADDON2", "MONEYSTORED", this.MoneyStored));
        this.Config.Save();
      }
      else
        UI.Notify(this.GetHostName() + " boss you dont have that amount of money to deposit: value: " + int.Parse(userInput).ToString());
    }

    private void Withdrawl()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if ((double) int.Parse(userInput) <= (double) this.MoneyStored)
      {
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED", this.MoneyStored) - (float) int.Parse(userInput);
        Game.Player.Money += int.Parse(userInput);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED", this.MoneyStored);
        this.Config.Save();
      }
      else
        UI.Notify(this.GetHostName() + " boss you dont have that amount of money stored to withdraw, value: " + this.MoneyStored.ToString());
    }

    public void ShowIncrease()
    {
      UI.Notify("Level: " + this.purchaselvl.ToString());
      UI.Notify("Max Stocks: " + this.maxstocks.ToString());
      UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
      UI.Notify("Mission Gain: " + this.profitMargin.ToString() + "%");
      UI.Notify("Stock Value: $" + this.stocksvalue.ToString("N"));
    }

    public VehicleHash RandomVehicleFun()
    {
      int num = new System.Random().Next(1, 13);
      if (num == 1)
        this.RandomVehicle = VehicleHash.Baller;
      if (num == 2)
        this.RandomVehicle = VehicleHash.Dominator;
      if (num == 3)
        this.RandomVehicle = VehicleHash.Dukes;
      if (num == 4)
        this.RandomVehicle = VehicleHash.Comet2;
      if (num == 5)
        this.RandomVehicle = VehicleHash.SabreGT;
      if (num == 6)
        this.RandomVehicle = VehicleHash.Schafter2;
      if (num == 7)
        this.RandomVehicle = VehicleHash.Stalion;
      if (num == 8)
        this.RandomVehicle = VehicleHash.Taco;
      if (num == 9)
        this.RandomVehicle = VehicleHash.Voltic;
      if (num == 10)
        this.RandomVehicle = VehicleHash.XLS;
      if (num == 11)
        this.RandomVehicle = VehicleHash.Vader;
      if (num == 12)
        this.RandomVehicle = VehicleHash.Sultan;
      if (num == 13)
        this.RandomVehicle = VehicleHash.Sanchez;
      if (num > 13)
        this.RandomVehicle = VehicleHash.Chino;
      return this.RandomVehicle;
    }

    public Vector3 Randomlocation()
    {
      System.Random random = new System.Random();
      int num = random.Next(1, 13);
      if (num == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (num == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (num == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (num == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (num == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (num == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (num == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (num == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (num == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (num == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (num == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (num == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      if (num > 13)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      return this.VehicleSpawn;
    }

    public VehicleColor GetColor()
    {
      List<object> objectList = new List<object>();
      VehicleColor[] values = (VehicleColor[]) Enum.GetValues(typeof (VehicleColor));
      for (int index = 0; index < values.Length; ++index)
        objectList.Add((object) values[index]);
      int index1 = new System.Random().Next(1, values.Length);
      // ISSUE: reference to a compiler-generated field
      if (ExecutiveTower.\u003C\u003Eo__772.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        ExecutiveTower.\u003C\u003Eo__772.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, VehicleColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleColor), typeof (ExecutiveTower)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return ExecutiveTower.\u003C\u003Eo__772.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__772.\u003C\u003Ep__0, objectList[index1]);
    }

    private void SetupOrganization()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) false);
      items1.Add((object) true);
      List<object> items2 = new List<object>();
      items2.Add((object) "None");
      items2.Add((object) "1");
      items2.Add((object) "2");
      items2.Add((object) "3");
      items2.Add((object) "4");
      items2.Add((object) "5");
      items2.Add((object) "6");
      items2.Add((object) "7");
      items2.Add((object) "8");
      items2.Add((object) "9");
      items2.Add((object) "10");
      items2.Add((object) "11");
      items2.Add((object) "12");
      items2.Add((object) "13");
      items2.Add((object) "14");
      items2.Add((object) "15");
      items2.Add((object) "16");
      items2.Add((object) "17");
      items2.Add((object) "18");
      items2.Add((object) "19");
      items2.Add((object) "20");
      items2.Add((object) "21");
      items2.Add((object) "22");
      items2.Add((object) "23");
      items2.Add((object) "All");
      this.Designs = this.modMenuPool.AddSubMenu(this.OrganizationOptions, "Change Design");
      this.GUIMenus.Add(this.Designs);
      List<object> ExProps = new List<object>();
      for (int index = 0; index < this.ExProp.Count - 1; ++index)
        ExProps.Add((object) this.ExProp[index]);
      List<object> objectList = new List<object>()
      {
        (object) "Disabled",
        (object) "Enabled"
      };
      UIMenu menu = this.modMenuPool.AddSubMenu(this.OrganizationOptions, "Executive Prop Options");
      this.GUIMenus.Add(menu);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(menu, "Enable Prop Sets");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem PropSetSilver = new UIMenuItem("Prop Set Silver ~g~750,000");
      uiMenu1.AddItem(PropSetSilver);
      UIMenuItem PropSetdrugbags = new UIMenuItem("Prop Set Drug ~g~$750,000");
      uiMenu1.AddItem(PropSetdrugbags);
      UIMenuItem PropSetbooze = new UIMenuItem("Prop Set Booze ~g~$750,000");
      uiMenu1.AddItem(PropSetbooze);
      UIMenuItem PropSetelectronic = new UIMenuItem("Prop Set Electronics ~g~$750,000");
      uiMenu1.AddItem(PropSetelectronic);
      UIMenuItem PropSetdrugstatue = new UIMenuItem("Prop Set Drug Statue ~g~$750,000");
      uiMenu1.AddItem(PropSetdrugstatue);
      UIMenuItem PropSetivory = new UIMenuItem("Prop Set Ivory ~g~$750,000");
      uiMenu1.AddItem(PropSetivory);
      UIMenuItem PropSetpills = new UIMenuItem("Prop Set Pills ~g~$750,000");
      uiMenu1.AddItem(PropSetpills);
      UIMenuItem PropSetjewelwatch = new UIMenuItem("Prop Set Jeweled Watches ~g~$750,000");
      uiMenu1.AddItem(PropSetjewelwatch);
      UIMenuItem PropSetfurcoats = new UIMenuItem("Prop Set Furcoats ~g~$750,000");
      uiMenu1.AddItem(PropSetfurcoats);
      UIMenuItem PropSetart = new UIMenuItem("Prop Set Art ~g~$750,000");
      uiMenu1.AddItem(PropSetart);
      UIMenuItem PropSetguns = new UIMenuItem("Prop Set Guns ~g~$750,000");
      uiMenu1.AddItem(PropSetguns);
      UIMenuItem PropSetmed = new UIMenuItem("Prop Set Medicine ~g~$750,000");
      uiMenu1.AddItem(PropSetmed);
      UIMenuItem PropSetgems = new UIMenuItem("Prop Set Gems ~g~$750,000");
      uiMenu1.AddItem(PropSetgems);
      UIMenuItem PropSetcounterfeit = new UIMenuItem("Prop Set Counterfeit ~g~$750,000");
      uiMenu1.AddItem(PropSetcounterfeit);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == PropSetSilver && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_SILVER ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_SILVER2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_SILVER3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetdrugbags && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetbooze && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetelectronic && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetdrugstatue && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetivory && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_IVORY ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_IVORY2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_IVORY3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetpills && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_PILLS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_PILLS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_PILLS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetjewelwatch && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetfurcoats && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetart && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_ART ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ART2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ART3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetguns && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_GUNS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GUNS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GUNS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetmed && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_MED ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_MED2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_MED3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetgems && Game.Player.Money >= 750000)
        {
          Game.Player.Money -= 750000;
          this.Config.SetValue<bool>("Design", "SWAG_GEMS ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GEMS2 ENABLED", true);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GEMS3 ENABLED", true);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item != PropSetcounterfeit || Game.Player.Money < 750000)
          return;
        Game.Player.Money -= 750000;
        this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT2 ENABLED ", true);
        this.Config.Save();
        this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT2 ENABLED ", true);
        this.Config.Save();
        this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT3 ENABLED ", true);
        this.Config.Save();
        this.RefreshInteriors(this.Design);
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(menu, "Disable Prop Sets");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem PropSetSilver1 = new UIMenuItem("Prop Set Silver");
      uiMenu2.AddItem(PropSetSilver1);
      UIMenuItem PropSetdrugbags1 = new UIMenuItem("Prop Set Drug");
      uiMenu2.AddItem(PropSetdrugbags1);
      UIMenuItem PropSetbooze1 = new UIMenuItem("Prop Set Booze");
      uiMenu2.AddItem(PropSetbooze1);
      UIMenuItem PropSetelectronic1 = new UIMenuItem("Prop Set Electronics");
      uiMenu2.AddItem(PropSetelectronic1);
      UIMenuItem PropSetdrugstatue1 = new UIMenuItem("Prop Set Drug Statue");
      uiMenu2.AddItem(PropSetdrugstatue1);
      UIMenuItem PropSetivory1 = new UIMenuItem("Prop Set Ivory");
      uiMenu2.AddItem(PropSetivory1);
      UIMenuItem PropSetpills1 = new UIMenuItem("Prop Set Pills");
      uiMenu2.AddItem(PropSetpills1);
      UIMenuItem PropSetjewelwatch1 = new UIMenuItem("Prop Set Jeweled Watches");
      uiMenu2.AddItem(PropSetjewelwatch1);
      UIMenuItem PropSetfurcoats1 = new UIMenuItem("Prop Set Furcoats");
      uiMenu2.AddItem(PropSetfurcoats1);
      UIMenuItem PropSetart1 = new UIMenuItem("Prop Set Art");
      uiMenu2.AddItem(PropSetart1);
      UIMenuItem PropSetguns1 = new UIMenuItem("Prop Set Guns");
      uiMenu2.AddItem(PropSetguns1);
      UIMenuItem PropSetmed1 = new UIMenuItem("Prop Set Medicine");
      uiMenu2.AddItem(PropSetmed1);
      UIMenuItem PropSetgems1 = new UIMenuItem("Prop Set Gems");
      uiMenu2.AddItem(PropSetgems1);
      UIMenuItem PropSetcounterfeit1 = new UIMenuItem("Prop Set Counterfeit");
      uiMenu2.AddItem(PropSetcounterfeit1);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == PropSetSilver1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_SILVER ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_SILVER2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_SILVER3 ENABLED", false);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
        }
        if (item == PropSetdrugbags1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGBAGS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetbooze1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_BOOZE_CIGS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetelectronic1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ELECTRONIC3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetdrugstatue1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_DRUGSTATUE3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetivory1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_IVORY ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_IVORY2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_IVORY3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetpills1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_PILLS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_PILLS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_PILLS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetjewelwatch1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_JEWELWATCH3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetfurcoats1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_FURCOATS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetart1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_ART ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ART2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_ART3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetguns1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_GUNS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GUNS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GUNS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetmed1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_MED ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_MED2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_MED3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetgems1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_GEMS ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GEMS2 ENABLED", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_GEMS3 ENABLED", false);
          this.Config.Save();
        }
        if (item == PropSetcounterfeit1)
        {
          this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT2 ENABLED ", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT2 ENABLED ", false);
          this.Config.Save();
          this.Config.SetValue<bool>("Design", "SWAG_COUNTERFEIT3 ENABLED ", false);
          this.Config.Save();
        }
        this.RefreshInteriors(this.Design);
      });
      UIMenuListItem EProps = new UIMenuListItem("Props to Load : ", ExProps, 0);
      menu.AddItem((UIMenuItem) EProps);
      UIMenuItem Activate = new UIMenuItem("Activate");
      menu.AddItem(Activate);
      UIMenuItem Deactivate = new UIMenuItem("Deactivate");
      menu.AddItem(Deactivate);
      UIMenuItem pr1 = new UIMenuItem("Price : $0");
      menu.AddItem(pr1);
      menu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Activate)
        {
          if (Game.Player.Money >= 250000)
          {
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__3.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool>> p3 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__3;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool, object> target2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__2.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool, object>> p2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__2;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__1 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__1 = CallSite<Func<CallSite, ScriptSettings, string, object, bool, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetValue", (IEnumerable<System.Type>) new System.Type[1]
              {
                typeof (bool)
              }, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, ScriptSettings, string, object, bool, object> target3 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__1.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, ScriptSettings, string, object, bool, object>> p1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__1;
            ScriptSettings config1 = this.Config;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__0, ExProps[EProps.Index], " Enabled");
            object obj2 = target3((CallSite) p1, config1, "Design", obj1, false);
            object obj3 = target2((CallSite) p2, obj2, false);
            if (target1((CallSite) p3, obj3))
            {
              Game.Player.Money -= 250000;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__5 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__5 = CallSite<Action<CallSite, ScriptSettings, string, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
                {
                  typeof (bool)
                }, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, ScriptSettings, string, object, bool> target4 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__5.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, ScriptSettings, string, object, bool>> p5 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__5;
              ScriptSettings config2 = this.Config;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__4 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj4 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__4, ExProps[EProps.Index], " Enabled");
              target4((CallSite) p5, config2, "Design", obj4, true);
              this.Config.Save();
              this.RefreshInteriors(this.Design);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__7 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__7 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, System.Type, object> target5 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__7.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, System.Type, object>> p7 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__7;
              System.Type type = typeof (UI);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__6 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__6 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj5 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__6, "Activeated Prop : ", ExProps[EProps.Index]);
              target5((CallSite) p7, type, obj5);
            }
            else
              UI.Notify("You already have this Prop Enabled");
          }
          else
            UI.Notify("you dont have enough money for this Prop!");
        }
        if (item != Deactivate)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__11 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target6 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__11.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p11 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__11;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool, object> target7 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__10.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool, object>> p10 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__10;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__9 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__9 = CallSite<Func<CallSite, ScriptSettings, string, object, bool, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetValue", (IEnumerable<System.Type>) new System.Type[1]
          {
            typeof (bool)
          }, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, ScriptSettings, string, object, bool, object> target8 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__9.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, ScriptSettings, string, object, bool, object>> p9 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__9;
        ScriptSettings config3 = this.Config;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj6 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__8.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__8, ExProps[EProps.Index], " Enabled");
        object obj7 = target8((CallSite) p9, config3, "Design", obj6, false);
        object obj8 = target7((CallSite) p10, obj7, true);
        if (target6((CallSite) p11, obj8))
        {
          Game.Player.Money += 250000;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__13 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__13 = CallSite<Action<CallSite, ScriptSettings, string, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetValue", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (bool)
            }, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, ScriptSettings, string, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__13.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, ScriptSettings, string, object, bool>> p13 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__13;
          ScriptSettings config1 = this.Config;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__12.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__12, ExProps[EProps.Index], " Enabled");
          target1((CallSite) p13, config1, "Design", obj1, false);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__15 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__15.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p15 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__15;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__14 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__14.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__14, "Dectivated Prop : ", ExProps[EProps.Index]);
          target2((CallSite) p15, type, obj2);
        }
        else
          UI.Notify("You already have this Prop Disabled");
      });
      menu.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != EProps)
          return;
        pr1.Text = "Price : $" + 250000.ToString("N");
      });
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.OrganizationOptions, "Cash Options");
      this.GUIMenus.Add(uiMenu3);
      UIMenuListItem Props = new UIMenuListItem("Props to Load : ", items2, 0);
      uiMenu3.AddItem((UIMenuItem) Props);
      UIMenuItem pr = new UIMenuItem("Price : $0");
      uiMenu3.AddItem(pr);
      UIMenuItem Set = new UIMenuItem("Set Cash ");
      uiMenu3.AddItem(Set);
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != Props)
          return;
        pr.Text = "Price : $" + (250000 * Props.Index).ToString("N");
      });
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Set || Game.Player.Money < 250000 * Props.Index - 1)
          return;
        Game.Player.Money -= 250000 * Props.Index - 1;
        this.AmountOfCash = Props.Index - 1;
        this.Config.SetValue<int>("Design", "AmountOfCash", this.AmountOfCash);
        this.Config.Save();
        this.RefreshInteriors(this.Design);
      });
      UIMenuListItem ViewDesign = new UIMenuListItem("Preview Design : ", new List<object>()
      {
        (object) "Off",
        (object) "Executive Rich",
        (object) "Executive Cool",
        (object) "Executive Contrast",
        (object) "Old Spice Warms",
        (object) "Old Spice Classical",
        (object) "Old Spice Vintage",
        (object) "Power Broker Ice",
        (object) "Power Broker Conservative",
        (object) "Power Broker Polished"
      }, 0);
      this.Designs.AddItem((UIMenuItem) ViewDesign);
      UIMenuItem D1 = new UIMenuItem("Executive Rich : Free");
      this.Designs.AddItem(D1);
      UIMenuItem D2 = new UIMenuItem("Executive Cool: $415,000");
      this.Designs.AddItem(D2);
      UIMenuItem D3 = new UIMenuItem("Executive Contrast: $500,000");
      this.Designs.AddItem(D3);
      UIMenuItem D4 = new UIMenuItem("Old Spice Warms: $950,000");
      this.Designs.AddItem(D4);
      UIMenuItem D5 = new UIMenuItem("Old Spice Classical: $685,000");
      this.Designs.AddItem(D5);
      UIMenuItem D6 = new UIMenuItem("Old Spice Vintage: $760,000");
      this.Designs.AddItem(D6);
      UIMenuItem D7 = new UIMenuItem("Power Broker Ice $1,000,000\t");
      this.Designs.AddItem(D7);
      UIMenuItem D8 = new UIMenuItem("Power Broker Conservative: $835,000");
      this.Designs.AddItem(D8);
      UIMenuItem D9 = new UIMenuItem("Power Broker Polished: $910,000");
      this.Designs.AddItem(D9);
      this.Designs.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == D1 && Game.Player.Money >= 0)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Player player = Game.Player;
          player.Money = player.Money;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 0;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D2 && Game.Player.Money >= 415000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 415000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 1;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D3 && Game.Player.Money >= 500000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 500000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 2;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D4 && Game.Player.Money >= 950000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 950000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 3;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D5 && Game.Player.Money >= 685000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 685000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 4;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D6 && Game.Player.Money >= 760000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 760000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 5;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D7 && Game.Player.Money >= 1000000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 1000000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 6;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item == D8 && Game.Player.Money >= 835000)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          Game.Player.Character.Position = this.MarkerEnter;
          Game.Player.Money -= 835000;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
          this.Design = 7;
          this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
          this.Config.Save();
          this.RefreshInteriors(this.Design);
          if (!this.mainMenu.Visible)
            this.mainMenu.Visible = !this.mainMenu.Visible;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.RefreshInteriors(this.Design);
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.modMenuPool.CloseAllMenus();
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
        }
        if (item != D9 || Game.Player.Money < 910000)
          return;
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.MarkerEnter;
        Game.Player.Money -= 910000;
        Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -141.1987, (InputArgument) -620.913, (InputArgument) 168.8205);
        this.Design = 8;
        this.Config.SetValue<int>("Design", "InteriorDesign", this.Design);
        this.Config.Save();
        this.RefreshInteriors(this.Design);
        if (!this.mainMenu.Visible)
          this.mainMenu.Visible = !this.mainMenu.Visible;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.RefreshInteriors(this.Design);
        this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
        Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        this.modMenuPool.CloseAllMenus();
        Script.Wait(5000);
        this.CEOChairProp.FreezePosition = true;
        this.IsSittinginCeoSeat = true;
      });
      this.Designs.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != ViewDesign)
          return;
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_02a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_01c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_02_office_03c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_02a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_01c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_dt1_11_office_03c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_02a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_01c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_13_office_03c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_02a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_01c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ex_sm_15_office_03c");
        this.LoadMain("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        if (ViewDesign.Index == 0)
        {
          this.PreviewingDesigns = false;
          if (this.Design == 0)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02b");
          }
          if (this.Design == 1)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02c");
          }
          if (this.Design == 2)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02a");
          }
          if (this.Design == 3)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01a");
          }
          if (this.Design == 4)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01b");
          }
          if (this.Design == 5)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01c");
          }
          if (this.Design == 6)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03a");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03a");
          }
          if (this.Design == 7)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03b");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03b");
          }
          if (this.Design == 8)
          {
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03c");
            Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03c");
          }
        }
        if (ViewDesign.Index == 1)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02b");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 2)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02c");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 3)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_02a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_02a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_02a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_02a");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 4)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01a");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 5)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01b");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 6)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_01c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_01c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_01c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_01c");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 7)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03a");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03a");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 8)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03b");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03b");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        if (ViewDesign.Index == 9)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_02_office_03c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_dt1_11_office_03c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_13_office_03c");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ex_sm_15_office_03c");
          this.PreviewingDesigns = true;
          this.TEMP_RefreshInteriors(ViewDesign.Index - 1);
        }
        int index1 = ViewDesign.Index;
      });
      List<object> items3 = new List<object>();
      items3.Add((object) "Black");
      items3.Add((object) "Light Gray");
      items3.Add((object) "Yellow");
      items3.Add((object) "Blue");
      items3.Add((object) "Purple");
      items3.Add((object) "Orange");
      items3.Add((object) "Green");
      List<object> items4 = new List<object>();
      items4.Add((object) "Font 1");
      items4.Add((object) "Font 2");
      items4.Add((object) "Font 3");
      items4.Add((object) "Font 4");
      items4.Add((object) "Font 5");
      items4.Add((object) "Font 6");
      items4.Add((object) "Font 7");
      items4.Add((object) "Font 8");
      items4.Add((object) "Font 9");
      items4.Add((object) "Font 10");
      items4.Add((object) "Font 11");
      items4.Add((object) "Font 12");
      items4.Add((object) "Font 13");
      items4.Add((object) "Font 1");
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(this.OrganizationOptions, "Change Organisation Name");
      this.GUIMenus.Add(uiMenu4);
      UIMenuListItem View = new UIMenuListItem("View Display : ", items1, 0);
      uiMenu4.AddItem((UIMenuItem) View);
      UIMenuItem Name = new UIMenuItem("Name : " + this.CurrentText);
      uiMenu4.AddItem(Name);
      UIMenuListItem TC = new UIMenuListItem("Text Color : ", items3, 0);
      uiMenu4.AddItem((UIMenuItem) TC);
      UIMenuListItem TS = new UIMenuListItem("Text Style : ", items4, 0);
      uiMenu4.AddItem((UIMenuItem) TS);
      UIMenuItem SetName = new UIMenuItem("Set Name");
      uiMenu4.AddItem(SetName);
      UIMenuItem SetC = new UIMenuItem("Set Color ");
      uiMenu4.AddItem(SetC);
      UIMenuItem SetF = new UIMenuItem("Set Font");
      uiMenu4.AddItem(SetF);
      UIMenuItem SetO = new UIMenuItem("Set");
      uiMenu4.AddItem(SetO);
      List<object> Chairs = new List<object>();
      Chairs.Add((object) "ex_prop_offchair_exec_01");
      Chairs.Add((object) "ex_prop_offchair_exec_02");
      Chairs.Add((object) "ex_prop_offchair_exec_03");
      Chairs.Add((object) "ex_prop_offchair_exec_04");
      Chairs.Add((object) "ba_prop_battle_club_chair_01");
      Chairs.Add((object) "ba_prop_battle_club_chair_02");
      Chairs.Add((object) "ba_prop_battle_club_chair_03");
      List<object> Story = new List<object>();
      Story.Add((object) PedHash.Franklin);
      Story.Add((object) PedHash.Michael);
      Story.Add((object) PedHash.Trevor);
      Story.Add((object) PedHash.AmandaTownley);
      Story.Add((object) PedHash.TracyDisanto);
      Story.Add((object) PedHash.JimmyDisanto);
      Story.Add((object) PedHash.LamarDavis);
      Story.Add((object) PedHash.Stretch);
      Story.Add((object) PedHash.LesterCrest);
      Story.Add((object) PedHash.Tanisha);
      Story.Add((object) PedHash.Lazlow);
      Story.Add((object) PedHash.Molly);
      Story.Add((object) PedHash.SteveHains);
      Story.Add((object) PedHash.DaveNorton);
      Story.Add((object) PedHash.Devin);
      Story.Add((object) PedHash.Clay);
      Story.Add((object) PedHash.Tonya);
      Story.Add((object) PedHash.Wade);
      Story.Add((object) PedHash.NervousRon);
      Story.Add((object) PedHash.BradCutscene);
      Story.Add((object) PedHash.Antonb);
      Story.Add((object) PedHash.Chef);
      Story.Add((object) PedHash.Cletus);
      Story.Add((object) PedHash.JohnnyKlebitz);
      Story.Add((object) PedHash.Solomon);
      Story.Add((object) PedHash.WeiCheng);
      Story.Add((object) PedHash.MartinMadrazoCutscene);
      Story.Add((object) PedHash.TaoCheng);
      Story.Add((object) PedHash.Floyd);
      Story.Add((object) PedHash.Terry);
      Story.Add((object) PedHash.DebraCutscene);
      Story.Add((object) PedHash.Denise);
      Story.Add((object) PedHash.SiemonYetarian);
      List<object> Online = new List<object>();
      Online.Add((object) PedHash.Avon);
      Online.Add((object) PedHash.Agent14);
      List<object> Assistant = new List<object>();
      Assistant.Add((object) PedHash.ExecutivePAFemale01);
      Assistant.Add((object) PedHash.ExecutivePAFemale02);
      Assistant.Add((object) PedHash.ExecutivePAMale01);
      List<object> CAssistant = new List<object>();
      foreach (PedHash pedHash in (PedHash[]) Enum.GetValues(typeof (PedHash)))
        CAssistant.Add((object) pedHash);
      List<object> DAssistant = new List<object>();
      DAssistant.Add((object) "ig_agatha");
      DAssistant.Add((object) "ig_avery");
      DAssistant.Add((object) "ig_brucie2");
      DAssistant.Add((object) "ig_thornton");
      List<object> SRCPed = new List<object>();
      foreach (PedHash pedHash in (PedHash[]) Enum.GetValues(typeof (PedHash)))
      {
        if (pedHash.ToString().Contains(this.SearchPedInput))
          SRCPed.Add((object) pedHash);
      }
      List<object> Catagory = new List<object>();
      Catagory.Add((object) "ALL Peds");
      Catagory.Add((object) "Executive Peds");
      Catagory.Add((object) "Story Peds");
      Catagory.Add((object) "Online Peds");
      Catagory.Add((object) "Search Peds");
      UIMenu uiMenu5 = this.modMenuPool.AddSubMenu(this.OrganizationOptions, "Misc");
      this.GUIMenus.Add(uiMenu5);
      UIMenuListItem CEOChair = new UIMenuListItem("CEO Chair : ", Chairs, 0);
      uiMenu5.AddItem((UIMenuItem) CEOChair);
      UIMenuItem ChairA = new UIMenuItem("Set CEO Chair");
      uiMenu5.AddItem(ChairA);
      UIMenuListItem AChair = new UIMenuListItem("Assistant Chair : ", Chairs, 0);
      uiMenu5.AddItem((UIMenuItem) AChair);
      UIMenuItem ChairB = new UIMenuItem("Set Assistant Chair");
      uiMenu5.AddItem(ChairB);
      UIMenuItem uiMenuItem1 = new UIMenuItem("----------------Ped Model Catagories---------------");
      uiMenu5.AddItem(uiMenuItem1);
      UIMenuListItem APed = new UIMenuListItem("Executive Peds: ", Assistant, 0);
      uiMenu5.AddItem((UIMenuItem) APed);
      UIMenuListItem DPed = new UIMenuListItem("DC&R Peds: ", DAssistant, 0);
      uiMenu5.AddItem((UIMenuItem) DPed);
      UIMenuListItem CPed = new UIMenuListItem("All Peds: ", CAssistant, 0);
      uiMenu5.AddItem((UIMenuItem) CPed);
      UIMenuListItem SPed = new UIMenuListItem("Story Peds: ", Story, 0);
      uiMenu5.AddItem((UIMenuItem) SPed);
      UIMenuListItem OPed = new UIMenuListItem("Online Peds: ", Online, 0);
      uiMenu5.AddItem((UIMenuItem) OPed);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu5.AddItem(uiMenuItem2);
      UIMenuItem Search = new UIMenuItem("Search for Ped");
      uiMenu5.AddItem(Search);
      UIMenuItem SearchInput = new UIMenuItem("Search input : " + this.SearchPedInput);
      uiMenu5.AddItem(SearchInput);
      UIMenuListItem SHPed = new UIMenuListItem("Peds from Search: ", SRCPed, 0);
      uiMenu5.AddItem((UIMenuItem) SHPed);
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu5.AddItem(uiMenuItem3);
      UIMenuListItem Cata = new UIMenuListItem("Grab Model From : ", Catagory, 0);
      uiMenu5.AddItem((UIMenuItem) Cata);
      UIMenuItem PedA = new UIMenuItem("Set Executive Assistant Model");
      uiMenu5.AddItem(PedA);
      uiMenu5.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Search)
        {
          try
          {
            int num = 0;
            this.SearchPedInput = Game.GetUserInput(16);
            SearchInput.Text = "Search input : " + this.SearchPedInput;
            foreach (object obj in CAssistant)
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__16 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (PedHash), typeof (ExecutiveTower)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__16.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__16, obj).ToString().Contains(this.SearchPedInput))
                ++num;
            }
            if (num != 0)
            {
              SRCPed.Clear();
              foreach (object obj in CAssistant)
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__17 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (PedHash), typeof (ExecutiveTower)));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                PedHash pedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__17.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__17, obj);
                if (pedHash.ToString().Contains(this.SearchPedInput))
                  SRCPed.Add((object) pedHash);
              }
            }
          }
          catch
          {
          }
        }
        if (item == ChairA)
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ChairModelCEO = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__18.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__18, Chairs[CEOChair.Index]);
          this.Config.SetValue<string>("Misc", "ChairModelCEO", this.ChairModelCEO);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__20 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__20.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p20 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__20;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__19 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__19.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__19, "Set CEO Chair to model ", Chairs[CEOChair.Index]);
          target((CallSite) p20, type, obj);
          this.SpawnCEOChair(this.ChairModelCEO.ToString(), this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
        }
        if (item == ChairB)
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ChairModelAssistant = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__21.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__21, Chairs[AChair.Index]);
          this.Config.SetValue<string>("Misc", "ChairModelAssistant", this.ChairModelAssistant);
          this.Config.Save();
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__23 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__23 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__23.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p23 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__23;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__22 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__22.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__22, "Set Assistant Chair to model ", Chairs[AChair.Index]);
          target((CallSite) p23, type, obj);
          this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
        }
        if (item != PedA)
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__25 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__25.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p25 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__25;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__24 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__24.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__24, Catagory[Cata.Index], "ALL Peds");
        if (target1((CallSite) p25, obj1))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__26 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.AssistantPedModelPedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__26.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__26, CAssistant[CPed.Index]);
          this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelPedHash);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          UI.Notify("Ped Model Changed to " + this.AssistantPedModelPedHash.ToString());
        }
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__28 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__28.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p28 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__28;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__27 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__27.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__27, Catagory[Cata.Index], "Executive Peds");
        if (target2((CallSite) p28, obj2))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__29 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__29 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.AssistantPedModelPedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__29.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__29, Assistant[APed.Index]);
          this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelPedHash);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          UI.Notify("Ped Model Changed to " + this.AssistantPedModelPedHash.ToString());
        }
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__31 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__31 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__31.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p31 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__31;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__30 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__30 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__30.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__30, Catagory[Cata.Index], "Story Peds");
        if (target3((CallSite) p31, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__32 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.AssistantPedModelPedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__32.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__32, Story[SPed.Index]);
          this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelPedHash);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          UI.Notify("Ped Model Changed to " + this.AssistantPedModelPedHash.ToString());
        }
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__34 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__34 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target4 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__34.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p34 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__34;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__33 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__33 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj4 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__33.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__33, Catagory[Cata.Index], "Online Peds");
        if (target4((CallSite) p34, obj4))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__35 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__35 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.AssistantPedModelPedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__35.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__35, Online[OPed.Index]);
          this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelPedHash);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          UI.Notify("Ped Model Changed to " + this.AssistantPedModelPedHash.ToString());
        }
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__37 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__37 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target5 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__37.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p37 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__37;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__36 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__36 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj5 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__36.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__36, Catagory[Cata.Index], "Search Peds");
        if (target5((CallSite) p37, obj5))
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__38 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__38 = CallSite<Func<CallSite, object, PedHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (PedHash), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.AssistantPedModelPedHash = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__38.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__38, SRCPed[SHPed.Index]);
          this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelPedHash);
          this.Config.Save();
          this.AssistantPedModelType = "PedHash";
          this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
          this.Config.Save();
          UI.Notify("Ped Model Changed to " + this.AssistantPedModelPedHash.ToString());
        }
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__40 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__40 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target6 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__40.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p40 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__40;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__39 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__39 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj6 = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__39.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__39, Catagory[Cata.Index], "DC&R Peds");
        if (!target6((CallSite) p40, obj6))
          return;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__41 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__41 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.AssistantPedModelString = ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__41.Target((CallSite) ExecutiveTower.\u003C\u003Eo__775.\u003C\u003Ep__41, DAssistant[DPed.Index]);
        this.Config.SetValue<object>("Misc", "AssistantPedModel", (object) this.AssistantPedModelString);
        this.AssistantPedModelType = "string";
        this.Config.SetValue<string>("Misc", "AssistantPedModelType", this.AssistantPedModelType);
        this.Config.Save();
        UI.Notify("Ped Model Changed to " + this.AssistantPedModelString);
      });
      uiMenu4.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == TC)
        {
          this.currentColor = TC.Index;
          this.OStage = 0;
          this.CreateOText(1);
          this.IsinInterior = false;
          Script.Wait(1);
          this.Config.SetValue<int>("Design - OrganisationName", "CurrentFont", this.currentFont);
          this.Config.Save();
          Script.Wait(1);
          this.IsinInterior = true;
          UI.Notify(this.GetHostName() + " Succerfully changed Font of CEO Organisation Name");
        }
        if (item == TS)
        {
          this.OStage = 0;
          this.CreateOText(1);
          this.IsinInterior = false;
          Script.Wait(1);
          this.currentFont = TS.Index;
          this.Config.SetValue<int>("Design - OrganisationName", "CurrentColor", this.currentColor);
          this.Config.Save();
          Script.Wait(1);
          this.IsinInterior = true;
          UI.Notify(this.GetHostName() + " Succerfully changed Color of CEO Organisation Name");
        }
        if (item != View)
          return;
        if (View.Index == 0 && this.PlayerChangingName)
        {
          Game.Player.Character.IsVisible = true;
          this.PlayerChangingName = false;
          World.RenderingCamera = this.WarehouseCam;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.PlayerChangingNameCam.FarClip = 2000f;
          this.PlayerChangingNameCam.IsActive = false;
          this.PlayerChangingNameCam.Destroy();
          this.modMenuPool.CloseAllMenus();
          Game.Player.Character.FreezePosition = false;
          this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
          string Prop = this.ChairModelCEO.ToString();
          Script.Wait(1);
          this.SpawnCEOChair(Prop, this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          this.IsSittinginCeoSeat = true;
        }
        if (View.Index != 1 || this.PlayerChangingName)
          return;
        this.PlayerChangingName = true;
        this.PlayerChangingNameCam = World.CreateCamera(this.ChangeBusinessNameCameraPos, new Vector3(0.0f, 0.0f, this.ChangeBusinessNameCameraRotation), 50f);
        this.PlayerChangingNameCam.IsActive = true;
        Game.Player.Character.IsVisible = false;
        this.PlayerChangingNameCam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        Game.Player.Character.Position = this.ChangeBusinessNameCameraPos;
        Game.Player.Character.Heading = this.ChangeBusinessNameCameraRotation;
        Game.Player.Character.IsVisible = false;
        Game.Player.Character.FreezePosition = true;
      });
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SetC)
        {
          this.currentColor = TC.Index;
          this.OStage = 0;
          this.CreateOText(1);
          this.IsinInterior = false;
          Script.Wait(200);
          this.Config.SetValue<int>("Design - OrganisationName", "CurrentFont", this.currentFont);
          this.Config.Save();
          Script.Wait(200);
          this.IsinInterior = true;
          UI.Notify(this.GetHostName() + " Succerfully changed Font of CEO Organisation Name");
        }
        if (item == SetF)
        {
          this.OStage = 0;
          this.CreateOText(1);
          this.IsinInterior = false;
          Script.Wait(200);
          this.currentFont = TS.Index;
          this.Config.SetValue<int>("Design - OrganisationName", "CurrentColor", this.currentColor);
          this.Config.Save();
          Script.Wait(200);
          this.IsinInterior = true;
          UI.Notify(this.GetHostName() + " Succerfully changed Color of CEO Organisation Name");
        }
        if (item == SetName)
        {
          try
          {
            this.CurrentText = Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 10);
            Name.Text = "Name : " + this.CurrentText;
            this.Config.SetValue<string>("Design - OrganisationName", "CurrentText", this.CurrentText);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " Succefully changed name, please reload the mod for changes to take effect ");
            this.OStage = 0;
            this.CreateOText(1);
          }
          catch (Exception ex)
          {
            UI.Notify("~r~Error ~w~: User did not enter name!");
          }
        }
        if (item != SetO)
          return;
        this.IsinInterior = false;
        Script.Wait(200);
        this.currentColor = TC.Index;
        this.Config.SetValue<int>("Design - OrganisationName", "CurrentColor", this.currentColor);
        this.currentFont = TS.Index;
        this.Config.SetValue<int>("Design - OrganisationName", "CurrentFont", this.currentFont);
        this.Config.Save();
        Script.Wait(200);
        this.IsinInterior = true;
        UI.Notify(this.GetHostName() + " Succerfully changed name of CEO Organisation, Name, Style and Color, please reload the mod for changes to take effect");
        this.OStage = 0;
        this.CreateOText(1);
      });
    }

    private void SetupSpecialMissions()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.SpecialMissions, "Special Missions");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Race1 = new UIMenuItem("ExPatriot");
      uiMenu.AddItem(Race1);
      UIMenuItem Race2 = new UIMenuItem("Electrical Discharge");
      uiMenu.AddItem(Race2);
      UIMenuItem Race3 = new UIMenuItem("Piracy Scam ");
      uiMenu.AddItem(Race3);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Race3)
        {
          if ((Entity) this.VtoGet != (Entity) null)
            this.VtoGet.Delete();
          if (this.VtoGetBlip != (Blip) null)
            this.VtoGetBlip.Remove();
          Vector3 position = this.Randomlocation();
          this.VtoGet = World.CreateVehicle((GTA.Model) this.RandomVehicleFun(), position, 45f);
          UI.Notify(this.GetHostName() + " Boss weve got some Joker trying to hack into out server to steal stock, find them! and destroy there vehicle");
          UI.Notify("test1");
          this.VtoGetBlip = World.CreateBlip(position);
          UI.Notify("test2");
          this.VtoGetBlip.Name = "Find Vehicle";
          this.VtoGetBlip.Sprite = BlipSprite.Wifi;
          this.VtoGetBlip.Color = BlipColor.Blue;
          this.VtoGetBlip.Name = "Find Vehicle";
          UI.Notify("test3");
          this.stocktoloose = 0.0f;
          this.ISinPiracyScamMission = true;
          this.Piracymission = 1;
          this.HackhasStarted = false;
          this.GoPoint = this.VtoGet.Position;
          this.TimerLeft = 4000;
          this.VehicleSetup = true;
        }
        if (item == Race1)
        {
          UI.Notify(this.GetHostName() + " Retrieve the Patriot Stretch and bring it to the Combined Vehicle Storage");
          if ((Entity) this.VtoGet != (Entity) null)
            this.VtoGet.Delete();
          if (this.VtoGetBlip != (Blip) null)
            this.VtoGetBlip.Remove();
          foreach (Ped guard in this.Guards)
          {
            if ((Entity) guard != (Entity) null)
              guard.Delete();
          }
          foreach (Ped ped in this.Driver)
          {
            if (this.Driver != null)
              ped.Delete();
          }
          this.VtoGet = World.CreateVehicle((GTA.Model) "PATRIOT2", new Vector3(-1490f, 147f, 54f), 45f);
          this.VtoGetBlip = World.CreateBlip(this.VtoGet.Position);
          this.VtoGet.IsPersistent = true;
          this.VtoGetBlip.Name = "Retrieve Patriot Stretch";
          this.VtoGetBlip.Sprite = BlipSprite.SportsCar;
          this.VtoGetBlip.Color = BlipColor.White;
          this.VtoGetBlip.Name = "Retrieve Patriot Stretch";
          this.VehicleSetup = true;
          this.Missionnum = 12;
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1467f, 157f, 54f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1491f, 165f, 54f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1483f, 158f, 54f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1467f, 145f, 45f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1500f, 144f, 55f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1480f, 138f, 55f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1477f, 165f, 55f)));
          this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1466f, 164f, 55f)));
          foreach (Ped guard in this.Guards)
          {
            guard.Weapons.Give(WeaponHash.SpecialCarbineMk2, 9999, true, true);
            guard.RelationshipGroup = 4;
            guard.IsEnemy = true;
          }
          this.Driver.Add(World.CreatePed((GTA.Model) "CSB_TonyPrince", new Vector3(-1186.21f, 282f, 69f)));
          this.GotCar = false;
          Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.VtoGet.Handle, (InputArgument) 0);
          this.VtoGet.PrimaryColor = VehicleColor.MatteWhite;
          this.VtoGet.SecondaryColor = VehicleColor.MetallicWhite;
          this.VtoGet.SetMod(VehicleMod.Livery, 17, true);
          this.VtoGet.SetMod(VehicleMod.Struts, 8, true);
          this.VtoGet.SetMod(VehicleMod.Hood, 2, true);
          this.VtoGet.NumberPlate = "PR2NCE";
          this.VtoGet.SetMod(VehicleMod.ArchCover, 4, true);
          this.VtoGet.WindowTint = VehicleWindowTint.PureBlack;
        }
        if (item != Race2)
          return;
        UI.Notify(this.GetHostName() + " Retrieve Each Electric Car from the 10 car garage, and bring it back to Combined Vehicle Storage");
        if ((Entity) this.VtoGet != (Entity) null)
          this.VtoGet.Delete();
        if (this.VtoGetBlip != (Blip) null)
          this.VtoGetBlip.Remove();
        foreach (Ped guard in this.Guards)
        {
          if ((Entity) guard != (Entity) null)
            guard.Delete();
        }
        foreach (Ped ped in this.Driver)
        {
          if (this.Driver != null)
            ped.Delete();
        }
        this.VtoGet = World.CreateVehicle((GTA.Model) VehicleHash.Tezeract, new Vector3(222f, -999f, -99f), -50f);
        this.VtoGet1 = World.CreateVehicle((GTA.Model) VehicleHash.Neon, new Vector3(223f, -993f, -99f), -50f);
        this.VtoGet2 = World.CreateVehicle((GTA.Model) VehicleHash.Raiden, new Vector3(223f, -986f, -99f), -50f);
        this.VtoGet3 = World.CreateVehicle((GTA.Model) VehicleHash.Cyclone, new Vector3(223f, -981f, -99f), -50f);
        this.VtoGetBlip = World.CreateBlip(new Vector3(213f, -936f, 24f));
        this.VtoGet.IsPersistent = true;
        this.VtoGetBlip.Name = "Retrieve Eletric cars from Impound";
        this.VtoGetBlip.Sprite = BlipSprite.SportsCar;
        this.VtoGetBlip.Color = BlipColor.White;
        this.VtoGetBlip.Name = "Retrieve Eletric cars from Impound";
        this.VehicleSetup = true;
        this.Missionnum = 13;
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(233f, -942f, 29f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3((float) byte.MaxValue, -886f, 29f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(214f, -1003f, 29f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(212f, -946f, 24f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(210f, -944f, 24f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(218f, -939f, 24f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(224f, -930f, 24f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(221f, -927f, 24f)));
        foreach (Ped guard in this.Guards)
        {
          guard.Weapons.Give(WeaponHash.CarbineRifleMk2, 9999, true, true);
          guard.RelationshipGroup = 4;
          guard.IsEnemy = true;
        }
        this.GotCar = false;
        this.VtoGet.PrimaryColor = VehicleColor.MetallicBlack;
        this.VtoGet.SecondaryColor = VehicleColor.MetallicOrange;
        this.VtoGet1.PrimaryColor = VehicleColor.MetallicRaceYellow;
        this.VtoGet1.SecondaryColor = VehicleColor.MetallicRaceYellow;
        this.VtoGet2.PrimaryColor = VehicleColor.MetallicBlue;
        this.VtoGet2.SecondaryColor = VehicleColor.MetallicBlue;
        this.VtoGet3.PrimaryColor = VehicleColor.MetallicCabernetRed;
        this.VtoGet3.SecondaryColor = VehicleColor.MetallicGraphiteBlack;
        this.Vehiclesleft = 4;
      });
    }

    private void Supplyruns()
    {
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.SupplyRunsmenu, "Air Runs");
      this.GUIMenus.Add(uiMenu1);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.SupplyRunsmenu, "Land Runs");
      this.GUIMenus.Add(uiMenu2);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.SupplyRunsmenu, "Sea Runs");
      this.GUIMenus.Add(uiMenu3);
      UIMenuItem Mission1s = new UIMenuItem("Mission 1 Delivery: Easy");
      uiMenu1.AddItem(Mission1s);
      UIMenuItem Mission2s = new UIMenuItem("Mission 2 Delivery: Easy");
      uiMenu2.AddItem(Mission2s);
      UIMenuItem Mission3s = new UIMenuItem("Mission 3 Delivery: Easy");
      uiMenu3.AddItem(Mission3s);
      UIMenuItem Show = new UIMenuItem("Show Payouts");
      uiMenu1.AddItem(Show);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Mission3s)
          return;
        if (this.DestoryVehicle != (Blip) null)
          this.DestoryVehicle.Remove();
        if ((Entity) this.VehicleMissioncar != (Entity) null)
          this.VehicleMissioncar.Delete();
        this.Missionnum = 8;
        if ((Entity) this.VehicleId != (Entity) null)
          this.VehicleId.Delete();
        this.VehicleLoc = new System.Random();
        if (this.VehicleLoc.Next(1, 1) == 1)
          this.VehicleLocation = new Vector3(1314f, -3077f, 0.0f);
        if (this.VehicleLoc.Next(1, 2) == 2)
          this.VehicleLocation = new Vector3(-274f, -2746f, 0.0f);
        this.VehicleRan = new System.Random();
        if (this.VehicleRan.Next(1, 1) == 1)
        {
          this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Tug), this.VehicleLocation);
          this.VehicleMissioncar.IsInvincible = true;
          this.carid = "Tug";
        }
        this.DestoryVehicle = World.CreateBlip(this.VehicleLocation);
        this.DestoryVehicle.Sprite = BlipSprite.Boat;
        if (this.BusinessLocation == 0)
          this.DestoryVehicle.Color = BlipColor.Yellow;
        if (this.BusinessLocation == 1)
          this.DestoryVehicle.Color = BlipColor.Blue;
        if (this.BusinessLocation == 2)
          this.DestoryVehicle.Color = BlipColor.Green;
        if (this.BusinessLocation == 3)
          this.DestoryVehicle.Color = BlipColor.Red;
        this.DestoryVehicle.Name = "Retrieve Target";
        this.setupdelivery = true;
        this.RandomWanted = new System.Random();
        this.randomwantedwait = new System.Random();
        this.setupwantedfordelivery = true;
        this.VehicleSetup = true;
        this.warnedplayer = false;
        float num = (float) (25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
        UI.Notify(this.GetHostName() + " ok take this vehicle to the location marked and we earn " + num.ToString() + " in stock value");
        UI.Notify(this.GetHostName() + " id on car is a " + this.VehicleMissioncar.FriendlyName);
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Mission2s)
          return;
        int num1 = 0;
        if (this.DestoryVehicle != (Blip) null)
          this.DestoryVehicle.Remove();
        if ((Entity) this.VehicleMissioncar != (Entity) null)
          this.VehicleMissioncar.Delete();
        this.Missionnum = 7;
        if ((Entity) this.VehicleId != (Entity) null)
          this.VehicleId.Delete();
        this.VehicleLoc = new System.Random();
        float num2 = 0.0f;
        if (this.BusinessLocation == 0)
        {
          num2 = 160f;
          this.VehicleLocation = new Vector3(-110.189f, -619.3409f, 35.8f);
        }
        if (this.BusinessLocation == 1)
        {
          num2 = -76f;
          this.VehicleLocation = new Vector3(-36.74f, -788.57f, 43.99f);
        }
        if (this.BusinessLocation == 3)
        {
          num2 = 34f;
          this.VehicleLocation = new Vector3(-1410.33f, -501.73f, 32.22f);
        }
        if (this.BusinessLocation == 2)
        {
          num2 = 50f;
          this.VehicleLocation = new Vector3(-1592.95f, -617.655f, 30.6f);
        }
        this.VehicleRan = new System.Random();
        if (this.VehicleRan.Next(1, 5) == 1)
          num1 = 1;
        if (this.VehicleRan.Next(1, 5) == 2)
          num1 = 2;
        if (this.VehicleRan.Next(1, 5) == 3)
          num1 = 3;
        if (this.VehicleRan.Next(1, 5) == 4)
          num1 = 4;
        if (this.VehicleRan.Next(1, 5) == 5)
          num1 = 5;
        switch (num1)
        {
          case 1:
            this.carid = "Barracks";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Barracks), this.VehicleLocation, 0.0f);
            this.VehicleMissioncar.IsInvincible = true;
            this.VehicleMissioncar.Heading = num2;
            break;
          case 2:
            this.carid = "Stockade";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Stockade), this.VehicleLocation, 0.0f);
            this.VehicleMissioncar.IsInvincible = true;
            this.VehicleMissioncar.Heading = num2;
            break;
          case 3:
            this.carid = "Brickade";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Brickade), this.VehicleLocation, 0.0f);
            this.VehicleMissioncar.IsInvincible = true;
            this.VehicleMissioncar.Heading = num2;
            break;
          case 4:
            this.carid = "Riot";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Riot), this.VehicleLocation, 0.0f);
            this.VehicleMissioncar.IsInvincible = true;
            this.VehicleMissioncar.Heading = num2;
            break;
          case 5:
            this.carid = "Riot 2";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Riot2), this.VehicleLocation, 0.0f);
            this.VehicleMissioncar.IsInvincible = true;
            this.VehicleMissioncar.Heading = num2;
            break;
        }
        this.DestoryVehicle = World.CreateBlip(this.VehicleLocation);
        this.DestoryVehicle.Sprite = BlipSprite.HalfTrack;
        if (this.BusinessLocation == 0)
          this.DestoryVehicle.Color = BlipColor.Yellow;
        if (this.BusinessLocation == 1)
          this.DestoryVehicle.Color = BlipColor.Blue;
        if (this.BusinessLocation == 2)
          this.DestoryVehicle.Color = BlipColor.Green;
        if (this.BusinessLocation == 3)
          this.DestoryVehicle.Color = BlipColor.Red;
        this.DestoryVehicle.Name = "Retrieve Target";
        this.setupdelivery = true;
        this.RandomWanted = new System.Random();
        this.randomwantedwait = new System.Random();
        this.setupwantedfordelivery = true;
        this.VehicleSetup = true;
        this.warnedplayer = false;
        float num3 = (float) (25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
        UI.Notify(this.GetHostName() + " ok take this vehicle to the location marked and we earn " + num3.ToString() + " in stock value");
        UI.Notify(this.GetHostName() + " id on car is a " + this.VehicleMissioncar.FriendlyName);
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Show)
        {
          UI.Notify(this.GetHostName() + " Easy = " + ((float) (25000.0 + 25000.0 * (double) this.profitMargin / 100.0)).ToString() + "Stock in Value");
          UI.Notify(this.GetHostName() + " Meduim =" + ((float) (50000.0 + 50000.0 * (double) this.profitMargin / 100.0)).ToString() + " to " + ((float) (75000.0 + 75000.0 * (double) this.profitMargin / 100.0)).ToString() + "in Stock Value");
          UI.Notify(this.GetHostName() + " Hard = " + ((float) (125000.0 + 125000.0 * (double) this.profitMargin / 100.0)).ToString() + " to " + ((float) (250000.0 + 250000.0 * (double) this.profitMargin / 100.0)).ToString() + " in Stock Value");
        }
        if (item != Mission1s)
          return;
        this.VehicleRan = new System.Random();
        this.VehicleLoc = new System.Random();
        this.Missionnum = 6;
        int num1 = 0;
        if (this.DestoryVehicle != (Blip) null)
          this.DestoryVehicle.Remove();
        if ((Entity) this.VehicleMissioncar != (Entity) null)
          this.VehicleMissioncar.Delete();
        if ((Entity) this.VehicleId != (Entity) null)
          this.VehicleId.Delete();
        this.VehicleLocation = new Vector3(-981.171f, -2995.09f, 13.85f);
        int num2 = this.VehicleLoc.Next(1, 6);
        if (num2 == 1)
          this.VehicleLocation = new Vector3(-981.171f, -2995.09f, 13.85f);
        if (num2 == 2)
          this.VehicleLocation = new Vector3(-1684.69f, -3087f, 14f);
        if (num2 == 3)
          this.VehicleLocation = new Vector3(-1746.69f, -3078f, 14f);
        if (num2 == 4)
          this.VehicleLocation = new Vector3(-1857.97f, -3142.88f, 14f);
        if (num2 == 5)
          this.VehicleLocation = new Vector3(-1232.82f, -2268f, 14f);
        if (num2 == 6)
          this.VehicleLocation = new Vector3(-1024.24f, -3484.36f, 14f);
        if (this.VehicleRan.Next(1, 5) == 1)
          num1 = 1;
        if (this.VehicleRan.Next(1, 5) == 2)
          num1 = 2;
        if (this.VehicleRan.Next(1, 5) == 3)
          num1 = 3;
        if (this.VehicleRan.Next(1, 5) == 4)
          num1 = 4;
        if (this.VehicleRan.Next(1, 5) == 5)
          num1 = 5;
        switch (num1)
        {
          case 1:
            this.carid = "Alpha Z1";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.AlphaZ1), this.VehicleLocation);
            this.VehicleMissioncar.IsInvincible = true;
            break;
          case 2:
            this.carid = "Cuban 800";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Cuban800), this.VehicleLocation);
            this.VehicleMissioncar.IsInvincible = true;
            break;
          case 3:
            this.carid = "Duster";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Duster), this.VehicleLocation);
            this.VehicleMissioncar.IsInvincible = true;
            break;
          case 4:
            this.carid = "Mammatus";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Mammatus), this.VehicleLocation);
            this.VehicleMissioncar.IsInvincible = true;
            break;
          case 5:
            this.carid = "Mogul";
            this.VehicleMissioncar = World.CreateVehicle(this.RequestModel(VehicleHash.Mogul), this.VehicleLocation);
            this.VehicleMissioncar.IsInvincible = true;
            break;
        }
        this.DestoryVehicle = World.CreateBlip(this.VehicleLocation);
        this.DestoryVehicle.Sprite = BlipSprite.Plane;
        if (this.BusinessLocation == 0)
          this.DestoryVehicle.Color = BlipColor.Yellow;
        if (this.BusinessLocation == 1)
          this.DestoryVehicle.Color = BlipColor.Blue;
        if (this.BusinessLocation == 2)
          this.DestoryVehicle.Color = BlipColor.Green;
        if (this.BusinessLocation == 3)
          this.DestoryVehicle.Color = BlipColor.Red;
        this.DestoryVehicle.Name = "Retrieve Target";
        this.setupdelivery = true;
        this.RandomWanted = new System.Random();
        this.randomwantedwait = new System.Random();
        this.setupwantedfordelivery = true;
        this.warnedplayer = false;
        this.VehicleSetup = true;
        this.VehicleMissioncar.IsInvincible = true;
        float num3 = (float) (25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
        UI.Notify(this.GetHostName() + " ok take this vehicle to the location marked and we earn " + num3.ToString() + " in stock value");
        UI.Notify(this.GetHostName() + " id on car is a " + this.VehicleMissioncar.FriendlyName);
      });
    }

    public Vector3 GetRandomlocation()
    {
      int num = new System.Random().Next(1, 13);
      Vector3 vector3 = new Vector3(-1069.32f, -72.28f, 19f);
      if (num == 1)
        vector3 = new Vector3(-1069.32f, -72.28f, 19f);
      if (num == 2)
        vector3 = new Vector3(-1579.93f, -155.28f, 55f);
      if (num == 3)
        vector3 = new Vector3(-711.74f, -28.28f, 37f);
      if (num == 4)
        vector3 = new Vector3(6f, 253.58f, 109f);
      if (num == 5)
        vector3 = new Vector3(703f, 32f, 84f);
      if (num == 6)
        vector3 = new Vector3(1197f, -421.5f, 68f);
      if (num == 7)
        vector3 = new Vector3(1257f, -1428f, 35f);
      if (num == 8)
        vector3 = new Vector3(1264f, -2039f, 45f);
      if (num == 9)
        vector3 = new Vector3(527f, -2052f, 28f);
      if (num == 10)
        vector3 = new Vector3(-161f, -2087.8f, 26f);
      if (num == 11)
        vector3 = new Vector3(756f, -1723f, 30f);
      if (num == 12)
        vector3 = new Vector3(-816f, -2300f, 11f);
      if (num == 13)
        vector3 = new Vector3(-1839f, 136f, 78f);
      if (num > 13)
        vector3 = new Vector3(756f, -1723f, 30f);
      return vector3;
    }

    private void SetupAssetRecovery()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.AssetRecoveryMenu, "Asset Recovery Options");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Mission1 = new UIMenuItem("x3 Vehicles/Slamvan");
      uiMenu.AddItem(Mission1);
      UIMenuItem Mission2 = new UIMenuItem("x3 Vehicles/Buritto");
      uiMenu.AddItem(Mission2);
      UIMenuItem Mission3 = new UIMenuItem("x4 Vehicles/Buritto");
      uiMenu.AddItem(Mission3);
      UIMenuItem Mission4 = new UIMenuItem("x4 Vehicles/Speedo");
      uiMenu.AddItem(Mission4);
      UIMenuItem Mission5 = new UIMenuItem("x5 Vehicles/Buritto");
      uiMenu.AddItem(Mission5);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Mission1)
        {
          this.RecoveryAmtVehicles = 3;
          this.NotGotCargo1 = true;
          this.NotGotCargo2 = true;
          this.NotGotCargo3 = true;
          this.NotGotCargo4 = false;
          this.NotGotCargo5 = false;
          this.Spawn = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn1 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn2 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn3 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn4 = this.GetRandomlocation();
          Script.Wait(1);
          if ((Entity) this.CargoCrate1 != (Entity) null)
            this.CargoCrate1.Delete();
          if ((Entity) this.CargoCrate2 != (Entity) null)
            this.CargoCrate2.Delete();
          if ((Entity) this.CargoCrate3 != (Entity) null)
            this.CargoCrate3.Delete();
          if ((Entity) this.CargoCrate4 != (Entity) null)
            this.CargoCrate4.Delete();
          if ((Entity) this.CargoCrate5 != (Entity) null)
            this.CargoCrate5.Delete();
          if ((Entity) this.BreefCase != (Entity) null)
            this.BreefCase.Delete();
          if (this.CaseBlip != (Blip) null)
            this.CaseBlip.Remove();
          if ((Entity) this.Bike1 != (Entity) null)
            this.Bike1.Delete();
          if ((Entity) this.Bike2 != (Entity) null)
            this.Bike2.Delete();
          if ((Entity) this.Bike3 != (Entity) null)
            this.Bike3.Delete();
          if ((Entity) this.Bike4 != (Entity) null)
            this.Bike4.Delete();
          if ((Entity) this.Bike5 != (Entity) null)
            this.Bike5.Delete();
          if (this.Bike1Blip != (Blip) null)
            this.Bike1Blip.Remove();
          if (this.Bike2Blip != (Blip) null)
            this.Bike2Blip.Remove();
          if (this.Bike3Blip != (Blip) null)
            this.Bike3Blip.Remove();
          if (this.Bike4Blip != (Blip) null)
            this.Bike4Blip.Remove();
          if (this.Bike5Blip != (Blip) null)
            this.Bike5Blip.Remove();
          this.Bike1 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, this.Spawn);
          Vector3 offsetInWorldCoords1 = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Bike1.Heading), false, false);
          this.CargoCrate1.HasCollision = false;
          this.CargoCrate1.SetNoCollision((Entity) this.Bike1, true);
          this.Bike1.SetNoCollision((Entity) this.CargoCrate1, true);
          this.Bike2 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, this.Spawn1);
          Vector3 offsetInWorldCoords2 = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Bike2.Heading), false, false);
          this.CargoCrate2.HasCollision = false;
          this.CargoCrate2.SetNoCollision((Entity) this.Bike2, true);
          this.Bike2.SetNoCollision((Entity) this.CargoCrate2, true);
          this.Bike3 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, this.Spawn2);
          Vector3 offsetInWorldCoords3 = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Bike3.Heading), false, false);
          this.CargoCrate3.HasCollision = false;
          this.CargoCrate3.SetNoCollision((Entity) this.Bike3, true);
          this.Bike3.SetNoCollision((Entity) this.CargoCrate3, true);
          Script.Wait(500);
          this.Bike1.PlaceOnNextStreet();
          this.Bike2.PlaceOnNextStreet();
          this.Bike3.PlaceOnNextStreet();
          this.Bike1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.RightRear));
          foreach (Ped ped1 in this.PG)
          {
            if ((Entity) ped1 != (Entity) null)
            {
              Ped ped2 = ped1;
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped2, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped2, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped2, (InputArgument) 1);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped2, (InputArgument) 1);
            }
          }
          this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 150f, 1);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 150f, 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 150f, 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1Blip = World.CreateBlip(this.Bike1.Position);
          this.Bike1Blip.Sprite = BlipSprite.Truck;
          this.Bike1Blip.Name = "Goods Vehicle";
          this.Bike1Blip.Color = BlipColor.Red;
          this.Bike2Blip = World.CreateBlip(this.Bike2.Position);
          this.Bike2Blip.Sprite = BlipSprite.Truck;
          this.Bike2Blip.Name = "Goods Vehicle";
          this.Bike2Blip.Color = BlipColor.Red;
          this.Bike3Blip = World.CreateBlip(this.Bike3.Position);
          this.Bike3Blip.Sprite = BlipSprite.Truck;
          this.Bike3Blip.Name = "Goods Vehicle";
          this.Bike3Blip.Color = BlipColor.Red;
          this.GotBreefCase = false;
          this.SpawnedBreefcase = false;
          UI.Notify(this.GetHostName() + " Boss, Each of these vehicles marked, are carring special cargo, retrive the cargo from the back of each vehicle");
          this.Missionnum = 11;
          this.VehicleSetup = true;
          double num1 = 225000.0 * (double) this.profitMargin / 100.0;
        }
        if (item == Mission2)
        {
          this.RecoveryAmtVehicles = 3;
          this.NotGotCargo1 = true;
          this.NotGotCargo2 = true;
          this.NotGotCargo3 = true;
          this.NotGotCargo4 = false;
          this.NotGotCargo5 = false;
          this.Spawn = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn1 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn2 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn3 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn4 = this.GetRandomlocation();
          Script.Wait(1);
          if ((Entity) this.CargoCrate1 != (Entity) null)
            this.CargoCrate1.Delete();
          if ((Entity) this.CargoCrate2 != (Entity) null)
            this.CargoCrate2.Delete();
          if ((Entity) this.CargoCrate3 != (Entity) null)
            this.CargoCrate3.Delete();
          if ((Entity) this.CargoCrate4 != (Entity) null)
            this.CargoCrate4.Delete();
          if ((Entity) this.CargoCrate5 != (Entity) null)
            this.CargoCrate5.Delete();
          if ((Entity) this.BreefCase != (Entity) null)
            this.BreefCase.Delete();
          if (this.CaseBlip != (Blip) null)
            this.CaseBlip.Remove();
          if ((Entity) this.Bike1 != (Entity) null)
            this.Bike1.Delete();
          if ((Entity) this.Bike2 != (Entity) null)
            this.Bike2.Delete();
          if ((Entity) this.Bike3 != (Entity) null)
            this.Bike3.Delete();
          if ((Entity) this.Bike4 != (Entity) null)
            this.Bike4.Delete();
          if ((Entity) this.Bike5 != (Entity) null)
            this.Bike5.Delete();
          if (this.Bike1Blip != (Blip) null)
            this.Bike1Blip.Remove();
          if (this.Bike2Blip != (Blip) null)
            this.Bike2Blip.Remove();
          if (this.Bike3Blip != (Blip) null)
            this.Bike3Blip.Remove();
          if (this.Bike4Blip != (Blip) null)
            this.Bike4Blip.Remove();
          if (this.Bike5Blip != (Blip) null)
            this.Bike5Blip.Remove();
          this.Bike1 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn);
          Vector3 offsetInWorldCoords1 = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Bike1.Heading), false, false);
          this.CargoCrate1.HasCollision = false;
          this.CargoCrate1.SetNoCollision((Entity) this.Bike1, true);
          this.Bike1.SetNoCollision((Entity) this.CargoCrate1, true);
          this.Bike2 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn1);
          Vector3 offsetInWorldCoords2 = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Bike2.Heading), false, false);
          this.CargoCrate2.HasCollision = false;
          this.CargoCrate2.SetNoCollision((Entity) this.Bike2, true);
          this.Bike2.SetNoCollision((Entity) this.CargoCrate2, true);
          this.Bike3 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn2);
          Vector3 offsetInWorldCoords3 = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Bike3.Heading), false, false);
          this.CargoCrate3.HasCollision = false;
          this.CargoCrate3.SetNoCollision((Entity) this.Bike3, true);
          this.Bike3.SetNoCollision((Entity) this.CargoCrate3, true);
          Script.Wait(500);
          this.Bike1.PlaceOnNextStreet();
          this.Bike2.PlaceOnNextStreet();
          this.Bike3.PlaceOnNextStreet();
          this.Bike1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.RightRear));
          foreach (Ped ped1 in this.PG)
          {
            if ((Entity) ped1 != (Entity) null)
            {
              Ped ped2 = ped1;
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped2, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped2, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped2, (InputArgument) 1);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped2, (InputArgument) 1);
            }
          }
          this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 150f, 1);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 150f, 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 150f, 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1Blip = World.CreateBlip(this.Bike1.Position);
          this.Bike1Blip.Sprite = BlipSprite.Truck;
          this.Bike1Blip.Name = "Goods Vehicle";
          this.Bike1Blip.Color = BlipColor.Red;
          this.Bike2Blip = World.CreateBlip(this.Bike2.Position);
          this.Bike2Blip.Sprite = BlipSprite.Truck;
          this.Bike2Blip.Name = "Goods Vehicle";
          this.Bike2Blip.Color = BlipColor.Red;
          this.Bike3Blip = World.CreateBlip(this.Bike3.Position);
          this.Bike3Blip.Sprite = BlipSprite.Truck;
          this.Bike3Blip.Name = "Goods Vehicle";
          this.Bike3Blip.Color = BlipColor.Red;
          this.GotBreefCase = false;
          this.SpawnedBreefcase = false;
          UI.Notify(this.GetHostName() + " Boss, Each of these vehicles marked, are carring special cargo, retrive the cargo from the back of each vehicle");
          this.Missionnum = 11;
          this.VehicleSetup = true;
          double num1 = 225000.0 * (double) this.profitMargin / 100.0;
        }
        if (item == Mission3)
        {
          this.RecoveryAmtVehicles = 4;
          this.NotGotCargo1 = true;
          this.NotGotCargo2 = true;
          this.NotGotCargo3 = true;
          this.NotGotCargo4 = true;
          this.NotGotCargo5 = false;
          this.Spawn = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn1 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn2 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn3 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn4 = this.GetRandomlocation();
          Script.Wait(1);
          if ((Entity) this.CargoCrate1 != (Entity) null)
            this.CargoCrate1.Delete();
          if ((Entity) this.CargoCrate2 != (Entity) null)
            this.CargoCrate2.Delete();
          if ((Entity) this.CargoCrate3 != (Entity) null)
            this.CargoCrate3.Delete();
          if ((Entity) this.CargoCrate4 != (Entity) null)
            this.CargoCrate4.Delete();
          if ((Entity) this.CargoCrate5 != (Entity) null)
            this.CargoCrate5.Delete();
          if ((Entity) this.BreefCase != (Entity) null)
            this.BreefCase.Delete();
          if (this.CaseBlip != (Blip) null)
            this.CaseBlip.Remove();
          if ((Entity) this.Bike1 != (Entity) null)
            this.Bike1.Delete();
          if ((Entity) this.Bike2 != (Entity) null)
            this.Bike2.Delete();
          if ((Entity) this.Bike3 != (Entity) null)
            this.Bike3.Delete();
          if ((Entity) this.Bike4 != (Entity) null)
            this.Bike4.Delete();
          if ((Entity) this.Bike5 != (Entity) null)
            this.Bike5.Delete();
          if (this.Bike1Blip != (Blip) null)
            this.Bike1Blip.Remove();
          if (this.Bike2Blip != (Blip) null)
            this.Bike2Blip.Remove();
          if (this.Bike3Blip != (Blip) null)
            this.Bike3Blip.Remove();
          if (this.Bike4Blip != (Blip) null)
            this.Bike4Blip.Remove();
          if (this.Bike5Blip != (Blip) null)
            this.Bike5Blip.Remove();
          this.Bike1 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn);
          Vector3 offsetInWorldCoords1 = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Bike1.Heading), false, false);
          this.CargoCrate1.HasCollision = false;
          this.CargoCrate1.SetNoCollision((Entity) this.Bike1, true);
          this.Bike1.SetNoCollision((Entity) this.CargoCrate1, true);
          this.Bike2 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn1);
          Vector3 offsetInWorldCoords2 = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Bike2.Heading), false, false);
          this.CargoCrate2.HasCollision = false;
          this.CargoCrate2.SetNoCollision((Entity) this.Bike2, true);
          this.Bike2.SetNoCollision((Entity) this.CargoCrate2, true);
          this.Bike3 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn2);
          Vector3 offsetInWorldCoords3 = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Bike3.Heading), false, false);
          this.CargoCrate3.HasCollision = false;
          this.CargoCrate3.SetNoCollision((Entity) this.Bike3, true);
          this.Bike3.SetNoCollision((Entity) this.CargoCrate3, true);
          this.Bike4 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn3);
          Vector3 offsetInWorldCoords4 = this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate4 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.Bike4.Heading), false, false);
          this.CargoCrate4.HasCollision = false;
          this.CargoCrate4.SetNoCollision((Entity) this.Bike4, true);
          this.Bike4.SetNoCollision((Entity) this.CargoCrate4, true);
          Script.Wait(500);
          this.Bike1.PlaceOnNextStreet();
          this.Bike2.PlaceOnNextStreet();
          this.Bike3.PlaceOnNextStreet();
          this.Bike4.PlaceOnNextStreet();
          this.Bike1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.RightRear));
          foreach (Ped ped1 in this.PG)
          {
            if ((Entity) ped1 != (Entity) null)
            {
              Ped ped2 = ped1;
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped2, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped2, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped2, (InputArgument) 1);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped2, (InputArgument) 1);
            }
          }
          this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 150f, 1);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 150f, 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 150f, 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointD, 60f, 150f, 1);
          this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1Blip = World.CreateBlip(this.Bike1.Position);
          this.Bike1Blip.Sprite = BlipSprite.Truck;
          this.Bike1Blip.Name = "Goods Vehicle";
          this.Bike1Blip.Color = BlipColor.Red;
          this.Bike2Blip = World.CreateBlip(this.Bike2.Position);
          this.Bike2Blip.Sprite = BlipSprite.Truck;
          this.Bike2Blip.Name = "Goods Vehicle";
          this.Bike2Blip.Color = BlipColor.Red;
          this.Bike3Blip = World.CreateBlip(this.Bike3.Position);
          this.Bike3Blip.Sprite = BlipSprite.Truck;
          this.Bike3Blip.Name = "Goods Vehicle";
          this.Bike3Blip.Color = BlipColor.Red;
          this.Bike4Blip = World.CreateBlip(this.Bike4.Position);
          this.Bike4Blip.Sprite = BlipSprite.Truck;
          this.Bike4Blip.Name = "Goods Vehicle";
          this.Bike4Blip.Color = BlipColor.Red;
          this.GotBreefCase = false;
          this.SpawnedBreefcase = false;
          UI.Notify(this.GetHostName() + " Boss, Each of these vehicles marked, are carring special cargo, retrive the cargo from the back of each vehicle");
          this.Missionnum = 11;
          this.VehicleSetup = true;
          double num1 = 225000.0 * (double) this.profitMargin / 100.0;
        }
        if (item == Mission4)
        {
          this.RecoveryAmtVehicles = 4;
          this.NotGotCargo1 = true;
          this.NotGotCargo2 = true;
          this.NotGotCargo3 = true;
          this.NotGotCargo4 = true;
          this.NotGotCargo5 = false;
          this.Spawn = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn1 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn2 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn3 = this.GetRandomlocation();
          Script.Wait(1);
          this.Spawn4 = this.GetRandomlocation();
          Script.Wait(1);
          if ((Entity) this.CargoCrate1 != (Entity) null)
            this.CargoCrate1.Delete();
          if ((Entity) this.CargoCrate2 != (Entity) null)
            this.CargoCrate2.Delete();
          if ((Entity) this.CargoCrate3 != (Entity) null)
            this.CargoCrate3.Delete();
          if ((Entity) this.CargoCrate4 != (Entity) null)
            this.CargoCrate4.Delete();
          if ((Entity) this.CargoCrate5 != (Entity) null)
            this.CargoCrate5.Delete();
          if ((Entity) this.BreefCase != (Entity) null)
            this.BreefCase.Delete();
          if (this.CaseBlip != (Blip) null)
            this.CaseBlip.Remove();
          if ((Entity) this.Bike1 != (Entity) null)
            this.Bike1.Delete();
          if ((Entity) this.Bike2 != (Entity) null)
            this.Bike2.Delete();
          if ((Entity) this.Bike3 != (Entity) null)
            this.Bike3.Delete();
          if ((Entity) this.Bike4 != (Entity) null)
            this.Bike4.Delete();
          if ((Entity) this.Bike5 != (Entity) null)
            this.Bike5.Delete();
          if (this.Bike1Blip != (Blip) null)
            this.Bike1Blip.Remove();
          if (this.Bike2Blip != (Blip) null)
            this.Bike2Blip.Remove();
          if (this.Bike3Blip != (Blip) null)
            this.Bike3Blip.Remove();
          if (this.Bike4Blip != (Blip) null)
            this.Bike4Blip.Remove();
          if (this.Bike5Blip != (Blip) null)
            this.Bike5Blip.Remove();
          this.Bike1 = World.CreateVehicle((GTA.Model) VehicleHash.Speedo, this.Spawn);
          Vector3 offsetInWorldCoords1 = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Bike1.Heading), false, false);
          this.CargoCrate1.HasCollision = false;
          this.CargoCrate1.SetNoCollision((Entity) this.Bike1, true);
          this.Bike1.SetNoCollision((Entity) this.CargoCrate1, true);
          this.Bike2 = World.CreateVehicle((GTA.Model) VehicleHash.Speedo, this.Spawn1);
          Vector3 offsetInWorldCoords2 = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Bike2.Heading), false, false);
          this.CargoCrate2.HasCollision = false;
          this.CargoCrate2.SetNoCollision((Entity) this.Bike2, true);
          this.Bike2.SetNoCollision((Entity) this.CargoCrate2, true);
          this.Bike3 = World.CreateVehicle((GTA.Model) VehicleHash.Speedo, this.Spawn2);
          Vector3 offsetInWorldCoords3 = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Bike3.Heading), false, false);
          this.CargoCrate3.HasCollision = false;
          this.CargoCrate3.SetNoCollision((Entity) this.Bike3, true);
          this.Bike3.SetNoCollision((Entity) this.CargoCrate3, true);
          this.Bike4 = World.CreateVehicle((GTA.Model) VehicleHash.Speedo, this.Spawn3);
          Vector3 offsetInWorldCoords4 = this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.CargoCrate4 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.Bike4.Heading), false, false);
          this.CargoCrate4.HasCollision = false;
          this.CargoCrate4.SetNoCollision((Entity) this.Bike4, true);
          this.Bike4.SetNoCollision((Entity) this.CargoCrate4, true);
          Script.Wait(500);
          this.Bike1.PlaceOnNextStreet();
          this.Bike2.PlaceOnNextStreet();
          this.Bike3.PlaceOnNextStreet();
          this.Bike4.PlaceOnNextStreet();
          this.Bike1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike1.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike2.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike3.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
          this.Bike4.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.RightRear));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Driver));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Passenger));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear));
          this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.RightRear));
          foreach (Ped ped1 in this.PG)
          {
            if ((Entity) ped1 != (Entity) null)
            {
              Ped ped2 = ped1;
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped2, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped2, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped2, (InputArgument) 1);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped2, (InputArgument) 1);
            }
          }
          this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 150f, 1);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 150f, 1);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 150f, 1);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
          Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
          this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointD, 60f, 150f, 1);
          this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
          this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
          this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
          this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
          this.Bike1Blip = World.CreateBlip(this.Bike1.Position);
          this.Bike1Blip.Sprite = BlipSprite.Truck;
          this.Bike1Blip.Name = "Goods Vehicle";
          this.Bike1Blip.Color = BlipColor.Red;
          this.Bike2Blip = World.CreateBlip(this.Bike2.Position);
          this.Bike2Blip.Sprite = BlipSprite.Truck;
          this.Bike2Blip.Name = "Goods Vehicle";
          this.Bike2Blip.Color = BlipColor.Red;
          this.Bike3Blip = World.CreateBlip(this.Bike3.Position);
          this.Bike3Blip.Sprite = BlipSprite.Truck;
          this.Bike3Blip.Name = "Goods Vehicle";
          this.Bike3Blip.Color = BlipColor.Red;
          this.Bike4Blip = World.CreateBlip(this.Bike4.Position);
          this.Bike4Blip.Sprite = BlipSprite.Truck;
          this.Bike4Blip.Name = "Goods Vehicle";
          this.Bike4Blip.Color = BlipColor.Red;
          this.GotBreefCase = false;
          this.SpawnedBreefcase = false;
          UI.Notify(this.GetHostName() + " Boss, Each of these vehicles marked, are carring special cargo, retrive the cargo from the back of each vehicle");
          this.Missionnum = 11;
          this.VehicleSetup = true;
          double num1 = 225000.0 * (double) this.profitMargin / 100.0;
        }
        if (item != Mission5)
          return;
        this.RecoveryAmtVehicles = 5;
        this.NotGotCargo1 = true;
        this.NotGotCargo2 = true;
        this.NotGotCargo3 = true;
        this.NotGotCargo4 = true;
        this.NotGotCargo5 = true;
        this.Spawn = this.GetRandomlocation();
        Script.Wait(1);
        this.Spawn1 = this.GetRandomlocation();
        Script.Wait(1);
        this.Spawn2 = this.GetRandomlocation();
        Script.Wait(1);
        this.Spawn3 = this.GetRandomlocation();
        Script.Wait(1);
        this.Spawn4 = this.GetRandomlocation();
        Script.Wait(1);
        if ((Entity) this.CargoCrate1 != (Entity) null)
          this.CargoCrate1.Delete();
        if ((Entity) this.CargoCrate2 != (Entity) null)
          this.CargoCrate2.Delete();
        if ((Entity) this.CargoCrate3 != (Entity) null)
          this.CargoCrate3.Delete();
        if ((Entity) this.CargoCrate4 != (Entity) null)
          this.CargoCrate4.Delete();
        if ((Entity) this.CargoCrate5 != (Entity) null)
          this.CargoCrate5.Delete();
        if ((Entity) this.BreefCase != (Entity) null)
          this.BreefCase.Delete();
        if (this.CaseBlip != (Blip) null)
          this.CaseBlip.Remove();
        if ((Entity) this.Bike1 != (Entity) null)
          this.Bike1.Delete();
        if ((Entity) this.Bike2 != (Entity) null)
          this.Bike2.Delete();
        if ((Entity) this.Bike3 != (Entity) null)
          this.Bike3.Delete();
        if ((Entity) this.Bike4 != (Entity) null)
          this.Bike4.Delete();
        if ((Entity) this.Bike5 != (Entity) null)
          this.Bike5.Delete();
        if (this.Bike1Blip != (Blip) null)
          this.Bike1Blip.Remove();
        if (this.Bike2Blip != (Blip) null)
          this.Bike2Blip.Remove();
        if (this.Bike3Blip != (Blip) null)
          this.Bike3Blip.Remove();
        if (this.Bike4Blip != (Blip) null)
          this.Bike4Blip.Remove();
        if (this.Bike5Blip != (Blip) null)
          this.Bike5Blip.Remove();
        this.Bike1 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn);
        Vector3 offsetInWorldCoords5 = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
        this.CargoCrate1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.Bike1.Heading), false, false);
        this.CargoCrate1.HasCollision = false;
        this.CargoCrate1.SetNoCollision((Entity) this.Bike1, true);
        this.Bike1.SetNoCollision((Entity) this.CargoCrate1, true);
        this.Bike2 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn1);
        Vector3 offsetInWorldCoords6 = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
        this.CargoCrate2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.Bike2.Heading), false, false);
        this.CargoCrate2.HasCollision = false;
        this.CargoCrate2.SetNoCollision((Entity) this.Bike2, true);
        this.Bike2.SetNoCollision((Entity) this.CargoCrate2, true);
        this.Bike3 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn2);
        Vector3 offsetInWorldCoords7 = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
        this.CargoCrate3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords7, new Vector3(0.0f, 0.0f, this.Bike3.Heading), false, false);
        this.CargoCrate3.HasCollision = false;
        this.CargoCrate3.SetNoCollision((Entity) this.Bike3, true);
        this.Bike3.SetNoCollision((Entity) this.CargoCrate3, true);
        this.Bike4 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn3);
        Vector3 offsetInWorldCoords8 = this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
        this.CargoCrate4 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords8, new Vector3(0.0f, 0.0f, this.Bike4.Heading), false, false);
        this.CargoCrate4.HasCollision = false;
        this.CargoCrate4.SetNoCollision((Entity) this.Bike4, true);
        this.Bike4.SetNoCollision((Entity) this.CargoCrate4, true);
        this.Bike5 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito, this.Spawn4);
        Vector3 offsetInWorldCoords9 = this.Bike5.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
        this.CargoCrate5 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords9, new Vector3(0.0f, 0.0f, this.Bike5.Heading), false, false);
        this.CargoCrate5.HasCollision = false;
        this.CargoCrate5.SetNoCollision((Entity) this.Bike5, true);
        this.Bike5.SetNoCollision((Entity) this.CargoCrate5, true);
        Script.Wait(500);
        this.Bike1.PlaceOnNextStreet();
        this.Bike2.PlaceOnNextStreet();
        this.Bike3.PlaceOnNextStreet();
        this.Bike4.PlaceOnNextStreet();
        this.Bike5.PlaceOnNextStreet();
        this.Bike1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
        this.Bike1.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
        this.Bike1.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike1.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
        this.Bike2.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
        this.Bike2.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike2.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
        this.Bike3.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
        this.Bike3.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike3.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike4.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
        this.Bike4.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
        this.Bike4.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike4.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike5.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.FbiSuit01);
        this.Bike5.CreatePedOnSeat(VehicleSeat.Passenger, (GTA.Model) PedHash.FbiSuit01);
        this.Bike5.CreatePedOnSeat(VehicleSeat.LeftRear, (GTA.Model) PedHash.FbiSuit01);
        this.Bike5.CreatePedOnSeat(VehicleSeat.RightRear, (GTA.Model) PedHash.FbiSuit01);
        this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Driver));
        this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.Passenger));
        this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear));
        this.PG.Add(this.Bike1.GetPedOnSeat(VehicleSeat.RightRear));
        this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Driver));
        this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.Passenger));
        this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear));
        this.PG.Add(this.Bike2.GetPedOnSeat(VehicleSeat.RightRear));
        this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Driver));
        this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.Passenger));
        this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear));
        this.PG.Add(this.Bike3.GetPedOnSeat(VehicleSeat.RightRear));
        this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Driver));
        this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.Passenger));
        this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear));
        this.PG.Add(this.Bike4.GetPedOnSeat(VehicleSeat.RightRear));
        this.PG.Add(this.Bike5.GetPedOnSeat(VehicleSeat.Driver));
        this.PG.Add(this.Bike5.GetPedOnSeat(VehicleSeat.Passenger));
        this.PG.Add(this.Bike5.GetPedOnSeat(VehicleSeat.LeftRear));
        this.PG.Add(this.Bike5.GetPedOnSeat(VehicleSeat.RightRear));
        foreach (Ped ped1 in this.PG)
        {
          if ((Entity) ped1 != (Entity) null)
          {
            Ped ped2 = ped1;
            int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped2, (InputArgument) num);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped2, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped2, (InputArgument) 1);
            Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped2, (InputArgument) 1);
          }
        }
        this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 150f, 1);
        this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        this.Bike1.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike1.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike1.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
        this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 150f, 1);
        this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        this.Bike2.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike2.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike2.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
        this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 150f, 1);
        this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        this.Bike3.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike3.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike3.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike4.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
        this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointD, 60f, 150f, 1);
        this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        this.Bike4.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike4.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike4.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        Function.Call(Hash._0x90D2156198831D69, (InputArgument) this.Bike5.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) true);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.Bike5.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.Bike5.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) 17, (InputArgument) 1);
        this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointE, 60f, 150f, 1);
        this.Bike5.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        this.Bike5.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.Bike5.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike5.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.Bike5.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.SMG, 9999, true, true);
        this.Bike5.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        this.Bike1Blip = World.CreateBlip(this.Bike1.Position);
        this.Bike1Blip.Sprite = BlipSprite.Truck;
        this.Bike1Blip.Name = "Goods Vehicle";
        this.Bike1Blip.Color = BlipColor.Red;
        this.Bike2Blip = World.CreateBlip(this.Bike2.Position);
        this.Bike2Blip.Sprite = BlipSprite.Truck;
        this.Bike2Blip.Name = "Goods Vehicle";
        this.Bike2Blip.Color = BlipColor.Red;
        this.Bike3Blip = World.CreateBlip(this.Bike3.Position);
        this.Bike3Blip.Sprite = BlipSprite.Truck;
        this.Bike3Blip.Name = "Goods Vehicle";
        this.Bike3Blip.Color = BlipColor.Red;
        this.Bike4Blip = World.CreateBlip(this.Bike4.Position);
        this.Bike4Blip.Sprite = BlipSprite.Truck;
        this.Bike4Blip.Name = "Goods Vehicle";
        this.Bike4Blip.Color = BlipColor.Red;
        this.Bike5Blip = World.CreateBlip(this.Bike5.Position);
        this.Bike5Blip.Sprite = BlipSprite.Truck;
        this.Bike5Blip.Name = "Goods Vehicle";
        this.Bike5Blip.Color = BlipColor.Red;
        this.GotBreefCase = false;
        this.SpawnedBreefcase = false;
        UI.Notify(this.GetHostName() + " Boss, Each of these vehicles marked, are carring special cargo, retrive the cargo from the back of each vehicle");
        this.Missionnum = 11;
        this.VehicleSetup = true;
        double num2 = 225000.0 * (double) this.profitMargin / 100.0;
      });
    }

    private void ChooseVehicle(int i)
    {
      if (i == 1)
      {
        this.carid = "Mogul";
        this.VehicleMissioncar = World.CreateVehicle(new GTA.Model(-749299473), this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i == 2)
      {
        this.carid = "Cuban 800";
        this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Cuban800, this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i == 3)
      {
        this.carid = "Duster";
        this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Duster, this.VehicleLocation);
        this.VehicleMissioncar.PlaceOnGround();
      }
      if (i != 4)
        return;
      this.carid = "Mammatus";
      this.VehicleMissioncar = World.CreateVehicle((GTA.Model) VehicleHash.Mammatus, this.VehicleLocation);
      this.VehicleMissioncar.PlaceOnGround();
    }

    private void SetupGarage()
    {
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.Garage, "Air Vehicles");
      this.GUIMenus.Add(uiMenu1);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.Garage, "Land Vehicles");
      this.GUIMenus.Add(uiMenu2);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.Garage, "Misc");
      this.GUIMenus.Add(uiMenu3);
      UIMenuItem buzzard = new UIMenuItem("Attack Buzzard : $2,250,000");
      uiMenu1.AddItem(buzzard);
      UIMenuItem savage = new UIMenuItem("Savage: $1,950,000");
      uiMenu1.AddItem(savage);
      UIMenuItem Akula = new UIMenuItem("Akula: $2,785,000");
      uiMenu1.AddItem(Akula);
      UIMenuItem Hunter = new UIMenuItem("Hunter: $3,100,000");
      uiMenu1.AddItem(Hunter);
      UIMenuItem Valkyrie = new UIMenuItem("Valkyrie: $2,850,000");
      uiMenu1.AddItem(Valkyrie);
      UIMenuItem Annihilator = new UIMenuItem("Annihilator: $1,825,000");
      uiMenu1.AddItem(Annihilator);
      UIMenuItem FMJ = new UIMenuItem("FMJ");
      uiMenu2.AddItem(FMJ);
      UIMenuItem A911 = new UIMenuItem("811");
      uiMenu2.AddItem(A911);
      UIMenuItem X80 = new UIMenuItem("X80 Proto");
      uiMenu2.AddItem(X80);
      UIMenuItem AATrailerA = new UIMenuItem("AA-Trailer A :$500,000");
      uiMenu3.AddItem(AATrailerA);
      UIMenuItem AATrailerB = new UIMenuItem("AA-Trailer-B :$500,000");
      uiMenu3.AddItem(AATrailerB);
      UIMenuItem AATrailerC = new UIMenuItem("AA-Trailer-C :$500,000");
      uiMenu3.AddItem(AATrailerC);
      UIMenuItem S7 = new UIMenuItem("Seven-70 :$650,000");
      uiMenu2.AddItem(S7);
      UIMenuItem TL = new UIMenuItem("Turreted Limo :$1,650,000");
      uiMenu2.AddItem(TL);
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(this.Garage, "Rent a vehicle : -$25000");
      this.GUIMenus.Add(uiMenu4);
      List<object> items = new List<object>();
      VehicleHash[] allvehiclehashes = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 0; index < allvehiclehashes.Length; ++index)
        items.Add((object) allvehiclehashes[index]);
      UIMenuListItem list = new UIMenuListItem("Vehicle: ", items, 0);
      uiMenu4.AddItem((UIMenuItem) list);
      UIMenuItem getvehicle = new UIMenuItem("Rent Car: -$2500");
      uiMenu4.AddItem(getvehicle);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == AATrailerA)
        {
          if (this.Config.GetValue<int>("Setup", "AATrailerABought", this.AATrailerABought) == 0)
          {
            if (Game.Player.Money > 500000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.AATrailerABought = 1;
              Game.Player.Money -= 500000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
              this.AirVehicle.SetMod(VehicleMod.Roof, -1, true);
              UI.Notify(this.GetHostName() + " ok your Anti Aicraft trailer is on the roof");
              this.Config.SetValue<int>("Setup", " AATrailerABought", this.AATrailerABought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Anti Aicraft trailer");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
            this.AirVehicle.SetMod(VehicleMod.Roof, -1, true);
            UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
            this.AirVehicle.SetMod(VehicleMod.Roof, -1, true);
            UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
          }
        }
        if (item == AATrailerB)
        {
          if (this.Config.GetValue<int>("Setup", "AATrailerBBought", this.AATrailerBBought) == 0)
          {
            if (Game.Player.Money > 500000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.AATrailerBBought = 1;
              Game.Player.Money -= 500000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
              this.AirVehicle.SetMod(VehicleMod.Roof, 0, true);
              UI.Notify(this.GetHostName() + " ok your Anti Aicraft trailer is on the roof");
              this.Config.SetValue<int>("Setup", " AATrailerBBought", this.AATrailerBBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Anti Aicraft trailer");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
            this.AirVehicle.SetMod(VehicleMod.Roof, 0, true);
            UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
            this.AirVehicle.SetMod(VehicleMod.Roof, 0, true);
            UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
          }
        }
        if (item != AATrailerC)
          return;
        if (this.Config.GetValue<int>("Setup", "AATrailerCBought", this.AATrailerCBought) == 0)
        {
          if (Game.Player.Money > 500000)
          {
            if ((Entity) this.AirVehicle != (Entity) null)
              this.AirVehicle.Delete();
            this.AATrailerCBought = 1;
            Game.Player.Money -= 500000;
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
            this.AirVehicle.SetMod(VehicleMod.Roof, 1, true);
            UI.Notify(this.GetHostName() + " ok your Anti Aicraft trailer is on the roof");
            this.Config.SetValue<int>("Setup", " AATrailerCBought", this.AATrailerCBought);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Anti Aicraft trailer");
        }
        else if ((Entity) this.AirVehicle != (Entity) null)
        {
          this.AirVehicle.Delete();
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
          this.AirVehicle.SetMod(VehicleMod.Roof, 1, true);
          UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
        }
        else
        {
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.TrailerSmall2, this.HeliSpawn, 90f);
          this.AirVehicle.SetMod(VehicleMod.Roof, 1, true);
          UI.Notify(this.GetHostName() + " ok your Anti Aircraft Trailer is on the roof");
        }
      });
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getvehicle)
          return;
        if ((Entity) this.AirVehicle != (Entity) null)
          this.AirVehicle.Delete();
        if ((Entity) this.RentedVehicle != (Entity) null)
          this.RentedVehicle.Delete();
        VehicleHash vehicleHash = allvehiclehashes[list.Index];
        this.RentedVehicle = World.CreateVehicle((GTA.Model) vehicleHash, this.CarSpawn);
        UI.Notify(this.GetHostName() + " Ok the car is a " + vehicleHash.ToString() + " it is in the underground car park ");
        this.RentTimer = 9000;
        this.startedRent = true;
        Game.Player.Money -= 25000;
        this.RentalvehicleHealth = this.RentedVehicle.Health;
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == buzzard)
        {
          if (this.Config.GetValue<int>("Setup", "BuzzardBought", this.BuzzardBought) == 0)
          {
            if (Game.Player.Money > 2250000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              ++this.BuzzardBought;
              Game.Player.Money -= 2250000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Buzzard, this.HeliSpawn, 90f);
              UI.Notify(this.GetHostName() + " ok your Attack Buzzard is on the roof");
              this.Config.SetValue<int>("Setup", "BuzzardBought", this.BuzzardBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a buzzard");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Buzzard, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Attack Buzzard is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Buzzard, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Attack Buzzard is on the roof");
          }
        }
        if (item == Annihilator)
        {
          if (this.Config.GetValue<int>("Setup", "AnnihilatorBought", this.AnnihilatorBought) == 0)
          {
            if (Game.Player.Money > 1825000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.AnnihilatorBought = 1;
              Game.Player.Money -= 1825000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Annihilator, this.HeliSpawn, 90f);
              UI.Notify(this.GetHostName() + " ok your Annihilator is on the roof");
              this.Config.SetValue<int>("Setup", "AnnihilatorBought", this.AnnihilatorBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Annihilator");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Annihilator, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Annihilator is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Annihilator, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Annihilator is on the roof");
          }
        }
        if (item == Hunter)
        {
          if (this.Config.GetValue<int>("Setup", "HunterBought", this.HunterBought) == 0)
          {
            if (Game.Player.Money > 3100000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.HunterBought = 1;
              Game.Player.Money -= 3100000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Hunter, this.HeliSpawn, 90f);
              UI.Notify(this.GetHostName() + " ok your Hunter is on the roof");
              this.Config.SetValue<int>("Setup", "HunterBought", this.HunterBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Hunter");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Hunter, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Hunter is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Hunter, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Hunter is on the roof");
          }
        }
        if (item == Akula)
        {
          if (this.Config.GetValue<int>("Setup", "AkulaBought", this.AkulaBought) == 0)
          {
            if (Game.Player.Money > 2785000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.AkulaBought = 1;
              Game.Player.Money -= 2785000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Akula, this.HeliSpawn, 90f);
              this.AirVehicle.SetMod(VehicleMod.Roof, 0, true);
              UI.Notify(this.GetHostName() + " ok your Akula is on the roof");
              this.Config.SetValue<int>("Setup", "AkulaBought", this.AkulaBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Akula");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Akula, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Akula is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Akula, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Akula is on the roof");
          }
        }
        if (item == savage)
        {
          if (this.Config.GetValue<int>("Setup", "SavageBought", this.SavageBought) == 0)
          {
            if (Game.Player.Money > 1950000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.SavageBought = 1;
              Game.Player.Money -= 1950000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Savage, this.HeliSpawn, 90f);
              UI.Notify(this.GetHostName() + " ok your Savage is on the roof");
              this.Config.SetValue<int>("Setup", "SavageBought", this.SavageBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Savage");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Savage, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Savage is on the roof");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Savage, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Savage is on the roof");
          }
        }
        if (item != Valkyrie)
          return;
        if (this.Config.GetValue<int>("Setup", "ValkyrieBought", this.ValkyrieBought) == 0)
        {
          if (Game.Player.Money > 1950000)
          {
            if ((Entity) this.AirVehicle != (Entity) null)
              this.AirVehicle.Delete();
            this.ValkyrieBought = 1;
            Game.Player.Money -= 1950000;
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Valkyrie, this.HeliSpawn, 90f);
            UI.Notify(this.GetHostName() + " ok your Valkyrie is on the roof");
            this.Config.SetValue<int>("Setup", "ValkyrieBought", this.ValkyrieBought);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Savage");
        }
        else if ((Entity) this.AirVehicle != (Entity) null)
        {
          this.AirVehicle.Delete();
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Valkyrie, this.HeliSpawn, 90f);
          UI.Notify(this.GetHostName() + " ok your Valkyrie is on the roof");
        }
        else
        {
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Valkyrie, this.HeliSpawn, 90f);
          UI.Notify(this.GetHostName() + " ok your Valkyrie is on the roof");
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == FMJ)
        {
          if (this.Config.GetValue<int>("Setup", "FMJBought", this.FMJBought) == 0)
          {
            if (Game.Player.Money > 850000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.FMJBought = 1;
              Game.Player.Money -= 850000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.FMJ, this.CarSpawn, 0.0f);
              UI.Notify(this.GetHostName() + " ok your FMJ is in the undergrond car park");
              this.Config.SetValue<int>("Setup", "FMJBought", this.FMJBought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a FMJ");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.FMJ, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your FMJ is located in the Garage");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.FMJ, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your FMJ is located in the Garage");
          }
        }
        if (item == A911)
        {
          if (this.Config.GetValue<int>("Setup", "A911Bought", this.A911Bought) == 0)
          {
            if (Game.Player.Money > 1135000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.A911Bought = 1;
              Game.Player.Money -= 1135000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Pfister811, this.CarSpawn, 0.0f);
              UI.Notify(this.GetHostName() + " ok your 811 is in the undergrond car park");
              this.Config.SetValue<int>("Setup", "A911Bought", this.A911Bought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a 811");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Pfister811, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your 811 is located in the Garage");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Pfister811, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your 811  is located in the Garage");
          }
        }
        if (item == X80)
        {
          if (this.Config.GetValue<int>("Setup", "A911Bought", this.A911Bought) == 0)
          {
            if (Game.Player.Money > 2700000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.X80Bought = 1;
              Game.Player.Money -= 2700000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Prototipo, this.CarSpawn, 0.0f);
              UI.Notify(this.GetHostName() + " ok your X80 Proto is in the undergrond car park");
              this.Config.SetValue<int>("Setup", "X80Bought", this.X80Bought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a X80 Proto");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Prototipo, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your X80 Proto is located in the Garage");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Prototipo, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your X80 Proto is located in the Garage");
          }
        }
        if (item == S7)
        {
          if (this.Config.GetValue<int>("Setup", "SEVEN70Bought", this.SEVEN70Bought) == 0)
          {
            if (Game.Player.Money > 695000)
            {
              if ((Entity) this.AirVehicle != (Entity) null)
                this.AirVehicle.Delete();
              this.SEVEN70Bought = 1;
              Game.Player.Money -= 695000;
              this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Seven70, this.CarSpawn, 0.0f);
              UI.Notify(this.GetHostName() + " ok your Seven-70 is in the undergrond car park");
              this.Config.SetValue<int>("Setup", "SEVEN70Bought", this.SEVEN70Bought);
              this.Config.Save();
            }
            else
              UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Seven-70");
          }
          else if ((Entity) this.AirVehicle != (Entity) null)
          {
            this.AirVehicle.Delete();
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Seven70, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your Seven-70 is located in the Garage");
          }
          else
          {
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Seven70, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " your Seven-70 is located in the Garage");
          }
        }
        if (item != TL)
          return;
        if (this.Config.GetValue<int>("Setup", " turretedlimo", this.turretedlimo) == 0)
        {
          if (Game.Player.Money > 1695000)
          {
            if ((Entity) this.AirVehicle != (Entity) null)
              this.AirVehicle.Delete();
            this.turretedlimo = 1;
            Game.Player.Money -= 1695000;
            this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Limo2, this.CarSpawn, 0.0f);
            UI.Notify(this.GetHostName() + " ok your Turreted Limo is in the undergrond car park");
            this.Config.SetValue<int>("Setup", " turretedlimo", this.turretedlimo);
            this.Config.Save();
          }
          else
            UI.Notify(this.GetHostName() + " you unfortunatly dont have enough money buy a Turreted Limo");
        }
        else if ((Entity) this.AirVehicle != (Entity) null)
        {
          this.AirVehicle.Delete();
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Limo2, this.CarSpawn, 0.0f);
          UI.Notify(this.GetHostName() + " your Turreted Limo is located in the Garage");
        }
        else
        {
          this.AirVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Limo2, this.CarSpawn, 0.0f);
          UI.Notify(this.GetHostName() + " your Turreted Limo is located in the Garage");
        }
      });
    }

    private void SetupProduct()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.ProductStock, "Buy/Sell Product");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Buy2 = new UIMenuItem("Buy X10: -$" + 500000.ToString());
      uiMenu.AddItem(Buy2);
      UIMenuItem Buy = new UIMenuItem("Buy X1: -$" + 100000.ToString());
      uiMenu.AddItem(Buy);
      UIMenuItem Sell = new UIMenuItem("Instant Sell - All Stocks (75% Return)");
      uiMenu.AddItem(Sell);
      UIMenuItem SupplySell = new UIMenuItem("Supply Mission - Sell  (125% Return)");
      uiMenu.AddItem(SupplySell);
      UIMenuItem SupplySteal = new UIMenuItem("Supply Mission - Steal Cargo Crates ");
      uiMenu.AddItem(SupplySteal);
      UIMenuItem SupplyDestoy = new UIMenuItem("Supply Mission - Destroy Cargo Crates ");
      uiMenu.AddItem(SupplyDestoy);
      UIMenuItem Show = new UIMenuItem("Show Product Value/Count");
      uiMenu.AddItem(Show);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Show)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          UI.Notify(this.GetHostName() + " Here is where we are at");
          this.ShowIncrease();
        }
        if (item == Buy2)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          if (this.stockscount + 10 <= this.maxstocks)
          {
            if (Game.Player.Money > 500000)
            {
              Game.Player.Money -= 500000;
              this.stocksvalue += 250000f;
              this.stockscount += 10;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " ok i can deal with that, one new container of product");
              UI.Notify("Stocks Avalable: " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == Buy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          if (this.stockscount != this.maxstocks)
          {
            if (Game.Player.Money > 100000)
            {
              Game.Player.Money -= 100000;
              this.stocksvalue += 25000f;
              ++this.stockscount;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " ok i can deal with that, one new container of product");
              UI.Notify("Stocks Avalable: " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == SupplySell)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.AmttoDeliver = 0;
          if (this.stockscount > 100 && this.stockscount < 200)
          {
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.TipTruck, this.GarageMarker, 0.0f);
            this.StockVeh.ToggleExtra(2, false);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            System.Random random = new System.Random();
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
          }
          if (this.stockscount > 200)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.GarageMarker, 0.0f);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp3 = prop3;
            this.SellStockProps.Add(prop3);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
            this.SellStockProp3.HasCollision = false;
          }
          if (this.stockscount < 100)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Guardian, this.GarageMarker, 0.0f);
            Vector3 offsetInWorldCoords = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.1f));
            Prop prop = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop;
            this.SellStockProps.Add(prop);
            this.SellStockProp1.HasCollision = false;
          }
          if (this.stockscount < 30)
            this.AmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.AmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.AmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.AmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.AmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.AmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.AmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.AmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.AmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.AmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.AmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.AmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Cargo Sell Deliver Point";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " Because your Stock Level is " + this.stockscount.ToString() + ", you need to deliver to a minimum of " + this.AmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a yellow crate icon on your map, good luck");
          if ((Entity) this.StockVeh != (Entity) null)
          {
            this.StockVeh.AddBlip();
            this.StockVeh.CurrentBlip.Sprite = BlipSprite.ArmoredTruck;
            this.StockVeh.CurrentBlip.Name = "Cargo Deliver Vehicle";
            this.StockVeh.CurrentBlip.Color = BlipColor.Blue4;
          }
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 2222;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplySteal)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.AmttoDeliver = 0;
          if (this.stockscount < 30)
            this.AmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.AmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.AmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.AmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.AmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.AmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.AmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.AmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.AmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.AmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.AmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.AmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Steal Cargo Vehicle";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " I have marked out several locations where, weve spotted rival Businesses, shipping Stock, steal as much you want");
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 3333;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplyDestoy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          if ((Entity) this.Sam1 != (Entity) null)
            this.Sam1.Delete();
          if ((Entity) this.Sam2 != (Entity) null)
            this.Sam2.Delete();
          if ((Entity) this.Sam3 != (Entity) null)
            this.Sam3.Delete();
          if (this.Sam1blip != (Blip) null)
            this.Sam1blip.Remove();
          if (this.Sam2blip != (Blip) null)
            this.Sam2blip.Remove();
          if (this.Sam3blip != (Blip) null)
            this.Sam3blip.Remove();
          if (this.EndPointBlip != (Blip) null)
            this.EndPointBlip.Remove();
          this.EndPointVec = new Vector3(-1286.58f, 2529.48f, 20f);
          this.Sam1Loc = new Vector3(-2168.24f, -343f, 14f);
          this.Sam2Loc = new Vector3(2199f, 3015.55f, 45f);
          this.Sam3Loc = new Vector3(-155f, 6216.85f, 32f);
          this.Sam1 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam1Loc);
          this.Sam2 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam2Loc);
          this.Sam3 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam3Loc);
          System.Random random1 = new System.Random();
          Vector3 offsetInWorldCoords1 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords2 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords3 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp1 = prop1;
          this.SellStockProps.Add(prop1);
          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp2 = prop2;
          this.SellStockProps.Add(prop2);
          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp3 = prop3;
          this.SellStockProps.Add(prop3);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp3.HasCollision = false;
          Vector3 offsetInWorldCoords4 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords5 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords6 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop4 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp4 = prop4;
          this.SellStockProps.Add(prop4);
          Prop prop5 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp5 = prop5;
          this.SellStockProps.Add(prop5);
          Prop prop6 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp6 = prop6;
          this.SellStockProps.Add(prop6);
          this.SellStockProp4.HasCollision = false;
          this.SellStockProp5.HasCollision = false;
          this.SellStockProp6.HasCollision = false;
          Vector3 offsetInWorldCoords7 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords8 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords9 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop7 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords7, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp7 = prop7;
          this.SellStockProps.Add(prop7);
          Prop prop8 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords8, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp8 = prop8;
          this.SellStockProps.Add(prop8);
          Prop prop9 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords9, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp9 = prop9;
          this.SellStockProps.Add(prop9);
          this.SellStockProp7.HasCollision = false;
          this.SellStockProp8.HasCollision = false;
          this.SellStockProp9.HasCollision = false;
          this.Sam1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam1, this.EndPointVec, 20f, 120f, 1);
          this.Sam2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam2, this.EndPointVec, 20f, 120f, 1);
          this.Sam3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam3, this.EndPointVec, 20f, 120f, 1);
          System.Random random2 = new System.Random();
          this.Sam1blip = World.CreateBlip(this.Sam1.Position);
          this.Sam1blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam1blip.Color = BlipColor.Red;
          this.Sam1blip.Name = "Armored Truck A";
          this.Sam2blip = World.CreateBlip(this.Sam2.Position);
          this.Sam2blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam2blip.Color = BlipColor.Red;
          this.Sam2blip.Name = "Armored Truck B";
          this.Sam3blip = World.CreateBlip(this.Sam3.Position);
          this.Sam3blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam3blip.Color = BlipColor.Red;
          this.Sam3blip.Name = "Armored Truck C";
          this.EndPointBlip = World.CreateBlip(this.EndPointVec);
          this.EndPointBlip.Sprite = BlipSprite.CaptureFlag;
          this.EndPointBlip.Color = BlipColor.White;
          this.EndPointBlip.Name = "Delivery Point";
          this.missionnum = 4444;
          this.SellStockDeliveryMission = true;
          UI.Notify(this.GetHostName() + " Boss I've spotted 3 vehicles on route to Fort Zancudo, Destroy All Three, Before they reach their destination for a 25% Boost to Stock Value");
        }
        if (item != Sell)
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        UI.Notify(this.GetHostName() + " Using instant Sell we can only get 75% of the available stock value");
        Game.Player.Money += (int) ((double) this.stocksvalue * 0.75);
        this.stocksvalue = 0.0f;
        this.stockscount = 0;
        this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
        this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.Config.Save();
      });
    }

    public void ReReadini() => this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");

    private void SetupSourcing2()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.Sourcingmenu2, "Source a vehicle ");
      this.GUIMenus.Add(uiMenu);
      List<object> items = new List<object>();
      VehicleHash[] allvehiclehashes = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 0; index < allvehiclehashes.Length; ++index)
        items.Add((object) allvehiclehashes[index]);
      List<object> Types = new List<object>();
      Types.Add((object) "Specific Vehicle");
      Types.Add((object) "Specific Class");
      List<object> VClasses = new List<object>();
      VClasses.Add((object) VehicleClass.Super);
      VClasses.Add((object) VehicleClass.SUVs);
      VClasses.Add((object) VehicleClass.Sports);
      VClasses.Add((object) VehicleClass.SportsClassics);
      VClasses.Add((object) VehicleClass.Sedans);
      VClasses.Add((object) VehicleClass.Muscle);
      VClasses.Add((object) VehicleClass.Military);
      VClasses.Add((object) VehicleClass.Motorcycles);
      VClasses.Add((object) VehicleClass.OffRoad);
      VClasses.Add((object) VehicleClass.Vans);
      UIMenuListItem typ = new UIMenuListItem("Type: ", Types, 0);
      uiMenu.AddItem((UIMenuItem) typ);
      UIMenuListItem list = new UIMenuListItem("Vehicle: ", items, 0);
      uiMenu.AddItem((UIMenuItem) list);
      list.Description = "Vehicle Choosen if Type is 'Specific Vehicle'";
      UIMenuListItem ChoosenClass = new UIMenuListItem("Class: ", VClasses, 0);
      uiMenu.AddItem((UIMenuItem) ChoosenClass);
      ChoosenClass.Description = "Reteive any Vehicle in Class if Type is       'Specific Class'";
      UIMenuItem getvehicle = new UIMenuItem("Source Vehicle");
      uiMenu.AddItem(getvehicle);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getvehicle)
          return;
        this.LIFWarehouseConfig("scripts//HKH191sBusinessMods//ExecutiveBusiness//Warehouse.ini");
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.VehicleWarehouseBought = this.Config.GetValue<int>("Setup", "VehicleWarehouseBought", this.VehicleWarehouseBought);
        if (this.WarehousePos.Equals("Option1"))
          this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
        if (this.WarehousePos.Equals("Option2"))
          this.WherehouseMarker = new Vector3(943f, -1494f, 29f);
        if (this.WarehousePos.Equals("Option3"))
          this.WherehouseMarker = new Vector3(803.8f, -2225f, 28f);
        if (this.WarehousePos.Equals("Option4"))
          this.WherehouseMarker = new Vector3(1762.4f, -1655.1f, 111f);
        if (this.WarehousePos.Equals("Option5"))
          this.WherehouseMarker = new Vector3(142f, -2995.4f, 6.8f);
        if (this.WarehousePos.Equals("Option6"))
          this.WherehouseMarker = new Vector3(993.5f, -1870.388f, 29.5f);
        if (this.WarehousePos.Equals("Option7"))
          this.WherehouseMarker = new Vector3(-638.6f, -1783.35f, 23.5f);
        if (this.WarehousePos.Equals("Option8"))
          this.WherehouseMarker = new Vector3(-1163.6f, -2183.7f, 12.5f);
        if (this.WarehousePos.Equals("Option9"))
          this.WherehouseMarker = new Vector3(-508.4f, -2194.4f, 5.5f);
        if (this.WarehousePos.Equals("Option10"))
          this.WherehouseMarker = new Vector3(1207.8f, -1261.8f, 34.5f);
        if (this.WarehousePos.Equals("Option11"))
          this.WherehouseMarker = new Vector3(-2036.8f, -272.4f, 22.5f);
        if (this.WarehousePos.Equals("Option12"))
          this.WherehouseMarker = new Vector3(544.3f, -211.5f, 52.5f);
        if (this.WarehousePos.Equals("Option13"))
          this.WherehouseMarker = new Vector3(39.9f, -1283.7f, 28f);
        if (this.WarehousePos.Equals("Option14"))
          this.WherehouseMarker = new Vector3(497.4f, -635.5f, 23.5f);
        if (this.VehicleWarehouseBought == 1)
        {
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p1 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__0, Types[typ.Index], "Specific Vehicle");
          if (target1((CallSite) p1, obj1))
          {
            VehicleHash v = allvehiclehashes[list.Index];
            if (v == VehicleHash.Insurgent || v == VehicleHash.Insurgent2 || (v == VehicleHash.Insurgent3 || v == VehicleHash.Kuruma2) || (v == VehicleHash.Oppressor || v == VehicleHash.APC || (v == VehicleHash.HalfTrack || v == VehicleHash.NightShark)) || (v == VehicleHash.Dune3 || v == VehicleHash.Technical || (v == VehicleHash.Technical2 || v == VehicleHash.Technical3) || v == VehicleHash.Chernobog))
            {
              int num = new System.Random().Next(125000, 350000);
              this.SourcingPayout = (float) num + (float) ((double) num * (double) this.profitMargin / 100.0);
            }
            if (v == VehicleHash.EntityXXR || v == VehicleHash.LE7B || (v == VehicleHash.Nero2 || v == VehicleHash.Nero2) || (v == VehicleHash.T20 || v == VehicleHash.Tyrant || (v == VehicleHash.Tezeract || v == VehicleHash.NightShark)) || (v == VehicleHash.Tempesta || v == VehicleHash.Technical || (v == VehicleHash.Osiris || v == VehicleHash.GP1) || (v == VehicleHash.Autarch || v == VehicleHash.SultanRS || (v == VehicleHash.Banshee2 || v == VehicleHash.Taipan))) || (v == VehicleHash.Taipan || v == VehicleHash.Vagner || (v == VehicleHash.Visione || v == VehicleHash.Prototipo) || (v == VehicleHash.Reaper || v == VehicleHash.Pfister811 || (v == VehicleHash.FMJ || v == VehicleHash.Zentorno)) || (v == VehicleHash.ItaliGTB2 || v == VehicleHash.ItaliGTB || v == VehicleHash.Voltic2)))
            {
              int num1 = new System.Random().Next(75000, 1000000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            if (v == VehicleHash.ZType)
            {
              int num1 = new System.Random().Next(195000, 2300000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            if (v == VehicleHash.Deluxo || v == VehicleHash.Stromberg || (v == VehicleHash.Vigilante || v == VehicleHash.Dune2))
            {
              int num1 = new System.Random().Next(135000, 550000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            if (v == VehicleHash.Phantom2 || v == VehicleHash.Dune4 || (v == VehicleHash.Dune5 || v == VehicleHash.Wastelander) || (v == VehicleHash.Tampa3 || v == VehicleHash.Caracara || v == VehicleHash.Monster))
            {
              int num1 = new System.Random().Next(100000, 400000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            if (v == VehicleHash.Rhino || v == VehicleHash.Khanjari)
            {
              int num1 = new System.Random().Next(290000, 2000000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            else
            {
              int num1 = new System.Random().Next(100000, 200000);
              float num2 = (float) (new System.Random().Next(25, 75) / 100);
              this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
            }
            this.VehicleIdentifier = v;
            this.VehicleIdentiferfun2(v);
            UI.Notify(this.GetHostName() + " Ok the car is a " + v.ToString());
            UI.Notify(this.GetHostName() + " the pay is  $" + this.SourcingPayout.ToString());
          }
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__3.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p3 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__3;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Equals", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__2, Types[typ.Index], "Specific Class");
          if (!target2((CallSite) p3, obj2))
            return;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, VehicleClass>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleClass), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.VClass = ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__823.\u003C\u003Ep__4, VClasses[ChoosenClass.Index]);
          this.VehicleIdentiferfun3(this.VClass);
          UI.Notify(this.GetHostName() + " Ok steal any car in the ~b~ " + this.VClass.ToString() + "~w~ Catagory and deliver it to the ~b~Vehicle Warehouse~w~");
        }
        else
          UI.Notify(this.GetHostName() + " You need a ~b~Vehicle Warehouse~w~ to source vehicles ");
      });
    }

    private void SetupSourcing()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.Sourcingmenu, "Source a vehicle ");
      this.GUIMenus.Add(uiMenu);
      List<object> items = new List<object>();
      VehicleHash[] allvehiclehashes = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 0; index < allvehiclehashes.Length; ++index)
        items.Add((object) allvehiclehashes[index]);
      UIMenuListItem list = new UIMenuListItem("Vehicle: ", items, 0);
      uiMenu.AddItem((UIMenuItem) list);
      UIMenuItem getvehicle = new UIMenuItem("Source Vehicle");
      uiMenu.AddItem(getvehicle);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getvehicle)
          return;
        this.LIFWarehouseConfig("scripts//HKH191sBusinessMods//ExecutiveBusiness//Warehouse.ini");
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.VehicleWarehouseBought = this.Config.GetValue<int>("Setup", "VehicleWarehouseBought", this.VehicleWarehouseBought);
        if (this.WarehousePos.Equals("Option1"))
          this.WherehouseMarker = new Vector3(254.6f, -3057f, 5.7f);
        if (this.WarehousePos.Equals("Option2"))
          this.WherehouseMarker = new Vector3(943f, -1494f, 29f);
        if (this.WarehousePos.Equals("Option3"))
          this.WherehouseMarker = new Vector3(803.8f, -2225f, 28f);
        if (this.WarehousePos.Equals("Option4"))
          this.WherehouseMarker = new Vector3(1762.4f, -1655.1f, 111f);
        if (this.WarehousePos.Equals("Option5"))
          this.WherehouseMarker = new Vector3(142f, -2995.4f, 6.8f);
        if (this.WarehousePos.Equals("Option6"))
          this.WherehouseMarker = new Vector3(993.5f, -1870.388f, 29.5f);
        if (this.WarehousePos.Equals("Option7"))
          this.WherehouseMarker = new Vector3(-638.6f, -1783.35f, 23.5f);
        if (this.WarehousePos.Equals("Option8"))
          this.WherehouseMarker = new Vector3(-1163.6f, -2183.7f, 12.5f);
        if (this.WarehousePos.Equals("Option9"))
          this.WherehouseMarker = new Vector3(-508.4f, -2194.4f, 5.5f);
        if (this.WarehousePos.Equals("Option10"))
          this.WherehouseMarker = new Vector3(1207.8f, -1261.8f, 34.5f);
        if (this.WarehousePos.Equals("Option11"))
          this.WherehouseMarker = new Vector3(-2036.8f, -272.4f, 22.5f);
        if (this.WarehousePos.Equals("Option12"))
          this.WherehouseMarker = new Vector3(544.3f, -211.5f, 52.5f);
        if (this.WarehousePos.Equals("Option13"))
          this.WherehouseMarker = new Vector3(39.9f, -1283.7f, 28f);
        if (this.WarehousePos.Equals("Option14"))
          this.WherehouseMarker = new Vector3(497.4f, -635.5f, 23.5f);
        if (this.VehicleWarehouseBought == 1)
        {
          VehicleHash v = allvehiclehashes[list.Index];
          if (v == VehicleHash.Insurgent || v == VehicleHash.Insurgent2 || (v == VehicleHash.Insurgent3 || v == VehicleHash.Kuruma2) || (v == VehicleHash.Oppressor || v == VehicleHash.APC || (v == VehicleHash.HalfTrack || v == VehicleHash.NightShark)) || (v == VehicleHash.Dune3 || v == VehicleHash.Technical || (v == VehicleHash.Technical2 || v == VehicleHash.Technical3) || v == VehicleHash.Chernobog))
          {
            int num1 = new System.Random().Next(125000, 350000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          if (v == VehicleHash.EntityXXR || v == VehicleHash.LE7B || (v == VehicleHash.Nero2 || v == VehicleHash.Nero2) || (v == VehicleHash.T20 || v == VehicleHash.Tyrant || (v == VehicleHash.Tezeract || v == VehicleHash.NightShark)) || (v == VehicleHash.Tempesta || v == VehicleHash.Technical || (v == VehicleHash.Osiris || v == VehicleHash.GP1) || (v == VehicleHash.Autarch || v == VehicleHash.SultanRS || (v == VehicleHash.Banshee2 || v == VehicleHash.Taipan))) || (v == VehicleHash.Taipan || v == VehicleHash.Vagner || (v == VehicleHash.Visione || v == VehicleHash.Prototipo) || (v == VehicleHash.Reaper || v == VehicleHash.Pfister811 || (v == VehicleHash.FMJ || v == VehicleHash.Zentorno)) || (v == VehicleHash.ItaliGTB2 || v == VehicleHash.ItaliGTB || v == VehicleHash.Voltic2)))
          {
            int num1 = new System.Random().Next(75000, 1000000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          if (v == VehicleHash.ZType)
          {
            int num1 = new System.Random().Next(195000, 2300000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          if (v == VehicleHash.Deluxo || v == VehicleHash.Stromberg || (v == VehicleHash.Vigilante || v == VehicleHash.Dune2))
          {
            int num1 = new System.Random().Next(135000, 550000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          if (v == VehicleHash.Phantom2 || v == VehicleHash.Dune4 || (v == VehicleHash.Dune5 || v == VehicleHash.Wastelander) || (v == VehicleHash.Tampa3 || v == VehicleHash.Caracara || v == VehicleHash.Monster))
          {
            int num1 = new System.Random().Next(100000, 400000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          if (v == VehicleHash.Rhino || v == VehicleHash.Khanjari)
          {
            int num1 = new System.Random().Next(290000, 2000000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          else
          {
            int num1 = new System.Random().Next(100000, 200000);
            float num2 = (float) (new System.Random().Next(25, 75) / 100);
            this.SourcingPayout = (float) num1 + (float) ((double) num1 * (double) num2 / 100.0);
          }
          this.VehicleIdentifier = v;
          this.VehicleIdentiferfun(v);
          UI.Notify(this.GetHostName() + " Ok the car is a " + v.ToString());
          UI.Notify(this.GetHostName() + " the pay is  $" + this.SourcingPayout.ToString());
        }
        else
          UI.Notify(this.GetHostName() + " You need a ~b~Vehicle Warehouse~w~ to source vehicles ");
      });
    }

    private void Setupbuisness()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "The Orion Yacht");
      items1.Add((object) "The Pisces Yacht");
      items1.Add((object) "The Aquarius Yacht");
      List<object> items2 = new List<object>();
      items2.Add((object) "");
      items2.Add((object) "Wales");
      items2.Add((object) "USA");
      items2.Add((object) "United Kingdom");
      items2.Add((object) "Turkey");
      items2.Add((object) "Switzerland");
      items2.Add((object) "Sweden");
      items2.Add((object) "Spain");
      items2.Add((object) "South Korea");
      items2.Add((object) "South Africa");
      items2.Add((object) "Slovenia");
      items2.Add((object) "Slovakia");
      items2.Add((object) "Script");
      items2.Add((object) "Scotland");
      items2.Add((object) "Russia");
      items2.Add((object) "Puertorico");
      items2.Add((object) "Portugal");
      items2.Add((object) "Poland");
      items2.Add((object) "Palestine");
      items2.Add((object) "Norway");
      items2.Add((object) "Nigeria");
      items2.Add((object) "New Zealand");
      items2.Add((object) "Netherlands");
      items2.Add((object) "Mexico");
      items2.Add((object) "Malta");
      items2.Add((object) "Istein");
      items2.Add((object) "Japan");
      items2.Add((object) "Jamaica");
      items2.Add((object) "Italy");
      items2.Add((object) "Israel");
      items2.Add((object) "Ireland");
      items2.Add((object) "Hungary");
      items2.Add((object) "German");
      items2.Add((object) "France");
      items2.Add((object) "Finland");
      items2.Add((object) "EU");
      items2.Add((object) "England");
      items2.Add((object) "Denmark");
      items2.Add((object) "Czech Republic");
      items2.Add((object) "Croatia");
      items2.Add((object) "Colombia");
      items2.Add((object) "China");
      items2.Add((object) "Canada");
      items2.Add((object) "Brazil");
      items2.Add((object) "Belgium");
      items2.Add((object) "Austria");
      items2.Add((object) "Australia");
      items2.Add((object) "Argentina");
      List<object> items3 = new List<object>();
      items3.Add((object) "");
      items3.Add((object) " Zancudo River 1 ");
      items3.Add((object) "Zancudo River 2 ");
      items3.Add((object) "Zancudo River 3 ");
      items3.Add((object) "Zancudo Base 1 ");
      items3.Add((object) "Zancudo Base 2 ");
      items3.Add((object) "Zancudo Base 3 ");
      items3.Add((object) "North Chumash 1 ");
      items3.Add((object) "North Chumash 2 ");
      items3.Add((object) "North Chumash 3 ");
      items3.Add((object) "Vespucci Beach 1 ");
      items3.Add((object) "Vespucci Beach 2 ");
      items3.Add((object) "Vespucci Beach 3 ");
      items3.Add((object) "LSIA 1 ");
      items3.Add((object) "LSIA 2 ");
      items3.Add((object) "LSIA 3 ");
      items3.Add((object) "Docks 1 ");
      items3.Add((object) "Docks 2 ");
      items3.Add((object) "Docks 3 ");
      items3.Add((object) "Palomino Highlands 1 ");
      items3.Add((object) "Palomino Highlands 2 ");
      items3.Add((object) "Palomino Highlands 3 ");
      items3.Add((object) "Tavarium Mountains 1 ");
      items3.Add((object) "Tavarium Mountains 2 ");
      items3.Add((object) "Tavarium Mountains 3 ");
      items3.Add((object) "San Chianski Mountain Range 1 ");
      items3.Add((object) "San Chianski Mountain Range 2 ");
      items3.Add((object) "San Chianski Mountain Range 3 ");
      items3.Add((object) "Mount Gordo 1 ");
      items3.Add((object) "Mount Gordo 2 ");
      items3.Add((object) "Mount Gordo 3 ");
      items3.Add((object) "Propocio Beach 1 ");
      items3.Add((object) "Propocio Beach 2 ");
      items3.Add((object) "Propocio Beach 3 ");
      items3.Add((object) "Paleto Bay 1 ");
      items3.Add((object) "Paleto Bay 2 ");
      items3.Add((object) "Paleto Bay 3 ");
      List<object> items4 = new List<object>();
      items4.Add((object) false);
      items4.Add((object) true);
      List<object> items5 = new List<object>();
      items5.Add((object) "Presidential Green");
      items5.Add((object) "Presidential Blue");
      items5.Add((object) "Presidential Rose");
      items5.Add((object) "Presidential Gold");
      items5.Add((object) "Vivacious Green");
      items5.Add((object) "Vivacious Blue");
      items5.Add((object) "Vivacious Rose");
      items5.Add((object) "Vivacious Gold");
      List<object> items6 = new List<object>();
      items6.Add((object) "Pacific - White/Blue");
      items6.Add((object) "Nautical - White/Blue");
      items6.Add((object) "Mariner - White/Green");
      items6.Add((object) "Merchant - White/Red");
      items6.Add((object) "Pristine - White");
      items6.Add((object) "Azure - White/Blue");
      items6.Add((object) "Uniform - White/Black");
      items6.Add((object) "Ruby - White/Red");
      items6.Add((object) "Mediterranean - White/Red");
      items6.Add((object) "Vintage - Cream/Beige & Blue");
      items6.Add((object) "Continental - Cream/Beige & Gray");
      items6.Add((object) "Battleship - Dark Gray");
      items6.Add((object) "Command - Dark Gray/Light Gray");
      items6.Add((object) "Classico - White/Dark Gray ");
      items6.Add((object) "Intrepid - Black/Red");
      items6.Add((object) "Voyager - Green/Yellow");
      List<object> items7 = new List<object>();
      items7.Add((object) "None");
      items7.Add((object) "Swift");
      items7.Add((object) "Maverick");
      items7.Add((object) "Supervolto");
      items7.Add((object) "Volatus");
      items7.Add((object) "Supervolto Carbon");
      items7.Add((object) "Swift Deluxe");
      List<object> items8 = new List<object>();
      items8.Add((object) "None");
      items8.Add((object) "Speeder");
      items8.Add((object) "Jetmax");
      items8.Add((object) "Dinghy 2 seater");
      items8.Add((object) "Dinghy 4 seater");
      items8.Add((object) "Toro ");
      items8.Add((object) "Toro (Yacht Version)");
      items8.Add((object) "Marquis");
      List<object> items9 = new List<object>();
      items9.Add((object) "None");
      items9.Add((object) "1");
      items9.Add((object) "2");
      items9.Add((object) "3");
      items9.Add((object) "4");
      float YachtPrice = 0.0f;
      float GoldRailingPrice = 0.0f;
      float LightsPrice = 0.0f;
      float DesignPrice = 0.0f;
      float HeliAPrice = 0.0f;
      float HeliBPrice = 0.0f;
      float SeaSharkPrice = 0.0f;
      float BoatAPrice = 0.0f;
      float BoatBPrice = 0.0f;
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.methgarage, "Executive Garage Options");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem Buyg1 = new UIMenuItem("Buy Garage Level 1 : ~g~$1,150,000");
      uiMenu1.AddItem(Buyg1);
      UIMenuItem Buyg2 = new UIMenuItem("Buy Garage Level 2 : ~g~$855,000");
      uiMenu1.AddItem(Buyg2);
      UIMenuItem Buyg3 = new UIMenuItem("Buy Garage Level 3 : ~g~$745,000");
      uiMenu1.AddItem(Buyg3);
      UIMenuItem BuyMS = new UIMenuItem("Buy Mod Shop : ~g~$900,000");
      uiMenu1.AddItem(BuyMS);
      BuyMS.Description = "Mod Shop will allow you to customize your Vehicles with a trainer/HKH Business Helper";
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == BuyMS)
        {
          if (this.PurchasedGarageModShop == 0)
          {
            if (Game.Player.Money > 900000)
            {
              Game.Player.Money -= 900000;
              this.PurchasedGarageModShop = 1;
              this.Config.SetValue<int>("Garage", "PurchasedGarageModShop", this.PurchasedGarageModShop);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " You can now Customize Vehicles via Mod shop, using a Trainer or HKH191s Business Helper");
              UI.Notify("~g~ HKH191~w~, When in Mod Shop, with the vehicle you want to Customize, Pressing G will open a Customization Menu");
            }
            else
              UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase this Garage Level");
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you have already Purchased this Level of the 60 Car Garage");
        }
        if (item == Buyg1)
        {
          if (this.PurchasedGarageLevel1 == 0)
          {
            if (Game.Player.Money > 1150000)
            {
              Game.Player.Money -= 1150000;
              this.PurchasedGarageLevel1 = 1;
              this.Config.SetValue<int>("Garage", "PurchasedGarageLevel1", this.PurchasedGarageLevel1);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " You can now store vehicles on Level 1 of the Executive Garage");
            }
            else
              UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase this Garage Level");
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you have already Purchased this Level of the 60 Car Garage");
        }
        if (item == Buyg2)
        {
          if (this.PurchasedGarageLevel2 == 0)
          {
            if (Game.Player.Money > 855000)
            {
              Game.Player.Money -= 855000;
              this.PurchasedGarageLevel2 = 1;
              this.Config.SetValue<int>("Garage", "PurchasedGarageLevel2", this.PurchasedGarageLevel2);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " You can now store vehicles on Level 2 of the Executive Garage");
            }
            else
              UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase this Garage Level");
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you have already Purchased this Level of the 60 Car Garage");
        }
        if (item != Buyg3)
          return;
        if (this.PurchasedGarageLevel3 == 0)
        {
          if (Game.Player.Money > 745000)
          {
            Game.Player.Money -= 745000;
            this.PurchasedGarageLevel3 = 1;
            this.Config.SetValue<int>("Garage", "PurchasedGarageLevel3", this.PurchasedGarageLevel3);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " You can now store vehicles on Level 3 of the Executive Garage");
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase this Garage Level");
        }
        else
          UI.Notify(this.GetHostName() + " Sorry boss you have already Purchased this Level of the 60 Car Garage");
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.methgarage, "Buy/Change Yacht ");
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem YT = new UIMenuListItem("Yacht Type : ", items1, 0);
      uiMenu2.AddItem((UIMenuItem) YT);
      UIMenuListItem Yloc = new UIMenuListItem("Location : ", items3, 0);
      uiMenu2.AddItem((UIMenuItem) Yloc);
      UIMenuListItem Goldbars = new UIMenuListItem("Gold Railings : ", items4, 0);
      uiMenu2.AddItem((UIMenuItem) Goldbars);
      UIMenuListItem Lighting = new UIMenuListItem("Lighting : ", items5, 0);
      uiMenu2.AddItem((UIMenuItem) Lighting);
      UIMenuListItem Design = new UIMenuListItem("Design : ", items6, 0);
      uiMenu2.AddItem((UIMenuItem) Design);
      UIMenuListItem Flag = new UIMenuListItem("Flag : ", items2, 0);
      uiMenu2.AddItem((UIMenuItem) Flag);
      UIMenuListItem HeliA = new UIMenuListItem("Heli A : ", items7, 0);
      uiMenu2.AddItem((UIMenuItem) HeliA);
      UIMenuListItem HeliB = new UIMenuListItem("Heli B : ", items7, 0);
      uiMenu2.AddItem((UIMenuItem) HeliB);
      UIMenuListItem SShark = new UIMenuListItem("Amount of Sea Sharks : ", items9, 0);
      uiMenu2.AddItem((UIMenuItem) SShark);
      UIMenuListItem BA = new UIMenuListItem("Boat A : ", items8, 0);
      uiMenu2.AddItem((UIMenuItem) BA);
      UIMenuListItem BB = new UIMenuListItem("Boat B : ", items8, 0);
      uiMenu2.AddItem((UIMenuItem) BB);
      UIMenuItem YCost = new UIMenuItem("Cost : $");
      uiMenu2.AddItem(YCost);
      UIMenuItem YBuy = new UIMenuItem("Buy Yacht");
      uiMenu2.AddItem(YBuy);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (BA.Index == 0)
          BoatAPrice = 0.0f;
        if (BA.Index == 1)
          BoatAPrice = 325000f;
        if (BA.Index == 2)
          BoatAPrice = 300000f;
        if (BA.Index == 3)
          BoatAPrice = 105000f;
        if (BA.Index == 4)
          BoatAPrice = 125000f;
        if (BA.Index == 5)
          BoatAPrice = 1750000f;
        if (BA.Index == 6)
          BoatAPrice = 1750000f;
        if (BA.Index == 7)
          BoatAPrice = 413000f;
        if (BB.Index == 0)
          BoatBPrice = 0.0f;
        if (BB.Index == 1)
          BoatBPrice = 325000f;
        if (BB.Index == 2)
          BoatBPrice = 300000f;
        if (BB.Index == 3)
          BoatBPrice = 105000f;
        if (BB.Index == 4)
          BoatBPrice = 125000f;
        if (BB.Index == 5)
          BoatBPrice = 1750000f;
        if (BB.Index == 6)
          BoatBPrice = 1900000f;
        if (BB.Index == 7)
          BoatBPrice = 413000f;
        if (SShark.Index == 0)
          SeaSharkPrice = 0.0f;
        if (SShark.Index == 1)
          SeaSharkPrice = 18000f;
        if (SShark.Index == 2)
          SeaSharkPrice = 36000f;
        if (SShark.Index == 3)
          SeaSharkPrice = 54000f;
        if (SShark.Index == 3)
          SeaSharkPrice = 90000f;
        if (YT.Index == 0)
          YachtPrice = 6000000f;
        if (YT.Index == 1)
          YachtPrice = 7000000f;
        if (YT.Index == 2)
          YachtPrice = 8000000f;
        if (Goldbars.Index == 0)
          GoldRailingPrice = 100000f;
        if (Goldbars.Index == 1)
          GoldRailingPrice = 750000f;
        if (Lighting.Index == 0)
          LightsPrice = 300000f;
        if (Lighting.Index == 1)
          LightsPrice = 315000f;
        if (Lighting.Index == 2)
          LightsPrice = 330000f;
        if (Lighting.Index == 3)
          LightsPrice = 350000f;
        if (Lighting.Index == 4)
          LightsPrice = 500000f;
        if (Lighting.Index == 5)
          LightsPrice = 525000f;
        if (Lighting.Index == 6)
          LightsPrice = 550000f;
        if (Lighting.Index == 7)
          LightsPrice = 600000f;
        if (Design.Index == 0)
          DesignPrice = 100000f;
        if (Design.Index == 1)
          DesignPrice = 135000f;
        if (Design.Index == 2)
          DesignPrice = 170000f;
        if (Design.Index == 3)
          DesignPrice = 195000f;
        if (Design.Index == 4)
          DesignPrice = 220000f;
        if (Design.Index == 5)
          DesignPrice = 300000f;
        if (Design.Index == 6)
          DesignPrice = 315000f;
        if (Design.Index == 7)
          DesignPrice = 340000f;
        if (Design.Index == 8)
          DesignPrice = 365000f;
        if (Design.Index == 9)
          DesignPrice = 425000f;
        if (Design.Index == 10)
          DesignPrice = 450000f;
        if (Design.Index == 11)
          DesignPrice = 475000f;
        if (Design.Index == 12)
          DesignPrice = 495000f;
        if (Design.Index == 13)
          DesignPrice = 620000f;
        if (Design.Index == 14)
          DesignPrice = 635000f;
        if (Design.Index == 15)
          DesignPrice = 650000f;
        if (Design.Index == 16)
          DesignPrice = 680000f;
        if (HeliA.Index == 0)
          HeliAPrice = 0.0f;
        if (HeliA.Index == 1)
          HeliAPrice = 100000f;
        if (HeliA.Index == 2)
          HeliAPrice = 780000f;
        if (HeliA.Index == 3)
          HeliAPrice = 800000f;
        if (HeliA.Index == 4)
          HeliAPrice = 1100000f;
        if (HeliA.Index == 5)
          HeliAPrice = 1400000f;
        if (HeliA.Index == 6)
          HeliAPrice = 5150000f;
        if (HeliB.Index == 0)
          HeliBPrice = 0.0f;
        if (HeliB.Index == 1)
          HeliBPrice = 100000f;
        if (HeliB.Index == 1)
          HeliBPrice = 780000f;
        if (HeliB.Index == 2)
          HeliBPrice = 800000f;
        if (HeliB.Index == 3)
          HeliBPrice = 1100000f;
        if (HeliB.Index == 4)
          HeliBPrice = 1400000f;
        if (HeliB.Index == 5)
          HeliBPrice = 5150000f;
        YCost.Text = "Cost : $" + (YachtPrice + GoldRailingPrice + LightsPrice + DesignPrice + HeliAPrice + HeliBPrice + SeaSharkPrice + BoatAPrice + BoatBPrice).ToString("N");
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != YBuy)
          return;
        if (BA.Index == 0)
          BoatAPrice = 0.0f;
        if (BA.Index == 1)
          BoatAPrice = 325000f;
        if (BA.Index == 2)
          BoatAPrice = 300000f;
        if (BA.Index == 3)
          BoatAPrice = 105000f;
        if (BA.Index == 4)
          BoatAPrice = 125000f;
        if (BA.Index == 5)
          BoatAPrice = 1750000f;
        if (BA.Index == 6)
          BoatAPrice = 1750000f;
        if (BA.Index == 7)
          BoatAPrice = 413000f;
        if (BB.Index == 0)
          BoatBPrice = 0.0f;
        if (BB.Index == 1)
          BoatBPrice = 325000f;
        if (BB.Index == 2)
          BoatBPrice = 300000f;
        if (BB.Index == 3)
          BoatBPrice = 105000f;
        if (BB.Index == 4)
          BoatBPrice = 125000f;
        if (BB.Index == 5)
          BoatBPrice = 1750000f;
        if (BB.Index == 6)
          BoatBPrice = 1900000f;
        if (BB.Index == 7)
          BoatBPrice = 413000f;
        if (SShark.Index == 0)
          SeaSharkPrice = 0.0f;
        if (SShark.Index == 1)
          SeaSharkPrice = 18000f;
        if (SShark.Index == 2)
          SeaSharkPrice = 36000f;
        if (SShark.Index == 3)
          SeaSharkPrice = 54000f;
        if (SShark.Index == 3)
          SeaSharkPrice = 90000f;
        if (YT.Index == 0)
          YachtPrice = 6000000f;
        if (YT.Index == 1)
          YachtPrice = 7000000f;
        if (YT.Index == 2)
          YachtPrice = 8000000f;
        if (Goldbars.Index == 0)
          GoldRailingPrice = 100000f;
        if (Goldbars.Index == 1)
          GoldRailingPrice = 750000f;
        if (Lighting.Index == 0)
          LightsPrice = 300000f;
        if (Lighting.Index == 1)
          LightsPrice = 315000f;
        if (Lighting.Index == 2)
          LightsPrice = 330000f;
        if (Lighting.Index == 3)
          LightsPrice = 350000f;
        if (Lighting.Index == 4)
          LightsPrice = 500000f;
        if (Lighting.Index == 5)
          LightsPrice = 525000f;
        if (Lighting.Index == 6)
          LightsPrice = 550000f;
        if (Lighting.Index == 7)
          LightsPrice = 600000f;
        if (Design.Index == 0)
          DesignPrice = 100000f;
        if (Design.Index == 1)
          DesignPrice = 135000f;
        if (Design.Index == 2)
          DesignPrice = 170000f;
        if (Design.Index == 3)
          DesignPrice = 195000f;
        if (Design.Index == 4)
          DesignPrice = 220000f;
        if (Design.Index == 5)
          DesignPrice = 300000f;
        if (Design.Index == 6)
          DesignPrice = 315000f;
        if (Design.Index == 7)
          DesignPrice = 340000f;
        if (Design.Index == 8)
          DesignPrice = 365000f;
        if (Design.Index == 9)
          DesignPrice = 425000f;
        if (Design.Index == 10)
          DesignPrice = 450000f;
        if (Design.Index == 11)
          DesignPrice = 475000f;
        if (Design.Index == 12)
          DesignPrice = 495000f;
        if (Design.Index == 13)
          DesignPrice = 620000f;
        if (Design.Index == 14)
          DesignPrice = 635000f;
        if (Design.Index == 15)
          DesignPrice = 650000f;
        if (HeliA.Index == 0)
          HeliAPrice = 0.0f;
        if (HeliA.Index == 1)
          HeliAPrice = 100000f;
        if (HeliA.Index == 2)
          HeliAPrice = 780000f;
        if (HeliA.Index == 3)
          HeliAPrice = 800000f;
        if (HeliA.Index == 4)
          HeliAPrice = 1100000f;
        if (HeliA.Index == 5)
          HeliAPrice = 1400000f;
        if (HeliA.Index == 6)
          HeliAPrice = 5150000f;
        if (HeliB.Index == 0)
          HeliBPrice = 0.0f;
        if (HeliB.Index == 1)
          HeliBPrice = 100000f;
        if (HeliB.Index == 1)
          HeliBPrice = 780000f;
        if (HeliB.Index == 2)
          HeliBPrice = 800000f;
        if (HeliB.Index == 3)
          HeliBPrice = 1100000f;
        if (HeliB.Index == 4)
          HeliBPrice = 1400000f;
        if (HeliB.Index == 5)
          HeliBPrice = 5150000f;
        YCost.Text = "Cost : $" + (YachtPrice + GoldRailingPrice + LightsPrice + DesignPrice + HeliAPrice + HeliBPrice + SeaSharkPrice + BoatAPrice + BoatBPrice).ToString("N");
        if ((double) Game.Player.Money >= (double) YachtPrice + (double) GoldRailingPrice + (double) LightsPrice + (double) DesignPrice + (double) HeliAPrice + (double) HeliBPrice + (double) SeaSharkPrice + (double) BoatAPrice + (double) BoatBPrice)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Yacht.ini");
          Game.Player.Money -= (int) ((double) YachtPrice + (double) GoldRailingPrice + (double) LightsPrice + (double) DesignPrice + (double) HeliAPrice + (double) HeliBPrice);
          this.Config.SetValue<int>("Yacht", "Purchased", 1);
          int index1 = Goldbars.Index;
          this.Config.SetValue<bool>("Yacht", "GoldRails", false);
          int index2 = Goldbars.Index;
          this.Config.SetValue<bool>("Yacht", "GoldRails", true);
          if (Design.Index == 0)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 0);
            this.Config.Save();
          }
          if (Design.Index == 1)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 2);
            this.Config.Save();
          }
          if (Design.Index == 2)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 10);
            this.Config.Save();
          }
          if (Design.Index == 3)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 14);
            this.Config.Save();
          }
          if (Design.Index == 4)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 13);
            this.Config.Save();
          }
          if (Design.Index == 5)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 1);
            this.Config.Save();
          }
          if (Design.Index == 6)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 6);
            this.Config.Save();
          }
          if (Design.Index == 7)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 11);
            this.Config.Save();
          }
          if (Design.Index == 8)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 8);
            this.Config.Save();
          }
          if (Design.Index == 9)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 12);
            this.Config.Save();
          }
          if (Design.Index == 10)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 3);
            this.Config.Save();
          }
          if (Design.Index == 12)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 4);
            this.Config.Save();
          }
          if (Design.Index == 13)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 9);
            this.Config.Save();
          }
          if (Design.Index == 14)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 7);
            this.Config.Save();
          }
          if (Design.Index == 15)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 5);
            this.Config.Save();
          }
          if (Design.Index == 16)
          {
            this.Config.SetValue<int>("Yacht", "ShipColor", 15);
            this.Config.Save();
          }
          this.Config.SetValue<int>("Yacht", "YachtType", YT.Index);
          this.Config.SetValue<int>("Yacht", "Location", Yloc.Index);
          if (Lighting.Index <= 3)
          {
            this.Config.SetValue<int>("Yacht", "Lighting", 1);
            this.Config.Save();
          }
          if (Lighting.Index >= 4)
          {
            this.Config.SetValue<int>("Yacht", "Lighting", 2);
            this.Config.Save();
          }
          if (Lighting.Index == 0)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 1);
            this.Config.Save();
          }
          if (Lighting.Index == 1)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 2);
            this.Config.Save();
          }
          if (Lighting.Index == 2)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 3);
            this.Config.Save();
          }
          if (Lighting.Index == 3)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 4);
            this.Config.Save();
          }
          if (Lighting.Index == 4)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 1);
            this.Config.Save();
          }
          if (Lighting.Index == 5)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 2);
            this.Config.Save();
          }
          if (Lighting.Index == 6)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 3);
            this.Config.Save();
          }
          if (Lighting.Index == 7)
          {
            this.Config.SetValue<int>("Yacht", "LightingColor", 4);
            this.Config.Save();
          }
          this.Config.Save();
          this.Config.SetValue<int>("Yacht", "CurrentFlag", Flag.Index - 1);
          this.Config.SetValue<int>("Yacht", "HeliA", HeliA.Index);
          this.Config.Save();
          this.Config.SetValue<int>("Yacht", "HeliB", HeliB.Index);
          this.Config.Save();
          this.Config.SetValue<int>("Yacht", "AmountOfSeaSharks", SShark.Index);
          this.Config.SetValue<int>("Yacht", "BoatAType", BA.Index);
          this.Config.SetValue<int>("Yacht", "BoatBType", BB.Index);
          this.Config.Save();
          this.modMenuPool.CloseAllMenus();
          Game.Player.Character.Position = new Vector3(2000f, 2000f, 1000f);
          UI.Notify("Purchase Successful, you new Yacht is at the designated location!, if you didnt own a Yacht before, please reload the mod, if not it should spawn ");
          Script.Wait(1);
          Game.Player.Character.Position = this.MenuMarker;
        }
        else
          UI.Notify("You dont have enough money to purchase a Yacht");
      });
      List<object> CamP = new List<object>();
      List<object> CamR = new List<object>();
      List<object> Options = new List<object>();
      List<object> Price = new List<object>();
      List<object> Location = new List<object>();
      Options.Add((object) "Option1");
      Price.Add((object) 1580000);
      Location.Add((object) "Elysian Island");
      CamP.Add((object) new Vector3(296f, -3092f, 8f));
      CamR.Add((object) 43);
      Options.Add((object) "Option2");
      Price.Add((object) 2380000);
      Location.Add((object) "La Mesa");
      CamP.Add((object) new Vector3(946f, -1506f, 32f));
      CamR.Add((object) 11);
      Options.Add((object) "Option3");
      Price.Add((object) 2675000);
      Location.Add((object) "Cypress Flats");
      CamP.Add((object) new Vector3(795f, -2243f, 33f));
      CamR.Add((object) -15);
      Options.Add((object) "Option4");
      Price.Add((object) 1635000);
      Location.Add((object) "El Burro Heights");
      CamP.Add((object) new Vector3(1778f, -1665f, 116f));
      CamR.Add((object) 39);
      Options.Add((object) "Option5");
      Price.Add((object) 1950000);
      Location.Add((object) "Elysian Island");
      CamP.Add((object) new Vector3(158f, -2962f, 14f));
      CamR.Add((object) 160);
      Options.Add((object) "Option6");
      Price.Add((object) 1500000);
      Location.Add((object) "La Mesa");
      CamP.Add((object) new Vector3(999f, -1875f, 37f));
      CamR.Add((object) -8);
      Options.Add((object) "Option7");
      Price.Add((object) 2730000);
      Location.Add((object) "La Puerta");
      CamP.Add((object) new Vector3(-648f, -1793f, 27f));
      CamR.Add((object) -61);
      Options.Add((object) "Option8");
      Price.Add((object) 2170000);
      Location.Add((object) "LSIA");
      CamP.Add((object) new Vector3(-1171f, -2195f, 20f));
      CamR.Add((object) -42);
      Options.Add((object) "Option9");
      Price.Add((object) 2300000);
      Location.Add((object) "LSIA");
      CamP.Add((object) new Vector3(-489f, -2178f, 10f));
      CamR.Add((object) 128);
      Options.Add((object) "Option10");
      Price.Add((object) 2850000);
      Location.Add((object) "Murrieta Heights");
      CamP.Add((object) new Vector3(1200f, -1273f, 37f));
      CamR.Add((object) -43);
      Options.Add((object) "Option11");
      Price.Add((object) 4550000);
      Location.Add((object) "Pacific Bluffs");
      CamP.Add((object) new Vector3(-2059f, -257f, 26.5f));
      CamR.Add((object) -113);
      Options.Add((object) "Option12");
      Price.Add((object) 4850000);
      Location.Add((object) "Hawick");
      CamP.Add((object) new Vector3(541.3f, -229f, 56f));
      CamR.Add((object) -22);
      Options.Add((object) "Option13");
      Price.Add((object) 2350000);
      Location.Add((object) "Strawberry");
      CamP.Add((object) new Vector3(62f, -1283f, 32f));
      CamR.Add((object) 85);
      Options.Add((object) "Option14");
      Price.Add((object) 1150000);
      Location.Add((object) "La Mesa");
      CamP.Add((object) new Vector3(511f, -624f, 28f));
      CamR.Add((object) 129);
      List<object> CCamP = new List<object>();
      List<object> CCamR = new List<object>();
      List<object> COptions = new List<object>();
      List<object> CPrice = new List<object>();
      List<object> CLocation = new List<object>();
      COptions.Add((object) "Elysian Island 1");
      CPrice.Add((object) 925000);
      CLocation.Add((object) "Elysian Island 1");
      CCamP.Add((object) new Vector3(-526.945f, -2924.803f, 9.8f));
      CCamR.Add((object) -26);
      COptions.Add((object) "Elysian Island 2");
      CPrice.Add((object) 756000);
      CLocation.Add((object) "Elysian Island 2");
      CCamP.Add((object) new Vector3(153.5839f, -2488.816f, 9.27f));
      CCamR.Add((object) 56);
      COptions.Add((object) "Cypress Flats 1");
      CPrice.Add((object) 1100000);
      CLocation.Add((object) "Cypress Flats 1");
      CCamP.Add((object) new Vector3(645.6f, -2690.46f, 9.27f));
      CCamR.Add((object) -83);
      COptions.Add((object) "Buccaneer Way");
      CPrice.Add((object) 450000);
      CLocation.Add((object) "Buccaneer Way");
      CCamP.Add((object) new Vector3(1239.292f, -3223.613f, 9f));
      CCamR.Add((object) 12);
      COptions.Add((object) "Cypress Flats 2");
      CPrice.Add((object) 1350000);
      CLocation.Add((object) "Cypress Flats 2");
      CCamP.Add((object) new Vector3(978.58f, -2436.004f, 32f));
      CCamR.Add((object) -80);
      COptions.Add((object) "Cypress Flats 3");
      CPrice.Add((object) 1050000);
      CLocation.Add((object) "Cypress Flats 3");
      CCamP.Add((object) new Vector3(847.141f, -2249.315f, 35.45f));
      CCamR.Add((object) 9);
      COptions.Add((object) "La Mesa 1");
      CPrice.Add((object) 2000000);
      CLocation.Add((object) "La Mesa 1");
      CCamP.Add((object) new Vector3(840.6116f, -920.6769f, 28.8f));
      CCamR.Add((object) 38);
      COptions.Add((object) "Little Bighorn Ave");
      CPrice.Add((object) 2700000);
      CLocation.Add((object) "Little Bighorn Ave");
      CCamP.Add((object) new Vector3(513.79f, -634.47f, 24.9f));
      CCamR.Add((object) 95);
      COptions.Add((object) "Strawberry");
      CPrice.Add((object) 2550000);
      CLocation.Add((object) "Strawberry");
      CCamP.Add((object) new Vector3(-334.39f, -1407.6f, 33.5f));
      CCamR.Add((object) -60);
      COptions.Add((object) "Rockford Hills");
      CPrice.Add((object) 4250000);
      CLocation.Add((object) "Rockford Hills");
      CCamP.Add((object) new Vector3(-1291.56f, -265.1995f, 40.07f));
      CCamR.Add((object) -167);
      COptions.Add((object) "LSIA 1");
      CPrice.Add((object) 1250000);
      CLocation.Add((object) "LSIA 1");
      CCamP.Add((object) new Vector3(-939.99f, -1980.346f, 13f));
      CCamR.Add((object) 93);
      COptions.Add((object) "LSIA 2");
      CPrice.Add((object) 1150000);
      CLocation.Add((object) "LSIA 2");
      CCamP.Add((object) new Vector3(-990.2463f, -2082.601f, 13f));
      CCamR.Add((object) -68);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.methgarage, "Change Vehicle Warehouse Position");
      this.GUIMenus.Add(uiMenu3);
      UIMenuListItem Positions = new UIMenuListItem("Option : ", Options, 0);
      uiMenu3.AddItem((UIMenuItem) Positions);
      UIMenuItem Loc = new UIMenuItem("Location : ");
      uiMenu3.AddItem(Loc);
      UIMenuItem pr1 = new UIMenuItem("Price : $0");
      uiMenu3.AddItem(pr1);
      UIMenuItem uiMenuItem1 = new UIMenuItem("Current");
      uiMenu3.AddItem(uiMenuItem1);
      UIMenuItem Set = new UIMenuItem("Set");
      uiMenu3.AddItem(Set);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Set || !(this.WarehouseCam != (Camera) null))
          return;
        object obj1 = Price[Positions.Index];
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__1.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__0 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.GreaterThanOrEqual, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__0, Game.Player.Money, obj1);
        if (!target1((CallSite) p1, obj2))
          return;
        this.WCamOn = false;
        Player player1 = Game.Player;
        Player player2 = player1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, int> target2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__3.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, int>> p3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__3;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__2 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.SubtractAssign, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__2, player1.Money, obj1);
        int num = target2((CallSite) p3, obj3);
        player2.Money = num;
        Game.Player.Character.IsVisible = true;
        Camera warehouseCam1 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__4, CamP[Positions.Index]);
        warehouseCam1.Position = vector3_1;
        Camera warehouseCam2 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__5 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__5.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__5, typeof (Vector3), 0, 0, CamR[Positions.Index]);
        warehouseCam2.Rotation = vector3_2;
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.WarehouseCam.FarClip = 2000f;
        this.WarehouseCam.IsActive = false;
        this.WarehouseCam.Destroy();
        this.modMenuPool.CloseAllMenus();
        Game.Player.Character.FreezePosition = false;
        this.modMenuPool.CloseAllMenus();
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.WarehousePos = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__6, Options[Positions.Index]);
        Game.Player.Character.Alpha = 15;
        Game.Player.Character.Position = new Vector3(-2399.7f, 718.1f, 221.4f);
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        this.Config.SetValue<int>("Setup", "VehicleWarehouseBought", 1);
        this.Config.Save();
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Warehouse.ini");
        this.Config.SetValue<string>("Position", "WarehousePos", this.WarehousePos);
        this.Config.Save();
        Script.Wait(10);
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        Game.Player.Character.Alpha = (int) byte.MaxValue;
        Game.Player.Character.Position = this.MenuMarker;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.IsVisible = true;
      });
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != Positions)
          return;
        if (this.WarehouseCam != (Camera) null)
        {
          this.WCamOn = true;
          Camera warehouseCam1 = this.WarehouseCam;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__7.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__7, CamP[Positions.Index]);
          warehouseCam1.Position = vector3_1;
          Camera warehouseCam2 = this.WarehouseCam;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__8 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__8.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__8, typeof (Vector3), 0, 0, CamR[Positions.Index]);
          warehouseCam2.Rotation = vector3_2;
          Ped character = Game.Player.Character;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__9.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__9, CamP[Positions.Index]);
          character.Position = vector3_3;
          Game.Player.Character.FreezePosition = true;
          Game.Player.Character.IsVisible = false;
          this.WarehouseCam.IsActive = true;
          this.WarehouseCam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          UIMenuItem uiMenuItem2 = pr1;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__12.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p12 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__12;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__11 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, string, object, object> target2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__11.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, string, object, object>> p11 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__11;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__10.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__10, Price[Positions.Index], "N");
          object obj2 = target2((CallSite) p11, "Price : $", obj1);
          string str1 = target1((CallSite) p12, obj2);
          uiMenuItem2.Text = str1;
          UIMenuItem uiMenuItem3 = Loc;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__14.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p14 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__14;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__13 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__13 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__13.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__13, "Location : ", Location[Positions.Index]);
          string str2 = target3((CallSite) p14, obj3);
          uiMenuItem3.Text = str2;
        }
        if (!(this.WarehouseCam == (Camera) null))
          return;
        this.WCamOn = true;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__17 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, Camera>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Camera), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, Camera> target4 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__17.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, Camera>> p17 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__17;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__16 = CallSite<Func<CallSite, System.Type, object, Vector3, int, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "CreateCamera", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, System.Type, object, Vector3, int, object> target5 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__16.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, System.Type, object, Vector3, int, object>> p16 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__16;
        System.Type type = typeof (World);
        object obj4 = CamP[Positions.Index];
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__15 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__15 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_4 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__15.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__15, typeof (Vector3), 0, 0, CamR[Positions.Index]);
        object obj5 = target5((CallSite) p16, type, obj4, vector3_4, 100);
        this.WarehouseCam = target4((CallSite) p17, obj5);
        Camera warehouseCam3 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_5 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__18.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__18, CamP[Positions.Index]);
        warehouseCam3.Position = vector3_5;
        Camera warehouseCam4 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__19 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__19 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__19.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__19, typeof (Vector3), 0, 0, CamR[Positions.Index]);
        warehouseCam4.Rotation = vector3_6;
        this.WarehouseCam.IsActive = true;
        Game.Player.Character.IsVisible = false;
        this.WarehouseCam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        Ped character1 = Game.Player.Character;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__20 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_7 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__20.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__20, CamP[Positions.Index]);
        character1.Position = vector3_7;
        Game.Player.Character.FreezePosition = true;
        UIMenuItem uiMenuItem4 = pr1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__23 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__23.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p23 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__23;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__22 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__22 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, string, object, object> target7 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__22.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, string, object, object>> p22 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__22;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__21 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__21.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__21, Price[Positions.Index], "N");
        object obj7 = target7((CallSite) p22, "Price : $", obj6);
        string str3 = target6((CallSite) p23, obj7);
        uiMenuItem4.Text = str3;
        UIMenuItem uiMenuItem5 = Loc;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__25 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target8 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__25.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p25 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__25;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__24 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__24 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj8 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__24.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__24, "Location : ", Location[Positions.Index]);
        string str4 = target8((CallSite) p25, obj8);
        uiMenuItem5.Text = str4;
      });
      UIMenu uiMenu4 = this.modMenuPool.AddSubMenu(this.methgarage, "Change Cargo Warehouse Position");
      this.GUIMenus.Add(uiMenu4);
      UIMenuListItem CPositions = new UIMenuListItem("Option : ", COptions, 0);
      uiMenu4.AddItem((UIMenuItem) CPositions);
      UIMenuItem CLoc = new UIMenuItem("Location : ");
      uiMenu4.AddItem(CLoc);
      UIMenuItem Cpr1 = new UIMenuItem("Price : $0");
      uiMenu4.AddItem(Cpr1);
      UIMenuItem uiMenuItem6 = new UIMenuItem("Current");
      uiMenu4.AddItem(uiMenuItem6);
      UIMenuItem CSet = new UIMenuItem("Set");
      uiMenu4.AddItem(CSet);
      uiMenu4.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != CSet || !(this.WarehouseCam != (Camera) null))
          return;
        object obj1 = CPrice[CPositions.Index];
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__27 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__27.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p27 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__27;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__26 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__26 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.GreaterThanOrEqual, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__26.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__26, Game.Player.Money, obj1);
        if (!target1((CallSite) p27, obj2))
          return;
        this.WCamOn = false;
        Player player1 = Game.Player;
        Player player2 = player1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__29 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__29 = CallSite<Func<CallSite, object, int>>.Create(Binder.Convert(CSharpBinderFlags.ConvertExplicit, typeof (int), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, int> target2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__29.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, int>> p29 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__29;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__28 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__28 = CallSite<Func<CallSite, int, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.SubtractAssign, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__28.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__28, player1.Money, obj1);
        int num = target2((CallSite) p29, obj3);
        player2.Money = num;
        Camera warehouseCam1 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__30 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__30 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__30.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__30, CCamP[CPositions.Index]);
        warehouseCam1.Position = vector3_1;
        Camera warehouseCam2 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__31 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__31 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__31.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__31, typeof (Vector3), 0, 0, CCamR[CPositions.Index]);
        warehouseCam2.Rotation = vector3_2;
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.WarehouseCam.FarClip = 2000f;
        this.WarehouseCam.IsActive = false;
        this.WarehouseCam.Destroy();
        this.modMenuPool.CloseAllMenus();
        Game.Player.Character.FreezePosition = false;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__32 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.WarehousePos = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__32.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__32, COptions[CPositions.Index]);
        this.Config.SetValue<int>("Setup", "SubbusinessLoc", CPositions.Index);
        this.Config.SetValue<int>("Setup", "SubbusinessBought", 1);
        this.Config.Save();
        Game.Player.Character.Alpha = 15;
        Game.Player.Character.Position = new Vector3(-2399.7f, 718.1f, 221.4f);
        Script.Wait(10);
        Game.Player.Character.Position = this.MenuMarker;
        this.modMenuPool.CloseAllMenus();
        this.WarehouseCam.Destroy();
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        Game.Player.Character.Alpha = (int) byte.MaxValue;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.IsVisible = true;
      });
      uiMenu4.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != CPositions)
          return;
        if (this.WarehouseCam != (Camera) null)
        {
          this.WCamOn = true;
          Camera warehouseCam1 = this.WarehouseCam;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__33 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__33 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__33.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__33, CCamP[CPositions.Index]);
          warehouseCam1.Position = vector3_1;
          Camera warehouseCam2 = this.WarehouseCam;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__34 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__34 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__34.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__34, typeof (Vector3), 0, 0, CCamR[CPositions.Index]);
          warehouseCam2.Rotation = vector3_2;
          Ped character = Game.Player.Character;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__35 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__35 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          Vector3 vector3_3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__35.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__35, CCamP[CPositions.Index]);
          character.Position = vector3_3;
          Game.Player.Character.FreezePosition = true;
          Game.Player.Character.IsVisible = false;
          this.WarehouseCam.IsActive = true;
          this.WarehouseCam.FarClip = 2000f;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          UIMenuItem uiMenuItem2 = Cpr1;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__38 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__38 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__38.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p38 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__38;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__37 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__37 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, string, object, object> target2 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__37.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, string, object, object>> p37 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__37;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__36 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__36 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__36.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__36, CPrice[CPositions.Index], "N");
          object obj2 = target2((CallSite) p37, "Price : $", obj1);
          string str1 = target1((CallSite) p38, obj2);
          uiMenuItem2.Text = str1;
          UIMenuItem uiMenuItem3 = CLoc;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__40 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__40 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__40.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p40 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__40;
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__39 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__39 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj3 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__39.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__39, "Location : ", CLocation[CPositions.Index]);
          string str2 = target3((CallSite) p40, obj3);
          uiMenuItem3.Text = str2;
        }
        if (!(this.WarehouseCam == (Camera) null))
          return;
        this.WCamOn = true;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__43 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__43 = CallSite<Func<CallSite, object, Camera>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Camera), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, Camera> target4 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__43.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, Camera>> p43 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__43;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__42 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__42 = CallSite<Func<CallSite, System.Type, object, Vector3, int, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "CreateCamera", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, System.Type, object, Vector3, int, object> target5 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__42.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, System.Type, object, Vector3, int, object>> p42 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__42;
        System.Type type = typeof (World);
        object obj4 = CCamP[CPositions.Index];
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__41 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__41 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_4 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__41.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__41, typeof (Vector3), 0, 0, CCamR[CPositions.Index]);
        object obj5 = target5((CallSite) p42, type, obj4, vector3_4, 100);
        this.WarehouseCam = target4((CallSite) p43, obj5);
        Camera warehouseCam3 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__44 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__44 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_5 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__44.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__44, CCamP[CPositions.Index]);
        warehouseCam3.Position = vector3_5;
        Camera warehouseCam4 = this.WarehouseCam;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__45 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__45 = CallSite<Func<CallSite, System.Type, int, int, object, Vector3>>.Create(Binder.InvokeConstructor(CSharpBinderFlags.None, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__45.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__45, typeof (Vector3), 0, 0, CCamR[CPositions.Index]);
        warehouseCam4.Rotation = vector3_6;
        this.WarehouseCam.IsActive = true;
        Game.Player.Character.IsVisible = false;
        this.WarehouseCam.FarClip = 2000f;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        Ped character1 = Game.Player.Character;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__46 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__46 = CallSite<Func<CallSite, object, Vector3>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Vector3), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Vector3 vector3_7 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__46.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__46, CCamP[CPositions.Index]);
        character1.Position = vector3_7;
        Game.Player.Character.FreezePosition = true;
        UIMenuItem uiMenuItem4 = Cpr1;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__49 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__49 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__49.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p49 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__49;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__48 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__48 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, string, object, object> target7 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__48.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, string, object, object>> p48 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__48;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__47 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__47 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj6 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__47.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__47, CPrice[CPositions.Index], "N");
        object obj7 = target7((CallSite) p48, "Price : $", obj6);
        string str3 = target6((CallSite) p49, obj7);
        uiMenuItem4.Text = str3;
        UIMenuItem uiMenuItem5 = CLoc;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__51 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__51 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target8 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__51.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p51 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__51;
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__50 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__50 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj8 = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__50.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__50, "Location : ", CLocation[CPositions.Index]);
        string str4 = target8((CallSite) p51, obj8);
        uiMenuItem5.Text = str4;
      });
      List<object> items10 = new List<object>();
      int num1 = 1;
      for (int index = 1; index < 100; ++index)
        items10.Add((object) (num1 + index));
      UIMenu uiMenu5 = this.modMenuPool.AddSubMenu(this.methgarage, "Expand Business ");
      this.GUIMenus.Add(uiMenu5);
      UIMenu uiMenu6 = this.modMenuPool.AddSubMenu(this.methgarage, "Money Vault Options ");
      this.GUIMenus.Add(uiMenu6);
      UIMenuItem BuyVW = new UIMenuItem("Buy : $450,000");
      uiMenu6.AddItem(BuyVW);
      UIMenuItem SellMV = new UIMenuItem("Sell");
      uiMenu6.AddItem(SellMV);
      UIMenu uiMenu7 = this.modMenuPool.AddSubMenu(this.methgarage, "Gun Locker Options ");
      this.GUIMenus.Add(uiMenu7);
      UIMenuItem BuyGL = new UIMenuItem("Buy : $1,000,000");
      uiMenu7.AddItem(BuyGL);
      UIMenuItem SellGL = new UIMenuItem("Sell");
      uiMenu7.AddItem(SellGL);
      UIMenuItem Update = new UIMenuItem("Update Stats");
      uiMenu5.AddItem(Update);
      UIMenuItem BuyNewLevel = new UIMenuItem(" Buy Level ");
      uiMenu5.AddItem(BuyNewLevel);
      UIMenuListItem list2 = new UIMenuListItem("Select Level: ", items10, 1);
      uiMenu5.AddItem((UIMenuItem) list2);
      UIMenuItem Jump = new UIMenuItem("Jump Straight to Level");
      uiMenu5.AddItem(Jump);
      UIMenuItem Show = new UIMenuItem("Show Level");
      uiMenu5.AddItem(Show);
      UIMenu uiMenu8 = this.modMenuPool.AddSubMenu(this.methgarage, "Sell Business");
      this.GUIMenus.Add(uiMenu8);
      UIMenuItem Sell = new UIMenuItem("Sell");
      uiMenu8.AddItem(Sell);
      uiMenu8.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Sell)
          return;
        if (!this.bought)
        {
          UI.Notify(this.GetHostName() + " Get out of here!, you dont own any of these buisnesses ");
        }
        else
        {
          this.bought = false;
          this.purchaselvl = 0;
          this.stocksvalue = 0.0f;
          this.stockscount = 0;
          this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " I just heard, you wanted to sell the buisness, i'm verry sorry, if i have upset you in any way");
        }
      });
      uiMenu7.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (this.Config.GetValue<int>("Setup", "GunLockerBought", this.GunLockerBought) == 0)
        {
          if (item != BuyGL)
            return;
          if (Game.Player.Money > 1000000)
          {
            Game.Player.Money -= 1000000;
            this.GunLockerBought = 1;
            this.Config.SetValue<int>("Setup", "GunLockerBought", this.GunLockerBought);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " Ok good you can buy MK2 Weapons now from your gun locker");
            this.CheckedDoorMoneyVault = false;
            this.CheckedDoorGunLocker = false;
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase a  gun locker");
        }
        else
        {
          if (this.Config.GetValue<int>("Setup", "GunLockerBought", this.GunLockerBought) != 1)
            return;
          if (item == SellGL)
          {
            this.GunLockerBought = 0;
            this.Config.SetValue<int>("Setup", "GunLockerBought", this.GunLockerBought);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " Ok i can organize to sell the gun locker");
            this.CheckedDoorMoneyVault = false;
            this.CheckedDoorGunLocker = false;
          }
          UI.Notify(this.GetHostName() + " Boss you have allready bought a gun locker");
        }
      });
      uiMenu6.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (this.Config.GetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought) == 0 && item == BuyVW)
        {
          if (Game.Player.Money > 450000)
          {
            Game.Player.Money -= 450000;
            this.MoneyVaultBought = 1;
            this.Config.SetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " Ok good you can store money now");
            this.CheckedDoorMoneyVault = false;
            this.CheckedDoorGunLocker = false;
          }
          else
            UI.Notify(this.GetHostName() + " Sorry boss you don't have enough money to purchase a vehicle Warehouse");
        }
        if (this.Config.GetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought) != 1 || item != SellMV)
          return;
        this.MoneyVaultBought = 0;
        this.Config.SetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought);
        this.Config.Save();
        UI.Notify(this.GetHostName() + " You no longer own a Money Vault");
        this.CheckedDoorMoneyVault = false;
        this.CheckedDoorGunLocker = false;
      });
      uiMenu5.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Jump)
        {
          int num2 = list2.Index + 1;
          if (num2 > this.purchaselvl)
          {
            int num3 = 0;
            int num4 = 0;
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            for (int purchaselvl = this.purchaselvl; purchaselvl < num2; ++purchaselvl)
            {
              double num5 = 1.75;
              if (this.purchaselvl < 25)
                num5 = 1.75;
              if (this.purchaselvl > 25 && index < 50)
                num5 = 2.25;
              if (this.purchaselvl > 50 && this.purchaselvl < 70)
                num5 = 3.5;
              if (this.purchaselvl > 75 && this.purchaselvl < 100)
                num5 = 4.75;
              num3 += (int) ((double) this.BusinessUpgradeBasePrice * num5 * (double) num2);
              ++num4;
            }
            UI.Notify(this.GetHostName() + " OK your new level will be " + (this.purchaselvl += num4 + 1).ToString() + ", at a price of $" + num3.ToString("N") + ", Do u want to continue Enter Y or N");
            Script.Wait(1000);
            try
            {
              if (Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 1).Equals("Y"))
              {
                if (Game.Player.Money >= num3)
                {
                  Game.Player.Money -= num3;
                  this.purchaselvl = num2;
                  float num5 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
                  this.maxstocks = 10 * this.purchaselvl;
                  this.maxstocks = 10 * this.purchaselvl;
                  this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
                  this.increaseGain = num5;
                  this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                  this.Config.Save();
                }
                else
                  UI.Notify("You dont have enough money to purchase this upgrade");
              }
              else
              {
                this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                UI.Notify(this.GetHostName() + " You Entered the Wrong key or N");
              }
            }
            catch (NullReferenceException ex)
            {
              this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              UI.Notify("You did not enter a key!");
            }
          }
        }
        if (item == Update)
        {
          int num2 = list2.Index + 1;
          double num3 = 1.75;
          if (this.purchaselvl < 25)
            num3 = 1.75;
          if (this.purchaselvl > 25 && index < 50)
            num3 = 2.25;
          if (this.purchaselvl > 50 && this.purchaselvl < 70)
            num3 = 3.5;
          if (this.purchaselvl > 75 && this.purchaselvl < 100)
            num3 = 4.75;
          UI.Notify("Price " + ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2).ToString("N"));
          UI.Notify("Level to Buy " + (num2 + 1).ToString());
          UI.Notify("increaseGain : $" + ((float) ((double) this.BusinessUpgradeIncreaseGain * (double) num2 / 0.75)).ToString("N"));
          UI.Notify("Profit Margin :" + (0.85 * (double) num2 + 0.0).ToString() + "%");
          UI.Notify("Max Stocks : " + (10 * num2).ToString());
        }
        if (item == BuyNewLevel)
        {
          int num2 = list2.Index + 1;
          this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          if (this.purchaselvl + 1 == num2)
          {
            double num3 = 1.75;
            if (this.purchaselvl < 25)
              num3 = 1.75;
            if (this.purchaselvl > 25 && index < 50)
              num3 = 2.25;
            if (this.purchaselvl > 50 && this.purchaselvl < 70)
              num3 = 3.5;
            if (this.purchaselvl > 75 && this.purchaselvl < 100)
              num3 = 4.75;
            if ((double) Game.Player.Money >= (double) this.BusinessUpgradeBasePrice * num3 * (double) num2)
            {
              Game.Player.Money -= (int) ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2);
              ++this.purchaselvl;
              this.maxstocks = 10 * this.purchaselvl;
              float num4 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
              this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
              this.increaseGain = num4;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Config.Save();
            }
            else
              UI.Notify("You dont have enough money to purchase this upgrade");
          }
          else
            UI.Notify("The level you are trying to purchase is either to high or to low!, please purchase the level before, to purchase this level");
        }
        if (item != Show)
          return;
        double num6 = 1.75;
        if (this.purchaselvl < 25)
          num6 = 1.75;
        if (this.purchaselvl > 25 && index < 50)
          num6 = 2.25;
        if (this.purchaselvl > 50 && this.purchaselvl < 70)
          num6 = 3.5;
        if (this.purchaselvl > 75 && this.purchaselvl < 100)
          num6 = 4.75;
        UI.Notify("Price for Next Level $" + ((double) this.BusinessUpgradeBasePrice * num6 * (double) this.purchaselvl).ToString("N"));
        UI.Notify("Next Level " + (this.purchaselvl + 1).ToString());
        UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
        UI.Notify("Profit Margin :" + (0.85 * (double) this.purchaselvl + 0.0).ToString() + "%");
        UI.Notify("Max Stocks : " + (10 * this.purchaselvl).ToString());
      });
      List<object> MColour = new List<object>();
      MColour.Add((object) "Green");
      MColour.Add((object) "Blue");
      MColour.Add((object) "Yellow");
      MColour.Add((object) "Red");
      MColour.Add((object) "Purple");
      MColour.Add((object) "Pink");
      List<object> BColour = new List<object>();
      BColour.Add((object) BlipColor.Green);
      BColour.Add((object) BlipColor.Blue);
      BColour.Add((object) BlipColor.Yellow);
      BColour.Add((object) BlipColor.Red);
      BColour.Add((object) BlipColor.Purple);
      BColour.Add((object) BlipColor.Pink);
      List<object> UiColour = new List<object>();
      UiColour.Add((object) "   g   ");
      UiColour.Add((object) "   b   ");
      UiColour.Add((object) "   y  ");
      UiColour.Add((object) "   r   ");
      UiColour.Add((object) "   p   ");
      UiColour.Add((object) "   m   ");
      UIMenu uiMenu9 = this.modMenuPool.AddSubMenu(this.methgarage, "Misc");
      this.GUIMenus.Add(uiMenu9);
      UIMenuItem uiMenuItem7 = new UIMenuItem("------------------------- Maze Bank ---------------------------");
      uiMenu9.AddItem(uiMenuItem7);
      UIMenuListItem MBC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu9.AddItem((UIMenuItem) MBC);
      UIMenuListItem MMC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu9.AddItem((UIMenuItem) MMC);
      UIMenuItem uiMenuItem8 = new UIMenuItem("-------------------------- Arcadius ------------------------");
      uiMenu9.AddItem(uiMenuItem8);
      UIMenuListItem AMC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu9.AddItem((UIMenuItem) AMC);
      UIMenuListItem ABC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu9.AddItem((UIMenuItem) ABC);
      UIMenuItem uiMenuItem9 = new UIMenuItem("--------------------------- Lombok -------------------------");
      uiMenu9.AddItem(uiMenuItem9);
      UIMenuListItem LMC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu9.AddItem((UIMenuItem) LMC);
      UIMenuListItem LBC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu9.AddItem((UIMenuItem) LBC);
      UIMenuItem uiMenuItem10 = new UIMenuItem("-----------------------Maze Bank West ------------------------");
      uiMenu9.AddItem(uiMenuItem10);
      UIMenuListItem MBWMC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu9.AddItem((UIMenuItem) MBWMC);
      UIMenuListItem MBWBC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu9.AddItem((UIMenuItem) MBWBC);
      UIMenuItem uiMenuItem11 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu9.AddItem(uiMenuItem11);
      UIMenuItem uiMenuItem12 = new UIMenuItem("Current Host : " + this.GetHostName());
      uiMenu9.AddItem(uiMenuItem12);
      UIMenuItem SetHN = new UIMenuItem("Set Host Name");
      uiMenu9.AddItem(SetHN);
      UIMenuListItem uiC = new UIMenuListItem("UI Color : ", UiColour, 0);
      uiMenu9.AddItem((UIMenuItem) uiC);
      UIMenuItem Setall = new UIMenuItem("Save All");
      uiMenu9.AddItem(Setall);
      uiMenu9.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SetHN)
        {
          this.HostName = Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 16);
          this.Config.SetValue<string>("Misc", "HostName", this.HostName);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Hi im your new boss!");
        }
        if (item != Setall)
          return;
        this.Config.SetValue<string>("Misc", "HostName", this.HostName);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__52 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__52 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.ArcadiusBlip_Colour = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__52.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__52, BColour[ABC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "ArcadiusBlip_Colour", this.ArcadiusBlip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__53 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__53 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.ArcadiusMarkerColorString = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__53.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__53, MColour[AMC.Index]);
        this.Config.SetValue<string>("Misc", "ArcadiusMarkerColorString", this.ArcadiusMarkerColorString);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__54 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__54 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MazeBankBlip_Colour = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__54.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__54, BColour[MBC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "MazeBankBlip_Colour", this.MazeBankBlip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__55 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__55 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MazeBankMarkerColorString = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__55.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__55, MColour[MMC.Index]);
        this.Config.SetValue<string>("Misc", "MazeBankMarkerColorString", this.MazeBankMarkerColorString);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__56 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__56 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.LombokBlip_Colour = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__56.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__56, BColour[LBC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "LombokBlip_Colour", this.LombokBlip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__57 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__57 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.LombokMarkerColorString = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__57.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__57, MColour[LMC.Index]);
        this.Config.SetValue<string>("Misc", "LombokMarkerColorString", this.LombokMarkerColorString);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__58 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__58 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MBWBlip_Colour = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__58.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__58, BColour[MBWBC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "MBWBlip_Colour", this.MBWBlip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__59 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__59 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MBWMarkerColorString = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__59.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__59, MColour[MBWMC.Index]);
        this.Config.SetValue<string>("Misc", "MBWMarkerColorString", this.MBWMarkerColorString);
        // ISSUE: reference to a compiler-generated field
        if (ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__60 == null)
        {
          // ISSUE: reference to a compiler-generated field
          ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__60 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.Uicolour = ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__60.Target((CallSite) ExecutiveTower.\u003C\u003Eo__825.\u003C\u003Ep__60, UiColour[uiC.Index]);
        this.Config.SetValue<string>("Misc", "Uicolour", this.Uicolour);
        this.Config.Save();
        UI.Notify(this.GetHostName() + " : Settings Changed they will take effect when you reload the mod!");
      });
    }

    private void VehicleIdentiferfun2(VehicleHash v)
    {
      if (this.VehicleMarker != (Blip) null)
        this.VehicleMarker.Remove();
      this.Vehicletoget = (Vehicle) null;
      System.Random random = new System.Random();
      if (random.Next(1, 13) == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (random.Next(1, 13) == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (random.Next(1, 13) == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (random.Next(1, 13) == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (random.Next(1, 13) == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (random.Next(1, 13) == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (random.Next(1, 13) == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (random.Next(1, 13) == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (random.Next(1, 13) == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (random.Next(1, 13) == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (random.Next(1, 13) == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (random.Next(1, 13) == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      this.Vehicletoget = World.CreateVehicle((GTA.Model) v, this.VehicleSpawn);
      this.SourcedVehicle = this.Vehicletoget.DisplayName;
      this.Vehicletoget.Delete();
      this.NewVehicleSourcing = true;
      this.foundvehicleyet = true;
      this.SourcingCheckingforDamage = true;
      UI.Notify(this.GetHostName() + " Test!");
    }

    private void VehicleIdentiferfun(VehicleHash v)
    {
      if (this.VehicleMarker != (Blip) null)
        this.VehicleMarker.Remove();
      this.Vehicletoget = (Vehicle) null;
      System.Random random = new System.Random();
      if (random.Next(1, 13) == 1)
        this.VehicleSpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (random.Next(1, 13) == 2)
        this.VehicleSpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (random.Next(1, 13) == 3)
        this.VehicleSpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (random.Next(1, 13) == 4)
        this.VehicleSpawn = new Vector3(6f, 253.58f, 109f);
      if (random.Next(1, 13) == 5)
        this.VehicleSpawn = new Vector3(703f, 32f, 84f);
      if (random.Next(1, 13) == 6)
        this.VehicleSpawn = new Vector3(1197f, -421.5f, 68f);
      if (random.Next(1, 13) == 7)
        this.VehicleSpawn = new Vector3(1257f, -1428f, 35f);
      if (random.Next(1, 13) == 8)
        this.VehicleSpawn = new Vector3(1264f, -2039f, 45f);
      if (random.Next(1, 13) == 9)
        this.VehicleSpawn = new Vector3(527f, -2052f, 28f);
      if (random.Next(1, 13) == 10)
        this.VehicleSpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleSpawn = new Vector3(756f, -1723f, 30f);
      if (random.Next(1, 13) == 12)
        this.VehicleSpawn = new Vector3(-816f, -2300f, 11f);
      if (random.Next(1, 13) == 13)
        this.VehicleSpawn = new Vector3(-1839f, 136f, 78f);
      this.Vehicletoget = World.CreateVehicle((GTA.Model) v, this.VehicleSpawn);
      this.Vehicletoget.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.Busker01SMO);
      this.Vehicletoget.GetPedOnSeat(VehicleSeat.Driver).Task.FleeFrom(Game.Player.Character);
      this.Vehicleloc = this.Vehicletoget.Position;
      this.VehicleMarker = World.CreateBlip(this.Vehicleloc);
      this.VehicleMarker.Sprite = BlipSprite.Cab;
      this.VehicleMarker.Color = BlipColor.Red;
      this.VehicleMarker.Name = "Target Car";
      this.foundvehicleyet = true;
      this.SourcingCheckingforDamage = true;
    }

    private void VehicleIdentiferfun3(VehicleClass v)
    {
      this.Missionnum = 412;
      this.foundvehicleyet = true;
      this.SourcingCheckingforDamage = true;
    }

    public void SpawnProp(string Prop, Vector3 Pos, Vector3 Rot)
    {
      try
      {
        GTA.Model model = new GTA.Model(Prop);
        model.Request(250);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(50);
          this.Computer = World.CreateProp(model, Pos, Rot, true, false);
        }
        model.MarkAsNoLongerNeeded();
      }
      catch (Exception ex)
      {
        UI.Notify("~r~ Prop : ~w~" + Prop + "~r~ Failed to spawn");
      }
    }

    public static string LoadDict(string dict)
    {
      while (true)
      {
        if (!Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) dict))
        {
          Function.Call(Hash._0xD3BD40951412FEF6, (InputArgument) dict);
          Script.Yield();
        }
        else
          break;
      }
      return dict;
    }

    public void ShowHelpPage1()
    {
      SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
      int int32 = Convert.ToInt32(resolutionMantainRatio.Width / 2f);
      new Sprite("mpentry", "mp_modenotselected_gradient", new Point(0, 10), new Size(Convert.ToInt32(resolutionMantainRatio.Width), 2020), 0.0f, Color.FromArgb(200, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue)).Draw();
      new UIResText("How To Modify A Vehicle in Mod Shop", new Point(int32, 100), 1f, Color.FromArgb((int) byte.MaxValue, 199, 168, 87), GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("Modifing a vehicle in the mod shop is easy, to start you will need to get the vehicle you want into the Mod Shop, you can either enter a garage, ", new Point(int32, 200), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("and press Q to enter mod shop with a vehicle (when prompted) ", new Point(int32, 250), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("or Walk over to the Order Car Menu, then open the menu, and choose the car from Garage & Slot, ", new Point(int32, 300), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("from here, you will see vehicles in the garage, including Primary & Secondary Color, and Numberplate, ", new Point(int32, 350), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("to make it easy to identify the vehicle you want to modify, once you vehicle you choose is in the center of the mod Shop,  ", new Point(int32, 400), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("you can either use a Trainer or HKH191s Business Helper to modify it  ", new Point(int32, 450), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      new UIResText("to use HKH191s Business Helper to Modify your vehicle, simple Enter the vehicle and Press G and a modification menu will appear", new Point(int32, 600), 0.45f, Color.White, GTA.Font.Pricedown, UIResText.Alignment.Centered).Draw();
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.Render2D();
    }

    public void ModShopMenu()
    {
      List<object> garage = new List<object>();
      garage.Add((object) "GarageA");
      garage.Add((object) "GarageB");
      garage.Add((object) "GarageC");
      List<object> items = new List<object>();
      items.Add((object) "Slot1");
      items.Add((object) "Slot2");
      items.Add((object) "Slot3");
      items.Add((object) "Slot4");
      items.Add((object) "Slot5");
      items.Add((object) "Slot6");
      items.Add((object) "Slot7");
      items.Add((object) "Slot8");
      items.Add((object) "Slot9");
      items.Add((object) "Slot10");
      items.Add((object) "Slot11");
      items.Add((object) "Slot12");
      items.Add((object) "Slot13");
      items.Add((object) "Slot14");
      items.Add((object) "Slot15");
      items.Add((object) "Slot16");
      items.Add((object) "Slot17");
      items.Add((object) "Slot18");
      items.Add((object) "Slot19");
      items.Add((object) "Slot20");
      UIMenu uiMenu1 = this.EXmodMenuPool.AddSubMenu(this.ModShopMenuMenu, "Get Car");
      this.GUIMenus.Add(uiMenu1);
      List<object> objectList1 = new List<object>();
      VehicleHash[] values = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
      for (int index = 1; index < values.Length; ++index)
        objectList1.Add((object) values[index]);
      List<object> listofSlots = new List<object>();
      listofSlots.Add((object) "Slot1");
      listofSlots.Add((object) "Slot2");
      listofSlots.Add((object) "Slot3");
      listofSlots.Add((object) "Slot4");
      listofSlots.Add((object) "Slot5");
      listofSlots.Add((object) "Slot6");
      listofSlots.Add((object) "Slot7");
      listofSlots.Add((object) "Slot8");
      listofSlots.Add((object) "Slot9");
      listofSlots.Add((object) "Slot10");
      listofSlots.Add((object) "Slot11");
      listofSlots.Add((object) "Slot12");
      listofSlots.Add((object) "Slot13");
      listofSlots.Add((object) "Slot14");
      listofSlots.Add((object) "Slot15");
      listofSlots.Add((object) "Slot16");
      listofSlots.Add((object) "Slot17");
      listofSlots.Add((object) "Slot18");
      listofSlots.Add((object) "Slot19");
      listofSlots.Add((object) "Slot20");
      UIMenu uiMenu2 = this.EXmodMenuPool.AddSubMenu(this.ModShopMenuMenu, "Add New Vehicle");
      this.GUIMenus.Add(uiMenu2);
      List<object> LogList = new List<object>();
      string[] logFile = File.ReadAllLines(this.ListPath);
      foreach (string str in logFile)
        LogList.Add((object) str);
      this.LoadIniFile(this.ListPath);
      List<object> objectList2 = new List<object>()
      {
        (object) "None",
        (object) "Super",
        (object) "Sport",
        (object) "Armoured",
        (object) "SportClassic",
        (object) "Compact",
        (object) "Coupe",
        (object) "Bikes",
        (object) "Offroad",
        (object) "Sedan",
        (object) "Suv",
        (object) "Vans"
      };
      UIMenuItem uiMenuItem1 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem1);
      UIMenuListItem ListGarages = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu2.AddItem((UIMenuItem) ListGarages);
      UIMenuListItem ListSlot = new UIMenuListItem("Slot: ", listofSlots, 0);
      uiMenu2.AddItem((UIMenuItem) ListSlot);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem2);
      UIMenuListItem Ve = new UIMenuListItem("Vehicle : ", LogList, 0);
      uiMenu2.AddItem((UIMenuItem) Ve);
      UIMenuItem VDName = new UIMenuItem("Vehicle Spawn Name  : Dukes2");
      uiMenu2.AddItem(VDName);
      UIMenuItem VName = new UIMenuItem("Vehicle Full Name  : Imponte Dukes");
      uiMenu2.AddItem(VName);
      UIMenuItem PuchaseV = new UIMenuItem("Purchase Vehicle : $0");
      uiMenu2.AddItem(PuchaseV);
      List<object> STlist = new List<object>();
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      UIMenuItem uiMenuItem3 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem3);
      UIMenuItem Search = new UIMenuItem("Enter Vehicle Name");
      uiMenu2.AddItem(Search);
      UIMenuListItem Ve2 = new UIMenuListItem("Vehicle : ", STlist, 0);
      uiMenu2.AddItem((UIMenuItem) Ve2);
      UIMenuItem uiMenuItem4 = new UIMenuItem("Search Term  : NULL");
      uiMenu2.AddItem(uiMenuItem4);
      UIMenuItem VDName2 = new UIMenuItem("Vehicle Spawn Name  : NULL");
      uiMenu2.AddItem(VDName2);
      UIMenuItem VName2 = new UIMenuItem("Vehicle Full Name  : NULL");
      uiMenu2.AddItem(VName2);
      UIMenuItem PuchaseV2 = new UIMenuItem("Purchase Vehicle : NULL");
      uiMenu2.AddItem(PuchaseV2);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == Ve)
        {
          try
          {
            string[] separator = new string[2]{ " = ", "," };
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string[] strArray = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__0, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
            for (int index1 = 0; index1 < strArray.Length; ++index1)
            {
              this.Price = strArray[1];
              this.Model = strArray[2];
              this.man = strArray[0];
              VDName.Text = "Vehicle Spawn Name : " + this.Model;
              VName.Text = "Vehicle Full Name  : " + this.man;
              PuchaseV.Text = "Purchase Vehicle : " + this.Price;
            }
          }
          catch
          {
          }
        }
        if (item != Ve2)
          return;
        try
        {
          string[] separator = new string[2]{ " = ", "," };
          // ISSUE: reference to a compiler-generated field
          if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__1.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__1, STlist[Ve2.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName2.Text = "Vehicle Spawn Name : " + this.Model;
            VName2.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV2.Text = "Purchase Vehicle : " + this.Price;
          }
        }
        catch
        {
        }
      });
      string SearchTerm;
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Search)
        {
          try
          {
            if (STlist.Count > 0)
              STlist.Clear();
            SearchTerm = Game.GetUserInput(32);
            SearchTerm = SearchTerm.ToUpper();
            UI.Notify("Search Term : " + SearchTerm);
            bool flag = false;
            foreach (string str in logFile)
            {
              if (str.ToUpper().Contains(SearchTerm))
              {
                UI.Notify("Found Match");
                STlist.Add((object) str);
                flag = true;
              }
            }
            if (!flag)
            {
              UI.Notify("Found No Match");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
              STlist.Add((object) "NULL");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Invalid Search Term Entered");
          }
        }
        try
        {
          this.M = (float) int.Parse(this.Price);
        }
        catch (Exception ex)
        {
        }
        if (item == PuchaseV2)
        {
          if ((double) Game.Player.Money > (double) this.M)
          {
            try
            {
              Game.Player.Money -= (int) this.M;
              this.DestoryCars();
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__2 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string str1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__2, listofSlots[ListSlot.Index]);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__7 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__7 = CallSite<Action<CallSite, SaveCar, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, SaveCar, object> target1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__7.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, SaveCar, object>> p7 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__7;
              SaveCar sc1 = this.SC;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__6 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target2 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__6.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p6 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__6;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__5 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target3 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__5.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p5 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__5;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__4 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target4 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__4.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p4 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__4;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__3 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__3 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__3.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__3, this.path, garage[ListGarages.Index]);
              object obj2 = target4((CallSite) p4, obj1, "//");
              string str2 = str1;
              object obj3 = target3((CallSite) p5, obj2, str2);
              object obj4 = target2((CallSite) p6, obj3, ".ini");
              target1((CallSite) p7, sc1, obj4);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__12 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__12 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, System.Type, object> target5 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__12.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, System.Type, object>> p12 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__12;
              System.Type type = typeof (UI);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__11 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target6 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__11.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p11 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__11;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__10 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target7 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__10.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p10 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__9 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target8 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__9.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p9 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__9;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__8 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__8 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj5 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__8.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__8, this.path, garage[ListGarages.Index]);
              object obj6 = target8((CallSite) p9, obj5, "//");
              string str3 = str1;
              object obj7 = target7((CallSite) p10, obj6, str3);
              object obj8 = target6((CallSite) p11, obj7, ".ini");
              target5((CallSite) p12, type, obj8);
              Vector3 position = Game.Player.Character.Position;
              this.SC.Save();
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__17 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__17 = CallSite<Action<CallSite, SaveCar, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, SaveCar, object> target9 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__17.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, SaveCar, object>> p17 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__17;
              SaveCar sc2 = this.SC;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__16 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target10 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__16.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p16 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__16;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__15 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target11 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__15.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p15 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__15;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__14 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target12 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__14.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p14 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__14;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__13 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__13 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj9 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__13.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__13, this.path, garage[ListGarages.Index]);
              object obj10 = target12((CallSite) p14, obj9, "//");
              string str4 = str1;
              object obj11 = target11((CallSite) p15, obj10, str4);
              object obj12 = target10((CallSite) p16, obj11, ".ini");
              target9((CallSite) p17, sc2, obj12);
              try
              {
                ExecutiveTower.Saveloc = (str1 + ".ini").ToString();
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__18 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.GarageNum = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__18.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__18, garage[ListGarages.Index]);
                if ((Entity) this.Vehicle1 != (Entity) null)
                  this.Vehicle1.Delete();
                if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
                  ExecutiveTower.VehicleA.Delete();
                Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
                this.SC.SaveName(vehicle.DisplayName);
                this.Vehicle1 = vehicle;
                this.Vehicle1.IsDriveable = true;
                this.Vehicle1.Position = this.VehicleAPos;
                this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, 45f);
                ExecutiveTower.VehicleA = this.Vehicle1;
                this.Vehicle1 = (Vehicle) null;
              }
              catch (NullReferenceException ex)
              {
                UI.Notify("~r~error ~w~ Invalid Vehicle Name!");
              }
            }
            catch (Exception ex)
            {
            }
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this vehicle!");
        }
        if (item != PuchaseV)
          return;
        if ((double) Game.Player.Money > (double) this.M)
        {
          try
          {
            Game.Player.Money -= (int) this.M;
            this.DestoryCars();
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string str1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__19.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__19, listofSlots[ListSlot.Index]);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__24 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__24 = CallSite<Action<CallSite, SaveCar, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Action<CallSite, SaveCar, object> target1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__24.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Action<CallSite, SaveCar, object>> p24 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__24;
            SaveCar sc1 = this.SC;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__23 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target2 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__23.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p23 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__23;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__22 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target3 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__22.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p22 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__22;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target4 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__21.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p21 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__21;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__20 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj1 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__20.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__20, this.path, garage[ListGarages.Index]);
            object obj2 = target4((CallSite) p21, obj1, "//");
            string str2 = str1;
            object obj3 = target3((CallSite) p22, obj2, str2);
            object obj4 = target2((CallSite) p23, obj3, ".ini");
            target1((CallSite) p24, sc1, obj4);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__29 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__29 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Action<CallSite, System.Type, object> target5 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__29.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Action<CallSite, System.Type, object>> p29 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__29;
            System.Type type = typeof (UI);
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__28 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target6 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__28.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p28 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__28;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__27 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target7 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__27.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p27 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__27;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__26 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, string, object> target8 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__26.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, string, object>> p26 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__26;
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__25 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj5 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__25.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__25, this.path, garage[ListGarages.Index]);
            object obj6 = target8((CallSite) p26, obj5, "//");
            string str3 = str1;
            object obj7 = target7((CallSite) p27, obj6, str3);
            object obj8 = target6((CallSite) p28, obj7, ".ini");
            target5((CallSite) p29, type, obj8);
            Vector3 position = Game.Player.Character.Position;
            this.SC.Save();
            try
            {
              ExecutiveTower.Saveloc = (str1 + ".ini").ToString();
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__30 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__30 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.GarageNum = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__30.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__30, garage[ListGarages.Index]);
              if ((Entity) this.Vehicle1 != (Entity) null)
                this.Vehicle1.Delete();
              if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
                ExecutiveTower.VehicleA.Delete();
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__35 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__35 = CallSite<Action<CallSite, SaveCar, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Action<CallSite, SaveCar, object> target9 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__35.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Action<CallSite, SaveCar, object>> p35 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__35;
              SaveCar sc2 = this.SC;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__34 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__34 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target10 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__34.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p34 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__34;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__33 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__33 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target11 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__33.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p33 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__33;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__32 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, object, string, object> target12 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__32.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, object, string, object>> p32 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__32;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__31 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__31 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj9 = ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__31.Target((CallSite) ExecutiveTower.\u003C\u003Eo__848.\u003C\u003Ep__31, this.path, garage[ListGarages.Index]);
              object obj10 = target12((CallSite) p32, obj9, "//");
              string str4 = str1;
              object obj11 = target11((CallSite) p33, obj10, str4);
              object obj12 = target10((CallSite) p34, obj11, ".ini");
              target9((CallSite) p35, sc2, obj12);
              Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
              this.SC.SaveName(vehicle.DisplayName);
              this.Vehicle1 = vehicle;
              this.Vehicle1.IsDriveable = true;
              this.Vehicle1.Position = this.VehicleAPos;
              this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, 45f);
              ExecutiveTower.VehicleA = this.Vehicle1;
              this.Vehicle1 = (Vehicle) null;
            }
            catch (Exception ex)
            {
            }
          }
          catch (Exception ex)
          {
          }
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this vehicle!");
      });
      UIMenuListItem g1 = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu1.AddItem((UIMenuItem) g1);
      UIMenuListItem s1 = new UIMenuListItem("Slot : ", items, 0);
      uiMenu1.AddItem((UIMenuItem) s1);
      UIMenuItem uiMenuItem5 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem5);
      UIMenuItem CarinSlot1 = new UIMenuItem("Car :  ");
      uiMenu1.AddItem(CarinSlot1);
      UIMenuItem NumerPlate = new UIMenuItem("Number Plate : ");
      uiMenu1.AddItem(NumerPlate);
      UIMenuItem PColor = new UIMenuItem("Primary Color : ");
      uiMenu1.AddItem(PColor);
      UIMenuItem SColor = new UIMenuItem("Secondary Color : ");
      uiMenu1.AddItem(SColor);
      UIMenuItem uiMenuItem6 = new UIMenuItem("-----------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem6);
      UIMenuItem Drive = new UIMenuItem("Get Car To Modify");
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        this.path = ExecutiveTower.Path;
        if (item != Drive)
          return;
        this.ISinviewMode = false;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.FreezePosition = false;
        if (this.Cam != (Camera) null)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
            ExecutiveTower.VehicleA.Delete();
          World.RenderingCamera = this.Cam;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
        }
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
        {
          CarinSlot1.Text = "Car : " + this.SC.VehicleName;
          NumerPlate.Text = "Number Plate : " + this.SC.PlanteNo;
          PColor.Text = "Primary Color : " + this.SC.PrimaryColor.ToString();
          SColor.Text = "Secondary Color : " + this.SC.SecondaryColor.ToString();
          try
          {
            if (!(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null"))
              return;
            this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
            GTA.Model model = this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
            Vector3 position = new Vector3();
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageA") && this.PurchasedGarageLevel1 == 1)
            {
              ExecutiveTower.Saveloc = (s1.IndexToItem(s1.Index)?.ToString() + ".ini").ToString();
              ExecutiveTower.GarageNum = "GarageA";
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              this.Vehicle1.Position = this.VehicleAPos;
              this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, 45f);
              ExecutiveTower.VehicleA = this.Vehicle1;
              this.Vehicle1 = (Vehicle) null;
            }
            else if (g1.IndexToItem(g1.Index).Equals((object) "GarageA") && this.PurchasedGarageLevel1 != 1)
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to request a vehicle from this garage!");
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageB") && this.PurchasedGarageLevel2 == 1)
            {
              ExecutiveTower.Saveloc = (s1.IndexToItem(s1.Index)?.ToString() + ".ini").ToString();
              ExecutiveTower.GarageNum = "GarageB";
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              this.Vehicle1.Position = this.VehicleAPos;
              this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, 45f);
              ExecutiveTower.VehicleA = this.Vehicle1;
              this.Vehicle1 = (Vehicle) null;
            }
            else if (g1.IndexToItem(g1.Index).Equals((object) "GarageB") && this.PurchasedGarageLevel2 != 1)
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to request a vehicle from this garage!");
            if (g1.IndexToItem(g1.Index).Equals((object) "GarageC") && this.PurchasedGarageLevel3 == 1)
            {
              ExecutiveTower.Saveloc = (s1.IndexToItem(s1.Index)?.ToString() + ".ini").ToString();
              ExecutiveTower.GarageNum = "GarageC";
              this.Vehicle1 = World.CreateVehicle(model, position, -90f);
              this.SC.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              this.Vehicle1.Position = this.VehicleAPos;
              this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, 45f);
              ExecutiveTower.VehicleA = this.Vehicle1;
              this.Vehicle1 = (Vehicle) null;
            }
            else
            {
              if (!g1.IndexToItem(g1.Index).Equals((object) "GarageC") || this.PurchasedGarageLevel3 == 1)
                return;
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to request a vehicle from this garage!");
            }
          }
          catch (Exception ex)
          {
            UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
          }
        }
        else
        {
          if (!this.SC.VehicleName.Equals("null"))
            return;
          CarinSlot1.Text = "No Car In Slot";
          NumerPlate.Text = "No Car In Slot";
          PColor.Text = "No Car In Slot";
          SColor.Text = "No Car In Slot";
        }
      });
      uiMenu1.AddItem(Drive);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == g1)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
          if (!this.SC.VehicleName.Equals("null"))
          {
            CarinSlot1.Text = "Car : " + this.SC.VehicleName;
            NumerPlate.Text = "Number Plate : " + this.SC.PlanteNo;
            PColor.Text = "Primary Color : " + this.SC.PrimaryColor.ToString();
            SColor.Text = "Secondary Color : " + this.SC.SecondaryColor.ToString();
            try
            {
              if (this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null")
              {
                this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
                this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
                this.SC.Load(this.Vehicle1);
                this.Vehicle1.IsDriveable = true;
                this.Vehicle1.EngineRunning = true;
                this.Vehicle1.HighBeamsOn = true;
              }
            }
            catch (Exception ex)
            {
              UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
            }
          }
          else if (this.SC.VehicleName.Equals("null"))
            CarinSlot1.Text = "No car in slot";
        }
        if (item != s1)
          return;
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SC.VehicleName.Equals("null"))
        {
          CarinSlot1.Text = "Car : " + this.SC.VehicleName;
          NumerPlate.Text = "Number Plate : " + this.SC.PlanteNo;
          PColor.Text = "Primary Color : " + this.SC.PrimaryColor.ToString();
          SColor.Text = "Secondary Color : " + this.SC.SecondaryColor.ToString();
        }
        else if (this.SC.VehicleName.Equals("null"))
        {
          CarinSlot1.Text = "No car in slot";
          NumerPlate.Text = "No car in slot";
          PColor.Text = "No car in slot";
          SColor.Text = "No car in slot";
        }
        try
        {
          if (!(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null"))
            return;
          this.SC.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
          this.Vehicle1 = World.CreateVehicle(this.SC.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
          this.SC.Load(this.Vehicle1);
          this.Vehicle1.IsDriveable = true;
          this.Vehicle1.EngineRunning = true;
          this.Vehicle1.HighBeamsOn = true;
        }
        catch (Exception ex)
        {
          UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
        }
      });
    }

    private string func_1663(int iParam0)
    {
      string str = "";
      switch (iParam0)
      {
        case 0:
          return "SPEECH_PARAMS_STANDARD";
        case 1:
          return "SPEECH_PARAMS_ALLOW_REPEAT";
        case 2:
          return "SPEECH_PARAMS_BEAT";
        case 3:
          return "SPEECH_PARAMS_FORCE";
        case 4:
          return "SPEECH_PARAMS_FORCE_FRONTEND";
        case 5:
          return "SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND";
        case 6:
          return "SPEECH_PARAMS_FORCE_NORMAL";
        case 7:
          return "SPEECH_PARAMS_FORCE_NORMAL_CLEAR";
        case 8:
          return "SPEECH_PARAMS_FORCE_NORMAL_CRITICAL";
        case 9:
          return "SPEECH_PARAMS_FORCE_SHOUTED";
        case 10:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CLEAR";
        case 11:
          return "SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL";
        case 12:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY";
        case 13:
          return "SPEECH_PARAMS_MEGAPHONE";
        case 14:
          return "SPEECH_PARAMS_HELI";
        case 15:
          return "SPEECH_PARAMS_FORCE_MEGAPHONE";
        case 16:
          return "SPEECH_PARAMS_FORCE_HELI";
        case 17:
          return "SPEECH_PARAMS_INTERRUPT";
        case 18:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED";
        case 19:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR";
        case 20:
          return "SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL";
        case 21:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE";
        case 22:
          return "SPEECH_PARAMS_INTERRUPT_FRONTEND";
        case 23:
          return "SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND";
        case 24:
          return "SPEECH_PARAMS_ADD_BLIP";
        case 25:
          return "SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT";
        case 26:
          return "SPEECH_PARAMS_ADD_BLIP_FORCE";
        case 27:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED";
        case 28:
          return "SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE";
        case 29:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT";
        case 30:
          return "SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE";
        case 31:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED";
        case 32:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR";
        case 33:
          return "SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL";
        case 34:
          return "SPEECH_PARAMS_SHOUTED";
        case 35:
          return "SPEECH_PARAMS_SHOUTED_CLEAR";
        case 36:
          return "SPEECH_PARAMS_SHOUTED_CRITICAL";
        default:
          return str;
      }
    }

    public void StartSourcingMission()
    {
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.Delete();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.Delete();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      this.CreatedDeliverPoint = false;
      this.DeliveredCrate1 = false;
      this.DeliveredCrate2 = false;
      this.DeliveredCrate3 = false;
      this.NearCrate = false;
      this.GotCrate1 = false;
      this.GotCrate2 = false;
      this.GotCrate3 = false;
      this.CratesCollected = 0;
      this.SpawnedSignalFlare = false;
      this.SpawnedCrate = false;
      this.GetWarehouseLoc(this.CurrentWarehouse);
      int num = new System.Random().Next(0, 125);
      if (num >= 0 && num < 25)
        this.CrateDrop(this.CratesToSource);
      if (num >= 25 && num < 50)
        this.SetupCollectVehicleSource(this.CratesToSource, 1);
      if (num >= 50 && num < 75)
        this.SetupCollectVehicleSource(this.CratesToSource, 2);
      if (num >= 75 && num <= 100)
        this.SetupCollectVehicleSource(this.CratesToSource, 3);
      if (num <= 100 || num > 125)
        return;
      this.SetupCollectVehicleSource(this.CratesToSource, 4);
    }

    public Vector3 GetRandomCratePos()
    {
      int num = new System.Random().Next(1, 30);
      if (num == 1)
        this.crateSpawn = new Vector3(-1782.33f, -826.29f, 7.83f);
      if (num == 2)
        this.crateSpawn = new Vector3(1067.85f, 2362.45f, 43.87f);
      if (num == 3)
        this.crateSpawn = new Vector3(14.78f, 6840.14f, 13.46f);
      if (num == 4)
        this.crateSpawn = new Vector3(2061.37f, 2798.68f, 50.29f);
      if (num == 5)
        this.crateSpawn = new Vector3(1916.991f, 305.945f, 162.8f);
      if (num == 6)
        this.crateSpawn = new Vector3(-2912.36f, 3077.48f, 3.39f);
      if (num == 7)
        this.crateSpawn = new Vector3(2822.7f, -634.39f, 2.15f);
      if (num == 8)
        this.crateSpawn = new Vector3(2184.12f, 5026.09f, 42.63f);
      if (num == 9)
        this.crateSpawn = new Vector3(-3147.02f, 305.27f, 2.35f);
      if (num == 10)
        this.crateSpawn = new Vector3(1552.4f, 6644.04f, 2.55f);
      if (num == 11)
        this.crateSpawn = new Vector3(1488.57f, 1698.594f, 114.3339f);
      if (num == 12)
        this.crateSpawn = new Vector3(1616.565f, 1759.569f, 106.7f);
      if (num == 13)
        this.crateSpawn = new Vector3(1438.167f, 2802.347f, 52.71f);
      if (num == 14)
        this.crateSpawn = new Vector3(903.631f, 3155.149f, 39.7f);
      if (num == 15)
        this.crateSpawn = new Vector3(1412.698f, 3814.394f, 32.32f);
      if (num == 16)
        this.crateSpawn = new Vector3(1619.889f, 4487.974f, 31.92f);
      if (num == 17)
        this.crateSpawn = new Vector3(2033.841f, 4789.999f, 41.73f);
      if (num == 18)
        this.crateSpawn = new Vector3(2160.644f, 5076.999f, 44.5f);
      if (num == 19)
        this.crateSpawn = new Vector3(1591.65f, 5807.363f, 415.4f);
      if (num == 20)
        this.crateSpawn = new Vector3(1446.463f, 5676.084f, 13.45f);
      if (num == 21)
        this.crateSpawn = new Vector3(-254.0346f, -187.2248f, 78.33f);
      if (num == 22)
        this.crateSpawn = new Vector3(43.84f, -409.85f, 73.94f);
      if (num == 23)
        this.crateSpawn = new Vector3(530.68f, -475.471f, 24.8f);
      if (num == 24)
        this.crateSpawn = new Vector3(752.6806f, -704.49f, 50f);
      if (num == 25)
        this.crateSpawn = new Vector3(572.3989f, -1105.336f, 10.19f);
      if (num == 26)
        this.crateSpawn = new Vector3(95.78f, -931.24f, 85.5f);
      if (num == 27)
        this.crateSpawn = new Vector3(-26.14f, -1299.802f, 29.26f);
      if (num == 28)
        this.crateSpawn = new Vector3(-557.02f, -1461.626f, 10.7f);
      if (num == 29)
        this.crateSpawn = new Vector3(-557.02f, -1461.626f, 10.7f);
      if (num == 30)
        this.crateSpawn = new Vector3(-620.65f, -1569.835f, 25.33f);
      return this.crateSpawn;
    }

    public void SetupCollectVehicleSource(int VehiclesAmt, int Type)
    {
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.Delete();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.Delete();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (VehiclesAmt == 1)
      {
        if (Type == 1)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random = new System.Random();
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 2;
          this.SourcingMissionType = 2;
        }
        if (Type == 2)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random = new System.Random();
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Pounder), vector3);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Business01AMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Business01AMM));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "Hates_Player");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 2;
          this.SourcingMissionType = 3;
        }
        if (Type == 3)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random = new System.Random();
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp1 = prop1;
          this.SellStockProps.Add(prop1);
          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp2 = prop2;
          this.SellStockProps.Add(prop2);
          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp3 = prop3;
          this.SellStockProps.Add(prop3);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp3.HasCollision = false;
          this.SourceASellMissionProps.Add(this.SellStockProp1);
          this.SourceASellMissionProps.Add(this.SellStockProp2);
          this.SourceASellMissionProps.Add(this.SellStockProp3);
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.SMG, 9999, true, true);
            }
          }
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourcingMissionOn = true;
          this.SourcingMission = 2;
          this.SourcingMissionType = 4;
        }
        if (Type == 4)
        {
          System.Random random = new System.Random();
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3);
          Vector3 offsetInWorldCoords = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.SellStockProp1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp1.SetNoCollision((Entity) this.SourceVehicle1, true);
          this.SourceVehicle1.SetNoCollision((Entity) this.SellStockProp1, true);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceASellMissionProps.Add(this.SellStockProp1);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 2;
          this.SourcingMissionType = 5;
        }
      }
      if (VehiclesAmt == 2)
      {
        if (Type == 1)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random = new System.Random();
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          Script.Wait(5);
          vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
          this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
          this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Passenger));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceVehicle2.AddBlip();
          this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 3;
          this.SourcingMissionType = 2;
        }
        if (Type == 2)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random = new System.Random();
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Pounder), vector3);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Business01AMY));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Business01AMM));
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "Hates_Player");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 3;
          this.SourcingMissionType = 3;
        }
        if (Type == 3)
        {
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random1 = new System.Random();
          vector3 = vector3.Around((float) random1.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp1 = prop1;
          this.SellStockProps.Add(prop1);
          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp2 = prop2;
          this.SellStockProps.Add(prop2);
          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp3 = prop3;
          this.SellStockProps.Add(prop3);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp3.HasCollision = false;
          this.SourceASellMissionProps.Add(this.SellStockProp1);
          this.SourceASellMissionProps.Add(this.SellStockProp2);
          this.SourceASellMissionProps.Add(this.SellStockProp3);
          vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          System.Random random2 = new System.Random();
          vector3 = vector3.Around((float) random2.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
          this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle2.AddBlip();
          this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
          this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
          Vector3 offsetInWorldCoords4 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords5 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords6 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop4 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
          this.SellStockProp4 = prop4;
          this.SellStockProps.Add(prop4);
          Prop prop5 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
          this.SellStockProp5 = prop5;
          this.SellStockProps.Add(prop5);
          Prop prop6 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
          this.SellStockProp6 = prop6;
          this.SellStockProps.Add(prop6);
          this.SellStockProp4.HasCollision = false;
          this.SellStockProp5.HasCollision = false;
          this.SellStockProp6.HasCollision = false;
          this.SourceASellMissionProps.Add(this.SellStockProp4);
          this.SourceASellMissionProps.Add(this.SellStockProp5);
          this.SourceASellMissionProps.Add(this.SellStockProp6);
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.SMG, 9999, true, true);
            }
          }
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
          this.SourcingMissionOn = true;
          this.SourcingMission = 3;
          this.SourcingMissionType = 4;
        }
        if (Type == 4)
        {
          System.Random random = new System.Random();
          Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle1 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3);
          Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.SellStockProp1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp1.SetNoCollision((Entity) this.SourceVehicle1, true);
          this.SourceVehicle1.SetNoCollision((Entity) this.SellStockProp1, true);
          this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle1.AddBlip();
          this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceASellMissionProps.Add(this.SellStockProp1);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
          vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
          vector3 = vector3.Around((float) random.Next(5, 1500));
          vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
          this.SourceVehicle2 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3);
          Vector3 offsetInWorldCoords2 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
          this.SellStockProp2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp2.SetNoCollision((Entity) this.SourceVehicle2, true);
          this.SourceVehicle2.SetNoCollision((Entity) this.SellStockProp2, true);
          this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.SourceVehicle2.AddBlip();
          this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
          this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
          this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
          this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
          Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
          this.SourceASellMissionProps.Add(this.SellStockProp2);
          this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
            {
              int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
              sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
            }
          }
          this.SourcingMissionOn = true;
          this.SourcingMission = 3;
          this.SourcingMissionType = 5;
        }
      }
      if (VehiclesAmt != 3)
        return;
      if (Type == 1)
      {
        Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        System.Random random = new System.Random();
        vector3 = vector3.Around((float) random.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
        this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
        this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
        this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
        this.SourceVehicle1.AddBlip();
        this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
        Script.Wait(5);
        vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        vector3 = vector3.Around((float) random.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
        this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
        this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
        this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Passenger));
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
        this.SourceVehicle2.AddBlip();
        this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
        Script.Wait(5);
        vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        vector3 = vector3.Around((float) random.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle3 = World.CreateVehicle(this.RequestModel(VehicleHash.PoliceT), vector3);
        this.SourceASellMissionVehicles.Add(this.SourceVehicle3);
        this.SourceVehicle3.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver));
        this.SourceVehicle3.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Swat01SMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Passenger));
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle3, (InputArgument) 80f, (InputArgument) 786603);
        this.SourceVehicle3.AddBlip();
        this.SourceVehicle3.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle3.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle3.CurrentBlip.Color = BlipColor.Yellow;
        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
        {
          if ((Entity) sourceAsellMissionPed != (Entity) null)
          {
            int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
          }
        }
        this.SourcingMissionOn = true;
        this.SourcingMission = 4;
        this.SourcingMissionType = 2;
      }
      if (Type == 2)
      {
        Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        System.Random random = new System.Random();
        vector3 = vector3.Around((float) random.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Pounder), vector3);
        this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
        this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, this.RequestModel(PedHash.Business01AMY));
        this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
        this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Passenger, this.RequestModel(PedHash.Business01AMM));
        this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Passenger));
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
        this.SourceVehicle1.AddBlip();
        this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
        {
          if ((Entity) sourceAsellMissionPed != (Entity) null)
          {
            int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "Hates_Player");
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
            sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
          }
        }
        this.SourcingMissionOn = true;
        this.SourcingMission = 4;
        this.SourcingMissionType = 3;
      }
      if (Type == 3)
      {
        Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        System.Random random1 = new System.Random();
        vector3 = vector3.Around((float) random1.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
        this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
        this.SourceVehicle1.AddBlip();
        this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
        this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
        this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
        Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
        Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
        Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
        Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
        this.SellStockProp1 = prop1;
        this.SellStockProps.Add(prop1);
        Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
        this.SellStockProp2 = prop2;
        this.SellStockProps.Add(prop2);
        Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
        this.SellStockProp3 = prop3;
        this.SellStockProps.Add(prop3);
        this.SellStockProp1.HasCollision = false;
        this.SellStockProp2.HasCollision = false;
        this.SellStockProp3.HasCollision = false;
        this.SourceASellMissionProps.Add(this.SellStockProp1);
        this.SourceASellMissionProps.Add(this.SellStockProp2);
        this.SourceASellMissionProps.Add(this.SellStockProp3);
        vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        System.Random random2 = new System.Random();
        vector3 = vector3.Around((float) random2.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle2 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
        this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
        this.SourceVehicle2.AddBlip();
        this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
        this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
        this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
        Vector3 offsetInWorldCoords4 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
        Vector3 offsetInWorldCoords5 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
        Vector3 offsetInWorldCoords6 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
        Prop prop4 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
        this.SellStockProp4 = prop4;
        this.SellStockProps.Add(prop4);
        Prop prop5 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
        this.SellStockProp5 = prop5;
        this.SellStockProps.Add(prop5);
        Prop prop6 = World.CreateProp(this.RequestModel(this.CrateProps[random2.Next(0, this.CrateProps.Count)]), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
        this.SellStockProp6 = prop6;
        this.SellStockProps.Add(prop6);
        this.SellStockProp4.HasCollision = false;
        this.SellStockProp5.HasCollision = false;
        this.SellStockProp6.HasCollision = false;
        this.SourceASellMissionProps.Add(this.SellStockProp4);
        this.SourceASellMissionProps.Add(this.SellStockProp5);
        this.SourceASellMissionProps.Add(this.SellStockProp6);
        vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
        System.Random random3 = new System.Random();
        vector3 = vector3.Around((float) random3.Next(5, 1500));
        vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
        this.SourceVehicle3 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), vector3);
        this.SourceVehicle3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
        this.SourceVehicle3.AddBlip();
        this.SourceVehicle3.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.SourceVehicle3.CurrentBlip.Name = "Source Cargo";
        this.SourceVehicle3.CurrentBlip.Color = BlipColor.Yellow;
        this.SourceASellMissionVehicles.Add(this.SourceVehicle3);
        this.SourceASellMissionPeds.Add(this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver));
        Vector3 offsetInWorldCoords7 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
        Vector3 offsetInWorldCoords8 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
        Vector3 offsetInWorldCoords9 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
        Prop prop7 = World.CreateProp(this.RequestModel(this.CrateProps[random3.Next(0, this.CrateProps.Count)]), offsetInWorldCoords7, new Vector3(0.0f, 0.0f, this.SourceVehicle3.Heading), false, false);
        this.SellStockProp7 = prop7;
        this.SellStockProps.Add(prop7);
        Prop prop8 = World.CreateProp(this.RequestModel(this.CrateProps[random3.Next(0, this.CrateProps.Count)]), offsetInWorldCoords8, new Vector3(0.0f, 0.0f, this.SourceVehicle3.Heading), false, false);
        this.SellStockProp8 = prop8;
        this.SellStockProps.Add(prop8);
        Prop prop9 = World.CreateProp(this.RequestModel(this.CrateProps[random3.Next(0, this.CrateProps.Count)]), offsetInWorldCoords9, new Vector3(0.0f, 0.0f, this.SourceVehicle3.Heading), false, false);
        this.SellStockProp9 = prop9;
        this.SellStockProps.Add(prop9);
        this.SellStockProp7.HasCollision = false;
        this.SellStockProp8.HasCollision = false;
        this.SellStockProp9.HasCollision = false;
        this.SourceASellMissionProps.Add(this.SellStockProp7);
        this.SourceASellMissionProps.Add(this.SellStockProp8);
        this.SourceASellMissionProps.Add(this.SellStockProp9);
        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
        {
          if ((Entity) sourceAsellMissionPed != (Entity) null)
          {
            int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
            Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
            sourceAsellMissionPed.Weapons.Give(WeaponHash.SMG, 9999, true, true);
          }
        }
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
        Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle3, (InputArgument) 80f, (InputArgument) 786603);
        this.SourcingMissionOn = true;
        this.SourcingMission = 4;
        this.SourcingMissionType = 4;
      }
      if (Type != 4)
        return;
      System.Random random4 = new System.Random();
      Vector3 vector3_1 = new Vector3(-452.3921f, -346.3056f, 34.36f);
      vector3_1 = vector3_1.Around((float) random4.Next(5, 1500));
      vector3_1 = ExecutiveTower.GenerateSpawnPos(vector3_1, ExecutiveTower.Nodetype.AnyRoad, false);
      this.SourceVehicle1 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3_1);
      Vector3 offsetInWorldCoords10 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
      this.SellStockProp1 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords10, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
      this.SellStockProp1.HasCollision = false;
      this.SellStockProp1.SetNoCollision((Entity) this.SourceVehicle1, true);
      this.SourceVehicle1.SetNoCollision((Entity) this.SellStockProp1, true);
      this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
      this.SourceVehicle1.AddBlip();
      this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
      this.SourceVehicle1.CurrentBlip.Name = "Source Cargo";
      this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
      this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
      Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
      this.SourceASellMissionProps.Add(this.SellStockProp1);
      this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
      vector3_1 = new Vector3(-452.3921f, -346.3056f, 34.36f);
      vector3_1 = vector3_1.Around((float) random4.Next(5, 1500));
      vector3_1 = ExecutiveTower.GenerateSpawnPos(vector3_1, ExecutiveTower.Nodetype.AnyRoad, false);
      this.SourceVehicle2 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3_1);
      Vector3 offsetInWorldCoords11 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
      this.SellStockProp2 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords11, new Vector3(0.0f, 0.0f, this.SourceVehicle2.Heading), false, false);
      this.SellStockProp2.HasCollision = false;
      this.SellStockProp2.SetNoCollision((Entity) this.SourceVehicle2, true);
      this.SourceVehicle2.SetNoCollision((Entity) this.SellStockProp2, true);
      this.SourceVehicle2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
      this.SourceVehicle2.AddBlip();
      this.SourceVehicle2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
      this.SourceVehicle2.CurrentBlip.Name = "Source Cargo";
      this.SourceVehicle2.CurrentBlip.Color = BlipColor.Yellow;
      this.SourceASellMissionPeds.Add(this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver));
      Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle2.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle2, (InputArgument) 80f, (InputArgument) 786603);
      this.SourceASellMissionProps.Add(this.SellStockProp2);
      this.SourceASellMissionVehicles.Add(this.SourceVehicle2);
      vector3_1 = new Vector3(-452.3921f, -346.3056f, 34.36f);
      vector3_1 = vector3_1.Around((float) random4.Next(5, 1500));
      vector3_1 = ExecutiveTower.GenerateSpawnPos(vector3_1, ExecutiveTower.Nodetype.AnyRoad, false);
      this.SourceVehicle3 = World.CreateVehicle((GTA.Model) VehicleHash.SlamVan2, vector3_1);
      Vector3 offsetInWorldCoords12 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
      this.SellStockProp3 = World.CreateProp(this.RequestModel("ex_prop_crate_closed_sc"), offsetInWorldCoords12, new Vector3(0.0f, 0.0f, this.SourceVehicle3.Heading), false, false);
      this.SellStockProp3.HasCollision = false;
      this.SellStockProp3.SetNoCollision((Entity) this.SourceVehicle3, true);
      this.SourceVehicle3.SetNoCollision((Entity) this.SellStockProp3, true);
      this.SourceVehicle3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
      this.SourceVehicle3.AddBlip();
      this.SourceVehicle3.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
      this.SourceVehicle3.CurrentBlip.Name = "Source Cargo";
      this.SourceVehicle3.CurrentBlip.Color = BlipColor.Yellow;
      this.SourceASellMissionPeds.Add(this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver));
      Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle3.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle3, (InputArgument) 80f, (InputArgument) 786603);
      this.SourceASellMissionProps.Add(this.SellStockProp3);
      this.SourceASellMissionVehicles.Add(this.SourceVehicle3);
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
        {
          int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
          sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
        }
      }
      this.SourcingMissionOn = true;
      this.SourcingMission = 4;
      this.SourcingMissionType = 5;
    }

    public void GetWarehouseLoc(int W)
    {
      for (int index = 0; index < this.CargoWarehouses.Count; ++index)
      {
        if (this.SS_Warehouse1Index == index && W == 1)
        {
          double groundHeight = (double) World.GetGroundHeight(new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, 500f));
          this.WarehouseDeliverPos = new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, this.CargoWarehouses[index].Location.Z);
        }
        if (this.SS_Warehouse2Index == index && W == 2)
        {
          double groundHeight = (double) World.GetGroundHeight(new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, 500f));
          this.WarehouseDeliverPos = new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, this.CargoWarehouses[index].Location.Z);
        }
        if (this.SS_Warehouse3Index == index && W == 3)
        {
          double groundHeight = (double) World.GetGroundHeight(new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, 500f));
          this.WarehouseDeliverPos = new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, this.CargoWarehouses[index].Location.Z);
        }
        if (this.SS_Warehouse4Index == index && W == 4)
        {
          double groundHeight = (double) World.GetGroundHeight(new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, 500f));
          this.WarehouseDeliverPos = new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, this.CargoWarehouses[index].Location.Z);
        }
        if (this.SS_Warehouse5Index == index && W == 5)
        {
          double groundHeight = (double) World.GetGroundHeight(new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, 500f));
          this.WarehouseDeliverPos = new Vector3(this.CargoWarehouses[index].Location.X, this.CargoWarehouses[index].Location.Y, this.CargoWarehouses[index].Location.Z);
        }
      }
    }

    private void CrateDrop(int Crates)
    {
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.Delete();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.Delete();
      }
      if (Crates >= 1)
      {
        this.Crate1Spawn = this.GetRandomCratePos();
        System.Random random = new System.Random();
        this.Crate1 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate1Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
        this.SourceASellMissionProps.Add(this.Crate1);
        this.Crate1.AddBlip();
        this.Crate1.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.Crate1.CurrentBlip.Name = "Source Cargo";
        this.Crate1.CurrentBlip.Color = BlipColor.Yellow;
        Script.Wait(1);
      }
      if (Crates >= 2)
      {
        this.Crate2Spawn = this.GetRandomCratePos();
        this.Crate2 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate2Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
        this.SourceASellMissionProps.Add(this.Crate2);
        this.Crate2.AddBlip();
        this.Crate2.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.Crate2.CurrentBlip.Name = "Source Cargo";
        this.Crate2.CurrentBlip.Color = BlipColor.Yellow;
        Script.Wait(1);
      }
      if (Crates >= 3)
      {
        this.Crate3Spawn = this.GetRandomCratePos();
        this.Crate3 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate3Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
        this.SourceASellMissionProps.Add(this.Crate3);
        this.Crate3.AddBlip();
        this.Crate3.CurrentBlip.Sprite = BlipSprite.SpecialCargo;
        this.Crate3.CurrentBlip.Name = "Source Cargo";
        this.Crate3.CurrentBlip.Color = BlipColor.Yellow;
      }
      this.SpawnedCrate = true;
      this.SourcingMission = 1;
      this.SourcingMissionOn = true;
    }

    public int GetVaildCrateIds()
    {
      System.Random random = new System.Random();
      string S = "";
      if (this.CrateType == 1)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_wlife_sc");
        stringList.Add("ex_prop_crate_wlife_bc");
        stringList.Add("ex_prop_crate_furjacket_sc");
        stringList.Add("ex_prop_crate_furjacket_bc");
        stringList.Add("ex_prop_crate_clothing_sc");
        stringList.Add("ex_prop_crate_clothing_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 2)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_art_sc");
        stringList.Add("ex_prop_crate_art_bc");
        stringList.Add("ex_prop_crate_art_02_sc");
        stringList.Add("ex_prop_crate_art_02_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 3)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_bull_sc_02");
        stringList.Add("ex_prop_crate_bull_bc_02");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 4)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_money_sc");
        stringList.Add("ex_prop_crate_money_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 5)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_elec_sc");
        stringList.Add("ex_prop_crate_elec_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 6)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_gems_sc");
        stringList.Add("ex_prop_crate_gems_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 7)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_jewels_sc");
        stringList.Add("ex_prop_crate_jewels_racks_sc");
        stringList.Add("ex_prop_crate_jewels_racks_bc");
        stringList.Add("ex_prop_crate_jewels_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 8)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_highend_pharma_sc");
        stringList.Add("ex_prop_crate_highend_pharma_bc");
        stringList.Add("ex_prop_crate_med_sc");
        stringList.Add("ex_prop_crate_med_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 9)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_narc_sc");
        stringList.Add("ex_prop_crate_narc_bc");
        stringList.Add("ex_prop_crate_pharma_sc");
        stringList.Add("ex_prop_crate_pharma_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 10)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_tob_sc");
        stringList.Add("ex_prop_crate_tob_bc");
        stringList.Add("ex_prop_crate_closed_rw.");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      if (this.CrateType == 11)
      {
        List<string> stringList = new List<string>();
        stringList.Add("ex_prop_crate_biohazard_sc");
        stringList.Add("ex_prop_crate_biohazard_bc");
        stringList.Add("ex_prop_crate_ammo_sc");
        stringList.Add("ex_prop_crate_ammo_bc");
        stringList.Add("ex_prop_crate_expl_sc");
        stringList.Add("ex_prop_crate_expl_bc");
        stringList.Add("ex_prop_crate_closed_bc");
        Script.Wait(1);
        S = stringList[random.Next(0, stringList.Count)];
      }
      return this.GetCrateProp(S);
    }

    public int GetCrateProp(string S)
    {
      int num = 0;
      string str = S;
      List<string> stringList = new List<string>();
      stringList.Add("ex_prop_crate_wlife_sc");
      stringList.Add("ex_prop_crate_wlife_bc");
      stringList.Add("ex_prop_crate_tob_sc");
      stringList.Add("ex_prop_crate_tob_bc");
      stringList.Add("ex_prop_crate_pharma_sc");
      stringList.Add("ex_prop_crate_pharma_bc");
      stringList.Add("ex_prop_crate_narc_sc");
      stringList.Add("ex_prop_crate_narc_bc");
      stringList.Add("ex_prop_crate_money_sc");
      stringList.Add("ex_prop_crate_money_bc");
      stringList.Add("ex_prop_crate_med_sc");
      stringList.Add("ex_prop_crate_med_bc");
      stringList.Add("ex_prop_crate_jewels_sc");
      stringList.Add("ex_prop_crate_jewels_racks_sc");
      stringList.Add("ex_prop_crate_jewels_racks_bc");
      stringList.Add("ex_prop_crate_jewels_bc");
      stringList.Add("ex_prop_crate_highend_pharma_sc");
      stringList.Add("ex_prop_crate_highend_pharma_bc");
      stringList.Add("ex_prop_crate_gems_sc");
      stringList.Add("ex_prop_crate_gems_bc");
      stringList.Add("ex_prop_crate_furjacket_sc");
      stringList.Add("ex_prop_crate_furjacket_bc");
      stringList.Add("ex_prop_crate_expl_sc");
      stringList.Add("ex_prop_crate_expl_bc");
      stringList.Add("ex_prop_crate_elec_sc");
      stringList.Add("ex_prop_crate_elec_bc");
      stringList.Add("ex_prop_crate_clothing_sc");
      stringList.Add("ex_prop_crate_clothing_bc");
      stringList.Add("ex_prop_crate_closed_sc");
      stringList.Add("ex_prop_crate_closed_rw.");
      stringList.Add("ex_prop_crate_closed_mw");
      stringList.Add("ex_prop_crate_closed_ms");
      stringList.Add("ex_prop_crate_closed_bc");
      stringList.Add("ex_prop_crate_bull_sc_02");
      stringList.Add("ex_prop_crate_bull_bc_02");
      stringList.Add("ex_prop_crate_biohazard_sc");
      stringList.Add("ex_prop_crate_biohazard_bc");
      stringList.Add("ex_prop_crate_art_sc");
      stringList.Add("ex_prop_crate_art_bc");
      stringList.Add("ex_prop_crate_art_02_sc");
      stringList.Add("ex_prop_crate_art_02_bc");
      stringList.Add("ex_prop_crate_ammo_sc");
      stringList.Add("ex_prop_crate_ammo_bc");
      stringList.Add("ex_prop_crate_freel");
      stringList.Add("ex_prop_crate_shide");
      stringList.Add("ex_prop_crate_minig");
      stringList.Add("ex_prop_crate_oegg");
      stringList.Add("ex_prop_crate_xldiam");
      stringList.Add("ex_prop_crate_watch");
      for (int index = 0; index < stringList.Count; ++index)
      {
        if (str.Equals(stringList[index]))
          num = index;
      }
      return num;
    }

    public string GetCrateProp(int I)
    {
      string str = "";
      List<string> stringList = new List<string>();
      stringList.Add("ex_prop_crate_wlife_sc");
      stringList.Add("ex_prop_crate_wlife_bc");
      stringList.Add("ex_prop_crate_tob_sc");
      stringList.Add("ex_prop_crate_tob_bc");
      stringList.Add("ex_prop_crate_pharma_sc");
      stringList.Add("ex_prop_crate_pharma_bc");
      stringList.Add("ex_prop_crate_narc_sc");
      stringList.Add("ex_prop_crate_narc_bc");
      stringList.Add("ex_prop_crate_money_sc");
      stringList.Add("ex_prop_crate_money_bc");
      stringList.Add("ex_prop_crate_med_sc");
      stringList.Add("ex_prop_crate_med_bc");
      stringList.Add("ex_prop_crate_jewels_sc");
      stringList.Add("ex_prop_crate_jewels_racks_sc");
      stringList.Add("ex_prop_crate_jewels_racks_bc");
      stringList.Add("ex_prop_crate_jewels_bc");
      stringList.Add("ex_prop_crate_highend_pharma_sc");
      stringList.Add("ex_prop_crate_highend_pharma_bc");
      stringList.Add("ex_prop_crate_gems_sc");
      stringList.Add("ex_prop_crate_gems_bc");
      stringList.Add("ex_prop_crate_furjacket_sc");
      stringList.Add("ex_prop_crate_furjacket_bc");
      stringList.Add("ex_prop_crate_expl_sc");
      stringList.Add("ex_prop_crate_expl_bc");
      stringList.Add("ex_prop_crate_elec_sc");
      stringList.Add("ex_prop_crate_elec_bc");
      stringList.Add("ex_prop_crate_clothing_sc");
      stringList.Add("ex_prop_crate_clothing_bc");
      stringList.Add("ex_prop_crate_closed_sc");
      stringList.Add("ex_prop_crate_closed_rw.");
      stringList.Add("ex_prop_crate_closed_mw");
      stringList.Add("ex_prop_crate_closed_ms");
      stringList.Add("ex_prop_crate_closed_bc");
      stringList.Add("ex_prop_crate_bull_sc_02");
      stringList.Add("ex_prop_crate_bull_bc_02");
      stringList.Add("ex_prop_crate_biohazard_sc");
      stringList.Add("ex_prop_crate_biohazard_bc");
      stringList.Add("ex_prop_crate_art_sc");
      stringList.Add("ex_prop_crate_art_bc");
      stringList.Add("ex_prop_crate_art_02_sc");
      stringList.Add("ex_prop_crate_art_02_bc");
      stringList.Add("ex_prop_crate_ammo_sc");
      stringList.Add("ex_prop_crate_ammo_bc");
      stringList.Add("ex_prop_crate_freel");
      stringList.Add("ex_prop_crate_shide");
      stringList.Add("ex_prop_crate_minig");
      stringList.Add("ex_prop_crate_oegg");
      stringList.Add("ex_prop_crate_xldiam");
      stringList.Add("ex_prop_crate_watch");
      for (int index = 0; index < stringList.Count; ++index)
        str = stringList[I];
      return str;
    }

    public void FailSourceMission(string Reason)
    {
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.MarkAsNoLongerNeeded();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      new MissionScreen().SetFail("Sourcing Crates", this.CratesToSource * 120000, Reason);
      ++this.SS_CollectionsFailed;
      this.Config.SetValue<int>("CargoWarehouses", "CollectionsFailed", this.SS_CollectionsFailed);
      this.CargoWarehouseScript.SS_CollectionsFailed = this.SS_CollectionsFailed;
      this.Config.Save();
      this.SourcingMission = 0;
      this.SourcingMissionOn = false;
    }

    public int GetWarehouseIndex(int W)
    {
      int num = 0;
      for (int index = 0; index < this.CargoWarehouses.Count; ++index)
      {
        if (this.SS_Warehouse1Index == index && W == 1)
          num = index;
        if (this.SS_Warehouse2Index == index && W == 2)
          num = index;
        if (this.SS_Warehouse3Index == index && W == 3)
          num = index;
        if (this.SS_Warehouse4Index == index && W == 4)
          num = index;
        if (this.SS_Warehouse5Index == index && W == 5)
          num = index;
      }
      return num;
    }

    public void SaveCrates()
    {
      if ((Entity) this.SourceVehicle1 != (Entity) null)
      {
        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
          this.SourceVehicle1.CurrentBlip.Remove();
        this.SourceVehicle1.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle2 != (Entity) null)
      {
        if (this.SourceVehicle2.CurrentBlip != (Blip) null)
          this.SourceVehicle2.CurrentBlip.Remove();
        this.SourceVehicle2.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle3 != (Entity) null)
      {
        if (this.SourceVehicle3.CurrentBlip != (Blip) null)
          this.SourceVehicle3.CurrentBlip.Remove();
        this.SourceVehicle3.MarkAsNoLongerNeeded();
      }
      int index1 = this.GetWarehouseIndex(this.CurrentWarehouse);
      for (int index2 = 0; index2 < this.CargoWarehouses.Count; ++index2)
      {
        if (this.SS_Warehouse1Index == index2 && this.CurrentWarehouse == 1)
          index1 = index2;
        if (this.SS_Warehouse2Index == index2 && this.CurrentWarehouse == 2)
          index1 = index2;
        if (this.SS_Warehouse3Index == index2 && this.CurrentWarehouse == 3)
          index1 = index2;
        if (this.SS_Warehouse4Index == index2 && this.CurrentWarehouse == 4)
          index1 = index2;
        if (this.SS_Warehouse5Index == index2 && this.CurrentWarehouse == 5)
          index1 = index2;
      }
      int num1 = this.CratesToSource * this.SourceCrateAmtMultiplier;
      UI.Notify("CratesToSave " + num1.ToString() + ", CurrentWarehouse " + this.CurrentWarehouse.ToString());
      UI.Notify("CurrentWarehouse Index " + this.GetWarehouseIndex(this.CurrentWarehouse).ToString() + ", CratesToSource " + this.CratesToSource.ToString());
      this.CargoWarehouseScript.LoadCrates("scripts//HKH191sBusinessMods//ExecutiveBusiness//CargoWarehouses//PlayerWarehouse_" + this.CurrentWarehouse.ToString() + ".ini");
      for (int index2 = 1; index2 <= 111; ++index2)
      {
        System.Random random = new System.Random();
        if (this.CargoWarehouses[index1].Maxcrates >= 16 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetVaildCrateIds());
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 42 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetVaildCrateIds());
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 111 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetVaildCrateIds());
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        Script.Wait(1);
      }
      int num2 = this.CratesToSource - num1;
      UI.Notify("Successfully Saved " + num2.ToString() + " Crates");
      if (num2 <= 0)
        ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Cargo Warehouse Full", "Boss, your warehouse " + this.CargoWarehouses[index1].WarehouseName + " is full of crates");
      ++this.SS_CollectionsCompleted;
      this.Config.SetValue<int>("CargoWarehouses", "CollectionsCompleted", this.SS_CollectionsCompleted);
      this.CargoWarehouseScript.SS_CollectionsCompleted = this.SS_CollectionsCompleted;
      this.Config.Save();
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.MarkAsNoLongerNeeded();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      float num3 = 0.0f;
      if (this.CargoWarehouses[index1].Size == 0)
        num3 = 15000f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 1)
        num3 = 17500f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 2)
        num3 = 20000f * (float) this.SellCrateCostMultiplier;
      new MissionScreen().SetPass("Sourcing Crates", (int) ((double) this.CratesToSource * (double) num3), "");
      this.SourcingMission = 0;
      this.SourcingMissionOn = false;
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
    }

    public void SaveSingleCrate(int Warehouse, string Crate)
    {
      if ((Entity) this.SourceVehicle1 != (Entity) null)
      {
        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
          this.SourceVehicle1.CurrentBlip.Remove();
        this.SourceVehicle1.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle2 != (Entity) null)
      {
        if (this.SourceVehicle2.CurrentBlip != (Blip) null)
          this.SourceVehicle2.CurrentBlip.Remove();
        this.SourceVehicle2.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle3 != (Entity) null)
      {
        if (this.SourceVehicle3.CurrentBlip != (Blip) null)
          this.SourceVehicle3.CurrentBlip.Remove();
        this.SourceVehicle3.MarkAsNoLongerNeeded();
      }
      int index1 = this.GetWarehouseIndex(Warehouse);
      for (int index2 = 0; index2 < this.CargoWarehouses.Count; ++index2)
      {
        if (this.SS_Warehouse1Index == index2 && Warehouse == 1)
          index1 = index2;
        if (this.SS_Warehouse2Index == index2 && Warehouse == 2)
          index1 = index2;
        if (this.SS_Warehouse3Index == index2 && Warehouse == 3)
          index1 = index2;
        if (this.SS_Warehouse4Index == index2 && Warehouse == 4)
          index1 = index2;
        if (this.SS_Warehouse5Index == index2 && Warehouse == 5)
          index1 = index2;
      }
      int num1 = this.CratesToSource * this.SourceCrateAmtMultiplier;
      this.CargoWarehouseScript.LoadCrates("scripts//HKH191sBusinessMods//ExecutiveBusiness//CargoWarehouses//PlayerWarehouse_" + Warehouse.ToString() + ".ini");
      for (int index2 = 1; index2 <= 111; ++index2)
      {
        System.Random random = new System.Random();
        if (this.CargoWarehouses[index1].Maxcrates >= 16 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate));
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 42 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate));
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 111 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          --num1;
          this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate));
          this.CargoWarehouseScript.CrateConfig.Save();
        }
        Script.Wait(1);
      }
      int num2 = this.CratesToSource - num1;
      UI.Notify("Successfully Saved " + num2.ToString() + " Crates");
      if (num2 <= 0)
        ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Cargo Warehouse Full", "Boss, your warehouse " + this.CargoWarehouses[index1].WarehouseName + " is full of crates");
      ++this.SS_CollectionsCompleted;
      this.Config.SetValue<int>("CargoWarehouses", "CollectionsCompleted", this.SS_CollectionsCompleted);
      this.CargoWarehouseScript.SS_CollectionsCompleted = this.SS_CollectionsCompleted;
      this.Config.Save();
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.MarkAsNoLongerNeeded();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      float num3 = 0.0f;
      if (this.CargoWarehouses[index1].Size == 0)
        num3 = 15000f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 1)
        num3 = 17500f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 2)
        num3 = 20000f * (float) this.SellCrateCostMultiplier;
      new MissionScreen().SetPass("Sourcing Crates", (int) ((double) this.CratesToSource * (double) num3), "");
      this.SourcingMission = 0;
      this.SourcingMissionOn = false;
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
    }

    public void SaveThreeCrate(int Warehouse, string Crate1, string Crate2, string Crate3)
    {
      if ((Entity) this.SourceVehicle1 != (Entity) null)
      {
        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
          this.SourceVehicle1.CurrentBlip.Remove();
        this.SourceVehicle1.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle2 != (Entity) null)
      {
        if (this.SourceVehicle2.CurrentBlip != (Blip) null)
          this.SourceVehicle2.CurrentBlip.Remove();
        this.SourceVehicle2.MarkAsNoLongerNeeded();
      }
      if ((Entity) this.SourceVehicle3 != (Entity) null)
      {
        if (this.SourceVehicle3.CurrentBlip != (Blip) null)
          this.SourceVehicle3.CurrentBlip.Remove();
        this.SourceVehicle3.MarkAsNoLongerNeeded();
      }
      int index1 = this.GetWarehouseIndex(Warehouse);
      for (int index2 = 0; index2 < this.CargoWarehouses.Count; ++index2)
      {
        if (this.SS_Warehouse1Index == index2 && Warehouse == 1)
          index1 = index2;
        if (this.SS_Warehouse2Index == index2 && Warehouse == 2)
          index1 = index2;
        if (this.SS_Warehouse3Index == index2 && Warehouse == 3)
          index1 = index2;
        if (this.SS_Warehouse4Index == index2 && Warehouse == 4)
          index1 = index2;
        if (this.SS_Warehouse5Index == index2 && Warehouse == 5)
          index1 = index2;
      }
      int num1 = 3;
      this.CargoWarehouseScript.LoadCrates("scripts//HKH191sBusinessMods//ExecutiveBusiness//CargoWarehouses//PlayerWarehouse_" + Warehouse.ToString() + ".ini");
      for (int index2 = 1; index2 <= 111; ++index2)
      {
        System.Random random = new System.Random();
        if (this.CargoWarehouses[index1].Maxcrates >= 16 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          if (num1 == 3)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate1));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 2)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate2));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 1)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Small-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate3));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          --num1;
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 42 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          if (num1 == 3)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate1));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 2)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate2));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 1)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Medium-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate3));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          --num1;
        }
        if (this.CargoWarehouses[index1].Maxcrates >= 111 && (double) this.CargoWarehouseScript.CrateConfig.GetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), 0.0f) == -1.0 && num1 > 0)
        {
          if (num1 == 3)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate1));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 2)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate2));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          if (num1 == 1)
          {
            this.CargoWarehouseScript.CrateConfig.SetValue<float>("Crates-Large-Warehouse", "CrateID_" + index2.ToString(), (float) this.GetCrateProp(Crate3));
            this.CargoWarehouseScript.CrateConfig.Save();
          }
          --num1;
        }
        Script.Wait(1);
      }
      if (num1 > 0)
        ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Cargo Warehouse Full", "Boss, your warehouse " + this.CargoWarehouses[index1].WarehouseName + " is full of crates");
      ++this.SS_CollectionsCompleted;
      this.Config.SetValue<int>("CargoWarehouses", "CollectionsCompleted", this.SS_CollectionsCompleted);
      this.CargoWarehouseScript.SS_CollectionsCompleted = this.SS_CollectionsCompleted;
      this.Config.Save();
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.MarkAsNoLongerNeeded();
      }
      if (this.SourceASellMissionBlips.Count > 0)
        this.SourceASellMissionBlips.Clear();
      if (this.SourceASellMissionPeds.Count > 0)
        this.SourceASellMissionPeds.Clear();
      if (this.SourceASellMissionVehicles.Count > 0)
        this.SourceASellMissionVehicles.Clear();
      if (this.SourceASellMissionProps.Count > 0)
        this.SourceASellMissionProps.Clear();
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      float num2 = 0.0f;
      if (this.CargoWarehouses[index1].Size == 0)
        num2 = 15000f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 1)
        num2 = 17500f * (float) this.SellCrateCostMultiplier;
      if (this.CargoWarehouses[index1].Size == 2)
        num2 = 20000f * (float) this.SellCrateCostMultiplier;
      new MissionScreen().SetPass("Sourcing Crates", (int) ((double) this.CratesToSource * (double) num2), "");
      this.SourcingMission = 0;
      this.SourcingMissionOn = false;
      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
    }

    public static void TextNotification(
      string avatar,
      string author,
      string title,
      string message)
    {
      Function.Call(Hash._0x67C540AA08E4A6F5, (InputArgument) -1, (InputArgument) "CONFIRM_BEEP", (InputArgument) "HUD_MINI_GAME_SOUNDSET");
      Function.Call(Hash._0x202709F4C58A0424, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) message);
      Function.Call<int>(Hash._0x1CCD9A37359072CF, (InputArgument) avatar, (InputArgument) avatar, (InputArgument) true, (InputArgument) 0, (InputArgument) title, (InputArgument) author);
    }

    public int GetHour() => Function.Call<int>(Hash._0x25223CA6B4D20B7F);

    public int GetMinutes() => Function.Call<int>(Hash._0x13D2B8ADD79640F2);

    public int GetDay() => Function.Call<int>(Hash._0x3D10BC92A4DB1D35);

    public int GetMonth() => Function.Call<int>(Hash._0xBBC72712E80257A1);

    public int GetYear() => Function.Call<int>(Hash._0x961777E64BDAF717);

    public void SaveRandomMods(Vehicle newvehicle)
    {
      System.Random random = new System.Random();
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) newvehicle.Handle, (InputArgument) 0);
      Function.Call(Hash._0x487EB21CC7295BA1, (InputArgument) newvehicle, (InputArgument) this.WheelType);
      newvehicle.SetMod(VehicleMod.Livery, random.Next(-1, newvehicle.GetModCount(VehicleMod.Livery)), false);
      newvehicle.SetMod(VehicleMod.Roof, random.Next(-1, newvehicle.GetModCount(VehicleMod.Roof)), true);
      newvehicle.SetMod(VehicleMod.Aerials, random.Next(-1, newvehicle.GetModCount(VehicleMod.Aerials)), true);
      newvehicle.SetMod(VehicleMod.AirFilter, random.Next(-1, newvehicle.GetModCount(VehicleMod.AirFilter)), true);
      newvehicle.SetMod(VehicleMod.ArchCover, random.Next(-1, newvehicle.GetModCount(VehicleMod.ArchCover)), true);
      newvehicle.SetMod(VehicleMod.Armor, random.Next(-1, newvehicle.GetModCount(VehicleMod.Armor)), true);
      newvehicle.SetMod(VehicleMod.Brakes, random.Next(-1, newvehicle.GetModCount(VehicleMod.Livery)), true);
      newvehicle.SetMod(VehicleMod.ColumnShifterLevers, random.Next(-1, newvehicle.GetModCount(VehicleMod.ColumnShifterLevers)), true);
      newvehicle.SetMod(VehicleMod.Dashboard, random.Next(-1, newvehicle.GetModCount(VehicleMod.Dashboard)), true);
      newvehicle.SetMod(VehicleMod.DialDesign, random.Next(-1, newvehicle.GetModCount(VehicleMod.DialDesign)), true);
      newvehicle.SetMod(VehicleMod.DoorSpeakers, random.Next(-1, newvehicle.GetModCount(VehicleMod.DoorSpeakers)), true);
      newvehicle.SetMod(VehicleMod.Engine, random.Next(-1, newvehicle.GetModCount(VehicleMod.Engine)), true);
      newvehicle.SetMod(VehicleMod.EngineBlock, random.Next(-1, newvehicle.GetModCount(VehicleMod.EngineBlock)), true);
      newvehicle.SetMod(VehicleMod.Exhaust, random.Next(-1, newvehicle.GetModCount(VehicleMod.Exhaust)), true);
      newvehicle.SetMod(VehicleMod.Fender, random.Next(-1, newvehicle.GetModCount(VehicleMod.Fender)), true);
      newvehicle.SetMod(VehicleMod.Frame, random.Next(-1, newvehicle.GetModCount(VehicleMod.Frame)), true);
      newvehicle.SetMod(VehicleMod.FrontBumper, random.Next(-1, newvehicle.GetModCount(VehicleMod.FrontBumper)), true);
      newvehicle.SetMod(VehicleMod.Grille, random.Next(-1, newvehicle.GetModCount(VehicleMod.Grille)), true);
      newvehicle.SetMod(VehicleMod.Hood, random.Next(-1, newvehicle.GetModCount(VehicleMod.Hood)), true);
      newvehicle.SetMod(VehicleMod.Horns, random.Next(-1, newvehicle.GetModCount(VehicleMod.Horns)), true);
      newvehicle.SetMod(VehicleMod.Hydraulics, random.Next(-1, newvehicle.GetModCount(VehicleMod.Hydraulics)), true);
      newvehicle.SetMod(VehicleMod.Livery, random.Next(-1, 22), false);
      newvehicle.SetMod(VehicleMod.Ornaments, random.Next(-1, newvehicle.GetModCount(VehicleMod.Ornaments)), true);
      newvehicle.SetMod(VehicleMod.Plaques, random.Next(-1, newvehicle.GetModCount(VehicleMod.Plaques)), true);
      newvehicle.SetMod(VehicleMod.PlateHolder, random.Next(-1, newvehicle.GetModCount(VehicleMod.PlateHolder)), true);
      newvehicle.SetMod(VehicleMod.RearBumper, random.Next(-1, newvehicle.GetModCount(VehicleMod.RearBumper)), true);
      newvehicle.SetMod(VehicleMod.RightFender, random.Next(-1, newvehicle.GetModCount(VehicleMod.RightFender)), true);
      newvehicle.SetMod(VehicleMod.Seats, random.Next(-1, newvehicle.GetModCount(VehicleMod.Seats)), true);
      newvehicle.SetMod(VehicleMod.SideSkirt, random.Next(-1, newvehicle.GetModCount(VehicleMod.SideSkirt)), true);
      newvehicle.SetMod(VehicleMod.Speakers, random.Next(-1, newvehicle.GetModCount(VehicleMod.Speakers)), true);
      newvehicle.SetMod(VehicleMod.Spoilers, random.Next(-1, newvehicle.GetModCount(VehicleMod.Spoilers)), true);
      newvehicle.SetMod(VehicleMod.SteeringWheels, random.Next(-1, newvehicle.GetModCount(VehicleMod.SteeringWheels)), true);
      newvehicle.SetMod(VehicleMod.Struts, random.Next(-1, newvehicle.GetModCount(VehicleMod.Struts)), true);
      newvehicle.SetMod(VehicleMod.Suspension, random.Next(-1, newvehicle.GetModCount(VehicleMod.Suspension)), true);
      newvehicle.SetMod(VehicleMod.Tank, random.Next(-1, newvehicle.GetModCount(VehicleMod.Tank)), true);
      newvehicle.SetMod(VehicleMod.Transmission, random.Next(-1, newvehicle.GetModCount(VehicleMod.Transmission)), true);
      newvehicle.SetMod(VehicleMod.Trim, random.Next(-1, newvehicle.GetModCount(VehicleMod.Trim)), true);
      newvehicle.SetMod(VehicleMod.TrimDesign, random.Next(-1, newvehicle.GetModCount(VehicleMod.TrimDesign)), true);
      newvehicle.SetMod(VehicleMod.Trunk, random.Next(-1, newvehicle.GetModCount(VehicleMod.Trunk)), true);
      newvehicle.SetMod(VehicleMod.VanityPlates, random.Next(-1, newvehicle.GetModCount(VehicleMod.VanityPlates)), true);
      newvehicle.SetMod(VehicleMod.Windows, random.Next(-1, newvehicle.GetModCount(VehicleMod.Windows)), true);
    }

    public void ShowGUIInsrucitons()
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 200, (InputArgument) 0), (object) "Exit");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 24, (InputArgument) 0), (object) "Select");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 25, (InputArgument) 0), (object) "Back");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 198, (InputArgument) 0), (object) "Screen Up/Down");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    private void OnTick(object sender, EventArgs e)
    {
      if (this.VehicleWarehouseScript != null && this.VehicleWarehouseScript.VehicleWarehouseMarker != (Blip) null)
      {
        Color color = Color.Blue;
        BlipColor blipColor = BlipColor.Blue;
        if (this.BusinessLocation == 0)
        {
          blipColor = this.MazeBankBlip_Colour;
          color = this.MazeBankMarkerColor;
        }
        if (this.BusinessLocation == 1)
        {
          blipColor = this.ArcadiusBlip_Colour;
          color = this.ArcadiusMarkerColor;
        }
        if (this.BusinessLocation == 2)
        {
          blipColor = this.LombokBlip_Colour;
          color = this.LombokMarkerColor;
        }
        if (this.BusinessLocation == 3)
        {
          blipColor = this.MBWBlip_Colour;
          color = this.MBWMarkerColor;
        }
        this.VehicleWarehouseScript.VehicleWarehouseMarker.Color = blipColor;
        this.VehicleWarehouseScript.mainColor = color;
      }
      if (this.CargoWarehouseScript != null)
      {
        for (int index = 0; index < this.CargoWarehouseScript.CargoWarehouses.Count; ++index)
        {
          if (this.CargoWarehouseScript.CargoWarehouses[index].blip != (Blip) null)
          {
            Color color = Color.Blue;
            BlipColor blipColor = BlipColor.Blue;
            if (this.BusinessLocation == 0)
            {
              blipColor = this.MazeBankBlip_Colour;
              color = this.MazeBankMarkerColor;
            }
            if (this.BusinessLocation == 1)
            {
              blipColor = this.ArcadiusBlip_Colour;
              color = this.ArcadiusMarkerColor;
            }
            if (this.BusinessLocation == 2)
            {
              blipColor = this.LombokBlip_Colour;
              color = this.LombokMarkerColor;
            }
            if (this.BusinessLocation == 3)
            {
              blipColor = this.MBWBlip_Colour;
              color = this.MBWMarkerColor;
            }
            this.CargoWarehouseScript.mainColor = color;
            this.CargoWarehouseScript.CargoWarehouses[index].blip.Color = blipColor;
          }
        }
      }
      if (this.IsinInterior && this.IsinInterior)
      {
        Vector3 position = Game.Player.Character.Position;
        if (Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) position.X, (InputArgument) position.Y, (InputArgument) position.Z) != 0)
        {
          if (Game.Player.Character.Weapons.Current != null && Game.Player.Character.Weapons.Current.Hash != WeaponHash.Unarmed)
          {
            this.DisplayHelpTextThisFrame("You cannot use weapons while inside your Executive Tower");
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed, true);
          }
          if (Game.IsControlPressed(2, GTA.Control.SelectWeapon))
          {
            Game.DisableControlThisFrame(2, GTA.Control.SelectWeapon);
            this.DisplayHelpTextThisFrame("You cannot use weapons while inside your Executive Tower");
          }
        }
      }
      try
      {
        if (this.SourcingMissionOn)
        {
          if (Game.Player.Character.IsAlive)
          {
            this.VehicleWarehouseScript.SupplyMissionOn = true;
            if (this.SourcingMission == 7)
            {
              if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                UI.ShowSubtitle("Deliver the ~y~Crate Vehicle~w~ to a ~y~Cargo Warehouse");
              if (this.SourcingMissionType == 4)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                      this.CreatedDeliverPoint = true;
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    if (this.SS_WarehousesOwned >= 1)
                    {
                      this.GetWarehouseLoc(1);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveThreeCrate(1, this.Crate1StringID, this.Crate2StringID, this.Crate3StringID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 2)
                    {
                      this.GetWarehouseLoc(2);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveThreeCrate(2, this.Crate1StringID, this.Crate2StringID, this.Crate3StringID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 3)
                    {
                      this.GetWarehouseLoc(3);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveThreeCrate(3, this.Crate1StringID, this.Crate2StringID, this.Crate3StringID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 4)
                    {
                      this.GetWarehouseLoc(4);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveThreeCrate(4, this.Crate1StringID, this.Crate2StringID, this.Crate3StringID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 5)
                    {
                      this.GetWarehouseLoc(5);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveThreeCrate(5, this.Crate1StringID, this.Crate2StringID, this.Crate3StringID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp1 != (Entity) null)
                  {
                    this.SellStockProp1.IsVisible = false;
                    this.SellStockProp1.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp2 != (Entity) null)
                  {
                    this.SellStockProp2.IsVisible = false;
                    this.SellStockProp2.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp3 != (Entity) null)
                  {
                    this.SellStockProp3.IsVisible = false;
                    this.SellStockProp3.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive && this.SourceVehicle1.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp1.Position = offsetInWorldCoords1;
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp2.Position = offsetInWorldCoords2;
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp3.Position = offsetInWorldCoords3;
                  this.SellStockProp3.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
              }
            }
            if (this.SourcingMission == 6 && this.SourcingMissionType == 5)
            {
              if ((Entity) this.SourceVehicle1 != (Entity) null)
              {
                if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  UI.ShowSubtitle("Deliver the ~y~Crate Vehicle~w~ to a ~y~Cargo Warehouse");
                if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                  this.FailSourceMission("A Vehicle was Destroyed");
                if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                {
                  UI.ShowSubtitle("Deliver the ~y~Crate Vehicle~w~ to a ~y~Cargo Warehouse");
                  this.GotCrate1 = true;
                  if (this.SourcingMissionType == 2)
                    Game.Player.WantedLevel = 3;
                  UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to a warehouse ");
                  if (!this.CreatedDeliverPoint && this.DeliverPointBlip != (Blip) null)
                    this.DeliverPointBlip.Remove();
                }
                if (this.GotCrate1)
                {
                  if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                    UI.ShowSubtitle("Deliver the ~y~Crate Vehicle~w~ to a ~y~Cargo Warehouse");
                  if (!this.DeliveredCrate1)
                  {
                    if (this.SS_WarehousesOwned >= 1)
                    {
                      this.GetWarehouseLoc(1);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveSingleCrate(1, this.SpecialCrateID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 2)
                    {
                      this.GetWarehouseLoc(2);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveSingleCrate(2, this.SpecialCrateID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 3)
                    {
                      this.GetWarehouseLoc(3);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveSingleCrate(3, this.SpecialCrateID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 4)
                    {
                      this.GetWarehouseLoc(4);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveSingleCrate(4, this.SpecialCrateID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                    if (this.SS_WarehousesOwned >= 5)
                    {
                      this.GetWarehouseLoc(5);
                      if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, this.WarehouseDeliverPos.Z)) < 15.0)
                      {
                        this.DeliveredCrate1 = true;
                        this.CreatedDeliverPoint = false;
                        if (this.DeliverPointBlip != (Blip) null)
                          this.DeliverPointBlip.Remove();
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                        Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                        this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                        this.SourceVehicle1.Speed = 0.0f;
                        if (this.SourceVehicle1.CurrentBlip != (Blip) null)
                          this.SourceVehicle1.CurrentBlip.Remove();
                        this.SourceVehicle1.MarkAsNoLongerNeeded();
                        this.SourceVehicle1 = (Vehicle) null;
                        this.SaveSingleCrate(5, this.SpecialCrateID);
                        this.SupplyMissionOn = false;
                        this.SupplyMissionStage = 0;
                        this.SupplyMissionType = 0;
                      }
                    }
                  }
                }
              }
              if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive)
              {
                this.SellStockProp1.Position = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
              }
            }
            if (this.SourcingMission == 5)
            {
              if (this.SupplyMissionStage == 1)
              {
                this.SupplyMissionMainVehicle.LockStatus = VehicleLockStatus.CanBeBrokenInto;
                UI.ShowSubtitle("Steal the ~b~" + this.SupplyMissionMainVehicle.FriendlyName);
                foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                {
                  if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                  {
                    if (sourceAsellMissionPed.Model == this.RequestModel(PedHash.Swat01SMY) && (!Game.Player.Character.IsShooting || sourceAsellMissionPed.IsInCombatAgainst(Game.Player.Character)))
                      sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 1);
                    if (sourceAsellMissionPed.Model == this.RequestModel(PedHash.Cop01SFY) && sourceAsellMissionPed.Alpha == (int) byte.MaxValue && (double) World.GetDistance(Game.Player.Character.Position, sourceAsellMissionPed.Position) < 20.0)
                    {
                      float heading = sourceAsellMissionPed.Heading;
                      sourceAsellMissionPed.Alpha = 254;
                      sourceAsellMissionPed.Task.StartScenario("WORLD_HUMAN_COP_IDLES", sourceAsellMissionPed.Position);
                      sourceAsellMissionPed.Heading = heading;
                    }
                    if (sourceAsellMissionPed.Model == this.RequestModel(PedHash.Cop01SMY) && sourceAsellMissionPed.Alpha == (int) byte.MaxValue && (double) World.GetDistance(Game.Player.Character.Position, sourceAsellMissionPed.Position) < 20.0)
                    {
                      float heading = sourceAsellMissionPed.Heading;
                      sourceAsellMissionPed.Alpha = 254;
                      sourceAsellMissionPed.Task.StartScenario("WORLD_HUMAN_COP_IDLES", sourceAsellMissionPed.Position);
                      sourceAsellMissionPed.Heading = heading;
                    }
                  }
                }
                if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SupplyMissionMainVehicle)
                {
                  if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
                  {
                    foreach (Ped nearbyPed in World.GetNearbyPeds(Game.Player.Character.Position, 250f))
                    {
                      int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                      if (nearbyPed.RelationshipGroup == num)
                        Game.Player.WantedLevel = 3;
                    }
                    this.PrimaryColor = Game.Player.Character.CurrentVehicle.PrimaryColor;
                    this.SecondaryColor = Game.Player.Character.CurrentVehicle.SecondaryColor;
                  }
                  this.SupplyMissionStage = 2;
                }
              }
              if (this.SupplyMissionStage == 2)
              {
                if (Game.Player.WantedLevel != 0)
                  UI.ShowSubtitle("Lose the~r~ Cops");
                if (Game.Player.WantedLevel == 0)
                {
                  if (Game.Player.Character.CurrentVehicle.PrimaryColor != this.PrimaryColor && Game.Player.Character.CurrentVehicle.SecondaryColor != this.SecondaryColor)
                    this.SupplyMissionStage = 3;
                  UI.ShowSubtitle("Respray the ~b~" + this.SupplyMissionMainVehicle.FriendlyName + "~w~ at ~y~ Los Santos Customs");
                }
              }
              if (this.SupplyMissionStage == 3)
              {
                this.VehicleWarehouseScript.VehicleWarehouseMarker.ShowRoute = true;
                UI.ShowSubtitle("Deliver the ~b~" + this.SupplyMissionMainVehicle.FriendlyName + "~w~ to the ~y~Vehicle Warehouse");
                if ((double) World.GetDistance(this.SupplyMissionMainVehicle.Position, this.VehicleWarehouseScript.WherehouseMarker) < 100.0)
                  World.DrawMarker(MarkerType.VerticalCylinder, this.VehicleWarehouseScript.WherehouseMarker, Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                if ((double) World.GetDistance(this.SupplyMissionMainVehicle.Position, this.VehicleWarehouseScript.WherehouseMarker) < 2.0)
                {
                  Game.DisableControlThisFrame(2, GTA.Control.VehicleExit);
                  new MissionScreen().SetPass("Source Vehcicle", (int) this.VehicleWarehouseScript.GetVehicleValue(this.SupplyMissionMainVehicle.DisplayName, 10), "The Player has died");
                  int num = 1;
                  for (int index = 1; index < 41; ++index)
                  {
                    this.VehicleWarehouseScript.SC.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//WareHouses//GarageA//Slot" + index.ToString() + ".ini");
                    GTA.Model model = this.VehicleWarehouseScript.SC.CheckCar("scripts//HKH191sBusinessMods//ExecutiveBusiness//WareHouses//GarageA//Slot" + index.ToString() + ".ini");
                    if ((model == (GTA.Model) "null" || model == (GTA.Model) (string) null) && num == 1)
                    {
                      this.VehicleWarehouseScript.SC.SaveWithoutDelete();
                      num = 0;
                      UI.Notify("Saved Vehicle : " + this.SupplyMissionMainVehicle.FriendlyName + " in Slot " + index.ToString());
                    }
                  }
                  this.SupplyMissionStage = 4;
                  Script.Wait(5000);
                }
              }
              if (this.SupplyMissionStage == 4)
              {
                Game.FadeScreenOut(2500);
                Script.Wait(5500);
                this.VehicleWarehouseScript.SupplyMissionOn = false;
                foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
                {
                  if ((Entity) asellMissionVehicle != (Entity) null)
                    asellMissionVehicle.Delete();
                }
                foreach (Prop asellMissionProp in this.SourceASellMissionProps)
                {
                  if ((Entity) asellMissionProp != (Entity) null)
                    asellMissionProp.Delete();
                }
                foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
                {
                  if (asellMissionBlip != (Blip) null)
                    asellMissionBlip.Remove();
                }
                foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                {
                  if ((Entity) sourceAsellMissionPed != (Entity) null)
                    sourceAsellMissionPed.Delete();
                }
                if (this.SourceASellMissionBlips.Count > 0)
                  this.SourceASellMissionBlips.Clear();
                if (this.SourceASellMissionPeds.Count > 0)
                  this.SourceASellMissionPeds.Clear();
                if (this.SourceASellMissionVehicles.Count > 0)
                  this.SourceASellMissionVehicles.Clear();
                if (this.SourceASellMissionProps.Count > 0)
                  this.SourceASellMissionProps.Clear();
                if (this.DeliverPointBlip != (Blip) null)
                  this.DeliverPointBlip.Remove();
                this.SourcingMission = 0;
                this.SupplyMissionStage = 0;
                this.SourcingMissionOn = false;
                Script.Wait(2500);
                Game.FadeScreenIn(2500);
              }
            }
            if (this.SourcingMission == 4)
            {
              UI.ShowSubtitle("Deliver the ~y~Crate Vehicles~w~ to the Warehouse");
              if (this.SourcingMissionType == 2)
              {
                if (this.DeliveredCrate3 && this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle3 != (Entity) null)
                {
                  if (!this.SourceVehicle3.IsAlive && (Entity) this.SourceVehicle3 != (Entity) null && this.SourceVehicle3.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate3 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle3)
                  {
                    this.GotCrate3 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate3 && !this.DeliveredCrate3)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate3 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle3, true);
                      this.SourceVehicle3.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle3.CurrentBlip.Remove();
                      this.SourceVehicle3.MarkAsNoLongerNeeded();
                      this.SourceVehicle3 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 3)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, spawnPos) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, spawnPos, Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, spawnPos) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 4)
              {
                if (this.DeliveredCrate3 && this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle3 != (Entity) null)
                {
                  if (!this.SourceVehicle3.IsAlive && (Entity) this.SourceVehicle3 != (Entity) null && this.SourceVehicle3.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate3 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle3)
                  {
                    this.GotCrate3 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate3 && !this.DeliveredCrate3)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle3.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate3 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle3, true);
                      this.SourceVehicle3.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle3.CurrentBlip.Remove();
                      this.SourceVehicle3.MarkAsNoLongerNeeded();
                      this.SourceVehicle3 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle2.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp1 != (Entity) null)
                  {
                    this.SellStockProp1.IsVisible = false;
                    this.SellStockProp1.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp2 != (Entity) null)
                  {
                    this.SellStockProp2.IsVisible = false;
                    this.SellStockProp2.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp3 != (Entity) null)
                  {
                    this.SellStockProp3.IsVisible = false;
                    this.SellStockProp3.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle2 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp4 != (Entity) null)
                  {
                    this.SellStockProp4.IsVisible = false;
                    this.SellStockProp4.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp5 != (Entity) null)
                  {
                    this.SellStockProp5.IsVisible = false;
                    this.SellStockProp5.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp6 != (Entity) null)
                  {
                    this.SellStockProp6.IsVisible = false;
                    this.SellStockProp6.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle3 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp7 != (Entity) null)
                  {
                    this.SellStockProp7.IsVisible = false;
                    this.SellStockProp7.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp7 != (Entity) null)
                  {
                    this.SellStockProp7.IsVisible = false;
                    this.SellStockProp7.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp7 != (Entity) null)
                  {
                    this.SellStockProp7.IsVisible = false;
                    this.SellStockProp7.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive && this.SourceVehicle1.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp1.Position = offsetInWorldCoords1;
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp2.Position = offsetInWorldCoords2;
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp3.Position = offsetInWorldCoords3;
                  this.SellStockProp3.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.IsAlive && this.SourceVehicle2.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp4.Position = offsetInWorldCoords1;
                  this.SellStockProp4.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                  this.SellStockProp5.Position = offsetInWorldCoords2;
                  this.SellStockProp5.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                  this.SellStockProp6.Position = offsetInWorldCoords3;
                  this.SellStockProp6.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                }
                if ((Entity) this.SourceVehicle3 != (Entity) null && this.SourceVehicle3.IsAlive && this.SourceVehicle3.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp7.Position = offsetInWorldCoords1;
                  this.SellStockProp7.Rotation = new Vector3(this.SourceVehicle3.Rotation.X, this.SourceVehicle3.Rotation.Y, this.SourceVehicle3.Heading);
                  this.SellStockProp8.Position = offsetInWorldCoords2;
                  this.SellStockProp8.Rotation = new Vector3(this.SourceVehicle3.Rotation.X, this.SourceVehicle3.Rotation.Y, this.SourceVehicle3.Heading);
                  this.SellStockProp9.Position = offsetInWorldCoords3;
                  this.SellStockProp9.Rotation = new Vector3(this.SourceVehicle3.Rotation.X, this.SourceVehicle3.Rotation.Y, this.SourceVehicle3.Heading);
                }
              }
              if (this.SourcingMissionType == 5)
              {
                if (this.DeliveredCrate3 && this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle3 != (Entity) null)
                {
                  if (!this.SourceVehicle3.IsAlive && (Entity) this.SourceVehicle3 != (Entity) null && this.SourceVehicle3.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate3 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle3)
                  {
                    this.GotCrate3 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate3 && !this.DeliveredCrate3)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle3.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate3 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle3, true);
                      this.SourceVehicle3.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle3.CurrentBlip.Remove();
                      this.SourceVehicle3.MarkAsNoLongerNeeded();
                      this.SourceVehicle3 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle2.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 3)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive)
                {
                  this.SellStockProp1.Position = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.IsAlive)
                {
                  this.SellStockProp2.Position = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                }
                if ((Entity) this.SourceVehicle3 != (Entity) null && this.SourceVehicle3.IsAlive)
                {
                  this.SellStockProp3.Position = this.SourceVehicle3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                  this.SellStockProp3.Rotation = new Vector3(this.SourceVehicle3.Rotation.X, this.SourceVehicle3.Rotation.Y, this.SourceVehicle3.Heading);
                }
              }
            }
            if (this.SourcingMission == 3)
            {
              UI.ShowSubtitle("Deliver the ~y~Crate Vehicles~w~ to the Warehouse");
              if (this.SourcingMissionType == 2)
              {
                if (this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 3)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, spawnPos) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, spawnPos, Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, spawnPos) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 4)
              {
                if (this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle2.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp1 != (Entity) null)
                  {
                    this.SellStockProp1.IsVisible = false;
                    this.SellStockProp1.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp2 != (Entity) null)
                  {
                    this.SellStockProp2.IsVisible = false;
                    this.SellStockProp2.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp3 != (Entity) null)
                  {
                    this.SellStockProp3.IsVisible = false;
                    this.SellStockProp3.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle2 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp4 != (Entity) null)
                  {
                    this.SellStockProp4.IsVisible = false;
                    this.SellStockProp4.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp5 != (Entity) null)
                  {
                    this.SellStockProp5.IsVisible = false;
                    this.SellStockProp5.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp6 != (Entity) null)
                  {
                    this.SellStockProp6.IsVisible = false;
                    this.SellStockProp6.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive && this.SourceVehicle1.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp1.Position = offsetInWorldCoords1;
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp2.Position = offsetInWorldCoords2;
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp3.Position = offsetInWorldCoords3;
                  this.SellStockProp3.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.IsAlive && this.SourceVehicle2.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp4.Position = offsetInWorldCoords1;
                  this.SellStockProp4.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                  this.SellStockProp5.Position = offsetInWorldCoords2;
                  this.SellStockProp5.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                  this.SellStockProp6.Position = offsetInWorldCoords3;
                  this.SellStockProp6.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                }
              }
              if (this.SourcingMissionType == 5)
              {
                if (this.DeliveredCrate1 && this.DeliveredCrate2)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle2 != (Entity) null)
                {
                  if (!this.SourceVehicle2.IsAlive && (Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate2 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle2)
                  {
                    this.GotCrate2 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate2 && !this.DeliveredCrate2)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle2.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate2 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle2, true);
                      this.SourceVehicle2.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle2.CurrentBlip.Remove();
                      this.SourceVehicle2.MarkAsNoLongerNeeded();
                      this.SourceVehicle2 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(spawnPos.X, spawnPos.Y, spawnPos.Z - 1f)) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      ++this.CratesCollected;
                      if (this.CratesCollected == 1)
                        UI.Notify(this.GetHostName() + " : Good we will unload the Crates, go collect the rest");
                      if (this.CratesCollected == 2)
                        UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.CurrentBlip.Remove();
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive)
                {
                  this.SellStockProp1.Position = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
                if ((Entity) this.SourceVehicle2 != (Entity) null && this.SourceVehicle2.IsAlive)
                {
                  this.SellStockProp2.Position = this.SourceVehicle2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle2.Rotation.X, this.SourceVehicle2.Rotation.Y, this.SourceVehicle2.Heading);
                }
              }
            }
            if (this.SourcingMission == 2)
            {
              UI.ShowSubtitle("Deliver the ~y~Crate Vehicle~w~ to the Warehouse");
              if (this.SourcingMissionType == 2)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f)))) < 25.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 3)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, spawnPos) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, spawnPos, Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, spawnPos) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
              }
              if (this.SourcingMissionType == 4)
              {
                if (this.DeliveredCrate1)
                  this.SaveCrates();
                if ((Entity) this.SourceVehicle1 != (Entity) null)
                {
                  if (!this.SourceVehicle1.IsAlive && (Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.Exists())
                    this.FailSourceMission("A Vehicle was Destroyed");
                  if (!this.GotCrate1 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SourceVehicle1)
                  {
                    this.GotCrate1 = true;
                    if (this.SourcingMissionType == 2)
                      Game.Player.WantedLevel = 3;
                    UI.Notify(this.GetHostName() + " : That is the Vehicle carrying the Crates, return it to the warehouse ");
                    if (!this.CreatedDeliverPoint)
                    {
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      this.GetWarehouseLoc(this.CurrentWarehouse);
                      this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                      this.DeliverPointBlip.Color = BlipColor.Yellow;
                      this.DeliverPointBlip.Name = "Deliver Crates";
                      this.CreatedDeliverPoint = true;
                    }
                  }
                  if (this.GotCrate1 && !this.DeliveredCrate1)
                  {
                    this.GetWarehouseLoc(this.CurrentWarehouse);
                    Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, World.GetGroundHeight(new Vector3(this.WarehouseDeliverPos.X, this.WarehouseDeliverPos.Y, 1000f))), ExecutiveTower.Nodetype.AnyRoad, true);
                    if ((double) World.GetDistance(Game.Player.Character.Position, spawnPos) < 100.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, spawnPos, Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                    if ((double) World.GetDistance(this.SourceVehicle1.Position, spawnPos) < 2.0)
                    {
                      this.DeliveredCrate1 = true;
                      this.CreatedDeliverPoint = false;
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                      UI.Notify(this.GetHostName() + " : Thats all we need, successfully completed a source Crate mission");
                      Game.Player.Character.Task.LeaveVehicle(this.SourceVehicle1, true);
                      this.SourceVehicle1.LockStatus = VehicleLockStatus.Locked;
                      this.SourceVehicle1.MarkAsNoLongerNeeded();
                      this.SourceVehicle1 = (Vehicle) null;
                    }
                  }
                }
                if ((Entity) this.SourceVehicle1 == (Entity) null)
                {
                  if ((Entity) this.SellStockProp1 != (Entity) null)
                  {
                    this.SellStockProp1.IsVisible = false;
                    this.SellStockProp1.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp2 != (Entity) null)
                  {
                    this.SellStockProp2.IsVisible = false;
                    this.SellStockProp2.HasCollision = false;
                  }
                  if ((Entity) this.SellStockProp3 != (Entity) null)
                  {
                    this.SellStockProp3.IsVisible = false;
                    this.SellStockProp3.HasCollision = false;
                  }
                }
                if ((Entity) this.SourceVehicle1 != (Entity) null && this.SourceVehicle1.IsAlive && this.SourceVehicle1.Model == (GTA.Model) VehicleHash.Flatbed)
                {
                  Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                  Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                  Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                  this.SellStockProp1.Position = offsetInWorldCoords1;
                  this.SellStockProp1.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp2.Position = offsetInWorldCoords2;
                  this.SellStockProp2.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                  this.SellStockProp3.Position = offsetInWorldCoords3;
                  this.SellStockProp3.Rotation = new Vector3(this.SourceVehicle1.Rotation.X, this.SourceVehicle1.Rotation.Y, this.SourceVehicle1.Heading);
                }
              }
            }
            if (this.SourcingMission == 1)
            {
              if (this.ReturningToWarehouse)
              {
                UI.ShowSubtitle("Return to the~y~ Warehouse~w~");
                float x = this.WarehouseDeliverPos.X;
                float y = this.WarehouseDeliverPos.Y;
                float z = this.WarehouseDeliverPos.Z;
                if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(x, y, z)) < 100.0)
                  World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(x, y, z), Vector3.Zero, Vector3.Zero, new Vector3(5f, 5f, 0.6f), Color.Yellow);
                if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(x, y, z)) < 2.0)
                {
                  if (this.DeliverPointBlip != (Blip) null)
                    this.DeliverPointBlip.Remove();
                  this.SaveCrates();
                }
              }
              if (!this.ReturningToWarehouse)
                UI.ShowSubtitle("Collect the ~y~Crates~w~");
              if (this.CratesCollected == this.CratesToSource && !this.ReturningToWarehouse)
              {
                if (this.DeliverPointBlip != (Blip) null)
                  this.DeliverPointBlip.Remove();
                this.GetWarehouseLoc(this.CurrentWarehouse);
                this.DeliverPointBlip = World.CreateBlip(this.WarehouseDeliverPos);
                this.DeliverPointBlip.Color = BlipColor.Yellow;
                this.DeliverPointBlip.Name = "Deliver Crates";
                this.ReturningToWarehouse = true;
              }
              if (this.CratesCollected != this.CratesToSource)
              {
                if (this.NearCrate && (Entity) this.FakeCratePickup != (Entity) null)
                {
                  if ((Entity) this.Crate1 != (Entity) null)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate1Spawn) < 20.0 && !this.Crate1.Exists())
                    {
                      this.Crate1 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate1Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate1);
                    }
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate1.Position) < 2.0 && !this.GotCrate1)
                    {
                      ++this.CratesCollected;
                      this.GotCrate1 = true;
                      this.NearCrate = false;
                      UI.Notify("Got Crate 1!");
                      if ((Entity) this.Crate1 != (Entity) null)
                      {
                        this.Crate1.CurrentBlip.Remove();
                        this.Crate1.IsVisible = false;
                      }
                      this.SpawnedSignalFlare = false;
                      this.SpawnedCrate = true;
                    }
                  }
                  if ((Entity) this.Crate2 != (Entity) null)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate2Spawn) < 20.0 && !this.Crate2.Exists())
                    {
                      this.Crate2 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate2Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate2);
                    }
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate2.Position) < 2.0 && !this.GotCrate2)
                    {
                      ++this.CratesCollected;
                      this.GotCrate2 = true;
                      this.NearCrate = false;
                      UI.Notify("Got Crate 2!");
                      if ((Entity) this.Crate2 != (Entity) null)
                      {
                        this.Crate2.CurrentBlip.Remove();
                        this.Crate2.IsVisible = false;
                      }
                      this.SpawnedSignalFlare = false;
                      this.SpawnedCrate = true;
                    }
                  }
                  if ((Entity) this.Crate3 != (Entity) null)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate3Spawn) < 20.0 && !this.Crate3.Exists())
                    {
                      this.Crate3 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate3Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate3);
                    }
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate3.Position) < 2.0 && !this.GotCrate3)
                    {
                      ++this.CratesCollected;
                      this.GotCrate3 = true;
                      this.NearCrate = false;
                      UI.Notify("Got Crate 3!");
                      if ((Entity) this.Crate3 != (Entity) null)
                      {
                        this.Crate3.CurrentBlip.Remove();
                        this.Crate3.IsVisible = false;
                      }
                      this.SpawnedSignalFlare = false;
                      this.SpawnedCrate = true;
                    }
                  }
                }
                if (this.SpawnedCrate)
                {
                  if (!this.GotCrate1)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate1Spawn) < 20.0 && !this.Crate1.Exists())
                    {
                      this.Crate1 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate1Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate1);
                    }
                    if ((Entity) this.Crate1 != (Entity) null)
                    {
                      Vector3 position = this.Crate1.Position;
                      World.DrawMarker(MarkerType.UpsideDownCone, new Vector3(position.X, position.Y, position.Z + 25f), Vector3.Zero, Vector3.Zero, new Vector3(6f, 6f, 6f), Color.Red);
                      if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate1.Position) < 200.0)
                      {
                        Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.Crate1);
                        UI.ShowSubtitle("SpawnedCrate " + this.SpawnedCrate.ToString());
                        if (!this.SpawnedSignalFlare)
                        {
                          this.weaponAsset = (GTA.Model) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "WEAPON_FLARE");
                          if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            Function.Call(Hash._0x5443438F033E29C3, (InputArgument) this.weaponAsset);
                            while (true)
                            {
                              if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                                Script.Wait(0);
                              else
                                break;
                            }
                          }
                          if (Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            this.CurrentCrate = this.Crate1;
                            this.FakeCratePickup = World.CreateAmbientPickup(PickupType.MoneyCase, this.crateSpawn, this.RequestModel("prop_box_ammo04a"), 250);
                            this.SpawnedCrate = false;
                            Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.FakeCratePickup);
                            this.SourceASellMissionProps.Add(this.FakeCratePickup);
                            Function.Call(Hash._0x867654CBC7606F2C, (InputArgument) this.Crate1.Position.X, (InputArgument) this.Crate1.Position.Y, (InputArgument) (this.Crate1.Position.Z + 1f), (InputArgument) this.Crate1.Position.X, (InputArgument) this.Crate1.Position.Y, (InputArgument) ((double) this.Crate1.Position.Z + 1.5), (InputArgument) 0, (InputArgument) 1, (InputArgument) this.weaponAsset, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 1, (InputArgument) 100.0);
                            Function.Call(Hash._0xE3AD2BDBAEE269AC, (InputArgument) this.Crate1.Position.X, (InputArgument) (this.Crate1.Position.Y + 1f), (InputArgument) this.Crate1.Position.Z, (InputArgument) 19, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
                            this.NearCrate = true;
                            this.GotCrate = false;
                          }
                          this.SpawnedSignalFlare = true;
                        }
                      }
                    }
                  }
                  if (!this.GotCrate2)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate2Spawn) < 20.0 && !this.Crate2.Exists())
                    {
                      this.Crate2 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate2Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate2);
                    }
                    if ((Entity) this.Crate2 != (Entity) null)
                    {
                      Vector3 position = this.Crate2.Position;
                      World.DrawMarker(MarkerType.UpsideDownCone, new Vector3(position.X, position.Y, position.Z + 25f), Vector3.Zero, Vector3.Zero, new Vector3(6f, 6f, 6f), Color.Red);
                      if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate2.Position) < 200.0)
                      {
                        Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.Crate2);
                        UI.ShowSubtitle("SpawnedCrate " + this.SpawnedCrate.ToString());
                        if (!this.SpawnedSignalFlare)
                        {
                          this.weaponAsset = (GTA.Model) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "WEAPON_FLARE");
                          if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            Function.Call(Hash._0x5443438F033E29C3, (InputArgument) this.weaponAsset);
                            while (true)
                            {
                              if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                                Script.Wait(0);
                              else
                                break;
                            }
                          }
                          if (Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            this.CurrentCrate = this.Crate2;
                            this.FakeCratePickup = World.CreateAmbientPickup(PickupType.MoneyCase, this.crateSpawn, this.RequestModel("prop_box_ammo04a"), 250);
                            this.SpawnedCrate = false;
                            Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.FakeCratePickup);
                            this.SourceASellMissionProps.Add(this.FakeCratePickup);
                            Function.Call(Hash._0x867654CBC7606F2C, (InputArgument) this.Crate2.Position.X, (InputArgument) this.Crate2.Position.Y, (InputArgument) (this.Crate2.Position.Z + 1f), (InputArgument) this.Crate2.Position.X, (InputArgument) this.Crate2.Position.Y, (InputArgument) ((double) this.Crate2.Position.Z + 1.5), (InputArgument) 0, (InputArgument) 1, (InputArgument) this.weaponAsset, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 1, (InputArgument) 100.0);
                            Function.Call(Hash._0xE3AD2BDBAEE269AC, (InputArgument) this.Crate2.Position.X, (InputArgument) (this.Crate2.Position.Y + 1f), (InputArgument) this.Crate2.Position.Z, (InputArgument) 19, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
                            this.NearCrate = true;
                            this.GotCrate = false;
                          }
                          this.SpawnedSignalFlare = true;
                        }
                      }
                    }
                  }
                  if (!this.GotCrate3)
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate3Spawn) < 20.0 && !this.Crate3.Exists())
                    {
                      this.Crate3 = World.CreateProp(this.RequestModel("prop_box_ammo04a"), this.Crate3Spawn, new Vector3(0.0f, 0.0f, 0.0f), true, false);
                      this.SourceASellMissionProps.Add(this.Crate3);
                    }
                    if ((Entity) this.Crate3 != (Entity) null)
                    {
                      Vector3 position = this.Crate3.Position;
                      World.DrawMarker(MarkerType.UpsideDownCone, new Vector3(position.X, position.Y, position.Z + 25f), Vector3.Zero, Vector3.Zero, new Vector3(6f, 6f, 6f), Color.Red);
                      if ((double) World.GetDistance(Game.Player.Character.Position, this.Crate3.Position) < 200.0)
                      {
                        Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.Crate3);
                        UI.ShowSubtitle("SpawnedCrate " + this.SpawnedCrate.ToString());
                        if (!this.SpawnedSignalFlare)
                        {
                          this.weaponAsset = (GTA.Model) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "WEAPON_FLARE");
                          if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            Function.Call(Hash._0x5443438F033E29C3, (InputArgument) this.weaponAsset);
                            while (true)
                            {
                              if (!Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                                Script.Wait(0);
                              else
                                break;
                            }
                          }
                          if (Function.Call<bool>(Hash._0x36E353271F0E90EE, (InputArgument) this.weaponAsset))
                          {
                            this.CurrentCrate = this.Crate3;
                            this.FakeCratePickup = World.CreateAmbientPickup(PickupType.MoneyCase, this.crateSpawn, this.RequestModel("prop_box_ammo04a"), 250);
                            this.SpawnedCrate = false;
                            Function.Call(Hash._0x58A850EAEE20FAA3, (InputArgument) this.FakeCratePickup);
                            this.SourceASellMissionProps.Add(this.FakeCratePickup);
                            Function.Call(Hash._0x867654CBC7606F2C, (InputArgument) this.Crate3.Position.X, (InputArgument) this.Crate3.Position.Y, (InputArgument) (this.Crate3.Position.Z + 1f), (InputArgument) this.Crate3.Position.X, (InputArgument) this.Crate3.Position.Y, (InputArgument) ((double) this.Crate3.Position.Z + 1.5), (InputArgument) 0, (InputArgument) 1, (InputArgument) this.weaponAsset, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 1, (InputArgument) 100.0);
                            Function.Call(Hash._0xE3AD2BDBAEE269AC, (InputArgument) this.Crate3.Position.X, (InputArgument) (this.Crate3.Position.Y + 1f), (InputArgument) this.Crate3.Position.Z, (InputArgument) 19, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
                            this.NearCrate = true;
                            this.GotCrate = false;
                          }
                          this.SpawnedSignalFlare = true;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          else
            this.FailSourceMission("You Died");
        }
      }
      catch
      {
      }
      if (this.CargoMissionTimer < Game.GameTime && this.SS_WarehousesOwned >= 1)
      {
        System.Random random = new System.Random();
        int num1 = random.Next(42000, 1025000);
        int num2 = random.Next(0, 100);
        this.CargoMissionTimer = Game.GameTime + num1;
        if (!this.SourcingMissionOn)
        {
          if (this.MissionWait == 1)
          {
            if (num2 < 40)
            {
              this.GotCrate1 = false;
              this.DeliveredCrate1 = false;
              Vector3 spawnPos = ExecutiveTower.GenerateSpawnPos(new Vector3(-452.3921f, -346.3056f, 34.36f).Around((float) random.Next(5, 1500)), ExecutiveTower.Nodetype.AnyRoad, false);
              this.SourceVehicle1 = World.CreateVehicle(this.RequestModel(VehicleHash.Flatbed), spawnPos);
              this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
              this.SourceVehicle1.AddBlip();
              this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.Cargo;
              this.SourceVehicle1.CurrentBlip.Name = "Source Cargo (Executive)";
              this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
              this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
              this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
              Vector3 offsetInWorldCoords1 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
              Vector3 offsetInWorldCoords2 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
              Vector3 offsetInWorldCoords3 = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
              this.Crate1StringID = this.CrateProps[random.Next(0, this.CrateProps.Count)];
              this.Crate2StringID = this.CrateProps[random.Next(0, this.CrateProps.Count)];
              this.Crate3StringID = this.CrateProps[random.Next(0, this.CrateProps.Count)];
              Prop prop1 = World.CreateProp(this.RequestModel(this.Crate1StringID), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
              this.SellStockProp1 = prop1;
              this.SellStockProps.Add(prop1);
              Prop prop2 = World.CreateProp(this.RequestModel(this.Crate2StringID), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
              this.SellStockProp2 = prop2;
              this.SellStockProps.Add(prop2);
              Prop prop3 = World.CreateProp(this.RequestModel(this.Crate3StringID), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
              this.SellStockProp3 = prop3;
              this.SellStockProps.Add(prop3);
              this.SellStockProp1.HasCollision = false;
              this.SellStockProp2.HasCollision = false;
              this.SellStockProp3.HasCollision = false;
              this.SourceASellMissionProps.Add(this.SellStockProp1);
              this.SourceASellMissionProps.Add(this.SellStockProp2);
              this.SourceASellMissionProps.Add(this.SellStockProp3);
              foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
              {
                if ((Entity) sourceAsellMissionPed != (Entity) null)
                {
                  int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
                  Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                  Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                  Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
                  sourceAsellMissionPed.Weapons.Give(WeaponHash.SMG, 9999, true, true);
                }
              }
              Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
              this.SourcingMissionOn = true;
              this.SourcingMission = 7;
              this.SourcingMissionType = 4;
              this.SpecialCargoMissionEndTimer = Game.GameTime + random.Next(272000, 525000);
              ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Ambient Crate Mission", "Boss, Weve spotted a vehicle carring some Crates, return it to a warehouse for a reward");
            }
          }
          else
            this.MissionWait = 1;
        }
      }
      if (this.NewCrateTimer < Game.GameTime && !this.SecuroservCargoOn)
      {
        this.NewCrateTimer = Game.GameTime + 42000;
        int num = new System.Random().Next(0, 1000);
        if (num >= 0 && num < 100)
        {
          this.Source1Price = 1200;
          this.Source2Price = 7200;
          this.Source3Price = 17500;
          this.CrateType = 1;
          this.CrateTypeString = "Animal Materials";
        }
        if (num >= 100 && num < 200)
        {
          this.Source1Price = 2200;
          this.Source2Price = 8500;
          this.Source3Price = 19500;
          this.CrateType = 2;
          this.CrateTypeString = "Art & Antiques";
        }
        if (num >= 200 && num < 300)
        {
          this.Source1Price = 4000;
          this.Source2Price = 10000;
          this.Source3Price = 24500;
          this.CrateType = 3;
          this.CrateTypeString = "Bullion";
        }
        if (num >= 300 && num < 400)
        {
          this.Source1Price = 2200;
          this.Source2Price = 9000;
          this.Source3Price = 19500;
          this.CrateType = 4;
          this.CrateTypeString = "Counterfeit Goods";
        }
        if (num >= 400 && num < 500)
        {
          this.Source1Price = 1800;
          this.Source2Price = 8200;
          this.Source3Price = 18500;
          this.CrateType = 5;
          this.CrateTypeString = "Electronic Goods";
        }
        if (num >= 500 && num < 600)
        {
          this.Source1Price = 2500;
          this.Source2Price = 8500;
          this.Source3Price = 19500;
          this.CrateType = 6;
          this.CrateTypeString = "Gemstones";
        }
        if (num >= 600 && num < 700)
        {
          this.Source1Price = 2000;
          this.Source2Price = 8000;
          this.Source3Price = 18000;
          this.CrateType = 7;
          this.CrateTypeString = "Jewelry";
        }
        if (num >= 700 && num < 800)
        {
          this.Source1Price = 1900;
          this.Source2Price = 7800;
          this.Source3Price = 17700;
          this.CrateType = 8;
          this.CrateTypeString = "Medical Supplies";
        }
        if (num >= 800 && num < 900)
        {
          this.Source1Price = 1800;
          this.Source2Price = 8100;
          this.Source3Price = 18500;
          this.CrateType = 9;
          this.CrateTypeString = "Narcotics";
        }
        if (num >= 900 && num < 1000)
        {
          this.Source1Price = 1700;
          this.Source2Price = 7400;
          this.Source3Price = 17000;
          this.CrateType = 10;
          this.CrateTypeString = "Tobacco & Alcohol";
        }
        if (num >= 1000 && num < 1100)
        {
          this.Source1Price = 1950;
          this.Source2Price = 8100;
          this.Source3Price = 20000;
          this.CrateType = 11;
          this.CrateTypeString = "Weapons & Ammo";
        }
        this.CargoWarehouseScript.Source1Price = this.Source1Price;
        this.CargoWarehouseScript.Source2Price = this.Source2Price;
        this.CargoWarehouseScript.Source3Price = this.Source3Price;
      }
      if (this.SourcingMissionOn && (this.SourcingMission == 6 || this.SourcingMission == 7) && this.SpecialCargoMissionEndTimer < Game.GameTime)
      {
        if ((Entity) Game.Player.Character.CurrentVehicle == (Entity) null)
        {
          this.SourcingMissionOn = false;
          this.SourcingMission = 0;
          this.GotCrate1 = false;
          this.DeliveredCrate1 = false;
          foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
          {
            if ((Entity) asellMissionVehicle != (Entity) null)
              asellMissionVehicle.Delete();
          }
          foreach (Prop asellMissionProp in this.SourceASellMissionProps)
          {
            if ((Entity) asellMissionProp != (Entity) null)
              asellMissionProp.Delete();
          }
          foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
          {
            if (asellMissionBlip != (Blip) null)
              asellMissionBlip.Remove();
          }
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
              sourceAsellMissionPed.Delete();
          }
          if (this.SourceASellMissionBlips.Count > 0)
            this.SourceASellMissionBlips.Clear();
          if (this.SourceASellMissionPeds.Count > 0)
            this.SourceASellMissionPeds.Clear();
          if (this.SourceASellMissionVehicles.Count > 0)
            this.SourceASellMissionVehicles.Clear();
          if (this.SourceASellMissionProps.Count > 0)
            this.SourceASellMissionProps.Clear();
          if (this.DeliverPointBlip != (Blip) null)
            this.DeliverPointBlip.Remove();
          ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Special Crate Mission", "Boss, the Cargo Vehicle has vanished");
        }
        if ((Entity) this.SourceVehicle1 != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle != (Entity) this.SourceVehicle1)
        {
          this.SourcingMissionOn = false;
          this.SourcingMission = 0;
          this.GotCrate1 = false;
          this.DeliveredCrate1 = false;
          foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
          {
            if ((Entity) asellMissionVehicle != (Entity) null)
              asellMissionVehicle.Delete();
          }
          foreach (Prop asellMissionProp in this.SourceASellMissionProps)
          {
            if ((Entity) asellMissionProp != (Entity) null)
              asellMissionProp.Delete();
          }
          foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
          {
            if (asellMissionBlip != (Blip) null)
              asellMissionBlip.Remove();
          }
          foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
          {
            if ((Entity) sourceAsellMissionPed != (Entity) null)
              sourceAsellMissionPed.Delete();
          }
          if (this.SourceASellMissionBlips.Count > 0)
            this.SourceASellMissionBlips.Clear();
          if (this.SourceASellMissionPeds.Count > 0)
            this.SourceASellMissionPeds.Clear();
          if (this.SourceASellMissionVehicles.Count > 0)
            this.SourceASellMissionVehicles.Clear();
          if (this.SourceASellMissionProps.Count > 0)
            this.SourceASellMissionProps.Clear();
          if (this.DeliverPointBlip != (Blip) null)
            this.DeliverPointBlip.Remove();
          ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Special Crate Mission", "Boss, the Special Cargo Vehicle has vanished");
        }
      }
      if (this.NextSpecialCrateMission < Game.GameTime && this.SS_WarehousesOwned >= 1)
      {
        ++this.SpecialCargoCounter;
        System.Random random = new System.Random();
        this.NextSpecialCrateMission = Game.GameTime + random.Next(72000, 1025000);
        int num1 = random.Next(0, 100);
        if (this.SupplyCounter == 1)
        {
          if (!this.SourcingMissionOn && num1 <= 10)
          {
            this.GotCrate1 = false;
            this.DeliveredCrate1 = false;
            foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
            {
              if ((Entity) asellMissionVehicle != (Entity) null)
                asellMissionVehicle.Delete();
            }
            foreach (Prop asellMissionProp in this.SourceASellMissionProps)
            {
              if ((Entity) asellMissionProp != (Entity) null)
                asellMissionProp.Delete();
            }
            foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
            {
              if (asellMissionBlip != (Blip) null)
                asellMissionBlip.Remove();
            }
            foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
            {
              if ((Entity) sourceAsellMissionPed != (Entity) null)
                sourceAsellMissionPed.Delete();
            }
            if (this.SourceASellMissionBlips.Count > 0)
              this.SourceASellMissionBlips.Clear();
            if (this.SourceASellMissionPeds.Count > 0)
              this.SourceASellMissionPeds.Clear();
            if (this.SourceASellMissionVehicles.Count > 0)
              this.SourceASellMissionVehicles.Clear();
            if (this.SourceASellMissionProps.Count > 0)
              this.SourceASellMissionProps.Clear();
            if (this.DeliverPointBlip != (Blip) null)
              this.DeliverPointBlip.Remove();
            List<object> objectList = new List<object>();
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            objectList.Add((object) "ex_prop_crate_freel");
            objectList.Add((object) "ex_prop_crate_shide");
            objectList.Add((object) "ex_prop_crate_minig");
            objectList.Add((object) "ex_prop_crate_oegg");
            objectList.Add((object) "ex_prop_crate_xldiam");
            objectList.Add((object) "ex_prop_crate_watch");
            Vector3 vector3 = new Vector3(-452.3921f, -346.3056f, 34.36f);
            vector3 = vector3.Around((float) random.Next(5, 1500));
            vector3 = ExecutiveTower.GenerateSpawnPos(vector3, ExecutiveTower.Nodetype.AnyRoad, false);
            this.SourceVehicle1 = World.CreateVehicle((GTA.Model) VehicleHash.Burrito3, vector3);
            Vector3 offsetInWorldCoords = this.SourceVehicle1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
            // ISSUE: reference to a compiler-generated field
            if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (ExecutiveTower)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.SpecialCrateID = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__0.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__0, objectList[random.Next(0, objectList.Count)]);
            this.SellStockProp1 = World.CreateProp(this.RequestModel(this.SpecialCrateID), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.SourceVehicle1.Heading), false, false);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp1.SetNoCollision((Entity) this.SourceVehicle1, true);
            this.SourceVehicle1.SetNoCollision((Entity) this.SellStockProp1, true);
            this.SourceVehicle1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
            this.SourceVehicle1.AddBlip();
            this.SourceVehicle1.CurrentBlip.Sprite = BlipSprite.Cargo;
            this.SourceVehicle1.CurrentBlip.Name = "Source Special Cargo";
            this.SourceVehicle1.CurrentBlip.Color = BlipColor.Yellow;
            this.SourceASellMissionPeds.Add(this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver));
            Function.Call(Hash._0x480142959D337D00, (InputArgument) this.SourceVehicle1.GetPedOnSeat(VehicleSeat.Driver), (InputArgument) this.SourceVehicle1, (InputArgument) 80f, (InputArgument) 786603);
            this.SourceASellMissionProps.Add(this.SellStockProp1);
            this.SourceASellMissionVehicles.Add(this.SourceVehicle1);
            foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
            {
              if ((Entity) sourceAsellMissionPed != (Entity) null)
              {
                int num2 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
                Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num2);
                Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) sourceAsellMissionPed, (InputArgument) 1);
                sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
              }
            }
            this.SourcingMissionOn = true;
            this.SourcingMission = 6;
            this.SourcingMissionType = 5;
            this.CratesToSource = 1;
            ExecutiveTower.TextNotification("CHAR_LESTER", this.GetHostName(), "Special Crate Mission", "Boss, Weve spotted a vehicle carring Special Crates, return it to a warehouse for a reward");
            this.SpecialCargoMissionEndTimer = Game.GameTime + random.Next(172000, 225000);
          }
        }
        else
          this.SupplyCounter = 1;
      }
      if (this.SecuroservCargoOn)
      {
        try
        {
          this.SS_SuccessRate = this.SS_CollectionsCompleted <= 0 ? 0.0f : (float) (int) (100.0 - (double) this.SS_CollectionsFailed / (double) this.SS_CollectionsCompleted * 100.0);
          this.SS_VehiclesExportedTotal = this.SS_VehiclesExportedSuccess <= 0 ? 0.0f : (float) (int) (100.0 - (double) this.SS_VehiclesExportedFail / (double) this.SS_VehiclesExportedSuccess * 100.0);
          this.SS_StealSuccessTotal = this.SS_VehicleStealSuccess <= 0 ? 0.0f : (float) (int) (100.0 - (double) this.SS_VehicleStealFail / (double) this.SS_VehicleStealSuccess * 100.0);
          this.SS_VehiclesStolenTotal = this.SS_VehiclesStolenSuccess <= 0 ? 0.0f : (float) (int) (100.0 - (double) this.SS_VehiclesStolenFail / (double) this.SS_VehiclesStolenSuccess * 100.0);
          this.SS_SaleSuccessRate = this.SS_TotalSalesMade <= 0 ? 0.0f : (float) (int) (100.0 - (double) this.SS_TotalSalesFailed / (double) this.SS_TotalSalesMade * 100.0);
        }
        catch
        {
          UI.Notify("Catch Error GUI 1");
        }
        try
        {
          this.SS_Company = this.CurrentText.ToUpper();
          this.SS_Name = Game.Player.Name;
          if (Game.Player.Character.Weapons.Current.GetHashCode() != -1569615261)
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed, true);
          int num1;
          if (!Function.Call<bool>(Hash._0x580417101DDB492F, (InputArgument) 2, (InputArgument) 201))
            num1 = Function.Call<bool>(Hash._0x580417101DDB492F, (InputArgument) 2, (InputArgument) 237) ? 1 : 0;
          else
            num1 = 1;
          if (num1 != 0)
          {
            this.GUICheckBool = false;
            this.GUIscaleform.CallFunction("SET_INPUT_EVENT", (object) 201f, (object) -1082130432, (object) -1082130432, (object) -1082130432, (object) -1082130432);
            Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "GET_CURRENT_SELECTION");
            this.GUIAPP = Function.Call<int>(Hash._0xC50AA39A577AF886);
          }
          if (!this.GUICheckBool)
          {
            if (Function.Call<bool>(Hash._0x768FF8961BA904D6, (InputArgument) this.GUIAPP))
            {
              this.GUIBIX = Function.Call<int>(Hash._0x2DE7EFA66B906036, (InputArgument) this.GUIAPP);
              this.GUICheckBool = true;
              if (this.GUIBIX < 1000)
                this.WarehouseSelected = this.GUIBIX <= this.SS_WarehousesOwned ? this.GUIBIX : this.GUIBIX - this.SS_WarehousesOwned;
            }
          }
          if (Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate))
          {
            Prop ceoChairProp = this.CEOChairProp;
            int num2 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) ceoChairProp.Position.X, (InputArgument) ceoChairProp.Position.Y, (InputArgument) ceoChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) ceoChairProp.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num2, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num2, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num2));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num2, (InputArgument) "computer_exit", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) ceoChairProp, (InputArgument) num2, (InputArgument) "computer_exit_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            this.Screen = 0.0f;
            this.frame = 0;
            this.GUIOn = false;
            this.GUIscaleform.Unload();
            this.SecuroservCargoOn = false;
          }
          if (!this.IsSittinginCeoSeat)
          {
            this.Screen = 0.0f;
            this.frame = 0;
            this.GUIOn = false;
            this.GUIscaleform.Unload();
            this.SecuroservCargoOn = false;
          }
          if (this.IsSittinginCeoSeat)
            this.modMenuPool.CloseAllMenus();
        }
        catch
        {
          UI.Notify("Catch Error GUI 2");
        }
        if (this.frame == 0)
          this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
        while (!this.GUIscaleform.IsLoaded)
          Script.Wait(0);
        if (this.GUIscaleform.IsLoaded)
        {
          if (this.frame == 0)
          {
            this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
            this.frame = 1;
          }
          if (this.frame == 1)
          {
            try
            {
              if (this.SellType == 1)
              {
                this.GUIscaleform.CallFunction("SHOW_EXPORT_SCREEN");
                this.GUIscaleform.CallFunction("SHOW_BUYERS", (object) 1, (object) 2, (object) 3, (object) 4, (object) 5, (object) 6, (object) true, (object) true, (object) true);
                this.GUIscaleform.CallFunction("UPDATE_COLLECTION", (object) 0, (object) 0, (object) false);
                this.GUIscaleform.CallFunction("UPDATE_VEHICLE", (object) 12, (object) 13, (object) 0, (object) false, (object) true, (object) 0, (object) 0);
                for (int index = 0; index < this.CargoWarehouses.Count; ++index)
                  this.CargoWarehouses[index].Index = index;
                for (int index = 0; index < this.CargoWarehouses.Count; ++index)
                {
                  if (this.SS_WarehousesOwned >= 1 && this.SS_Warehouse1Index == index)
                  {
                    if (this.CargoWarehouses[index].Size == 0)
                      this.SS_Warehouse1CurrentValue = 15000 * this.SS_Warehouse1Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 1)
                      this.SS_Warehouse1CurrentValue = 17500 * this.SS_Warehouse1Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 2)
                      this.SS_Warehouse1CurrentValue = 20000 * this.SS_Warehouse1Stock * this.SellCrateCostMultiplier;
                    this.CargoWarehouses[index].ID = 0;
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) 0, (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) 1, (object) this.CargoWarehouses[index].PicTexture, (object) 1, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) this.SS_Warehouse1Stock, (object) this.SS_Warehouse1CurrentValue, (object) 1, (object) 3, (object) 40, (object) 30, (object) "TEST1 ", (object) "TEST2 ", (object) "TEST3 ", (object) "TEST4");
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 0, (object) this.SourceCrateAmtMultiplier, (object) 0, (object) this.CrateTypeString, (object) (2 * this.SourceCrateAmtMultiplier), (object) (this.Source2Price * this.SourceCrateCostMultiplier), (object) 3, (object) (3 * this.SourceCrateAmtMultiplier), (object) (this.Source3Price * this.SourceCrateCostMultiplier), (object) 3, (object) (this.Source1Price * this.SourceCrateCostMultiplier));
                  }
                  else if (this.SS_WarehousesOwned >= 2 && this.SS_Warehouse2Index == index)
                  {
                    if (this.CargoWarehouses[index].Size == 0)
                      this.SS_Warehouse2CurrentValue = 15000 * this.SS_Warehouse2Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 1)
                      this.SS_Warehouse2CurrentValue = 17500 * this.SS_Warehouse2Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 2)
                      this.SS_Warehouse2CurrentValue = 20000 * this.SS_Warehouse2Stock * this.SellCrateCostMultiplier;
                    this.CargoWarehouses[index].ID = 1;
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) 1, (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) 1, (object) this.CargoWarehouses[index].PicTexture, (object) 1, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) this.SS_Warehouse2Stock, (object) this.SS_Warehouse2CurrentValue, (object) 1, (object) 3, (object) 40, (object) 30, (object) "TEST1 ", (object) "TEST2 ", (object) "TEST3 ", (object) "TEST4");
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 1, (object) this.SourceCrateAmtMultiplier, (object) 0, (object) this.CrateTypeString, (object) (2 * this.SourceCrateAmtMultiplier), (object) (this.Source2Price * this.SourceCrateCostMultiplier), (object) 3, (object) (3 * this.SourceCrateAmtMultiplier), (object) (this.Source3Price * this.SourceCrateCostMultiplier), (object) 3, (object) (this.Source1Price * this.SourceCrateCostMultiplier));
                  }
                  else if (this.SS_WarehousesOwned >= 3 && this.SS_Warehouse3Index == index)
                  {
                    if (this.CargoWarehouses[index].Size == 0)
                      this.SS_Warehouse3CurrentValue = 15000 * this.SS_Warehouse3Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 1)
                      this.SS_Warehouse3CurrentValue = 17500 * this.SS_Warehouse3Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 2)
                      this.SS_Warehouse3CurrentValue = 20000 * this.SS_Warehouse3Stock * this.SellCrateCostMultiplier;
                    this.CargoWarehouses[index].ID = 2;
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) 2, (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) 1, (object) this.CargoWarehouses[index].PicTexture, (object) 1, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) this.SS_Warehouse3Stock, (object) this.SS_Warehouse3CurrentValue, (object) 1, (object) 1, (object) 3, (object) 40, (object) 30, (object) "TEST1 ", (object) "TEST2 ", (object) "TEST3 ", (object) "TEST4");
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 2, (object) this.SourceCrateAmtMultiplier, (object) 0, (object) this.CrateTypeString, (object) (2 * this.SourceCrateAmtMultiplier), (object) (this.Source2Price * this.SourceCrateCostMultiplier), (object) 3, (object) (3 * this.SourceCrateAmtMultiplier), (object) (this.Source3Price * this.SourceCrateCostMultiplier), (object) 3, (object) (this.Source1Price * this.SourceCrateCostMultiplier));
                  }
                  else if (this.SS_WarehousesOwned >= 4 && this.SS_Warehouse4Index == index)
                  {
                    if (this.CargoWarehouses[index].Size == 0)
                      this.SS_Warehouse4CurrentValue = 15000 * this.SS_Warehouse4Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 1)
                      this.SS_Warehouse4CurrentValue = 17500 * this.SS_Warehouse4Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 2)
                      this.SS_Warehouse4CurrentValue = 20000 * this.SS_Warehouse4Stock * this.SellCrateCostMultiplier;
                    this.CargoWarehouses[index].ID = 3;
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) 3, (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) 1, (object) this.CargoWarehouses[index].PicTexture, (object) 1, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) this.SS_Warehouse4Stock, (object) this.SS_Warehouse4CurrentValue, (object) 1, (object) 1, (object) 3, (object) 40, (object) 30, (object) "TEST1 ", (object) "TEST2 ", (object) "TEST3 ", (object) "TEST4");
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 3, (object) this.SourceCrateAmtMultiplier, (object) 0, (object) this.CrateTypeString, (object) (2 * this.SourceCrateAmtMultiplier), (object) (this.Source2Price * this.SourceCrateCostMultiplier), (object) 3, (object) (3 * this.SourceCrateAmtMultiplier), (object) (this.Source3Price * this.SourceCrateCostMultiplier), (object) 3, (object) (this.Source1Price * this.SourceCrateCostMultiplier));
                  }
                  else if (this.SS_WarehousesOwned >= 5 && this.SS_Warehouse5Index == index)
                  {
                    if (this.CargoWarehouses[index].Size == 0)
                      this.SS_Warehouse5CurrentValue = 15000 * this.SS_Warehouse5Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 1)
                      this.SS_Warehouse5CurrentValue = 17500 * this.SS_Warehouse5Stock * this.SellCrateCostMultiplier;
                    if (this.CargoWarehouses[index].Size == 2)
                      this.SS_Warehouse5CurrentValue = 20000 * this.SS_Warehouse5Stock * this.SellCrateCostMultiplier;
                    this.CargoWarehouses[index].ID = 4;
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) 4, (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) 1, (object) this.CargoWarehouses[index].PicTexture, (object) 1, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) this.SS_Warehouse5Stock, (object) this.SS_Warehouse5CurrentValue, (object) 1, (object) 1, (object) 3, (object) 40, (object) 30, (object) "TEST1 ", (object) "TEST2 ", (object) "TEST3 ", (object) "TEST4");
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 4, (object) this.SourceCrateAmtMultiplier, (object) 0, (object) this.CrateTypeString, (object) (2 * this.SourceCrateAmtMultiplier), (object) (this.Source2Price * this.SourceCrateCostMultiplier), (object) 3, (object) (3 * this.SourceCrateAmtMultiplier), (object) (this.Source3Price * this.SourceCrateCostMultiplier), (object) 3, (object) (this.Source1Price * this.SourceCrateCostMultiplier));
                  }
                }
                for (int index = 0; index < this.CargoWarehouses.Count; ++index)
                {
                  if (this.SS_Warehouse1Index != index && this.SS_Warehouse2Index != index && (this.SS_Warehouse3Index != index && this.SS_Warehouse4Index != index) && this.SS_Warehouse5Index != index)
                  {
                    this.CargoWarehouses[index].ID = this.SS_WarehousesOwned + index;
                    this.GUIscaleform.CallFunction("SET_WAREHOUSE_DATA", (object) -1, (object) 1, (object) 2, (object) 3, (object) 4, (object) 6, (object) 7);
                    this.GUIscaleform.CallFunction("ADD_WAREHOUSE", (object) (this.SS_WarehousesOwned + index), (object) this.CargoWarehouses[index].Location.X, (object) this.CargoWarehouses[index].Location.Y, (object) this.CargoWarehouses[index].DiscountCost, (object) this.CargoWarehouses[index].WarehouseName, (object) this.CargoWarehouses[index].WarehouseLocation, (object) this.CargoWarehouses[index].WarehouseDescription, (object) this.CargoWarehouses[index].PicTexture, (object) this.CargoWarehouses[index].Owned, (object) this.CargoWarehouses[index].Size, (object) this.CargoWarehouses[index].Maxcrates, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0, (object) this.CargoWarehouses[index].Cost, (object) 0, (object) 0, (object) 0, (object) 0);
                  }
                }
                this.GUIscaleform.CallFunction("SET_PLAYER_DATA", (object) this.SS_Name, (object) 0, (object) this.SS_TotalEarnings, (object) this.SS_CollectionsCompleted, (object) this.SS_SuccessRate, (object) this.SS_TotalSalesMade, (object) this.SS_SaleSuccessRate, (object) this.SS_Name, (object) this.SS_VehiclesStolenSuccess, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0, (object) this.MarkerEnter.X, (object) this.MarkerEnter.Y);
                this.GUIscaleform.CallFunction("IS_WAREHOUSE_PANEL_SHOWING");
                this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                this.frame = 2;
              }
            }
            catch
            {
              UI.Notify("Catch Error GUI 3");
            }
            try
            {
              if (this.SellType == 2)
              {
                this.GUIscaleform.CallFunction("SHOW_EXPORT_SCREEN");
                this.GUIscaleform.CallFunction("SHOW_BUYERS", (object) 1, (object) 2, (object) 3, (object) 4, (object) 5, (object) 6, (object) true, (object) true, (object) true);
                this.GUIscaleform.CallFunction("UPDATE_COLLECTION", (object) 1, (object) 2, (object) false);
                this.GUIscaleform.CallFunction("UPDATE_VEHICLE", (object) 4, (object) 13, (object) 5, (object) false, (object) true, (object) 1, (object) 0);
                this.GUIscaleform.CallFunction("SET_PLAYER_DATA", (object) this.SS_Name, (object) 0, (object) this.SS_TotalEarnings, (object) this.SS_CollectionsCompleted, (object) this.SS_SuccessRate, (object) this.SS_VehicleSalesMade, (object) this.SS_SaleSuccessRate, (object) this.SS_Name, (object) this.SS_VehiclesStolenTotal, (object) this.SS_StealSuccessTotal, (object) this.SS_VehiclesExportedSuccess, (object) this.SS_VehiclesExportedTotal, (object) this.SS_VehicleWarehouseTotalEarnings, (object) 4, (object) this.MarkerEnter.X, (object) this.MarkerEnter.Y, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0, (object) 0);
                Vector2 vector2 = new Vector2(-376f, -1868f);
                int vehicleWarehouseBought = this.VehicleWarehouseBought;
                for (int index = 0; index < this.VehicleWarehouses.Count; ++index)
                {
                  if (this.VehicleWarehouseBought == 1 && this.VehicleWarehouseIndex == index)
                    this.GUIscaleform.CallFunction("ADD_VEHICLE_WAREHOUSE", (object) index, (object) this.VehicleWarehouses[index].VehicleWarehouseCoords.X, (object) this.VehicleWarehouses[index].VehicleWarehouseCoords.Y, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].VehicleWarehouseName, (object) this.VehicleWarehouses[index].VehicleWarehouseLocationName, (object) this.VehicleWarehouses[index].VehicleWarehouseDescription, (object) this.VehicleWarehouses[index].VehicleWarehousePicTex, (object) vehicleWarehouseBought, (object) 40, (object) this.SS_CurrentVehiclesAmt, (object) this.SS_VehiclesTotalCurrentValue, (object) this.SS_SourceVehicleWait, (object) 1, (object) 0, (object) 0, (object) 0, (object) 0);
                  else
                    this.GUIscaleform.CallFunction("ADD_VEHICLE_WAREHOUSE", (object) index, (object) this.VehicleWarehouses[index].VehicleWarehouseCoords.X, (object) this.VehicleWarehouses[index].VehicleWarehouseCoords.Y, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].Price, (object) this.VehicleWarehouses[index].DiscountPrice, (object) this.VehicleWarehouses[index].VehicleWarehouseName, (object) this.VehicleWarehouses[index].VehicleWarehouseLocationName, (object) this.VehicleWarehouses[index].VehicleWarehouseDescription, (object) this.VehicleWarehouses[index].VehicleWarehousePicTex, (object) 0, (object) 40, (object) 0, (object) 0, (object) false, (object) 0, (object) 1, (object) 0, (object) 0.0f, (object) 1);
                }
                this.GUIscaleform.CallFunction("SET_WAREHOUSE_DATA", (object) 6, (object) 4, (object) 8, (object) 10, (object) 16, (object) 32, (object) 2, (object) 64, (object) true, (object) true, (object) true);
                this.GUIscaleform.CallFunction("ADD_WAREHOUSE_SHIPMENTS", (object) 1, (object) "DYN_MPWH_1", (object) 2, (object) "DYN_MPWH_5", (object) 3, (object) "DYN_MPWH_6", (object) 1, (object) true, (object) -1, (object) -1, (object) -1);
                this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                this.frame = 2;
              }
            }
            catch
            {
              UI.Notify("Catch Error GUI 3");
            }
            this.frame = 2;
          }
          try
          {
            if (this.frame == 2)
            {
              Function.Call(Hash._0x351220255D64C155, (InputArgument) 2, (InputArgument) 197, (InputArgument) 1);
              Function.Call(Hash._0x351220255D64C155, (InputArgument) 2, (InputArgument) 198, (InputArgument) 1);
              int controlValue1 = Game.GetControlValue(2, GTA.Control.FrontendRightAxisX);
              int controlValue2 = Game.GetControlValue(2, GTA.Control.FrontendRightAxisY);
              bool flag = Game.IsControlPressed(2, GTA.Control.CursorScrollDown) || Game.IsDisabledControlPressed(2, GTA.Control.CursorScrollDown);
              if (!flag)
                flag = Game.IsControlPressed(2, GTA.Control.CursorScrollUp) || Game.IsDisabledControlPressed(2, GTA.Control.CursorScrollUp);
              this.GUIscaleform.CallFunction("SET_ANALOG_STICK_INPUT", (object) false, (object) controlValue1, (object) controlValue2, (object) flag);
              if (this.SellType == 2)
              {
                if (this.GUIBIX == 4001 && this.VehicleWarehouseIndex >= 0)
                {
                  this.GUIBIX = -1;
                  this.OverlayIndex = 10;
                  this.ShowingOverlay = true;
                  this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Souce Vehicle", (object) "Are you sure you'd like to source a vehicle to steal?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                }
                if (this.GUIBIX == 5006 && this.VehicleWarehouseIndex >= 0)
                {
                  this.GUIBIX = -1;
                  this.OverlayIndex = 10;
                  this.ShowingOverlay = true;
                  this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Souce Vehicle", (object) "Are you sure you'd like to source a vehicle to steal?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                }
              }
              if (Game.IsControlJustPressed(2, this.BackKey))
              {
                this.SS_Warehouse1Stock = this.CargoWarehouseScript.GetCrateCountByID(1);
                this.SS_Warehouse2Stock = this.CargoWarehouseScript.GetCrateCountByID(2);
                this.SS_Warehouse3Stock = this.CargoWarehouseScript.GetCrateCountByID(3);
                this.SS_Warehouse4Stock = this.CargoWarehouseScript.GetCrateCountByID(4);
                this.SS_Warehouse5Stock = this.CargoWarehouseScript.GetCrateCountByID(5);
                this.Config.SetValue<int>("CargoWarehouses", "Warehouse1Stock", this.SS_Warehouse1Stock);
                this.Config.SetValue<int>("CargoWarehouses", "Warehouse2Stock", this.SS_Warehouse2Stock);
                this.Config.SetValue<int>("CargoWarehouses", "Warehouse3Stock", this.SS_Warehouse3Stock);
                this.Config.SetValue<int>("CargoWarehouses", "Warehouse4Stock", this.SS_Warehouse4Stock);
                this.Config.SetValue<int>("CargoWarehouses", "Warehouse5Stock", this.SS_Warehouse5Stock);
                this.Config.Save();
                this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                this.Screen = 3f;
                this.frame = 0;
                System.Random random = new System.Random();
                this.SecuroservCargoOn = true;
                this.GUIOn = true;
              }
              if (!this.ShowingOverlay)
              {
                if ((double) this.Screen == 1.0)
                {
                  float y = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  float x = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (Game.IsControlJustPressed(2, this.Key))
                  {
                    if ((double) new Vector2(x, y).DistanceTo(new Vector2(0.503f, 0.332f)) < 0.100000001490116 || (double) new Vector2(this.GUIPosX, this.GUIPosY).DistanceTo(new Vector2(0.503f, 0.332f)) < 0.100000001490116)
                    {
                      this.Screen = 2f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    if ((double) new Vector2(x, y).DistanceTo(new Vector2(0.928f, 0.926f)) < 0.100000001490116 || (double) new Vector2(this.GUIPosX, this.GUIPosY).DistanceTo(new Vector2(0.928f, 0.926f)) < 0.100000001490116)
                    {
                      this.Screen = 2f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                  }
                }
                else if ((double) this.Screen == 2.0)
                {
                  Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (this.WarehouseSelected != this.SS_Warehouse1Index && this.WarehouseSelected != this.SS_Warehouse2Index && (this.WarehouseSelected != this.SS_Warehouse3Index && this.WarehouseSelected != this.SS_Warehouse4Index) && (this.WarehouseSelected != this.SS_Warehouse1Index && this.GUIBIX == 3007))
                  {
                    if (this.SS_WarehousesOwned < 5)
                    {
                      this.GUIBIX = 0;
                      this.OverlayIndex = 4;
                      this.ShowingOverlay = true;
                      this.CurrentWarehousePrice = this.CargoWarehouses[this.WarehouseSelected].Cost;
                      this.CurrentWarehouseIndex = this.WarehouseSelected;
                      this.OverlayIndex = 4;
                      this.ShowingOverlay = true;
                      this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Purchase Warehouse", (object) ("Are you sure you'd like to purchase " + this.CargoWarehouses[this.WarehouseSelected].WarehouseName + " Warehouse, for $" + this.CargoWarehouses[this.WarehouseSelected].Cost.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                    }
                    else
                    {
                      this.GUIBIX = 0;
                      this.OverlayIndex = 4;
                      this.ShowingOverlay = true;
                      this.CurrentWarehousePrice = this.CargoWarehouses[this.WarehouseSelected].Cost;
                      this.CurrentWarehouseIndex = this.WarehouseSelected;
                      this.OverlayIndex = 4;
                      this.ShowingOverlay = true;
                      this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Player Owns 5 Warehouses", (object) "You already have 5 Warehouses, at any one time the player can only have this many Cargo Warehouses", (object) "OK", (object) "OK", (object) false, (object) false);
                    }
                  }
                  for (int index = 0; index < this.CargoWarehouses.Count; ++index)
                  {
                    if (this.GUIBIX == 3008)
                    {
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 1)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 1;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crate", (object) ("Are you sure you'd like to source 1 crate and store it in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source1Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 2)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 1;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crate", (object) ("Are you sure you'd like to source 1 crate and store it in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source1Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 3)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 1;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crate", (object) ("Are you sure you'd like to source 1 crate and store it in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source1Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 4)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 1;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crate", (object) ("Are you sure you'd like to source 1 crate and store it in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source1Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 5)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 1;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crate", (object) ("Are you sure you'd like to source 1 crate and store it in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source1Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                    }
                    if (this.GUIBIX == 3009)
                    {
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 1)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 2;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 2 Crates", (object) ("Are you sure you'd like to source 2 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source2Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 2)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 2;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 2 Crates", (object) ("Are you sure you'd like to source 2 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source2Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 3)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 2;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crates", (object) ("Are you sure you'd like to source 2 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source2Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 4)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 2;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crates", (object) ("Are you sure you'd like to source 2 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source2Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 5)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 2;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 1 Crates", (object) ("Are you sure you'd like to source 2 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source2Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                    }
                    if (this.GUIBIX == 3010)
                    {
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 1)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 3;
                        this.OverlayIndex = 6;
                        if (!this.SourcingMissionOn)
                        {
                          this.ShowingOverlay = true;
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 3 Crates", (object) ("Are you sure you'd like to source 3 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source3Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        }
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 2)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 3;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 3 Crates", (object) ("Are you sure you'd like to source 3 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source3Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 3)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 3;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 3 Crates", (object) ("Are you sure you'd like to source 3 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source3Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 4)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 3;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 3 Crates", (object) ("Are you sure you'd like to source 3 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source3Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                      if (this.WarehouseSelected == this.CargoWarehouses[index].ID && this.SS_WarehousesOwned >= 5)
                      {
                        this.CurrentWarehouse = this.CargoWarehouses[index].ID + 1;
                        this.CratesToSource = 3;
                        this.OverlayIndex = 6;
                        this.ShowingOverlay = true;
                        if (!this.SourcingMissionOn)
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Source 3 Crates", (object) ("Are you sure you'd like to source 3 crates and store them in " + this.CargoWarehouses[this.CargoWarehouses[index].Index].WarehouseName + " Warehouse, for $" + this.Source3Price.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                        else
                          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Cancel Sourcing Crates", (object) "Are you sure you'd like to cancel sourcing crates ?", (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                      }
                    }
                  }
                }
                else if ((double) this.Screen == 3.0)
                {
                  float y = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  float x = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (Game.IsControlJustPressed(2, this.Key))
                  {
                    if ((double) x > 0.129999995231628 && (double) x < 0.303999990224838 && ((double) y > 0.0520000010728836 && (double) y < 0.0850000008940697) || (double) this.GUIPosX > 0.129999995231628 && (double) this.GUIPosX < 0.303999990224838 && ((double) this.GUIPosY > 0.0520000010728836 && (double) this.GUIPosY < 0.0850000008940697))
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.Screen = 5f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    if ((double) x > 0.373600006103516 && (double) x < 0.568400025367737 && ((double) y > 0.697499990463257 && (double) y < 0.755999982357025) || (double) this.GUIPosX > 0.373600006103516 && (double) this.GUIPosX < 0.568400025367737 && ((double) this.GUIPosY > 0.697499990463257 && (double) this.GUIPosY < 0.755999982357025))
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.Screen = 5f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    if ((double) new Vector2(x, y).DistanceTo(new Vector2(0.28f, 0.492f)) < 0.100000001490116 || (double) new Vector2(this.GUIPosX, this.GUIPosY).DistanceTo(new Vector2(0.28f, 0.492f)) < 0.100000001490116)
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.SellType = 1;
                      this.Screen = 0.0f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    else if ((double) new Vector2(x, y).DistanceTo(new Vector2(0.49f, 0.49f)) < 0.100000001490116 || (double) new Vector2(this.GUIPosX, this.GUIPosY).DistanceTo(new Vector2(0.49f, 0.49f)) < 0.100000001490116)
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.SellType = 2;
                      this.Screen = 0.0f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                  }
                }
                if ((double) this.Screen == 0.0)
                {
                  float y = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  float x = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (Game.IsControlJustPressed(2, this.Key) && ((double) new Vector2(x, y).DistanceTo(new Vector2(0.583f, 0.635f)) < 0.100000001490116 || (double) new Vector2(this.GUIPosX, this.GUIPosY).DistanceTo(new Vector2(0.583f, 0.635f)) < 0.100000001490116))
                  {
                    if (this.SellType == 2)
                    {
                      this.Screen = 4f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    else if (this.SellType == 1)
                    {
                      this.Screen = 1f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                  }
                }
                else if ((double) this.Screen == 4.0)
                {
                  float num1 = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  float num2 = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (Game.IsControlJustPressed(2, this.Key))
                  {
                    if ((double) num2 > 0.129999995231628 && (double) num2 < 0.303999990224838 && ((double) num1 > 0.0520000010728836 && (double) num1 < 0.0850000008940697) || (double) this.GUIPosX > 0.129999995231628 && (double) this.GUIPosX < 0.303999990224838 && ((double) this.GUIPosY > 0.0520000010728836 && (double) this.GUIPosY < 0.0850000008940697))
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.Screen = 5f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    if ((double) num2 > 0.373600006103516 && (double) num2 < 0.568400025367737 && ((double) num1 > 0.697499990463257 && (double) num1 < 0.755999982357025) || (double) this.GUIPosX > 0.373600006103516 && (double) this.GUIPosX < 0.568400025367737 && ((double) this.GUIPosY > 0.697499990463257 && (double) this.GUIPosY < 0.755999982357025))
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.Screen = 5f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                  }
                }
                else if ((double) this.Screen == 5.0)
                {
                  float num1 = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                  float num2 = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                  if (Game.IsControlJustPressed(2, this.Key))
                  {
                    if (((double) num2 > 0.0121999997645617 && (double) num2 < 0.246999993920326 && ((double) num1 > 0.800000011920929 && (double) num1 < 0.861000001430511) || (double) this.GUIPosX > 0.0121999997645617 && (double) this.GUIPosX < 0.246999993920326 && ((double) this.GUIPosY > 0.800000011920929 && (double) this.GUIPosY < 0.861000001430511)) && this.GUIBIX != this.VehicleWarehouseIndex)
                    {
                      this.VehicleWarehouseSelected = this.GUIBIX;
                      this.OverlayIndex = 5;
                      this.ShowingOverlay = true;
                      this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Purchase Vehicle Warehouse", (object) ("Are you sure you'd like to purchase " + this.VehicleWarehouses[this.GUIBIX].VehicleWarehouseName + ", for $" + this.VehicleWarehouses[this.GUIBIX].DiscountPrice.ToString("N")), (object) "Confirm", (object) "Cancel", (object) false, (object) false);
                    }
                    if ((double) num2 > 1.0 / 1000.0 && (double) num2 < 0.126000002026558 && ((double) num1 > 0.0531000010669231 && (double) num1 < 0.800000011920929) || (double) this.GUIPosX > 1.0 / 1000.0 && (double) this.GUIPosX < 0.126000002026558 && ((double) this.GUIPosY > 0.0531000010669231 && (double) this.GUIPosY < 0.800000011920929))
                    {
                      this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.Screen = 4f;
                      this.GUIscaleform.CallFunction("showScreen", (object) this.Screen);
                      this.frame = 0;
                    }
                    if (((double) num2 <= 0.0148000000044703 || (double) num2 >= 0.248999997973442 || ((double) num1 <= 0.569400012493134 || (double) num1 >= 0.628799974918365)) && ((double) this.GUIPosX > 0.0148000000044703 && (double) this.GUIPosX < 0.248999997973442 && (double) this.GUIPosY > 0.569400012493134))
                    {
                      double guiPosY = (double) this.GUIPosY;
                    }
                  }
                }
              }
              if (this.ShowingOverlay)
              {
                float y = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 240);
                float x = Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 2, (InputArgument) 239);
                Vector2 vector2;
                if (this.OverlayIndex == 1 && Game.IsControlJustPressed(2, this.Key))
                {
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.376f, 0.562f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.376f, 0.562f)) >= 0.100000001490116)
                      goto label_1179;
                  }
                  this.GUIBIX = -1;
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
label_1179:
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.622f, 0.555f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.622f, 0.555f)) >= 0.100000001490116)
                      goto label_1182;
                  }
                  this.GUIBIX = -1;
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
                }
label_1182:
                if (this.OverlayIndex == 4 && Game.IsControlJustPressed(2, this.Key))
                {
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                      goto label_1186;
                  }
                  this.GUIBIX = -1;
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
label_1186:
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                      goto label_1213;
                  }
                  if (this.SS_WarehousesOwned == 0)
                  {
                    if (Game.Player.Money > this.CurrentWarehousePrice)
                    {
                      this.ShowingOverlay = false;
                      Game.Player.Money -= this.CurrentWarehousePrice;
                      this.SS_WarehousesOwned = 1;
                      this.Config.SetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
                      this.SS_Warehouse1Index = this.CurrentWarehouseIndex;
                      this.Config.SetValue<int>("CargoWarehouses-1", "Warehouse1Index", this.SS_Warehouse1Index);
                      this.SS_Warehouse1Stock = 0;
                      this.Config.SetValue<int>("CargoWarehouses-1", "Warehouse1Stock", this.SS_Warehouse1Stock);
                      this.Config.Save();
                      if (this.GUIscaleform != null)
                        this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.frame = 1;
                      this.Screen = 2f;
                      this.GUIBIX = -1;
                      this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                    }
                  }
                  else if (this.SS_WarehousesOwned == 1)
                  {
                    if (Game.Player.Money > this.CurrentWarehousePrice)
                    {
                      this.ShowingOverlay = false;
                      Game.Player.Money -= this.CurrentWarehousePrice;
                      this.SS_WarehousesOwned = 2;
                      this.Config.SetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
                      this.SS_Warehouse2Index = this.CurrentWarehouseIndex;
                      this.Config.SetValue<int>("CargoWarehouses-2", "Warehouse2Index", this.SS_Warehouse2Index);
                      this.SS_Warehouse2Stock = 0;
                      this.Config.SetValue<int>("CargoWarehouses-2", "Warehouse2Stock", this.SS_Warehouse2Stock);
                      this.Config.Save();
                      if (this.GUIscaleform != null)
                        this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.frame = 1;
                      this.Screen = 2f;
                      this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                    }
                  }
                  else if (this.SS_WarehousesOwned == 2)
                  {
                    if (Game.Player.Money > this.CurrentWarehousePrice)
                    {
                      this.ShowingOverlay = false;
                      Game.Player.Money -= this.CurrentWarehousePrice;
                      this.SS_WarehousesOwned = 3;
                      this.Config.SetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
                      this.SS_Warehouse3Index = this.CurrentWarehouseIndex;
                      this.Config.SetValue<int>("CargoWarehouses-3", "Warehouse3Index", this.SS_Warehouse3Index);
                      this.SS_Warehouse3Stock = 0;
                      this.Config.SetValue<int>("CargoWarehouses-3", "Warehouse3Stock", this.SS_Warehouse3Stock);
                      this.Config.Save();
                      if (this.GUIscaleform != null)
                        this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.frame = 1;
                      this.Screen = 2f;
                      this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                    }
                  }
                  else if (this.SS_WarehousesOwned == 3)
                  {
                    if (Game.Player.Money > this.CurrentWarehousePrice)
                    {
                      this.ShowingOverlay = false;
                      Game.Player.Money -= this.CurrentWarehousePrice;
                      this.SS_WarehousesOwned = 4;
                      this.Config.SetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
                      this.SS_Warehouse4Index = this.CurrentWarehouseIndex;
                      this.Config.SetValue<int>("CargoWarehouses-4", "Warehouse4Index", this.SS_Warehouse4Index);
                      this.SS_Warehouse4Stock = 0;
                      this.Config.SetValue<int>("CargoWarehouses-4", "Warehouse4Stock", this.SS_Warehouse4Stock);
                      this.Config.Save();
                      if (this.GUIscaleform != null)
                        this.GUIscaleform.Unload();
                      this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                      this.frame = 1;
                      this.Screen = 2f;
                      this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                      this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                    }
                  }
                  else if (this.SS_WarehousesOwned == 4 && Game.Player.Money > this.CurrentWarehousePrice)
                  {
                    this.ShowingOverlay = false;
                    Game.Player.Money -= this.CurrentWarehousePrice;
                    this.SS_WarehousesOwned = 5;
                    this.Config.SetValue<int>("CargoWarehouses", "WarehousesOwned", this.SS_WarehousesOwned);
                    this.SS_Warehouse5Index = this.CurrentWarehouseIndex;
                    this.Config.SetValue<int>("CargoWarehouses-5", "Warehouse5Index", this.SS_Warehouse5Index);
                    this.SS_Warehouse5Stock = 0;
                    this.Config.SetValue<int>("CargoWarehouses-5", "Warehouse5Stock", this.SS_Warehouse5Stock);
                    this.Config.Save();
                    if (this.GUIscaleform != null)
                      this.GUIscaleform.Unload();
                    this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                    this.frame = 1;
                    this.Screen = 2f;
                    this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                    this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                  }
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
                }
label_1213:
                if (this.OverlayIndex == 5 && Game.IsControlJustPressed(2, this.Key))
                {
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                      goto label_1217;
                  }
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
label_1217:
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                      goto label_1224;
                  }
                  if (Game.Player.Money >= this.VehicleWarehouses[this.VehicleWarehouseSelected].DiscountPrice)
                  {
                    Game.Player.Money -= this.VehicleWarehouses[this.VehicleWarehouseSelected].DiscountPrice;
                    this.VehicleWarehouseIndex = this.VehicleWarehouseSelected;
                    this.VehicleWarehouseBought = 1;
                    this.Config.SetValue<int>("Setup", "VehicleWarehouseBought", this.VehicleWarehouseBought);
                    this.Config.SetValue<int>("VehicleWarehouses", "VehicleWarehouseIndex", this.VehicleWarehouseIndex);
                    this.CargoWarehouseScript.VehicleWarehouseIndex = this.VehicleWarehouseIndex;
                    this.Config.Save();
                    if (this.GUIscaleform != null)
                      this.GUIscaleform.Unload();
                    this.GUIscaleform = new Scaleform(Function.Call<int>(Hash._0xBD06C611BB9048C2, (InputArgument) "securoserv"));
                    this.frame = 1;
                    this.Screen = 5f;
                    this.GUIscaleform.CallFunction("SHOW_SCREEN", (object) this.Screen);
                    this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
                  }
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
                }
label_1224:
                if (this.OverlayIndex == 6)
                {
                  if (this.GUIBIX == 3013)
                  {
                    this.GUIBIX = 0;
                    this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                    this.ShowingOverlay = false;
                  }
                  if (this.GUIBIX == 3012)
                  {
                    this.GUIBIX = 0;
                    if (!this.SourcingMissionOn)
                    {
                      this.StartSourcingMission();
                      UI.Notify("Mission " + this.SourcingMission.ToString() + ", Type " + this.SourcingMissionType.ToString());
                    }
                    else if (this.SourcingMissionOn)
                    {
                      this.CreatedDeliverPoint = false;
                      this.DeliveredCrate1 = false;
                      this.DeliveredCrate2 = false;
                      this.DeliveredCrate3 = false;
                      this.NearCrate = false;
                      this.GotCrate1 = false;
                      this.GotCrate2 = false;
                      this.GotCrate3 = false;
                      this.CratesCollected = 0;
                      this.SpawnedSignalFlare = false;
                      this.SpawnedCrate = false;
                      this.SourcingMissionOn = false;
                      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
                      {
                        if ((Entity) asellMissionVehicle != (Entity) null)
                          asellMissionVehicle.Delete();
                      }
                      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
                      {
                        if ((Entity) asellMissionProp != (Entity) null)
                          asellMissionProp.Delete();
                      }
                      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
                      {
                        if (asellMissionBlip != (Blip) null)
                          asellMissionBlip.Remove();
                      }
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        if ((Entity) sourceAsellMissionPed != (Entity) null)
                          sourceAsellMissionPed.Delete();
                      }
                      if (this.SourceASellMissionBlips.Count > 0)
                        this.SourceASellMissionBlips.Clear();
                      if (this.SourceASellMissionPeds.Count > 0)
                        this.SourceASellMissionPeds.Clear();
                      if (this.SourceASellMissionVehicles.Count > 0)
                        this.SourceASellMissionVehicles.Clear();
                      if (this.SourceASellMissionProps.Count > 0)
                        this.SourceASellMissionProps.Clear();
                      if (this.DeliverPointBlip != (Blip) null)
                        this.DeliverPointBlip.Remove();
                    }
                    this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                    this.ShowingOverlay = false;
                  }
                }
                if (this.OverlayIndex == 10 && Game.IsControlJustPressed(2, this.Key))
                {
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.3034f, 0.5701f)) >= 0.100000001490116)
                      goto label_1270;
                  }
                  this.GUIBIX = -1;
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
label_1270:
                  vector2 = new Vector2(x, y);
                  if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                  {
                    vector2 = new Vector2(this.GUIPosX, this.GUIPosY);
                    if ((double) vector2.DistanceTo(new Vector2(0.6907f, 0.5665f)) >= 0.100000001490116)
                      goto label_1476;
                  }
                  this.GUIBIX = -1;
                  this.GUIscaleform.CallFunction("HIDE_OVERLAY");
                  this.ShowingOverlay = false;
                  List<object> objectList1 = new List<object>();
                  List<object> objectList2 = new List<object>();
                  List<object> objectList3 = new List<object>();
                  List<object> objectList4 = new List<object>();
                  List<object> objectList5 = new List<object>();
                  VehicleHash[] values = (VehicleHash[]) Enum.GetValues(typeof (VehicleHash));
                  for (int index = 0; index < values.Length; ++index)
                  {
                    int num = (int) values[index];
                    if (Function.Call<int>(Hash._0xDEDF1C8BD47C2200, (InputArgument) num) == 6)
                      objectList2.Add((object) values[index]);
                    if (Function.Call<int>(Hash._0xDEDF1C8BD47C2200, (InputArgument) num) == 7)
                      objectList1.Add((object) values[index]);
                    if (Function.Call<int>(Hash._0xDEDF1C8BD47C2200, (InputArgument) num) == 5)
                      objectList3.Add((object) values[index]);
                    if (Function.Call<int>(Hash._0xDEDF1C8BD47C2200, (InputArgument) num) == 2)
                      objectList4.Add((object) values[index]);
                    if (Function.Call<int>(Hash._0xDEDF1C8BD47C2200, (InputArgument) num) == 4)
                      objectList5.Add((object) values[index]);
                  }
                  foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
                  {
                    if ((Entity) asellMissionVehicle != (Entity) null)
                      asellMissionVehicle.Delete();
                  }
                  foreach (Prop asellMissionProp in this.SourceASellMissionProps)
                  {
                    if ((Entity) asellMissionProp != (Entity) null)
                      asellMissionProp.Delete();
                  }
                  foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
                  {
                    if (asellMissionBlip != (Blip) null)
                      asellMissionBlip.Remove();
                  }
                  foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                  {
                    if ((Entity) sourceAsellMissionPed != (Entity) null)
                      sourceAsellMissionPed.Delete();
                  }
                  if (this.SourceASellMissionBlips.Count > 0)
                    this.SourceASellMissionBlips.Clear();
                  if (this.SourceASellMissionPeds.Count > 0)
                    this.SourceASellMissionPeds.Clear();
                  if (this.SourceASellMissionVehicles.Count > 0)
                    this.SourceASellMissionVehicles.Clear();
                  if (this.SourceASellMissionProps.Count > 0)
                    this.SourceASellMissionProps.Clear();
                  if (this.DeliverPointBlip != (Blip) null)
                    this.DeliverPointBlip.Remove();
                  System.Random random = new System.Random();
                  ExecutiveTower.NamedLocation namedLocation = new ExecutiveTower.NamedLocation();
                  int num1 = random.Next(0, 100);
                  int num2 = random.Next(0, 200);
                  if (num1 < 25)
                  {
                    ExecutiveTower.NamedLocation hyperCarLocation = this.HyperCarLocations[random.Next(0, this.HyperCarLocations.Count)];
                    if (num2 < 50)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__1 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__1.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__1, objectList1[random.Next(0, objectList1.Count)])), hyperCarLocation.Position, hyperCarLocation.Heading);
                    }
                    if (num2 >= 50 && num2 < 100)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__2 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__2.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__2, objectList2[random.Next(0, objectList2.Count)])), hyperCarLocation.Position, hyperCarLocation.Heading);
                    }
                    if (num2 >= 100 && num2 < 133)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__3 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__3.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__3, objectList3[random.Next(0, objectList3.Count)])), hyperCarLocation.Position, hyperCarLocation.Heading);
                    }
                    if (num2 >= 133 && num2 < 166)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__4 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__4.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__4, objectList5[random.Next(0, objectList5.Count)])), hyperCarLocation.Position, hyperCarLocation.Heading);
                    }
                    if (num2 >= 166 && num2 <= 200)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__5 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__5.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__5, objectList4[random.Next(0, objectList4.Count)])), hyperCarLocation.Position, hyperCarLocation.Heading);
                    }
                    this.SourceASellMissionVehicles.Add(this.SupplyMissionMainVehicle);
                  }
                  if (num1 >= 25 && num1 < 50)
                  {
                    ExecutiveTower.NamedLocation sportCarLocation = this.SportCarLocations[random.Next(0, this.SportCarLocations.Count)];
                    if (num2 < 50)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__6 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__6.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__6, objectList1[random.Next(0, objectList1.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                    }
                    if (num2 >= 50 && num2 < 100)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__7 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__7.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__7, objectList2[random.Next(0, objectList2.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                    }
                    if (num2 >= 100 && num2 < 133)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__8 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__8.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__8, objectList3[random.Next(0, objectList3.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                    }
                    if (num2 >= 133 && num2 < 166)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__9 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__9.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__9, objectList5[random.Next(0, objectList5.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                    }
                    if (num2 >= 166 && num2 <= 200)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__10 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__10.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__10, objectList4[random.Next(0, objectList4.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                    }
                    this.SourceASellMissionVehicles.Add(this.SupplyMissionMainVehicle);
                  }
                  if (num1 >= 50 && num1 < 75)
                  {
                    ExecutiveTower.NamedLocation pulloverLocation = this.PulloverLocations[random.Next(0, this.PulloverLocations.Count)];
                    if (num2 < 50)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__11 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__11.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__11, objectList1[random.Next(0, objectList1.Count)]);
                      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Police2), pulloverLocation.Position, pulloverLocation.Heading);
                      this.SourceASellMissionVehicles.Add(vehicle);
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num3;
                      }
                      this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                      this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                    }
                    if (num2 >= 50 && num2 < 100)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__12 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__12.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__12, objectList2[random.Next(0, objectList2.Count)]);
                      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Police2), pulloverLocation.Position, pulloverLocation.Heading);
                      this.SourceASellMissionVehicles.Add(vehicle);
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num3;
                      }
                      this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                      this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                    }
                    if (num2 >= 100 && num2 < 133)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__13 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__13.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__13, objectList3[random.Next(0, objectList3.Count)]);
                      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Police2), pulloverLocation.Position, pulloverLocation.Heading);
                      this.SourceASellMissionVehicles.Add(vehicle);
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num3;
                      }
                      this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                      this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                    }
                    if (num2 >= 133 && num2 < 166)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__14 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__14.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__14, objectList5[random.Next(0, objectList5.Count)]);
                      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Police2), pulloverLocation.Position, pulloverLocation.Heading);
                      this.SourceASellMissionVehicles.Add(vehicle);
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num3;
                      }
                      this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                      this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                    }
                    if (num2 >= 166 && num2 <= 200)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__15 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__15.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__15, objectList4[random.Next(0, objectList4.Count)]);
                      Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.Police2), pulloverLocation.Position, pulloverLocation.Heading);
                      this.SourceASellMissionVehicles.Add(vehicle);
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num3 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num3);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num3;
                      }
                      this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                      this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                    }
                    this.SourceASellMissionVehicles.Add(this.SupplyMissionMainVehicle);
                  }
                  if (num1 >= 75 && num1 <= 100)
                  {
                    int num3 = random.Next(0, 150);
                    ExecutiveTower.NamedLocation sportCarLocation = this.SportCarLocations[random.Next(0, this.SportCarLocations.Count)];
                    if (num3 < 50)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__16 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__16.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__16, objectList1[random.Next(0, objectList1.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 2f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num4;
                      }
                    }
                    if (num3 >= 50 && num2 < 100)
                    {
                      // ISSUE: reference to a compiler-generated field
                      if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__17 == null)
                      {
                        // ISSUE: reference to a compiler-generated field
                        ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                      }
                      // ISSUE: reference to a compiler-generated field
                      // ISSUE: reference to a compiler-generated field
                      this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__17.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__17, objectList2[random.Next(0, objectList2.Count)])), sportCarLocation.Position, sportCarLocation.Heading);
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SFY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                      this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Cop01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 2f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                      {
                        sourceAsellMissionPed.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                        int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                        Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                        Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                        sourceAsellMissionPed.RelationshipGroup = num4;
                      }
                    }
                    if (num3 >= 100)
                    {
                      ExecutiveTower.NamedLocation pulloverLocation = this.PulloverLocations[random.Next(0, this.PulloverLocations.Count)];
                      if (num2 < 50)
                      {
                        // ISSUE: reference to a compiler-generated field
                        if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__18 == null)
                        {
                          // ISSUE: reference to a compiler-generated field
                          ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                        }
                        // ISSUE: reference to a compiler-generated field
                        // ISSUE: reference to a compiler-generated field
                        VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__18.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__18, objectList1[random.Next(0, objectList1.Count)]);
                        Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.FBI2), pulloverLocation.Position, pulloverLocation.Heading);
                        this.SourceASellMissionVehicles.Add(vehicle);
                        this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                        this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                        this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                        this.ArresetPed = this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver);
                        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                        {
                          if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                          {
                            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
                            int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                            sourceAsellMissionPed.RelationshipGroup = num4;
                            sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 999999);
                          }
                        }
                      }
                      if (num2 >= 50 && num2 < 100)
                      {
                        // ISSUE: reference to a compiler-generated field
                        if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__19 == null)
                        {
                          // ISSUE: reference to a compiler-generated field
                          ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                        }
                        // ISSUE: reference to a compiler-generated field
                        // ISSUE: reference to a compiler-generated field
                        VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__19.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__19, objectList2[random.Next(0, objectList2.Count)]);
                        Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.FBI2), pulloverLocation.Position, pulloverLocation.Heading);
                        this.SourceASellMissionVehicles.Add(vehicle);
                        this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                        this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                        this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                        this.ArresetPed = this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver);
                        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                        {
                          if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                          {
                            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
                            int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                            sourceAsellMissionPed.RelationshipGroup = num4;
                            sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 999999);
                          }
                        }
                      }
                      if (num2 >= 100 && num2 < 133)
                      {
                        // ISSUE: reference to a compiler-generated field
                        if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__20 == null)
                        {
                          // ISSUE: reference to a compiler-generated field
                          ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                        }
                        // ISSUE: reference to a compiler-generated field
                        // ISSUE: reference to a compiler-generated field
                        VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__20.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__20, objectList3[random.Next(0, objectList3.Count)]);
                        Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.FBI2), pulloverLocation.Position, pulloverLocation.Heading);
                        this.SourceASellMissionVehicles.Add(vehicle);
                        this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                        this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                        this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                        this.ArresetPed = this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver);
                        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                        {
                          if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                          {
                            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
                            int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                            sourceAsellMissionPed.RelationshipGroup = num4;
                            sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 999999);
                          }
                        }
                      }
                      if (num2 >= 133 && num2 < 166)
                      {
                        // ISSUE: reference to a compiler-generated field
                        if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__21 == null)
                        {
                          // ISSUE: reference to a compiler-generated field
                          ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                        }
                        // ISSUE: reference to a compiler-generated field
                        // ISSUE: reference to a compiler-generated field
                        VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__21.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__21, objectList5[random.Next(0, objectList5.Count)]);
                        Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.FBI2), pulloverLocation.Position, pulloverLocation.Heading);
                        this.SourceASellMissionVehicles.Add(vehicle);
                        this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                        this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                        this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                        this.ArresetPed = this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver);
                        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                        {
                          if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                          {
                            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
                            int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                            sourceAsellMissionPed.RelationshipGroup = num4;
                            sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 999999);
                          }
                        }
                      }
                      if (num2 >= 166 && num2 <= 200)
                      {
                        // ISSUE: reference to a compiler-generated field
                        if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__22 == null)
                        {
                          // ISSUE: reference to a compiler-generated field
                          ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, VehicleHash>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleHash), typeof (ExecutiveTower)));
                        }
                        // ISSUE: reference to a compiler-generated field
                        // ISSUE: reference to a compiler-generated field
                        VehicleHash Name = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__22.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__22, objectList4[random.Next(0, objectList4.Count)]);
                        Vehicle vehicle = World.CreateVehicle(this.RequestModel(VehicleHash.FBI2), pulloverLocation.Position, pulloverLocation.Heading);
                        this.SourceASellMissionVehicles.Add(vehicle);
                        this.SupplyMissionMainVehicle = World.CreateVehicle(this.RequestModel(Name), vehicle.GetOffsetInWorldCoords(new Vector3(0.0f, 9f, 0.0f)), pulloverLocation.Heading);
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(-2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading - 45f));
                        this.SourceASellMissionPeds.Add(World.CreatePed(this.RequestModel(PedHash.Swat01SMY), this.SupplyMissionMainVehicle.GetOffsetInWorldCoords(new Vector3(2f, 0.0f, 0.0f)), this.SupplyMissionMainVehicle.Heading + 45f));
                        this.SupplyMissionMainVehicle.CreateRandomPedOnSeat(VehicleSeat.Driver);
                        this.SourceASellMissionPeds.Add(this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver));
                        this.ArresetPed = this.SupplyMissionMainVehicle.GetPedOnSeat(VehicleSeat.Driver);
                        foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
                        {
                          if ((Entity) sourceAsellMissionPed != (Entity) this.ArresetPed)
                          {
                            sourceAsellMissionPed.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
                            int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "COP");
                            Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) sourceAsellMissionPed, (InputArgument) num4);
                            Function.Call(Hash._0x9F7794730795E019, (InputArgument) sourceAsellMissionPed, (InputArgument) 0, (InputArgument) 0);
                            sourceAsellMissionPed.RelationshipGroup = num4;
                            sourceAsellMissionPed.Task.AimAt((Entity) this.ArresetPed, 999999);
                          }
                        }
                      }
                      this.SourceASellMissionVehicles.Add(this.SupplyMissionMainVehicle);
                    }
                    this.SourceASellMissionVehicles.Add(this.SupplyMissionMainVehicle);
                  }
                  this.SupplyMissionMainVehicle.AddBlip();
                  this.SupplyMissionMainVehicle.CurrentBlip.Sprite = BlipSprite.SportsCar;
                  this.SupplyMissionMainVehicle.CurrentBlip.Color = BlipColor.Blue;
                  this.SupplyMissionMainVehicle.CurrentBlip.Name = "Retrieve " + this.SupplyMissionMainVehicle.FriendlyName;
                  this.GetWarehouseLoc(this.CurrentWarehouse);
                  this.SourcingMission = 5;
                  this.SupplyMissionStage = 1;
                  this.SourcingMissionOn = true;
                  UI.Notify("C " + num1.ToString() + ", T " + num2.ToString());
                }
              }
label_1476:
              this.GUIscaleform.Render2D();
              if (Game.CurrentInputMode == InputMode.MouseAndKeyboard)
                this.GUIscaleform.CallFunction("SET_MOUSE_INPUT", (object) Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 0, (InputArgument) 239), (object) Function.Call<float>(Hash._0xEC3C9B8D5327B563, (InputArgument) 0, (InputArgument) 240));
              if (Game.CurrentInputMode == InputMode.GamePad && this.GUIMT < Game.GameTime)
              {
                int num1;
                if (!Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 32))
                  num1 = Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 172) ? 1 : 0;
                else
                  num1 = 1;
                if (num1 != 0)
                {
                  this.GUIMT = Game.GameTime + 2;
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_INPUT_EVENT");
                  Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 8);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_MOUSE_INPUT");
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosX);
                  if ((double) this.GUIPosY > -10.5)
                    this.GUIPosY -= 0.01f;
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosY);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                }
                int num2;
                if (!Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 33))
                  num2 = Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 173) ? 1 : 0;
                else
                  num2 = 1;
                if (num2 != 0)
                {
                  this.GUIMT = Game.GameTime + 2;
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_INPUT_EVENT");
                  Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 9);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_MOUSE_INPUT");
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosX);
                  if ((double) this.GUIPosY < 10.5)
                    this.GUIPosY += 0.01f;
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosY);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                }
                int num3;
                if (!Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 34))
                  num3 = Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 174) ? 1 : 0;
                else
                  num3 = 1;
                if (num3 != 0)
                {
                  this.GUIMT = Game.GameTime + 2;
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_INPUT_EVENT");
                  Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 10);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_MOUSE_INPUT");
                  if ((double) this.GUIPosX > -10.5)
                    this.GUIPosX -= 0.01f;
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosX);
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosY);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                }
                int num4;
                if (!Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 35))
                  num4 = Function.Call<bool>(Hash._0xF3A21BCD95725A4A, (InputArgument) 2, (InputArgument) 175) ? 1 : 0;
                else
                  num4 = 1;
                if (num4 != 0)
                {
                  this.GUIMT = Game.GameTime + 2;
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_INPUT_EVENT");
                  Function.Call(Hash._0xC3D0841A0CC546A6, (InputArgument) 11);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                  if ((double) this.GUIPosX < 10.5)
                    this.GUIPosX += 0.01f;
                  Function.Call(Hash._0xF6E48914C7A8694E, (InputArgument) this.GUIscaleform.Handle, (InputArgument) "SET_MOUSE_INPUT");
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosX);
                  Function.Call(Hash._0xD69736AAE04DB51A, (InputArgument) this.GUIPosY);
                  Function.Call(Hash._0xC6796A8FFA375E53);
                }
              }
              Function.Call(Hash._0x351220255D64C155, (InputArgument) 2, (InputArgument) 201, (InputArgument) 1);
              Function.Call(Hash._0x351220255D64C155, (InputArgument) 2, (InputArgument) 237, (InputArgument) 1);
            }
          }
          catch
          {
            UI.Notify("Catch Error GUI 4");
          }
          SizeF resolutionMantainRatio = UIMenu.GetScreenResolutionMantainRatio();
          Convert.ToInt32(resolutionMantainRatio.Width / 2f);
          Convert.ToInt32(resolutionMantainRatio.Height / 2f);
          this.ShowGUIInsrucitons();
        }
      }
      this.CargoWarehouseScript.onTick();
      this.VehicleWarehouseScript.OnTick();
      if (this.PreviewingDesigns && !this.Designs.Visible)
      {
        this.PreviewingDesigns = false;
        this.RefreshInteriors(this.Design);
      }
      Vector3 position1 = Game.Player.Character.Position;
      if (this.InteriorOptions_Garages.Visible)
      {
        this.Frozen = true;
        Game.Player.Character.FreezePosition = true;
      }
      if (!this.InteriorOptions_Garages.Visible && this.Frozen)
      {
        Game.Player.Character.FreezePosition = false;
        this.Frozen = false;
      }
      if (ExecutiveTower.modMenuPool_Garages != null)
        ExecutiveTower.modMenuPool_Garages.ProcessMenus();
      if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 80.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 80.0 || ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 80.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 80.0))
      {
        World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.MenuMarkerA_Garages, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), this.ArcadiusMarkerColor);
        World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.MenuMarkerMB_Garages, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), this.MazeBankMarkerColor);
        World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.MenuMarkerMBW_Garages, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), this.MBWMarkerColor);
        World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.MenuMarkerL_Garages, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), this.LombokMarkerColor);
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0 || ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 3.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0))
        this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Open Menu");
      if (this.PurchasedGarageLevel1 == 1 || this.PurchasedGarageLevel1 == 2 || this.PurchasedGarageLevel1 == 3)
      {
        if (this.PurchasedVehicle_AwaitMenuClose && !this.EXmodMenuPool.IsAnyMenuOpen() && !this.modMenuPool2.IsAnyMenuOpen())
        {
          if (this.EXGarageNum.Equals("GarageA"))
          {
            if (this.PurchasedGarageLevel1 == 1)
            {
              this.PurchasedVehicle_AwaitMenuClose = false;
              this.CreateCars(this.EXGarageNum);
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to enter this garage!");
          }
          if (this.EXGarageNum.Equals("GarageB"))
          {
            if (this.PurchasedGarageLevel2 == 1)
            {
              this.PurchasedVehicle_AwaitMenuClose = false;
              this.CreateCarsB(this.EXGarageNum);
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
          if (this.EXGarageNum.Equals("GarageC"))
          {
            if (this.PurchasedGarageLevel3 == 1)
            {
              this.PurchasedVehicle_AwaitMenuClose = false;
              this.CreateCarsC(this.EXGarageNum);
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to enter this garage!");
          }
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(-2399.7f, 718.1f, 221.4f)) < 2.0 && Game.Player.Character.Alpha == 15)
          this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
        if (this.EXmodMenuPool != null && this.EXmodMenuPool.IsAnyMenuOpen())
          this.EXmodMenuPool.ProcessMenus();
        if (this.modMenuPool2 != null && this.modMenuPool2.IsAnyMenuOpen())
          this.modMenuPool2.ProcessMenus();
        if (((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerA_Garages) < 3.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMB_Garages) < 3.0 || ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerMBW_Garages) < 3.0 || (double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.MenuMarkerL_Garages) < 3.0)) && Game.IsControlJustPressed(2, GTA.Control.Context))
          ExecutiveTower.mainMenu_Garages.Visible = !ExecutiveTower.mainMenu_Garages.Visible;
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Vector3 destination = new Vector3();
          if (this.Location == 1)
            destination = this.MenuMarkerMazeBank;
          if (this.Location == 2)
            destination = this.MenuMarkerArcadius;
          if (this.Location == 3)
            destination = this.MenuMarkerLombok;
          if (this.Location == 4)
            destination = this.MenuMarkerMazeBankWest;
          if ((double) World.GetDistance(Game.Player.Character.Position, destination) < 2.0 && !this.EXmainMenu.Visible)
            this.EXmainMenu.Visible = !this.EXmainMenu.Visible;
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.RemoveMarker) < 2.0 && !this.mainMenu2.Visible)
          this.mainMenu2.Visible = !this.mainMenu2.Visible;
        if (this.PurchasedGarageModShop == 1 && (this.EXGarageNum == "GarageA" || this.EXGarageNum == "GarageB" || this.EXGarageNum == "GarageC"))
        {
          if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
          {
            Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
            if ((Entity) this.Vehicle1 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle1)
            {
              this.LoadIntoModShop("Slot1.ini", this.EXGarageNum);
              this.Vehicle1 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle2 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle2)
            {
              this.LoadIntoModShop("Slot2.ini", this.EXGarageNum);
              this.Vehicle2 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle3 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle3)
            {
              this.LoadIntoModShop("Slot3.ini", this.EXGarageNum);
              this.Vehicle3 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle4 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle4)
            {
              this.LoadIntoModShop("Slot4.ini", this.EXGarageNum);
              this.Vehicle4 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle5 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle5)
            {
              this.LoadIntoModShop("Slot5.ini", this.EXGarageNum);
              this.Vehicle5 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle6 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle6)
            {
              this.LoadIntoModShop("Slot6.ini", this.EXGarageNum);
              this.Vehicle6 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle7 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle7)
            {
              this.LoadIntoModShop("Slot7.ini", this.EXGarageNum);
              this.Vehicle7 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle8 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle8)
            {
              this.LoadIntoModShop("Slot8.ini", this.EXGarageNum);
              this.Vehicle8 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle9 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle9)
            {
              this.LoadIntoModShop("Slot9.ini", this.EXGarageNum);
              this.Vehicle9 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle10 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle10)
            {
              this.LoadIntoModShop("Slot10.ini", this.EXGarageNum);
              this.Vehicle10 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle11 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle11)
            {
              this.LoadIntoModShop("Slot11.ini", this.EXGarageNum);
              this.Vehicle11 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle12 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle12)
            {
              this.LoadIntoModShop("Slot12.ini", this.EXGarageNum);
              this.Vehicle12 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle13 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle13)
            {
              this.LoadIntoModShop("Slot13.ini", this.EXGarageNum);
              this.Vehicle13 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle14 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle14)
            {
              this.LoadIntoModShop("Slot14.ini", this.EXGarageNum);
              this.Vehicle14 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle15 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle15)
            {
              this.LoadIntoModShop("Slot15.ini", this.EXGarageNum);
              this.Vehicle15 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle16 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle16)
            {
              this.LoadIntoModShop("Slot16.ini", this.EXGarageNum);
              this.Vehicle16 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle17 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle17)
            {
              this.LoadIntoModShop("Slot17.ini", this.EXGarageNum);
              this.Vehicle17 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle18 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle18)
            {
              this.LoadIntoModShop("Slot18.ini", this.EXGarageNum);
              this.Vehicle18 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle19 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle19)
            {
              this.LoadIntoModShop("Slot19.ini", this.EXGarageNum);
              this.Vehicle19 = (Vehicle) null;
              this.DestoryCars();
            }
            if ((Entity) this.Vehicle20 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle20)
            {
              this.LoadIntoModShop("Slot20.ini", this.EXGarageNum);
              this.Vehicle20 = (Vehicle) null;
              this.DestoryCars();
            }
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerArcadius) < 2.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBank) < 2.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBankWest) < 2.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerLombok) < 2.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
          if (Game.IsControlJustPressed(2, GTA.Control.Context) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
          {
            Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
            if ((Entity) this.Vehicle1 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle1)
            {
              this.Vehicle1 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle1);
            }
            if ((Entity) this.Vehicle2 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle2)
            {
              this.Vehicle2 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle2);
            }
            if ((Entity) this.Vehicle3 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle3)
            {
              this.Vehicle3 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle3);
            }
            if ((Entity) this.Vehicle4 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle4)
            {
              this.Vehicle4 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle4);
            }
            if ((Entity) this.Vehicle5 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle5)
            {
              this.Vehicle5 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle5);
            }
            if ((Entity) this.Vehicle6 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle6)
            {
              this.Vehicle6 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle6);
            }
            if ((Entity) this.Vehicle7 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle7)
            {
              this.Vehicle7 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle7);
            }
            if ((Entity) this.Vehicle8 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle8)
            {
              this.Vehicle8 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle8);
            }
            if ((Entity) this.Vehicle9 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle9)
            {
              this.Vehicle9 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle9);
            }
            if ((Entity) this.Vehicle10 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle10)
            {
              this.Vehicle10 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle10);
            }
            if ((Entity) this.Vehicle11 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle11)
            {
              this.Vehicle11 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle11);
            }
            if ((Entity) this.Vehicle12 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle12)
            {
              this.Vehicle12 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle12);
            }
            if ((Entity) this.Vehicle13 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle13)
            {
              this.Vehicle13 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle13);
            }
            if ((Entity) this.Vehicle14 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle14)
            {
              this.Vehicle14 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle14);
            }
            if ((Entity) this.Vehicle15 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle15)
            {
              this.Vehicle15 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle15);
            }
            if ((Entity) this.Vehicle16 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle16)
            {
              this.Vehicle16 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle16);
            }
            if ((Entity) this.Vehicle17 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle17)
            {
              this.Vehicle17 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle17);
            }
            if ((Entity) this.Vehicle18 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle18)
            {
              this.Vehicle18 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle18);
            }
            if ((Entity) this.Vehicle19 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle19)
            {
              this.Vehicle19 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle19);
            }
            if ((Entity) this.Vehicle20 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle20)
            {
              this.Vehicle20 = (Vehicle) null;
              this.LoadCarinToRealWorld(this.Vehicle20);
            }
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
        {
          Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
          if ((Entity) this.Vehicle1 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle1)
          {
            this.Vehicle1 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle1);
          }
          if ((Entity) this.Vehicle2 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle2)
          {
            this.Vehicle2 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle2);
          }
          if ((Entity) this.Vehicle3 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle3)
          {
            this.Vehicle3 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle3);
          }
          if ((Entity) this.Vehicle4 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle4)
          {
            this.Vehicle4 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle4);
          }
          if ((Entity) this.Vehicle5 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle5)
          {
            this.Vehicle5 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle5);
          }
          if ((Entity) this.Vehicle6 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle6)
          {
            this.Vehicle6 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle6);
          }
          if ((Entity) this.Vehicle7 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle7)
          {
            this.Vehicle7 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle7);
          }
          if ((Entity) this.Vehicle8 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle8)
          {
            this.Vehicle8 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle8);
          }
          if ((Entity) this.Vehicle9 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle9)
          {
            this.Vehicle9 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle9);
          }
          if ((Entity) this.Vehicle10 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle10)
          {
            this.Vehicle10 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle10);
          }
          if ((Entity) this.Vehicle11 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle11)
          {
            this.Vehicle11 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle11);
          }
          if ((Entity) this.Vehicle12 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle12)
          {
            this.Vehicle12 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle12);
          }
          if ((Entity) this.Vehicle13 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle13)
          {
            this.Vehicle13 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle13);
          }
          if ((Entity) this.Vehicle14 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle14)
          {
            this.Vehicle14 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle14);
          }
          if ((Entity) this.Vehicle15 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle15)
          {
            this.Vehicle15 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle15);
          }
          if ((Entity) this.Vehicle16 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle16)
          {
            this.Vehicle16 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle16);
          }
          if ((Entity) this.Vehicle17 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle17)
          {
            this.Vehicle17 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle17);
          }
          if ((Entity) this.Vehicle18 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle18)
          {
            this.Vehicle18 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle18);
          }
          if ((Entity) this.Vehicle19 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle19)
          {
            this.Vehicle19 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle19);
          }
          if ((Entity) this.Vehicle20 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle20)
          {
            this.Vehicle20 = (Vehicle) null;
            this.LoadCarinToRealWorld(this.Vehicle20);
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAMazebank) < 2.0)
          {
            if (this.PurchasedGarageLevel1 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerAMazebank;
              this.RemoveMarker = new Vector3(-88f, -831.57f, 221f);
              this.ExitMarkerMazeBank = new Vector3(-91.54f, -821.351f, 222f);
              this.GarageCamPos = new Vector3(-92f, -822f, 228f);
              this.GarageCamRot = -117f;
              this.EXGarageNum = "GarageA";
              this.DestoryCars();
              this.Load();
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              this.Load();
              this.GetLocation(1);
              this.CreateCars("GarageA");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBMazebank) < 2.0)
          {
            if (this.PurchasedGarageLevel2 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerBMazebank;
              this.RemoveMarker = new Vector3(-61f, -828f, 221f);
              this.ExitMarkerMazeBank = new Vector3(-71f, -832f, 222f);
              this.GarageCamPos = new Vector3(-70f, -831f, 228f);
              this.GarageCamRot = -22f;
              this.EXGarageNum = "GarageB";
              this.DestoryCars();
              this.LoadB();
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              this.LoadB();
              this.GetLocation(1);
              this.CreateCarsB("GarageB");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCMazebank) < 2.0)
          {
            if (this.PurchasedGarageLevel3 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerCMazebank;
              this.RemoveMarker = new Vector3(-88f, -809f, 221f);
              this.ExitMarkerMazeBank = new Vector3(-78.61f, -806.4f, 222f);
              this.GarageCamPos = new Vector3(-78f, -806f, 232f);
              this.GarageCamRot = 168f;
              this.EXGarageNum = "GarageC";
              this.DestoryCars();
              this.LoadC();
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
              Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
              this.LoadC();
              this.GetLocation(1);
              this.CreateCarsC("GarageC");
              Game.Player.Character.Position = this.ExitMarkerMazeBank;
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAArcaduis) < 2.0)
          {
            if (this.PurchasedGarageLevel1 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerAArcaduis;
              this.EXGarageNum = "GarageA";
              this.DestoryCars();
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-190.843f, -588.043f, 135f);
              this.ExitMarkerArcadius = new Vector3(-198.649f, -580.765f, 135.5f);
              this.GarageCamPos = new Vector3(-198f, -578f, 142f);
              this.GarageCamRot = -108f;
              Game.Player.Character.Position = this.ExitMarkerArcadius;
              this.Load();
              this.GetLocation(2);
              this.CreateCars("GarageA");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBArcaduis) < 2.0)
          {
            if (this.PurchasedGarageLevel2 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerBArcaduis;
              this.EXGarageNum = "GarageB";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-114f, -576f, 135f);
              this.ExitMarkerArcadius = new Vector3(-124f, -571f, 135.5f);
              this.GarageCamPos = new Vector3(-124f, -571f, 144f);
              this.GarageCamRot = -40f;
              Game.Player.Character.Position = this.ExitMarkerArcadius;
              this.LoadB();
              this.GetLocation(2);
              this.CreateCarsB("GarageB");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCArcaduis) < 2.0)
          {
            if (this.PurchasedGarageLevel3 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerCArcaduis;
              this.EXGarageNum = "GarageC";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-144f, -628f, 135f);
              this.ExitMarkerArcadius = new Vector3(-135.68f, -622.827f, 136f);
              this.GarageCamPos = new Vector3(-135.7f, -622.9f, 148.5f);
              this.GarageCamRot = 144f;
              Game.Player.Character.Position = this.ExitMarkerArcadius;
              this.LoadC();
              this.GetLocation(2);
              this.CreateCarsC("GarageC");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to enter this garage!");
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerALombok) < 2.0)
          {
            if (this.PurchasedGarageLevel1 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerALombok;
              this.EXGarageNum = "GarageA";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-1588.75f, -572.097f, 85.5f);
              this.ExitMarkerLombok = new Vector3(-1586.37f, -561.844f, 86f);
              this.GarageCamPos = new Vector3(-1586.37f, -561.844f, 94f);
              this.GarageCamRot = 114f;
              this.Load();
              Game.Player.Character.Position = this.ExitMarkerLombok;
              this.GetLocation(3);
              this.CreateCars("GarageA");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBLombok) < 2.0)
          {
            if (this.PurchasedGarageLevel2 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerBLombok;
              this.EXGarageNum = "GarageB";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-1573.461f, -554.4f, 85.5f);
              this.ExitMarkerLombok = new Vector3(-1563f, -557f, 86.5f);
              this.GarageCamPos = new Vector3(-1565.1f, -561f, 93f);
              this.GarageCamRot = 106f;
              this.LoadB();
              Game.Player.Character.Position = this.ExitMarkerLombok;
              this.GetLocation(3);
              this.CreateCarsB("GarageB");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCLombok) < 2.0)
          {
            if (this.PurchasedGarageLevel3 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerCLombok;
              this.EXGarageNum = "GarageC";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-1556f, -569f, 85.5f);
              this.ExitMarkerLombok = new Vector3(-1558f, -579f, 86f);
              this.GarageCamPos = new Vector3(-1560f, -577.6f, 92f);
              this.GarageCamRot = 32f;
              this.LoadC();
              Game.Player.Character.Position = this.ExitMarkerLombok;
              this.GetLocation(3);
              this.CreateCarsC("GarageC");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to enter this garage!");
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAMazebankWest) < 2.0)
          {
            if (this.PurchasedGarageLevel1 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerAMazebankWest;
              this.EXGarageNum = "GarageA";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-1388.21f, -487.512f, 56f);
              this.ExitMarkerMazeBankWest = new Vector3(-1395.37f, -480.7f, 57f);
              this.GarageCamPos = new Vector3(-1396f, -482f, 63f);
              this.GarageCamRot = -86f;
              this.Load();
              Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
              this.GetLocation(4);
              this.CreateCars("GarageA");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 1 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBMazebankWest) < 2.0)
          {
            if (this.PurchasedGarageLevel2 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerBMazebankWest;
              this.EXGarageNum = "GarageB";
              this.DestoryCars();
              this.RemoveMarker = new Vector3(-1387f, -487f, 48f);
              this.ExitMarkerMazeBankWest = new Vector3(-1395f, -480f, 49f);
              this.GarageCamPos = new Vector3(-1395f, -480f, 63f);
              this.GarageCamRot = -21f;
              this.LoadB();
              Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
              this.GetLocation(4);
              this.CreateCarsB("GarageB");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 2 to enter this garage!");
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCMazebankWest) < 2.0)
          {
            if (this.PurchasedGarageLevel3 == 1)
            {
              this.LastEnterMarker = this.EnterMarkerCMazebankWest;
              this.EXGarageNum = "GarageC";
              this.RemoveMarker = new Vector3(-1375.5f, -465.6f, 49f);
              this.ExitMarkerMazeBankWest = new Vector3(-1367.492f, -472.5f, 57f);
              this.GarageCamPos = new Vector3(-1367.492f, -472.5f, 64f);
              this.GarageCamRot = 99f;
              this.LoadC();
              Game.Player.Character.Position = this.ExitMarkerMazeBankWest;
              this.GetLocation(4);
              this.CreateCarsC("GarageC");
            }
            else
              UI.Notify(this.GetHostName() + " You need to Purchase Garage Level 3 to enter this garage!");
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerArcadius) < 2.0)
          {
            Script.Wait(300);
            this.DestoryCars();
            this.Delete();
            Game.Player.Character.Position = this.MarkerExit;
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerLombok) < 2.0)
          {
            Script.Wait(300);
            this.DestoryCars();
            this.Delete();
            Game.Player.Character.Position = this.MarkerExit;
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBank) < 2.0)
          {
            Script.Wait(300);
            this.DestoryCars();
            this.Delete();
            Game.Player.Character.Position = this.MarkerExit;
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBankWest) < 2.0)
          {
            Script.Wait(300);
            this.DestoryCars();
            this.Delete();
            Game.Player.Character.Position = this.MarkerExit;
          }
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(400f, -958f, -98f)) < 20.0 && this.ISinviewMode)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
          {
            this.Vehicle1.Rotation = new Vector3(0.0f, 0.0f, this.Vehicle1.Rotation.Z);
            Vector3 vector3 = this.Vehicle1.Rotation;
            float z = this.Vehicle1.Rotation.Z;
            float num;
            vector3 = new Vector3(0.0f, 0.0f, num = z + 1f);
            this.Vehicle1.Rotation = vector3;
          }
          if (!this.EXmodMenuPool.IsAnyMenuOpen())
          {
            this.ISinviewMode = false;
            if (this.Location == 1)
              Game.Player.Character.Position = this.MenuMarkerMazeBank;
            if (this.Location == 2)
              Game.Player.Character.Position = this.MenuMarkerArcadius;
            if (this.Location == 3)
              Game.Player.Character.Position = this.MenuMarkerLombok;
            if (this.Location == 4)
              Game.Player.Character.Position = this.MenuMarkerMazeBankWest;
            Game.Player.Character.IsVisible = true;
            Game.Player.Character.FreezePosition = false;
            if (this.Cam != (Camera) null)
            {
              if ((Entity) this.Vehicle1 != (Entity) null)
                this.Vehicle1.Delete();
              World.RenderingCamera = this.Cam;
              Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
              this.Cam.IsActive = false;
              this.Cam.Destroy();
            }
          }
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerArcadius) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBank) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerMazeBankWest) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerLombok) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to exit the garage");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAMazebank) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage A");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBMazebank) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage B");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCMazebank) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage C");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAArcaduis) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage A");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBArcaduis) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage B");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCArcaduis) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage C");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerALombok) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage A");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBLombok) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage B");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCLombok) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage C");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerAMazebankWest) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage A");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerBMazebankWest) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage B");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerCMazebankWest) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Garage C");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerMazeBank) < 3.0)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to save a vehicle into Garage A, B or C");
          this.GetLocation(1);
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerMazeBank) < 80.0)
        {
          World.DrawMarker(MarkerType.VerticalCylinder, this.MenuMarkerMazeBank, Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 1f), this.MazeBankMarkerColor);
          this.GetLocation(1);
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerArcadius) < 3.0)
        {
          this.GetLocation(2);
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to save a vehicle into Garage A, B or C");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerArcadius) < 80.0)
        {
          this.GetLocation(2);
          World.DrawMarker(MarkerType.VerticalCylinder, this.MenuMarkerArcadius, Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 1f), this.ArcadiusMarkerColor);
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerLombok) < 3.0)
        {
          this.GetLocation(3);
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to save a vehicle into Garage A, B or C");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerLombok) < 80.0)
        {
          this.GetLocation(3);
          World.DrawMarker(MarkerType.VerticalCylinder, this.MenuMarkerLombok, Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 1f), this.LombokMarkerColor);
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerMazeBankWest) < 3.0)
        {
          this.GetLocation(4);
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to save a vehicle into Garage A, B or C");
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.MenuMarkerMazeBankWest) < 80.0)
        {
          this.GetLocation(4);
          World.DrawMarker(MarkerType.VerticalCylinder, this.MenuMarkerMazeBankWest, Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 1f), this.MBWMarkerColor);
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopEnter) < 1.70000004768372)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to enter Mod Shop");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopEnter) < 1.70000004768372 && Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if (this.PurchasedGarageModShop == 1)
          {
            Game.FadeScreenOut(500);
            Script.Wait(500);
            this.LoadIntoModShopOnFoot();
            Game.Player.Character.Position = ExecutiveTower.Exit;
            Script.Wait(500);
            Game.FadeScreenIn(500);
          }
          else
            UI.Notify(this.GetHostName() + " You need to Purchase Mod Shop to enter the Mod Shop");
        }
        Color color = Color.White;
        if (this.BusinessLocation == 0)
          color = this.MazeBankMarkerColor;
        if (this.BusinessLocation == 1)
          color = this.ArcadiusMarkerColor;
        if (this.BusinessLocation == 2)
          color = this.LombokMarkerColor;
        if (this.BusinessLocation == 3)
          color = this.MBWMarkerColor;
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.Exit) < 60.0)
          World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.Exit, Vector3.Zero, Vector3.Zero, new Vector3(0.6f, 0.6f, 0.4f), color);
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.CustomizeMenuMarker) < 60.0)
          World.DrawMarker(MarkerType.VerticalCylinder, ExecutiveTower.CustomizeMenuMarker, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color);
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.CustomizeMenuMarker) < 3.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Open Menu");
        if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.Exit) < 4.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Exit the Mod Shop");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopOrderCar) < 80.0)
          World.DrawMarker(MarkerType.VerticalCylinder, this.ModShopOrderCar, Vector3.Zero, Vector3.Zero, new Vector3(0.6f, 0.6f, 0.4f), color);
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopOrderCar) < 2.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to open Order Car Menu");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopOrderCar) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && !this.ModShopMenuMenu.Visible)
        {
          this.ModShopMenuOpen = true;
          this.ModShopMenuMenu.Visible = !this.ModShopMenuMenu.Visible;
        }
        if (this.ModShopMenuOpen && this.mainMenu.Visible)
        {
          this.ModShopMenuOpen = false;
          this.modMenuPool.CloseAllMenus();
        }
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopInfoMarker) < 80.0)
          World.DrawMarker(MarkerType.VerticalCylinder, this.ModShopInfoMarker, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color);
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ModShopInfoMarker) < 2.0)
          this.ShowHelpPage1();
        if ((double) World.GetDistance(Game.Player.Character.Position, this.RemoveMarker) < 3.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to add or remove a vehicle");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.RemoveMarker) < 80.0)
          World.DrawMarker(MarkerType.VerticalCylinder, this.RemoveMarker, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color);
        if ((this.EXGarageNum == "GarageA" || this.EXGarageNum == "GarageB" || this.EXGarageNum == "GarageC") && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
        {
          Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
          if ((Entity) this.Vehicle1 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle1)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle2 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle2)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle3 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle3)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle4 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle4)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle5 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle5)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle6 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle6)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle7 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle7)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle8 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle8)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle9 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle9)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle10 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle10)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle11 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle11)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle12 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle12)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle13 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle13)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle14 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle14)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle15 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle15)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle16 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle16)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle17 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle17)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle18 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle18)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle19 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle19)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
          if ((Entity) this.Vehicle20 != (Entity) null && (Entity) currentVehicle == (Entity) this.Vehicle20)
          {
            if (this.PurchasedGarageModShop == 1)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle or press ~INPUT_COVER~ to enter the mod shop");
            if (this.PurchasedGarageModShop == 0)
              this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to use this vehicle");
          }
        }
      }
      Ped character = Game.Player.Character;
      Prop[] nearbyProps = World.GetNearbyProps(Game.Player.Character.Position, 3f);
      int index1 = 0;
      for (int index2 = nearbyProps.Length - 1; index1 <= index2; ++index1)
      {
        if (!ExecutiveTower.TVOn && (Entity) character.CurrentVehicle == (Entity) null && ExecutiveTower.TVModels.Contains(nearbyProps[index1].Model) && (double) character.Position.DistanceTo(nearbyProps[index1].Position) <= 2.0)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to turn on TV");
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.TV = nearbyProps[index1];
            this.TV.Alpha = (int) byte.MaxValue;
            Function.Call(Hash._0x845BAD77CC770633, (InputArgument) this.TV);
            if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "tvscreen"))
              Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "tvscreen", (InputArgument) false);
            if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "ex_tvscreen"))
              Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "ex_tvscreen", (InputArgument) false);
            if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) this.TV.Model))
            {
              Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) this.TV.Model);
              ExecutiveTower.rendertargetid = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "tvscreen");
              ExecutiveTower.ex_rendertargetid = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "ex_tvscreen");
            }
            ExecutiveTower.TV_Channel = new System.Random().Next(2);
            Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) ExecutiveTower.TV_Channel);
            Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) ExecutiveTower.TV_Volume);
            ExecutiveTower.TVOn = true;
          }
        }
        else if (ExecutiveTower.TVOn && (Entity) character.CurrentVehicle == (Entity) null && ExecutiveTower.TVModels.Contains(nearbyProps[index1].Model) && (double) character.Position.DistanceTo(nearbyProps[index1].Position) <= 2.0)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to turn off TV ~INPUT_COVER~ Change Channel");
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            Script.Wait(1000);
            if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "tvscreen"))
              Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "tvscreen");
            if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "ex_tvscreen"))
              Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "ex_tvscreen");
            ExecutiveTower.TVOn = false;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.VehicleRadioWheel))
          {
            switch (ExecutiveTower.TV_Channel)
            {
              case 0:
                ExecutiveTower.TV_Channel = 1;
                break;
              case 1:
                ExecutiveTower.TV_Channel = 0;
                break;
            }
            Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) ExecutiveTower.TV_Channel);
            ExecutiveTower.TVOn = true;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.Jump) && !ExecutiveTower.SubtitleOn)
          {
            Function.Call(Hash._0x873FA65C778AD970, (InputArgument) true);
            ExecutiveTower.SubtitleOn = true;
          }
          else if (Game.IsControlJustPressed(2, GTA.Control.Jump) && ExecutiveTower.SubtitleOn)
          {
            Function.Call(Hash._0x873FA65C778AD970, (InputArgument) false);
            ExecutiveTower.SubtitleOn = false;
          }
        }
        if (ExecutiveTower.TVOn)
        {
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) ExecutiveTower.rendertargetid);
          Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5, (InputArgument) 0.5, (InputArgument) 1.0, (InputArgument) 1.0, (InputArgument) 0.0, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) ExecutiveTower.ex_rendertargetid);
          Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5, (InputArgument) 0.5, (InputArgument) 1.0, (InputArgument) 1.0, (InputArgument) 0.0, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
        }
      }
      if (!this.FirstLoad)
      {
        Script.Wait(400);
        this.Delete();
        this.RefreshInteriors(this.Design);
        if ((Entity) this.AssistantChairProp != (Entity) null)
          this.AssistantChairProp.Delete();
        if ((Entity) this.CEOChairProp != (Entity) null)
          this.CEOChairProp.Delete();
        this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
        this.SpawnCEOChair(this.ChairModelCEO.ToString(), this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
        if ((double) World.GetDistance(position1, this.MarkerExit) < 10.0)
          this.IsinInterior = true;
        try
        {
          if (this.AssistantPedModelType.Equals("Pedhash"))
          {
            PedHash assistantPedModelPedHash = this.AssistantPedModelPedHash;
            if ((Entity) this.AssistantPed != (Entity) null)
              this.AssistantPed.Delete();
            this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelPedHash), this.AssistantPos, this.AssistantRot);
            this.SetupAssistant(this.AssistantPed, this.AssistantRot);
          }
          else if (this.AssistantPedModelType.Equals("string"))
          {
            string assistantPedModelString = this.AssistantPedModelString;
            if ((Entity) this.AssistantPed != (Entity) null)
              this.AssistantPed.Delete();
            this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelString), this.AssistantPos, this.AssistantRot);
            this.SetupAssistant(this.AssistantPed, this.AssistantRot);
          }
          else
          {
            PedHash assistantPedModelPedHash = this.AssistantPedModelPedHash;
            if ((Entity) this.AssistantPed != (Entity) null)
              this.AssistantPed.Delete();
            this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelPedHash), this.AssistantPos, this.AssistantRot);
            this.SetupAssistant(this.AssistantPed, this.AssistantRot);
          }
        }
        catch
        {
          PedHash Name = PedHash.ExecutivePAFemale01;
          if ((Entity) this.AssistantPed != (Entity) null)
            this.AssistantPed.Delete();
          this.AssistantPed = World.CreatePed(this.RequestModel(Name), this.AssistantPos, this.AssistantRot);
          this.SetupAssistant(this.AssistantPed, this.AssistantRot);
        }
        this.FirstLoad = true;
      }
      Vector3 assistant1 = this.Assistant_1;
      if ((double) World.GetDistance(position1, this.Assistant_1) < 3.0)
        UI.ShowSubtitle(this.GetHostName() + " Your CEO computer is all setup for you to access stock, missions and much more", 4);
      Vector3 assistant2 = this.Assistant_2;
      if ((double) World.GetDistance(position1, this.Assistant_2) < 3.0)
        UI.ShowSubtitle(this.GetHostName() + " Your CEO computer is all setup for you to access stock, missions and much more", 4);
      Vector3 assistant3 = this.Assistant_3;
      if ((double) World.GetDistance(position1, this.Assistant_3) < 3.0)
        UI.ShowSubtitle(this.GetHostName() + " Your CEO computer is all setup for you to access stock, missions and much more", 4);
      if ((double) World.GetDistance(position1, new Vector3(-72f, -816f, 243f)) < 3.0)
        UI.ShowSubtitle(this.GetHostName() + " Your computer is all setup for you to access stock, missions and much more", 4);
      if ((double) World.GetDistance(position1, this.Assistant_1) < 40.0 || (double) World.GetDistance(position1, this.Assistant_2) < 40.0 || (double) World.GetDistance(position1, this.Assistant_3) < 40.0)
      {
        double distance1 = (double) World.GetDistance(position1, this.Assistant_1);
        double distance2 = (double) World.GetDistance(position1, this.Assistant_2);
        if ((double) World.GetDistance(position1, this.Assistant_3) >= 40.0)
          ;
      }
      else if (this.AssistantCreatedPeds)
        this.AssistantCreatedPeds = false;
      if (this.GunmodMenuPool != null && this.GunmodMenuPool.IsAnyMenuOpen())
        this.GunmodMenuPool.ProcessMenus();
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadiusGunLocker) < 80.0)
        this.GunLockerMarker = this.ArcadiusGunLocker;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankWestGunLocker) < 80.0)
        this.GunLockerMarker = this.MazeBankWestGunLocker;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankGunLocker) < 80.0)
        this.GunLockerMarker = this.MazeBankGunLocker;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.LombokGunLocker) < 80.0)
        this.GunLockerMarker = this.LombokGunLocker;
      int gunLockerBought = this.GunLockerBought;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.CEOChairPos) > 45.0)
      {
        this.isMVOpen = false;
        this.isGLOpen = false;
        this.CheckedDoorMoneyVault = false;
        this.CheckedDoorGunLocker = false;
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.CEOChairPos) < 45.0)
      {
        if (this.BusinessLocation == 1)
        {
          foreach (Prop nearbyProp in World.GetNearbyProps(Game.Player.Character.Position, 45f))
          {
            if ((this.GunLockerBought == 0 || this.GunLockerBought == 1) && (!this.CheckedDoorGunLocker && this.VaultdoorsL.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__24 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__24 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__24.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p24 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__24;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__23 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__23 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__23.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__23, this, this.VaultdoorsL[0]);
              object obj2 = target1((CallSite) p24, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__28 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__28 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__28.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__28, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__27 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__27.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p27 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__27;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__26 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__26 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__26.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p26 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__26;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__25 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__25 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__25.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__25, this, this.VaultdoorsL[1]);
                object obj6 = target3((CallSite) p26, model2, obj5);
                obj3 = target2((CallSite) p27, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__32 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__32 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__32.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__32, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__31 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__31 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__31.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p31 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__31;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__30 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__30 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__30.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p30 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__30;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__29 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__29 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__29.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__29, this, this.VaultdoorsL[2]);
                object obj6 = target3((CallSite) p30, model2, obj5);
                obj8 = target2((CallSite) p31, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__36 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__36 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__36.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__36, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__35 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__35 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__35.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p35 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__35;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__34 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__34 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__34.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p34 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__34;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__33 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__33 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__33.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__33, this, this.VaultdoorsL[3]);
                object obj6 = target3((CallSite) p34, model2, obj5);
                obj10 = target2((CallSite) p35, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__40 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__40 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__40.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__40, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__39 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__39 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__39.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p39 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__39;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__38 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__38 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__38.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p38 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__38;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__37 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__37 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__37.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__37, this, this.VaultdoorsL[4]);
                object obj6 = target3((CallSite) p38, model2, obj5);
                obj12 = target2((CallSite) p39, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__45 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__45 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__45.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__45, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__44 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__44 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__44.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p44 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__44;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__43 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__43 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__43.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p43 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__43;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__42 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__42 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__42.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p42 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__42;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__41 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__41 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__41.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__41, this, this.VaultdoorsL[5]);
                object obj6 = target4((CallSite) p42, model2, obj5);
                object obj14 = target3((CallSite) p43, obj4, obj6);
                if (!target2((CallSite) p44, obj14))
                  goto label_2095;
              }
              this.GunLockerDoor = nearbyProp;
              this.CheckedDoorGunLocker = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, -110f);
            }
label_2095:
            if ((this.MoneyVaultBought == 0 || this.MoneyVaultBought == 1) && (!this.CheckedDoorMoneyVault && this.VaultdoorsR.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__47 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__47 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__47.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p47 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__47;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__46 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__46 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__46.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__46, this, this.VaultdoorsR[0]);
              object obj2 = target1((CallSite) p47, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__51 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__51 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__51.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__51, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__50 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__50 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__50.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p50 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__50;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__49 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__49 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__49.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p49 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__49;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__48 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__48 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__48.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__48, this, this.VaultdoorsR[1]);
                object obj6 = target3((CallSite) p49, model2, obj5);
                obj3 = target2((CallSite) p50, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__55 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__55 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__55.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__55, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__54 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__54 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__54.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p54 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__54;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__53 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__53 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__53.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p53 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__53;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__52 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__52 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__52.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__52, this, this.VaultdoorsR[2]);
                object obj6 = target3((CallSite) p53, model2, obj5);
                obj8 = target2((CallSite) p54, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__59 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__59 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__59.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__59, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__58 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__58 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__58.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p58 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__58;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__57 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__57 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__57.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p57 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__57;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__56 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__56 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__56.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__56, this, this.VaultdoorsR[3]);
                object obj6 = target3((CallSite) p57, model2, obj5);
                obj10 = target2((CallSite) p58, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__63 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__63 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__63.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__63, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__62 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__62 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__62.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p62 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__62;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__61 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__61 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__61.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p61 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__61;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__60 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__60 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__60.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__60, this, this.VaultdoorsR[4]);
                object obj6 = target3((CallSite) p61, model2, obj5);
                obj12 = target2((CallSite) p62, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__68 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__68 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__68.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__68, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__67 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__67 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__67.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p67 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__67;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__66 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__66 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__66.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p66 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__66;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__65 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__65 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__65.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p65 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__65;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__64 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__64 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__64.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__64, this, this.VaultdoorsR[5]);
                object obj6 = target4((CallSite) p65, model2, obj5);
                object obj14 = target3((CallSite) p66, obj4, obj6);
                if (!target2((CallSite) p67, obj14))
                  continue;
              }
              this.MoneyVaultDoor = nearbyProp;
              this.CheckedDoorMoneyVault = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 70f);
            }
          }
        }
        if (this.BusinessLocation == 0)
        {
          foreach (Prop nearbyProp in World.GetNearbyProps(Game.Player.Character.Position, 45f))
          {
            if ((this.GunLockerBought == 0 || this.GunLockerBought == 1) && (!this.CheckedDoorGunLocker && this.VaultdoorsL.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__70 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__70 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__70.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p70 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__70;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__69 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__69 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__69.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__69, this, this.VaultdoorsL[0]);
              object obj2 = target1((CallSite) p70, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__74 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__74 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__74.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__74, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__73 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__73 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__73.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p73 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__73;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__72 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__72 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__72.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p72 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__72;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__71 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__71 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__71.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__71, this, this.VaultdoorsL[1]);
                object obj6 = target3((CallSite) p72, model2, obj5);
                obj3 = target2((CallSite) p73, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__78 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__78 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__78.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__78, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__77 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__77 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__77.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p77 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__77;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__76 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__76 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__76.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p76 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__76;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__75 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__75 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__75.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__75, this, this.VaultdoorsL[2]);
                object obj6 = target3((CallSite) p76, model2, obj5);
                obj8 = target2((CallSite) p77, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__82 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__82 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__82.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__82, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__81 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__81 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__81.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p81 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__81;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__80 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__80 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__80.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p80 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__80;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__79 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__79 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__79.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__79, this, this.VaultdoorsL[3]);
                object obj6 = target3((CallSite) p80, model2, obj5);
                obj10 = target2((CallSite) p81, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__86 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__86 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__86.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__86, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__85 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__85 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__85.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p85 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__85;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__84 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__84 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__84.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p84 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__84;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__83 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__83 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__83.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__83, this, this.VaultdoorsL[4]);
                object obj6 = target3((CallSite) p84, model2, obj5);
                obj12 = target2((CallSite) p85, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__91 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__91 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__91.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__91, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__90 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__90 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__90.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p90 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__90;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__89 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__89 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__89.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p89 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__89;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__88 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__88 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__88.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p88 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__88;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__87 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__87 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__87.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__87, this, this.VaultdoorsL[5]);
                object obj6 = target4((CallSite) p88, model2, obj5);
                object obj14 = target3((CallSite) p89, obj4, obj6);
                if (!target2((CallSite) p90, obj14))
                  goto label_2223;
              }
              this.GunLockerDoor = nearbyProp;
              this.CheckedDoorGunLocker = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 95f);
            }
label_2223:
            if ((this.MoneyVaultBought == 0 || this.MoneyVaultBought == 1) && (!this.CheckedDoorMoneyVault && this.VaultdoorsR.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__93 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__93 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__93.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p93 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__93;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__92 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__92 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__92.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__92, this, this.VaultdoorsR[0]);
              object obj2 = target1((CallSite) p93, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__97 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__97 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__97.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__97, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__96 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__96 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__96.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p96 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__96;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__95 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__95 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__95.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p95 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__95;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__94 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__94 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__94.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__94, this, this.VaultdoorsR[1]);
                object obj6 = target3((CallSite) p95, model2, obj5);
                obj3 = target2((CallSite) p96, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__101 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__101 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__101.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__101, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__100 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__100 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__100.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p100 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__100;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__99 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__99 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__99.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p99 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__99;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__98 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__98 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__98.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__98, this, this.VaultdoorsR[2]);
                object obj6 = target3((CallSite) p99, model2, obj5);
                obj8 = target2((CallSite) p100, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__105 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__105 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__105.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__105, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__104 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__104 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__104.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p104 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__104;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__103 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__103 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__103.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p103 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__103;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__102 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__102 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__102.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__102, this, this.VaultdoorsR[3]);
                object obj6 = target3((CallSite) p103, model2, obj5);
                obj10 = target2((CallSite) p104, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__109 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__109 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__109.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__109, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__108 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__108 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__108.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p108 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__108;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__107 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__107 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__107.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p107 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__107;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__106 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__106 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__106.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__106, this, this.VaultdoorsR[4]);
                object obj6 = target3((CallSite) p107, model2, obj5);
                obj12 = target2((CallSite) p108, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__114 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__114 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__114.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__114, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__113 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__113 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__113.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p113 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__113;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__112 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__112 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__112.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p112 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__112;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__111 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__111 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__111.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p111 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__111;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__110 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__110 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__110.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__110, this, this.VaultdoorsR[5]);
                object obj6 = target4((CallSite) p111, model2, obj5);
                object obj14 = target3((CallSite) p112, obj4, obj6);
                if (!target2((CallSite) p113, obj14))
                  continue;
              }
              this.MoneyVaultDoor = nearbyProp;
              this.CheckedDoorMoneyVault = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, -84f);
            }
          }
        }
        if (this.BusinessLocation == 2)
        {
          foreach (Prop nearbyProp in World.GetNearbyProps(Game.Player.Character.Position, 45f))
          {
            if ((this.GunLockerBought == 0 || this.GunLockerBought == 1) && (!this.CheckedDoorGunLocker && this.VaultdoorsL.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__116 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__116 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__116.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p116 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__116;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__115 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__115 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__115.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__115, this, this.VaultdoorsL[0]);
              object obj2 = target1((CallSite) p116, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__120 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__120 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__120.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__120, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__119 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__119 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__119.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p119 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__119;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__118 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__118 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__118.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p118 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__118;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__117 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__117 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__117.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__117, this, this.VaultdoorsL[1]);
                object obj6 = target3((CallSite) p118, model2, obj5);
                obj3 = target2((CallSite) p119, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__124 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__124 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__124.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__124, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__123 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__123 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__123.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p123 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__123;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__122 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__122 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__122.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p122 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__122;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__121 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__121 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__121.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__121, this, this.VaultdoorsL[2]);
                object obj6 = target3((CallSite) p122, model2, obj5);
                obj8 = target2((CallSite) p123, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__128 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__128 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__128.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__128, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__127 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__127 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__127.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p127 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__127;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__126 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__126 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__126.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p126 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__126;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__125 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__125 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__125.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__125, this, this.VaultdoorsL[3]);
                object obj6 = target3((CallSite) p126, model2, obj5);
                obj10 = target2((CallSite) p127, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__132 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__132 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__132.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__132, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__131 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__131 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__131.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p131 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__131;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__130 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__130 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__130.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p130 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__130;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__129 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__129 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__129.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__129, this, this.VaultdoorsL[4]);
                object obj6 = target3((CallSite) p130, model2, obj5);
                obj12 = target2((CallSite) p131, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__137 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__137 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__137.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__137, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__136 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__136 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__136.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p136 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__136;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__135 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__135 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__135.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p135 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__135;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__134 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__134 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__134.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p134 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__134;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__133 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__133 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__133.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__133, this, this.VaultdoorsL[5]);
                object obj6 = target4((CallSite) p134, model2, obj5);
                object obj14 = target3((CallSite) p135, obj4, obj6);
                if (!target2((CallSite) p136, obj14))
                  goto label_2351;
              }
              this.GunLockerDoor = nearbyProp;
              this.CheckedDoorGunLocker = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 125f);
            }
label_2351:
            if ((this.MoneyVaultBought == 0 || this.MoneyVaultBought == 1) && (!this.CheckedDoorMoneyVault && this.VaultdoorsR.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__139 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__139 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__139.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p139 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__139;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__138 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__138 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__138.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__138, this, this.VaultdoorsR[0]);
              object obj2 = target1((CallSite) p139, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__143 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__143 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__143.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__143, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__142 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__142 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__142.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p142 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__142;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__141 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__141 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__141.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p141 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__141;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__140 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__140 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__140.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__140, this, this.VaultdoorsR[1]);
                object obj6 = target3((CallSite) p141, model2, obj5);
                obj3 = target2((CallSite) p142, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__147 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__147 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__147.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__147, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__146 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__146 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__146.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p146 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__146;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__145 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__145 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__145.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p145 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__145;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__144 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__144 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__144.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__144, this, this.VaultdoorsR[2]);
                object obj6 = target3((CallSite) p145, model2, obj5);
                obj8 = target2((CallSite) p146, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__151 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__151 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__151.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__151, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__150 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__150 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__150.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p150 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__150;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__149 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__149 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__149.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p149 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__149;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__148 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__148 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__148.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__148, this, this.VaultdoorsR[3]);
                object obj6 = target3((CallSite) p149, model2, obj5);
                obj10 = target2((CallSite) p150, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__155 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__155 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__155.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__155, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__154 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__154 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__154.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p154 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__154;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__153 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__153 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__153.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p153 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__153;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__152 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__152 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__152.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__152, this, this.VaultdoorsR[4]);
                object obj6 = target3((CallSite) p153, model2, obj5);
                obj12 = target2((CallSite) p154, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__160 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__160 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__160.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__160, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__159 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__159 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__159.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p159 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__159;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__158 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__158 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__158.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p158 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__158;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__157 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__157 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__157.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p157 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__157;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__156 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__156 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__156.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__156, this, this.VaultdoorsR[5]);
                object obj6 = target4((CallSite) p157, model2, obj5);
                object obj14 = target3((CallSite) p158, obj4, obj6);
                if (!target2((CallSite) p159, obj14))
                  continue;
              }
              this.MoneyVaultDoor = nearbyProp;
              this.CheckedDoorMoneyVault = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, -54f);
            }
          }
        }
        if (this.BusinessLocation == 3)
        {
          foreach (Prop nearbyProp in World.GetNearbyProps(Game.Player.Character.Position, 45f))
          {
            if ((this.GunLockerBought == 0 || this.GunLockerBought == 1) && (!this.CheckedDoorGunLocker && this.VaultdoorsL.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__162 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__162 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__162.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p162 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__162;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__161 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__161 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__161.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__161, this, this.VaultdoorsL[0]);
              object obj2 = target1((CallSite) p162, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__166 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__166 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__166.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__166, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__165 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__165 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__165.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p165 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__165;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__164 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__164 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__164.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p164 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__164;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__163 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__163 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__163.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__163, this, this.VaultdoorsL[1]);
                object obj6 = target3((CallSite) p164, model2, obj5);
                obj3 = target2((CallSite) p165, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__170 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__170 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__170.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__170, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__169 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__169 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__169.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p169 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__169;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__168 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__168 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__168.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p168 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__168;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__167 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__167 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__167.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__167, this, this.VaultdoorsL[2]);
                object obj6 = target3((CallSite) p168, model2, obj5);
                obj8 = target2((CallSite) p169, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__174 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__174 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__174.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__174, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__173 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__173 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__173.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p173 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__173;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__172 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__172 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__172.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p172 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__172;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__171 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__171 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__171.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__171, this, this.VaultdoorsL[3]);
                object obj6 = target3((CallSite) p172, model2, obj5);
                obj10 = target2((CallSite) p173, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__178 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__178 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__178.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__178, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__177 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__177 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__177.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p177 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__177;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__176 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__176 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__176.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p176 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__176;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__175 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__175 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__175.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__175, this, this.VaultdoorsL[4]);
                object obj6 = target3((CallSite) p176, model2, obj5);
                obj12 = target2((CallSite) p177, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__183 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__183 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__183.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__183, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__182 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__182 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__182.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p182 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__182;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__181 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__181 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__181.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p181 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__181;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__180 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__180 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__180.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p180 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__180;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__179 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__179 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__179.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__179, this, this.VaultdoorsL[5]);
                object obj6 = target4((CallSite) p180, model2, obj5);
                object obj14 = target3((CallSite) p181, obj4, obj6);
                if (!target2((CallSite) p182, obj14))
                  goto label_2479;
              }
              this.GunLockerDoor = nearbyProp;
              this.CheckedDoorGunLocker = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, -172f);
            }
label_2479:
            if ((this.MoneyVaultBought == 0 || this.MoneyVaultBought == 1) && (!this.CheckedDoorMoneyVault && this.VaultdoorsR.Count >= 5))
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__185 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__185 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__185.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p185 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__185;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__184 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__184 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__184.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__184, this, this.VaultdoorsR[0]);
              object obj2 = target1((CallSite) p185, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__189 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__189 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__189.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__189, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__188 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__188 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__188.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p188 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__188;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__187 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__187 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__187.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p187 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__187;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__186 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__186 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__186.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__186, this, this.VaultdoorsR[1]);
                object obj6 = target3((CallSite) p187, model2, obj5);
                obj3 = target2((CallSite) p188, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__193 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__193 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__193.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__193, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__192 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__192 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__192.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p192 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__192;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__191 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__191 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__191.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p191 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__191;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__190 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__190 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__190.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__190, this, this.VaultdoorsR[2]);
                object obj6 = target3((CallSite) p191, model2, obj5);
                obj8 = target2((CallSite) p192, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__197 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__197 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__197.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__197, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__196 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__196 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__196.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p196 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__196;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__195 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__195 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__195.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p195 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__195;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__194 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__194 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__194.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__194, this, this.VaultdoorsR[3]);
                object obj6 = target3((CallSite) p195, model2, obj5);
                obj10 = target2((CallSite) p196, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__201 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__201 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__201.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__201, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__200 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__200 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__200.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p200 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__200;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__199 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__199 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__199.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p199 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__199;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__198 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__198 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__198.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__198, this, this.VaultdoorsR[4]);
                object obj6 = target3((CallSite) p199, model2, obj5);
                obj12 = target2((CallSite) p200, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__206 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__206 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__206.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__206, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__205 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__205 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__205.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p205 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__205;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__204 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__204 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__204.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p204 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__204;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__203 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__203 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__203.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p203 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__203;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__202 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__202 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__202.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__202, this, this.VaultdoorsR[5]);
                object obj6 = target4((CallSite) p203, model2, obj5);
                object obj14 = target3((CallSite) p204, obj4, obj6);
                if (!target2((CallSite) p205, obj14))
                  goto label_2541;
              }
              this.MoneyVaultDoor = nearbyProp;
              this.CheckedDoorMoneyVault = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 8f);
            }
label_2541:
            if (this.GunLockerBought == 1 && !this.CheckedDoorGunLocker && this.VaultdoorsL.Count >= 5)
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__208 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__208 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__208.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p208 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__208;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__207 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__207 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__207.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__207, this, this.VaultdoorsL[0]);
              object obj2 = target1((CallSite) p208, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__212 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__212 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__212.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__212, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__211 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__211 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__211.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p211 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__211;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__210 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__210 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__210.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p210 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__210;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__209 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__209 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__209.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__209, this, this.VaultdoorsL[1]);
                object obj6 = target3((CallSite) p210, model2, obj5);
                obj3 = target2((CallSite) p211, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__216 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__216 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__216.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__216, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__215 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__215 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__215.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p215 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__215;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__214 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__214 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__214.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p214 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__214;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__213 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__213 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__213.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__213, this, this.VaultdoorsL[2]);
                object obj6 = target3((CallSite) p214, model2, obj5);
                obj8 = target2((CallSite) p215, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__220 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__220 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__220.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__220, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__219 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__219 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__219.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p219 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__219;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__218 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__218 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__218.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p218 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__218;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__217 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__217 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__217.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__217, this, this.VaultdoorsL[3]);
                object obj6 = target3((CallSite) p218, model2, obj5);
                obj10 = target2((CallSite) p219, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__224 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__224 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__224.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__224, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__223 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__223 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__223.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p223 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__223;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__222 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__222 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__222.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p222 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__222;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__221 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__221 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__221.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__221, this, this.VaultdoorsL[4]);
                object obj6 = target3((CallSite) p222, model2, obj5);
                obj12 = target2((CallSite) p223, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__229 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__229 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__229.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__229, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__228 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__228 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__228.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p228 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__228;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__227 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__227 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__227.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p227 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__227;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__226 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__226 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__226.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p226 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__226;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__225 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__225 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__225.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__225, this, this.VaultdoorsL[5]);
                object obj6 = target4((CallSite) p226, model2, obj5);
                object obj14 = target3((CallSite) p227, obj4, obj6);
                if (!target2((CallSite) p228, obj14))
                  goto label_2603;
              }
              this.GunLockerDoor = nearbyProp;
              this.CheckedDoorGunLocker = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 79f);
            }
label_2603:
            if (this.MoneyVaultBought == 1 && !this.CheckedDoorMoneyVault && this.VaultdoorsR.Count >= 5)
            {
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__231 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__231 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              Func<CallSite, GTA.Model, object, object> target1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__231.Target;
              // ISSUE: reference to a compiler-generated field
              CallSite<Func<CallSite, GTA.Model, object, object>> p231 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__231;
              GTA.Model model1 = nearbyProp.Model;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__230 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__230 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              object obj1 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__230.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__230, this, this.VaultdoorsR[0]);
              object obj2 = target1((CallSite) p231, model1, obj1);
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__235 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__235 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj3;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__235.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__235, obj2))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__234 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__234 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__234.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p234 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__234;
                object obj4 = obj2;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__233 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__233 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__233.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p233 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__233;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__232 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__232 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__232.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__232, this, this.VaultdoorsR[1]);
                object obj6 = target3((CallSite) p233, model2, obj5);
                obj3 = target2((CallSite) p234, obj4, obj6);
              }
              else
                obj3 = obj2;
              object obj7 = obj3;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__239 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__239 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj8;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__239.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__239, obj7))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__238 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__238 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__238.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p238 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__238;
                object obj4 = obj7;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__237 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__237 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__237.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p237 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__237;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__236 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__236 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__236.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__236, this, this.VaultdoorsR[2]);
                object obj6 = target3((CallSite) p237, model2, obj5);
                obj8 = target2((CallSite) p238, obj4, obj6);
              }
              else
                obj8 = obj7;
              object obj9 = obj8;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__243 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__243 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj10;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__243.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__243, obj9))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__242 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__242 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__242.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p242 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__242;
                object obj4 = obj9;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__241 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__241 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__241.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p241 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__241;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__240 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__240 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__240.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__240, this, this.VaultdoorsR[3]);
                object obj6 = target3((CallSite) p241, model2, obj5);
                obj10 = target2((CallSite) p242, obj4, obj6);
              }
              else
                obj10 = obj9;
              object obj11 = obj10;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__247 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__247 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              object obj12;
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__247.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__247, obj11))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__246 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__246 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__246.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p246 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__246;
                object obj4 = obj11;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__245 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__245 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__245.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p245 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__245;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__244 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__244 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__244.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__244, this, this.VaultdoorsR[4]);
                object obj6 = target3((CallSite) p245, model2, obj5);
                obj12 = target2((CallSite) p246, obj4, obj6);
              }
              else
                obj12 = obj11;
              object obj13 = obj12;
              // ISSUE: reference to a compiler-generated field
              if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__252 == null)
              {
                // ISSUE: reference to a compiler-generated field
                ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__252 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                {
                  CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                }));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              if (!ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__252.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__252, obj13))
              {
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__251 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__251 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, bool> target2 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__251.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, bool>> p251 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__251;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__250 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__250 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.BinaryOperationLogical, ExpressionType.Or, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, object, object, object> target3 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__250.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, object, object, object>> p250 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__250;
                object obj4 = obj13;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__249 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__249 = CallSite<Func<CallSite, GTA.Model, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                Func<CallSite, GTA.Model, object, object> target4 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__249.Target;
                // ISSUE: reference to a compiler-generated field
                CallSite<Func<CallSite, GTA.Model, object, object>> p249 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__249;
                GTA.Model model2 = nearbyProp.Model;
                // ISSUE: reference to a compiler-generated field
                if (ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__248 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__248 = CallSite<Func<CallSite, ExecutiveTower, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName, "RequestModel", (IEnumerable<System.Type>) null, typeof (ExecutiveTower), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                object obj5 = ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__248.Target((CallSite) ExecutiveTower.\u003C\u003Eo__955.\u003C\u003Ep__248, this, this.VaultdoorsR[5]);
                object obj6 = target4((CallSite) p249, model2, obj5);
                object obj14 = target3((CallSite) p250, obj4, obj6);
                if (!target2((CallSite) p251, obj14))
                  continue;
              }
              this.MoneyVaultDoor = nearbyProp;
              this.CheckedDoorMoneyVault = true;
              nearbyProp.Rotation = new Vector3(0.0f, 0.0f, 99f);
            }
          }
        }
      }
      if (this.GunLockerBought == 1 && (double) World.GetDistance(Game.Player.Character.Position, this.GunLockerMarker) < 2.0 && (Entity) this.GunLockerDoor != (Entity) null)
      {
        if (!this.isGLOpen)
          this.DisplayHelpTextThisFrame("Press ~INPUT_AIM~ To Open Gun Locker");
        if (this.isGLOpen)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_AIM~ To Close Gun Locker, ~INPUT_CONTEXT~ To Access Gun Locker");
          if ((double) World.GetDistance(Game.Player.Character.Position, this.GunLockerMarker) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && !this.GunmainMenu.Visible)
            this.GunmainMenu.Visible = !this.GunmainMenu.Visible;
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Aim))
        {
          if (!this.isGLOpen)
          {
            Script.Wait(100);
            string str = "anim@amb@office@boss@vault@left@male@";
            ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@");
            if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
            {
              this.isGLOpen = true;
              Prop gunLockerDoor = this.GunLockerDoor;
              this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) gunLockerDoor.Position.X, (InputArgument) gunLockerDoor.Position.Y, (InputArgument) gunLockerDoor.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) gunLockerDoor.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) "open", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "open", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) gunLockerDoor, (InputArgument) this.Scene1, (InputArgument) "open_door", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(6000);
              Game.Player.Character.Task.ClearAll();
            }
          }
          else if (this.isGLOpen)
          {
            this.isGLOpen = false;
            Prop gunLockerDoor = this.GunLockerDoor;
            this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) gunLockerDoor.Position.X, (InputArgument) gunLockerDoor.Position.Y, (InputArgument) gunLockerDoor.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) (gunLockerDoor.Rotation.Z + 100f), (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) "close", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "close", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) gunLockerDoor, (InputArgument) this.Scene1, (InputArgument) "close_door", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@left@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(6000);
            Game.Player.Character.Task.ClearAll();
          }
        }
      }
      if (this.MoneyVaultBought == 1 && (double) World.GetDistance(Game.Player.Character.Position, this.MoneyStorageMarker) < 2.0 && (Entity) this.MoneyVaultDoor != (Entity) null)
      {
        if (!this.isMVOpen)
          this.DisplayHelpTextThisFrame("Press ~INPUT_AIM~ To Open Money Vault");
        if (this.isMVOpen)
        {
          this.DisplayHelpTextThisFrame("Press ~INPUT_AIM~ To Close Money Vault, ~INPUT_CONTEXT~ To Access Money Vault");
          if ((double) World.GetDistance(Game.Player.Character.Position, this.MoneyStorageMarker) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && !this.MoneymainMenu.Visible)
            this.MoneymainMenu.Visible = !this.MoneymainMenu.Visible;
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Aim))
        {
          if (!this.isMVOpen)
          {
            Script.Wait(100);
            string str = "anim@amb@office@boss@vault@right@male@";
            ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@");
            if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
            {
              this.isMVOpen = true;
              Prop moneyVaultDoor = this.MoneyVaultDoor;
              this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) moneyVaultDoor.Position.X, (InputArgument) moneyVaultDoor.Position.Y, (InputArgument) moneyVaultDoor.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) moneyVaultDoor.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) "open", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "open", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) moneyVaultDoor, (InputArgument) this.Scene1, (InputArgument) "open_door", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(6000);
              Game.Player.Character.Task.ClearAll();
            }
          }
          else if (this.isMVOpen)
          {
            this.isMVOpen = false;
            Prop moneyVaultDoor = this.MoneyVaultDoor;
            Game.Player.Character.FreezePosition = true;
            this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) moneyVaultDoor.Position.X, (InputArgument) moneyVaultDoor.Position.Y, (InputArgument) moneyVaultDoor.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) (moneyVaultDoor.Rotation.Z - 90f), (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) "close", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "close", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) moneyVaultDoor, (InputArgument) this.Scene1, (InputArgument) "close_door", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@vault@right@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(6000);
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.FreezePosition = false;
          }
        }
      }
      double distance3 = (double) World.GetDistance(Game.Player.Character.Position, this.GunLockerMarker);
      if (this.MoneymodMenuPool != null && this.MoneymodMenuPool.IsAnyMenuOpen())
        this.MoneymodMenuPool.ProcessMenus();
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ArcadiusVault) < 40.0)
        this.MoneyStorageMarker = this.ArcadiusVault;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankVault) < 40.0)
        this.MoneyStorageMarker = this.MazeBankVault;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.LombokVault) < 40.0)
        this.MoneyStorageMarker = this.LombokVault;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MazeBankWestVault) < 40.0)
        this.MoneyStorageMarker = this.MazeBankWestVault;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MoneyStorageMarker) < 100.0)
      {
        if (this.MoneyVaultBought == 1)
        {
          int businessLocation1 = this.BusinessLocation;
          int businessLocation2 = this.BusinessLocation;
          int businessLocation3 = this.BusinessLocation;
          int businessLocation4 = this.BusinessLocation;
        }
        if (this.MoneyVaultBought == 0)
        {
          int businessLocation1 = this.BusinessLocation;
          int businessLocation2 = this.BusinessLocation;
          int businessLocation3 = this.BusinessLocation;
          int businessLocation4 = this.BusinessLocation;
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MoneyStorageMarker) < 20.0 && this.MoneyVaultBought == 1)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.MoneyStorageMarker) < 2.0)
        {
          if (this.MoneyVaultBought == 1 && (double) World.GetDistance(Game.Player.Character.Position, this.ArcadiusVault) < 3.0)
            this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
          this.Config.GetValue<int>("Setup", "MoneyVaultBought", this.MoneyVaultBought);
        }
        if (!this.read)
        {
          this.read = true;
          this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        }
      }
      int num5;
      float num6;
      if (this.SellStockDeliveryMission)
      {
        if (Game.Player.IsAlive)
        {
          if (this.missionnum == 4444)
          {
            if (!this.Sam1.IsAlive)
            {
              if (this.Sam1blip != (Blip) null)
                this.Sam1blip.Remove();
            }
            else
            {
              if (this.Sam1.Model == (GTA.Model) VehicleHash.Flatbed)
              {
                Vector3 offsetInWorldCoords1 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                Vector3 offsetInWorldCoords2 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                Vector3 offsetInWorldCoords3 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                this.SellStockProp1.Position = offsetInWorldCoords1;
                this.SellStockProp1.Rotation = new Vector3(this.Sam1.Rotation.X, this.Sam1.Rotation.Y, this.Sam1.Heading);
                this.SellStockProp2.Position = offsetInWorldCoords2;
                this.SellStockProp2.Rotation = new Vector3(this.Sam1.Rotation.X, this.Sam1.Rotation.Y, this.Sam1.Heading);
                this.SellStockProp3.Position = offsetInWorldCoords3;
                this.SellStockProp3.Rotation = new Vector3(this.Sam1.Rotation.X, this.Sam1.Rotation.Y, this.Sam1.Heading);
              }
              this.Sam1blip.Position = this.Sam1.Position;
            }
            if (!this.Sam2.IsAlive)
            {
              if (this.Sam2blip != (Blip) null)
                this.Sam2blip.Remove();
            }
            else
            {
              if (this.Sam2.Model == (GTA.Model) VehicleHash.Flatbed)
              {
                Vector3 offsetInWorldCoords1 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                Vector3 offsetInWorldCoords2 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                Vector3 offsetInWorldCoords3 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                this.SellStockProp4.Position = offsetInWorldCoords1;
                this.SellStockProp4.Rotation = new Vector3(this.Sam2.Rotation.X, this.Sam2.Rotation.Y, this.Sam2.Heading);
                this.SellStockProp5.Position = offsetInWorldCoords2;
                this.SellStockProp5.Rotation = new Vector3(this.Sam2.Rotation.X, this.Sam2.Rotation.Y, this.Sam2.Heading);
                this.SellStockProp6.Position = offsetInWorldCoords3;
                this.SellStockProp6.Rotation = new Vector3(this.Sam2.Rotation.X, this.Sam2.Rotation.Y, this.Sam2.Heading);
              }
              this.Sam2blip.Position = this.Sam2.Position;
            }
            if (!this.Sam3.IsAlive)
            {
              if (this.Sam3blip != (Blip) null)
                this.Sam3blip.Remove();
            }
            else
            {
              if (this.Sam3.Model == (GTA.Model) VehicleHash.Flatbed)
              {
                Vector3 offsetInWorldCoords1 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                Vector3 offsetInWorldCoords2 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                Vector3 offsetInWorldCoords3 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                this.SellStockProp7.Position = offsetInWorldCoords1;
                this.SellStockProp7.Rotation = new Vector3(this.Sam3.Rotation.X, this.Sam3.Rotation.Y, this.Sam3.Heading);
                this.SellStockProp8.Position = offsetInWorldCoords2;
                this.SellStockProp8.Rotation = new Vector3(this.Sam3.Rotation.X, this.Sam3.Rotation.Y, this.Sam3.Heading);
                this.SellStockProp9.Position = offsetInWorldCoords3;
                this.SellStockProp9.Rotation = new Vector3(this.Sam3.Rotation.X, this.Sam3.Rotation.Y, this.Sam3.Heading);
              }
              this.Sam3blip.Position = this.Sam3.Position;
            }
            if (!this.Sam1.IsAlive && !this.Sam2.IsAlive && !this.Sam3.IsAlive)
            {
              Game.FadeScreenOut(500);
              Script.Wait(500);
              this.EndPointBlip.Remove();
              if ((Entity) this.Sam1 != (Entity) null)
                this.Sam1.Delete();
              if ((Entity) this.Sam2 != (Entity) null)
                this.Sam2.Delete();
              if ((Entity) this.Sam3 != (Entity) null)
                this.Sam3.Delete();
              if (this.Sam1blip != (Blip) null)
                this.Sam1blip.Remove();
              if (this.Sam2blip != (Blip) null)
                this.Sam2blip.Remove();
              if (this.Sam3blip != (Blip) null)
                this.Sam3blip.Remove();
              Script.Wait(500);
              Game.FadeScreenIn(500);
              UI.Notify(this.GetHostName() + " All Enemy vehicle Destroyed ");
              UI.Notify(this.GetHostName() + " Stocks Value just Increased");
              UI.Notify("~g~Stock Value :  $" + this.stocksvalue.ToString("N"));
              num5 = (int) ((double) this.stocksvalue * 0.25);
              UI.Notify("~g~Stock Increase : +$" + num5.ToString("N"));
              num5 = (int) ((double) this.stocksvalue * 1.25);
              UI.Notify("~g~Stock Value Now: +$" + num5.ToString("N"));
              this.missionnum = 0;
              this.stocksvalue = (float) (int) ((double) this.stocksvalue * 1.25);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
            }
            if ((double) World.GetDistance(this.Sam1.Position, this.EndPointVec) < 20.0 || (double) World.GetDistance(this.Sam2.Position, this.EndPointVec) < 20.0 || (double) World.GetDistance(this.Sam3.Position, this.EndPointVec) < 20.0)
            {
              Game.FadeScreenOut(500);
              Script.Wait(500);
              if (this.EndPointBlip != (Blip) null)
                this.EndPointBlip.Remove();
              if ((Entity) this.Sam1 != (Entity) null)
                this.Sam1.Delete();
              if ((Entity) this.Sam2 != (Entity) null)
                this.Sam2.Delete();
              if ((Entity) this.Sam3 != (Entity) null)
                this.Sam3.Delete();
              if (this.Sam1blip != (Blip) null)
                this.Sam1blip.Remove();
              if (this.Sam2blip != (Blip) null)
                this.Sam2blip.Remove();
              if (this.Sam3blip != (Blip) null)
                this.Sam3blip.Remove();
              Script.Wait(500);
              Game.FadeScreenIn(500);
              UI.Notify(this.GetHostName() + " Boss a vehicle Reached the destination!, We cannot aford to have the millitary come after us!");
              this.missionnum = 0;
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
            }
          }
          if (this.missionnum == 3333)
          {
            if (this.SupplyGarageBlip != (Blip) null)
              this.SupplyGarageBlip.ShowRoute = true;
            if (this.CreateSupplyVehicle && (Entity) this.StockVeh != (Entity) null)
            {
              if (!this.StockVeh.IsAlive)
              {
                if (this.StockVeh.CurrentBlip != (Blip) null)
                  this.StockVeh.CurrentBlip.Remove();
                this.CreateSupplyVehicle = false;
                this.StockVeh.MarkAsNoLongerNeeded();
                if ((Entity) this.SellStockProp1 != (Entity) null)
                  this.SellStockProp1.MarkAsNoLongerNeeded();
                if ((Entity) this.SellStockProp2 != (Entity) null)
                  this.SellStockProp2.MarkAsNoLongerNeeded();
                if ((Entity) this.SellStockProp3 != (Entity) null)
                  this.SellStockProp3.MarkAsNoLongerNeeded();
                this.SellStockProp1 = (Prop) null;
                this.SellStockProp2 = (Prop) null;
                this.SellStockProp3 = (Prop) null;
                this.StockVeh = (Vehicle) null;
                UI.Notify(this.GetHostName() + " A rival supply vehicle was destroyed, search for another one!");
                return;
              }
              if (this.StockVeh.Model == (GTA.Model) VehicleHash.Flatbed)
              {
                Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
                Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
                Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                this.SellStockProp1.Position = offsetInWorldCoords1;
                this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
                this.SellStockProp2.Position = offsetInWorldCoords2;
                this.SellStockProp2.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
                this.SellStockProp3.Position = offsetInWorldCoords3;
                this.SellStockProp3.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              }
              if (this.StockVeh.Model == (GTA.Model) VehicleHash.TipTruck)
              {
                Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -0.75f, 0.75f));
                Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.75f));
                this.SellStockProp1.Position = offsetInWorldCoords1;
                this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
                this.SellStockProp2.Position = offsetInWorldCoords2;
                this.SellStockProp2.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              }
              if (this.StockVeh.Model == (GTA.Model) VehicleHash.Guardian)
              {
                this.SellStockProp1.Position = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
                this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              }
              if ((double) World.GetDistance(this.StockVeh.Position, this.GarageMarker) < 200.0)
                World.DrawMarker(MarkerType.VerticalCylinder, this.GarageMarker, Vector3.Zero, Vector3.Zero, new Vector3(6f, 6f, 4f), Color.White);
              if ((double) World.GetDistance(this.StockVeh.Position, this.GarageMarker) < 5.0)
              {
                this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Deliver Cargo ~INPUT_COVER~ to Quit mission");
                if (Game.IsControlPressed(2, GTA.Control.Context))
                {
                  this.maxstocks = 10 * this.purchaselvl;
                  if (this.stockscount <= this.maxstocks)
                  {
                    if (this.StockVeh.Model == (GTA.Model) VehicleHash.Flatbed)
                    {
                      this.stocksvalue += this.IncreaseStockMinAmount * 9f;
                      this.stockscount += 3;
                      string hostName = this.GetHostName();
                      num6 = this.IncreaseStockMinAmount * 9f;
                      string str = num6.ToString("N");
                      UI.Notify(hostName + " Ok you have stolen a 3 crates worth ~g~$" + str);
                      this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
                      this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                      this.Config.Save();
                    }
                    if (this.StockVeh.Model == (GTA.Model) VehicleHash.TipTruck)
                    {
                      this.stocksvalue += this.IncreaseStockMinAmount * 6f;
                      this.stockscount += 2;
                      string hostName = this.GetHostName();
                      num6 = this.IncreaseStockMinAmount * 6f;
                      string str = num6.ToString("N");
                      UI.Notify(hostName + " Ok you have stolen 2 singles crate worth ~g~$" + str);
                      this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
                      this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                      this.Config.Save();
                    }
                    if (this.StockVeh.Model == (GTA.Model) VehicleHash.Guardian)
                    {
                      this.stocksvalue += this.IncreaseStockMinAmount * 3f;
                      ++this.stockscount;
                      string hostName = this.GetHostName();
                      num6 = this.IncreaseStockMinAmount * 3f;
                      string str = num6.ToString("N");
                      UI.Notify(hostName + " Ok you have stolen a single crate worth ~g~$" + str);
                      this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
                      this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                      this.Config.Save();
                    }
                    if ((Entity) this.StockVeh != (Entity) null)
                    {
                      this.StockVeh.CurrentBlip.Remove();
                      this.StockVeh.IsPersistent = false;
                      this.StockVeh.MarkAsNoLongerNeeded();
                    }
                    if (this.SellStockProps.Count > 0)
                    {
                      foreach (Prop sellStockProp in this.SellStockProps)
                      {
                        if ((Entity) sellStockProp != (Entity) null)
                          sellStockProp.Delete();
                      }
                    }
                    this.CreateSupplyVehicle = false;
                  }
                  if (this.stockscount >= this.maxstocks)
                  {
                    if (this.SupplyGarageBlip != (Blip) null)
                      this.SupplyGarageBlip.Remove();
                    if (this.SellStockProps.Count > 0)
                    {
                      foreach (Prop sellStockProp in this.SellStockProps)
                      {
                        if ((Entity) sellStockProp != (Entity) null)
                          sellStockProp.Delete();
                      }
                    }
                    foreach (Blip blip in this.DropBlip)
                    {
                      if (blip != (Blip) null)
                        blip.Remove();
                    }
                    if (this.EndPointBlip != (Blip) null)
                      this.EndPointBlip.Remove();
                    if ((Entity) this.StockVeh != (Entity) null)
                      this.StockVeh.Delete();
                    UI.Notify("Weve gotten as much as we can hold");
                  }
                }
                if (Game.IsControlPressed(2, GTA.Control.Cover))
                {
                  if (this.EndPointBlip != (Blip) null)
                    this.EndPointBlip.Remove();
                  if (this.SupplyGarageBlip != (Blip) null)
                    this.SupplyGarageBlip.Remove();
                  if (this.SellStockProps.Count > 0)
                  {
                    foreach (Prop sellStockProp in this.SellStockProps)
                    {
                      if ((Entity) sellStockProp != (Entity) null)
                        sellStockProp.Delete();
                    }
                  }
                  foreach (Blip blip in this.DropBlip)
                  {
                    if (blip != (Blip) null)
                      blip.Remove();
                  }
                  if ((Entity) this.StockVeh != (Entity) null)
                    this.StockVeh = (Vehicle) null;
                  UI.Notify("You have cancelled the mission");
                }
              }
            }
            for (int index2 = 0; index2 < this.DropPoint.Count; num5 = index2++)
            {
              if (this.DropBlip[index2] != (Blip) null)
              {
                if (this.DropBlip[index2].Alpha == (int) byte.MaxValue)
                {
                  try
                  {
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.DropPoint[index2]) < 200.0)
                      World.DrawMarker(MarkerType.VerticalCylinder, this.DropPoint[index2], Vector3.Zero, Vector3.Zero, new Vector3(4f, 6f, 4f), Color.White);
                    if ((double) World.GetDistance(Game.Player.Character.Position, this.DropPoint[index2]) < 100.0)
                    {
                      if (!this.CreateSupplyVehicle)
                      {
                        UI.Notify(this.GetHostName() + " You have Located a nearby adversary Cargo Vehicle, steal it and return it to the Garage");
                        if (this.SupplyGarageBlip != (Blip) null)
                          this.SupplyGarageBlip.Remove();
                        this.SupplyGarageBlip = World.CreateBlip(this.GarageMarker);
                        this.SupplyGarageBlip.Sprite = BlipSprite.Briefcase2;
                        this.SupplyGarageBlip.Color = BlipColor.Blue4;
                        this.SupplyGarageBlip.Name = "Cargo Deliver Point";
                        this.SupplyGarageBlip.Scale = 1.5f;
                        this.DropBlip[index2].Alpha = 0;
                        this.CreateSupplyVehicle = true;
                        if (this.SellStockProps.Count > 0)
                        {
                          foreach (Prop sellStockProp in this.SellStockProps)
                          {
                            if ((Entity) sellStockProp != (Entity) null)
                              sellStockProp.Delete();
                          }
                        }
                        if ((Entity) this.StockVeh != (Entity) null)
                          this.StockVeh.Delete();
                        foreach (Ped suppyGuard in this.SuppyGuards)
                        {
                          if ((Entity) suppyGuard != (Entity) null)
                            suppyGuard.Delete();
                        }
                        System.Random random = new System.Random();
                        float num1 = (float) random.Next(0, 100);
                        if ((double) num1 < 33.0)
                        {
                          this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.TipTruck, this.DropPoint[index2], 0.0f);
                          this.StockVeh.ToggleExtra(2, false);
                          Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
                          Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
                          this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp1 = prop1;
                          this.SellStockProps.Add(prop1);
                          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp2 = prop2;
                          this.SellStockProps.Add(prop2);
                          this.SellStockProp1.HasCollision = false;
                          this.SellStockProp2.HasCollision = false;
                        }
                        if ((double) num1 > 33.0 && (double) num1 < 66.0)
                        {
                          this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.DropPoint[index2], 0.0f);
                          Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
                          Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
                          Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
                          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp1 = prop1;
                          this.SellStockProps.Add(prop1);
                          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp2 = prop2;
                          this.SellStockProps.Add(prop2);
                          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp3 = prop3;
                          this.SellStockProps.Add(prop3);
                          this.SellStockProp1.HasCollision = false;
                          this.SellStockProp2.HasCollision = false;
                          this.SellStockProp3.HasCollision = false;
                        }
                        if ((double) num1 > 66.0)
                        {
                          this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Guardian, this.DropPoint[index2], 0.0f);
                          Vector3 offsetInWorldCoords = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.1f));
                          Prop prop = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
                          this.SellStockProp1 = prop;
                          this.SellStockProps.Add(prop);
                          this.SellStockProp1.HasCollision = false;
                        }
                        float num2 = (float) random.Next(6, 8);
                        for (int index3 = 0; (double) index3 < (double) num2; ++index3)
                        {
                          Ped ped = World.CreatePed(this.RequestModel(PedHash.Polynesian01AMM), this.DropPoint[index2].Around(20f));
                          this.SuppyGuards.Add(ped);
                          int num3 = new System.Random().Next(0, 300);
                          if (num3 < 50)
                            ped.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
                          if (num3 > 50 && num3 < 100)
                            ped.Weapons.Give(WeaponHash.PumpShotgun, 9999, true, true);
                          if (num3 > 100 && num3 < 150)
                            ped.Weapons.Give(WeaponHash.AssaultRifle, 9999, true, true);
                          if (num3 > 150 && num3 < 200)
                            ped.Weapons.Give(WeaponHash.SMG, 9999, true, true);
                          if (num3 > 200 && num3 < 250)
                            ped.Weapons.Give(WeaponHash.DoubleBarrelShotgun, 9999, true, true);
                          if (num3 > 250 && num3 < 300)
                            ped.Weapons.Give(WeaponHash.MicroSMG, 9999, true, true);
                          ped.Accuracy = 400;
                          int num4 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
                          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped, (InputArgument) num4);
                          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
                          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
                          ped.Task.FightAgainst(Game.Player.Character);
                        }
                        if ((Entity) this.StockVeh != (Entity) null)
                        {
                          this.StockVeh.AddBlip();
                          this.StockVeh.CurrentBlip.Sprite = BlipSprite.ArmoredTruck;
                          this.StockVeh.CurrentBlip.Color = BlipColor.Blue4;
                          this.StockVeh.CurrentBlip.Name = "Cargo Vehicle";
                        }
                      }
                    }
                  }
                  catch
                  {
                    UI.Notify("Crash1 " + this.DropBlip.Count.ToString() + "__" + this.DropPoint.Count.ToString());
                  }
                }
              }
            }
          }
          if (this.missionnum == 2222 && (Entity) this.StockVeh != (Entity) null)
          {
            if (this.StockVeh.Model == (GTA.Model) VehicleHash.Flatbed)
            {
              Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -0.5f, 0.5f));
              Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.5f));
              Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
              this.SellStockProp1.Position = offsetInWorldCoords1;
              this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              this.SellStockProp2.Position = offsetInWorldCoords2;
              this.SellStockProp2.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              this.SellStockProp3.Position = offsetInWorldCoords3;
              this.SellStockProp3.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
            }
            if (this.StockVeh.Model == (GTA.Model) VehicleHash.TipTruck)
            {
              Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -0.75f, 0.75f));
              Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2.25f, 0.75f));
              this.SellStockProp1.Position = offsetInWorldCoords1;
              this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
              this.SellStockProp2.Position = offsetInWorldCoords2;
              this.SellStockProp2.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
            }
            if (this.StockVeh.Model == (GTA.Model) VehicleHash.Guardian)
            {
              Vector3 offsetInWorldCoords = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
              World.DrawMarker(MarkerType.DebugSphere, offsetInWorldCoords, Vector3.Zero, Vector3.Zero, new Vector3(0.15f, 0.15f, 0.15f), Color.Green);
              this.SellStockProp1.Position = offsetInWorldCoords;
              this.SellStockProp1.Rotation = new Vector3(this.StockVeh.Rotation.X, this.StockVeh.Rotation.Y, this.StockVeh.Heading);
            }
            if (this.StockVeh.IsAlive)
            {
              try
              {
                for (int index2 = 0; index2 < this.DropBlip.Count; num5 = index2++)
                {
                  if (this.DropBlip[index2] != (Blip) null && this.DropBlip[index2].Alpha == (int) byte.MaxValue)
                  {
                    if (this.SellStockPointsBeenAt != this.AmttoDeliver)
                    {
                      if ((double) World.GetDistance(this.StockVeh.Position, this.DropPoint[index2]) < 200.0)
                        World.DrawMarker(MarkerType.VerticalCylinder, this.DropPoint[index2], Vector3.Zero, Vector3.Zero, new Vector3(4f, 6f, 4f), Color.White);
                      if ((double) World.GetDistance(this.StockVeh.Position, this.DropPoint[index2]) < 10.0)
                      {
                        num5 = this.SellStockPointsBeenAt++;
                        this.DropBlip[index2].Alpha = 0;
                        this.DropBlip[index2].IsShortRange = true;
                        this.DropBlip[index2].Remove();
                        UI.Notify("Another package successfuly delivered");
                      }
                    }
                    if (this.SellStockPointsBeenAt == this.AmttoDeliver)
                    {
                      if (this.SellStockProps.Count > 0)
                      {
                        foreach (Prop sellStockProp in this.SellStockProps)
                        {
                          if ((Entity) sellStockProp != (Entity) null)
                            sellStockProp.Delete();
                        }
                      }
                      foreach (Blip blip in this.DropBlip)
                      {
                        if (blip != (Blip) null)
                          blip.Remove();
                      }
                      if ((Entity) this.StockVeh != (Entity) null)
                        this.StockVeh.Delete();
                      ++this.SellStockPointsBeenAt;
                      this.SellStockDeliveryMission = false;
                      UI.Notify("All Packages successfuly delivered");
                      Game.Player.Money += (int) ((double) this.stocksvalue * 1.25);
                      this.stocksvalue = 0.0f;
                      this.stockscount = 0;
                      this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
                      this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                      this.Config.Save();
                    }
                  }
                }
              }
              catch
              {
                UI.Notify("Crash2");
              }
            }
            if (!this.StockVeh.IsAlive && this.SellStockDeliveryMission)
            {
              if (this.SellStockProps.Count > 0)
              {
                foreach (Prop sellStockProp in this.SellStockProps)
                {
                  if ((Entity) sellStockProp != (Entity) null)
                    sellStockProp.Delete();
                }
              }
              foreach (Blip blip in this.DropBlip)
              {
                if (blip != (Blip) null)
                  blip.Remove();
              }
              if ((Entity) this.StockVeh != (Entity) null)
                this.StockVeh.Delete();
              this.SellStockDeliveryMission = false;
            }
          }
        }
        if (!Game.Player.IsAlive)
        {
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.EndPointBlip != (Blip) null)
            this.EndPointBlip.Remove();
          if ((Entity) this.Sam1 != (Entity) null)
            this.Sam1.Delete();
          if ((Entity) this.Sam2 != (Entity) null)
            this.Sam2.Delete();
          if ((Entity) this.Sam3 != (Entity) null)
            this.Sam3.Delete();
          if (this.Sam1blip != (Blip) null)
            this.Sam1blip.Remove();
          if (this.Sam2blip != (Blip) null)
            this.Sam2blip.Remove();
          if (this.Sam3blip != (Blip) null)
            this.Sam3blip.Remove();
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          this.SellStockDeliveryMission = false;
          this.missionnum = 0;
          UI.Notify("Stock Supply Mission has been cancelled");
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(-2399.7f, 718.1f, 221.4f)) < 2.0 && Game.Player.Character.Alpha == 15)
      {
        Script.Wait(600);
        this.MainModDestroy();
        this.MainModRefresh();
      }
      if (ExecutiveTower.CustomizemodMenuPool != null && ExecutiveTower.CustomizemodMenuPool.IsAnyMenuOpen())
        ExecutiveTower.CustomizemodMenuPool.ProcessMenus();
      if ((Entity) ExecutiveTower.VehicleA != (Entity) null && ExecutiveTower.VehicleA.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
      {
        ExecutiveTower.VehicleA.FreezePosition = true;
        this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to to Save Vehicle and ~INPUT_CONTEXT~ to send it back to the Garage");
      }
      int num7 = this.IsinInterior ? 1 : 0;
      if (this.IsinInterior)
      {
        if (!this.CreatedAssistant)
        {
          this.CreatedAssistant = true;
          this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
          this.SpawnCEOChair(this.ChairModelCEO.ToString(), this.CEOChairPos, new Vector3(0.0f, 0.0f, this.Assistant_ChairRot));
        }
        this.CreateOText(1);
      }
      if (!this.IsinInterior && this.CreatedAssistant)
      {
        this.CreatedAssistant = false;
        if ((Entity) this.AssistantPed != (Entity) null)
          this.AssistantPed.Delete();
        if ((Entity) this.CEOChairProp != (Entity) null)
          this.CEOChairProp.Delete();
        if ((Entity) this.AssistantChairProp != (Entity) null)
          this.AssistantChairProp.Delete();
      }
      if (this.WarehouseCam != (Camera) null && this.WCamOn && !this.modMenuPool.IsAnyMenuOpen())
      {
        this.WCamOn = false;
        this.modMenuPool.CloseAllMenus();
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.WarehouseCam.IsActive = false;
        this.WarehouseCam.Destroy();
        Game.Player.Character.FreezePosition = false;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.Position = this.MenuMarker;
      }
      if (this.PlayerChangingName && !this.modMenuPool.IsAnyMenuOpen() && !this.IsSittinginCeoSeat)
      {
        Game.Player.Character.IsVisible = true;
        this.PlayerChangingName = false;
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.PlayerChangingNameCam.FarClip = 2000f;
        this.PlayerChangingNameCam.IsActive = false;
        this.PlayerChangingNameCam.Destroy();
        this.modMenuPool.CloseAllMenus();
        Game.Player.Character.FreezePosition = false;
        this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
        this.ChairModelCEO.ToString();
        Script.Wait(1);
        ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
        this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
        Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        this.IsSittinginCeoSeat = true;
        if (Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
          UI.Notify("Debug 8");
      }
      if (this.PlayerChangingNameCam != (Camera) null && this.PlayerChangingName && !this.modMenuPool.IsAnyMenuOpen())
      {
        Game.Player.Character.IsVisible = true;
        this.PlayerChangingName = false;
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.PlayerChangingNameCam.FarClip = 2000f;
        this.PlayerChangingNameCam.IsActive = false;
        this.PlayerChangingNameCam.Destroy();
        this.modMenuPool.CloseAllMenus();
        Game.Player.Character.FreezePosition = false;
        this.SpawnAChair(this.ChairModelAssistant.ToString(), this.AssistantChair, new Vector3(0.0f, 0.0f, this.CEO_ChairRot));
        this.ChairModelCEO.ToString();
        Script.Wait(1);
        ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
        this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
        Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
        this.IsSittinginCeoSeat = true;
        if (Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
          UI.Notify("Debug 7");
      }
      this.OnKeyDown();
      if (this.modMenuPool != null && this.modMenuPool.IsAnyMenuOpen())
        this.modMenuPool.ProcessMenus();
      if ((Entity) this.VehicleMissioncar != (Entity) null && (double) World.GetDistance(Game.Player.Character.Position, this.VehicleMissioncar.Position) < 100.0)
        this.VehicleMissioncar.IsInvincible = false;
      Color color1 = this.ArcadiusMarkerColor;
      if (this.BusinessLocation == 3)
        color1 = this.MBWMarkerColor;
      if (this.BusinessLocation == 2)
        color1 = this.LombokMarkerColor;
      if (this.BusinessLocation == 0)
        color1 = this.ArcadiusMarkerColor;
      if (this.BusinessLocation == 1)
        color1 = this.MazeBankMarkerColor;
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerEnter) < 60.0)
        World.DrawMarker(MarkerType.VerticalCylinder, this.MarkerEnter, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerExit) < 60.0)
        World.DrawMarker(MarkerType.VerticalCylinder, this.MarkerExit, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
      if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofEnterMarker) < 60.0)
        World.DrawMarker(MarkerType.VerticalCylinder, this.RoofEnterMarker, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
      if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofExitMarker) < 60.0)
        World.DrawMarker(MarkerType.VerticalCylinder, this.RoofExitMarker, Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
      if (this.assassinationmission == 1 || this.assassinationmission == 2 || this.assassinationmission == 3)
      {
        if (!this.EnemyPed.IsAlive)
        {
          Game.FadeScreenOut(500);
          Script.Wait(500);
          this.Enemy.Remove();
          this.EnemyPed.Delete();
          Game.Player.Money += this.assassinationpayout;
          this.assassinationmission = 0;
          Script.Wait(500);
          Game.FadeScreenIn(500);
        }
        this.Enemy.Position = this.EnemyPed.Position;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnemyPed.Position) < 100.0)
          this.EnemyPed.Task.FightAgainst(Game.Player.Character);
      }
      if (this.checkforconvoy)
      {
        if (this.convoysetup == 1 || this.convoysetup == 2 || this.convoysetup == 3)
        {
          this.ConvoyBlip1.Position = this.Vehicle1.Position;
          this.ConvoyBlip2.Position = this.Vehicle2.Position;
          this.ConvoyBlip3.Position = this.Vehicle3.Position;
        }
        if ((this.convoysetup == 1 || this.convoysetup == 2) && (!this.Vehicle1.IsAlive && !this.Vehicle2.IsAlive) && !this.Vehicle3.IsAlive)
        {
          Game.FadeScreenOut(500);
          Script.Wait(500);
          if (this.ConvoyBlip1 != (Blip) null)
            this.ConvoyBlip1.Remove();
          if (this.ConvoyBlip2 != (Blip) null)
            this.ConvoyBlip2.Remove();
          if (this.ConvoyBlip3 != (Blip) null)
            this.ConvoyBlip3.Remove();
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          if ((Entity) this.Vehicle2 != (Entity) null)
            this.Vehicle2.Delete();
          if ((Entity) this.Vehicle3 != (Entity) null)
            this.Vehicle3.Delete();
          Script.Wait(500);
          Game.FadeScreenIn(500);
          this.stocksvalue = (float) ((double) this.stocksvalue + 750000.0 + 750000.0 * (double) this.profitMargin / 100.0);
          UI.Notify(this.GetHostName() + " Great convoy Destoryed");
          UI.Notify(this.GetHostName() + " Stocks just Increased");
          this.ShowIncrease();
          this.checkforconvoy = false;
          this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
          this.Config.Save();
        }
        if (this.convoysetup == 3 && !this.Vehicle1.IsAlive && (!this.Vehicle2.IsAlive && !this.Vehicle3.IsAlive))
        {
          Game.FadeScreenOut(500);
          Script.Wait(500);
          if (this.ConvoyBlip1 != (Blip) null)
            this.ConvoyBlip1.Remove();
          if (this.ConvoyBlip2 != (Blip) null)
            this.ConvoyBlip2.Remove();
          if (this.ConvoyBlip3 != (Blip) null)
            this.ConvoyBlip3.Remove();
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          if ((Entity) this.Vehicle2 != (Entity) null)
            this.Vehicle2.Delete();
          if ((Entity) this.Vehicle3 != (Entity) null)
            this.Vehicle3.Delete();
          Script.Wait(500);
          Game.FadeScreenIn(500);
          this.stocksvalue = (float) ((double) this.stocksvalue + 500000.0 + 500000.0 * (double) this.profitMargin / 100.0);
          UI.Notify(this.GetHostName() + " Great convoy Destoryed");
          UI.Notify(this.GetHostName() + " Stocks just Increased");
          this.ShowIncrease();
          this.checkforconvoy = false;
          this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
          this.Config.Save();
        }
      }
      if ((Entity) this.RentedVehicle != (Entity) null && this.startedRent)
      {
        if (this.RentalvehicleHealth != this.RentedVehicle.Health)
        {
          this.RentalvehicleHealth = this.RentedVehicle.Health;
          UI.Notify(this.GetHostName() + " That is a rental!, be more carefull, we get billed each time you damage it! ");
          if (Game.Player.Money >= 300)
            Game.Player.Money -= 300;
        }
        if (this.RentTimer != 0)
        {
          num5 = this.RentTimer--;
        }
        else
        {
          this.startedRent = false;
          UI.Notify(this.GetHostName() + " ok Boss, the Rent for that vehicle has expired");
          this.RentedVehicle.GetPedOnSeat(VehicleSeat.Driver).Task.LeaveVehicle(LeaveVehicleFlags.BailOut);
          this.RentedVehicle.LockStatus = VehicleLockStatus.Locked;
        }
      }
      if (this.VehicleSetup)
      {
        if (this.Missionnum == 14)
        {
          if (!this.GotCar && this.VtoGet.IsAlive && this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
          {
            this.GotCar = true;
            System.Random random = new System.Random();
            if (random.Next(1, 100) < 20)
            {
              this.Dropzone = new Vector3(1737f, 3291f, 41f);
              this.DropzoneBlip = World.CreateBlip(this.Dropzone);
              this.DropzoneBlip.Name = "Drop Zone";
              this.DropzoneBlip.Sprite = BlipSprite.SpecialCargo;
              this.DropzoneBlip.Color = BlipColor.White;
              this.DropzoneBlip.Name = "Drop Zone";
            }
            if (random.Next(1, 100) > 20 && random.Next(1, 100) < 40)
            {
              this.Dropzone = new Vector3(141f, 6619f, 31f);
              this.DropzoneBlip = World.CreateBlip(this.Dropzone);
              this.DropzoneBlip.Name = "Drop Zone";
              this.DropzoneBlip.Sprite = BlipSprite.SpecialCargo;
              this.DropzoneBlip.Color = BlipColor.White;
              this.DropzoneBlip.Name = "Drop Zone";
            }
            if (random.Next(1, 100) > 40 && random.Next(1, 100) < 60)
            {
              this.Dropzone = new Vector3(2143f, 4801f, 41f);
              this.DropzoneBlip = World.CreateBlip(this.Dropzone);
              this.DropzoneBlip.Name = "Drop Zone";
              this.DropzoneBlip.Sprite = BlipSprite.SpecialCargo;
              this.DropzoneBlip.Color = BlipColor.White;
              this.DropzoneBlip.Name = "Drop Zone";
            }
            if (random.Next(1, 100) > 60 && random.Next(1, 100) < 80)
            {
              this.Dropzone = new Vector3(2817f, 1695f, 24f);
              this.DropzoneBlip = World.CreateBlip(this.Dropzone);
              this.DropzoneBlip.Name = "Drop Zone";
              this.DropzoneBlip.Sprite = BlipSprite.SpecialCargo;
              this.DropzoneBlip.Color = BlipColor.White;
              this.DropzoneBlip.Name = "Drop Zone";
            }
            if (random.Next(1, 100) > 80 && random.Next(1, 100) < 100)
            {
              this.Dropzone = new Vector3(-1154f, 2674f, 18f);
              this.DropzoneBlip = World.CreateBlip(this.Dropzone);
              this.DropzoneBlip.Name = "Drop Zone";
              this.DropzoneBlip.Sprite = BlipSprite.SpecialCargo;
              this.DropzoneBlip.Color = BlipColor.White;
              this.DropzoneBlip.Name = "Drop Zone";
            }
            if (this.DropzoneBlip != (Blip) null)
              this.DropzoneBlip.ShowRoute = true;
          }
          if (this.VtoGet.IsAlive)
          {
            if (this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
            {
              if (this.VtoGetBlip != (Blip) null)
                this.VtoGetBlip.Position = this.VtoGet.Position;
              if (this.VtoGet.IsDamaged)
                this.VehicleisDamaged = true;
              if (this.Vehiclehealth != this.VtoGet.Health)
              {
                this.Vehiclehealth = this.VtoGet.Health;
                this.stocksvalue = (float) ((int) this.stocksvalue - (int) this.stocksvalue / 100);
                UI.Notify(this.GetHostName() + " damaging the Mule, will decrease stock value, value : " + this.stocksvalue.ToString());
              }
              if ((double) World.GetDistance(Game.Player.Character.Position, this.Dropzone) < 5.0)
              {
                if ((Entity) this.VtoGet != (Entity) null)
                  this.VtoGet.Delete();
                if (this.VtoGetBlip != (Blip) null)
                  this.VtoGetBlip.Remove();
                if (this.DropzoneBlip != (Blip) null)
                  this.DropzoneBlip.Remove();
                this.VehicleSetup = false;
                this.Missionnum = 0;
                this.stocksvalue = (float) ((int) this.stocksvalue + (int) this.stocksvalue / new System.Random().Next(5, 10));
                Script.Wait(200);
                Game.Player.Money += (int) this.stocksvalue;
                this.stocksvalue = 0.0f;
                this.stockscount = 0;
                this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
                this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                this.Config.Save();
                UI.Notify(this.GetHostName() + " ok we got the delivery to the location, there is a little boost in there");
              }
              if ((double) World.GetDistance(Game.Player.Character.Position, this.Dropzone) < 5.0)
                World.DrawMarker(MarkerType.VerticalCylinder, this.Dropzone, Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 2f), Color.White);
            }
          }
          else
          {
            if ((Entity) this.VtoGet != (Entity) null)
              this.VtoGet.Delete();
            if (this.VtoGetBlip != (Blip) null)
              this.VtoGetBlip.Remove();
            if (this.DropzoneBlip != (Blip) null)
              this.DropzoneBlip.Remove();
            this.VehicleSetup = false;
            this.Missionnum = 0;
            this.stocksvalue = (float) ((int) this.stocksvalue - (int) this.stocksvalue / 2);
            Script.Wait(200);
            UI.Notify(this.GetHostName() + " What were you doing out there we just lost 50% of out stock!");
          }
        }
        if (this.ISinPiracyScamMission && this.Piracymission == 1 && (Entity) this.VtoGet != (Entity) null)
        {
          if (this.VtoGet.IsAlive)
          {
            float distance1 = World.GetDistance(Game.Player.Character.Position, this.VtoGet.Position);
            if ((double) World.GetDistance(Game.Player.Character.Position, this.GoPoint) < 1500.0)
            {
              if (!this.HackhasStarted)
              {
                UI.Notify(this.GetHostName() + " Ok Boss find the vehicle that is hacking into out system, watch out for erratic driving");
                this.HackhasStarted = true;
                this.VtoGet.CreateRandomPedOnSeat(VehicleSeat.Driver);
                this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).Task.FleeFrom(Game.Player.Character);
              }
              if (this.HackhasStarted)
              {
                num5 = this.TimerLeft--;
                this.DisplayHelpTextThisFrame("Distance to vehicle : " + distance1.ToString() + " Stocks to Lose : $ " + this.stocktoloose.ToString() + " Time to finish : " + this.TimerLeft.ToString());
                if (this.StockTimer != 24)
                  num5 = this.StockTimer++;
                else if (this.StockTimer == 24)
                {
                  this.StockTimer = 0;
                  this.stocktoloose += 2500f;
                }
                if (this.StockTimer2 != 90)
                  num5 = this.StockTimer2++;
                else if (this.StockTimer2 == 90)
                {
                  this.StockTimer2 = 0;
                  if ((Entity) this.VtoGet != (Entity) null && this.VtoGetBlip != (Blip) null)
                    this.VtoGetBlip.Position = this.VtoGet.Position;
                }
              }
            }
            if (this.TimerLeft == 0 && this.HackhasStarted)
            {
              if ((Entity) this.VtoGet != (Entity) null)
                this.VtoGet.Delete();
              if (this.VtoGetBlip != (Blip) null)
                this.VtoGetBlip.Remove();
              this.VehicleSetup = false;
              this.HackhasStarted = false;
              this.ISinPiracyScamMission = false;
              this.Piracymission = 0;
              this.TimerLeft = 0;
              Script.Wait(200);
              this.stocksvalue -= this.stocktoloose;
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              new MissionScreen().SetFail("The Piracy Scam", 1000000, "The Hacker has escaped");
              UI.Notify(this.GetHostName() + " the hacker has escaped! we lost :$" + this.stocktoloose.ToString("N"));
            }
            if ((double) distance1 > 1500.0 && this.HackhasStarted)
            {
              if ((Entity) this.VtoGet != (Entity) null)
                this.VtoGet.Delete();
              if (this.VtoGetBlip != (Blip) null)
                this.VtoGetBlip.Remove();
              this.VehicleSetup = false;
              this.HackhasStarted = false;
              this.ISinPiracyScamMission = false;
              this.Piracymission = 0;
              this.TimerLeft = 0;
              Script.Wait(200);
              this.stocksvalue -= this.stocktoloose;
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              new MissionScreen().SetFail("The Piracy Scam", 1000000, "The Hacker has escaped");
              UI.Notify(this.GetHostName() + " the hacker has escaped! we lost :$" + this.stocktoloose.ToString("N"));
            }
          }
          else
          {
            if ((Entity) this.VtoGet != (Entity) null)
              this.VtoGet.Delete();
            if (this.VtoGetBlip != (Blip) null)
              this.VtoGetBlip.Remove();
            this.VehicleSetup = false;
            this.HackhasStarted = false;
            this.ISinPiracyScamMission = false;
            this.Piracymission = 0;
            this.TimerLeft = 0;
            Script.Wait(200);
            this.stocksvalue = num6 = this.stocksvalue - this.stocktoloose;
            this.stocksvalue = num6;
            new MissionScreen().SetPass("The Piracy Scam", 1000000, "The Player has died");
            UI.Notify(this.GetHostName() + " ok the hacker is dead, here is what we lost :  " + this.stocktoloose.ToString());
            Game.Player.Money += 1000000;
          }
        }
        if (this.Missionnum == 13 && (Entity) this.VtoGet != (Entity) null)
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(241f, -979f, 29f)) < 100.0)
          {
            foreach (Ped guard in this.Guards)
            {
              Ped ped = guard;
              int num1 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) guard, (InputArgument) num1);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
              guard.Task.FightAgainst(Game.Player.Character);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped, (InputArgument) 1);
            }
          }
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(213f, -936f, 24f)) < 3.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to enter 10 car garage");
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(227f, -1001f, -99f)) < 4.0)
            this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to exit 10 car garage");
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(227f, -1001f, -100f)) < 40.0)
            World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(227f, -1001f, -100f), Vector3.Zero, Vector3.Zero, new Vector3(3f, 3f, 1f), Color.White);
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(213f, -936f, 24f)) < 40.0)
            World.DrawMarker(MarkerType.VerticalCylinder, new Vector3(213f, -936f, 23f), Vector3.Zero, Vector3.Zero, new Vector3(1f, 1f, 1f), Color.White);
          if (this.VtoGet.IsAlive && this.VtoGet1.IsAlive && (this.VtoGet2.IsAlive && this.VtoGet3.IsAlive))
          {
            if (this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).IsPlayer || this.VtoGet1.GetPedOnSeat(VehicleSeat.Driver).IsPlayer || (this.VtoGet2.GetPedOnSeat(VehicleSeat.Driver).IsPlayer || this.VtoGet3.GetPedOnSeat(VehicleSeat.Driver).IsPlayer) || this.Vehiclesleft == 0)
            {
              if (!this.GotCar)
              {
                this.GotCar = true;
                UI.Notify(this.GetHostName() + " Nice bro! you got the car now bring it back to the Destination Marked");
                if (this.DestBlip == (Blip) null)
                {
                  this.DestBlip = World.CreateBlip(new Vector3(251f, -3060f, 5f));
                  this.DestBlip.Sprite = BlipSprite.Package;
                  this.DestBlip.Name = "Electrical Discharge Delivery Point";
                  this.DestBlip.ShowRoute = true;
                }
              }
              double distance1 = (double) World.GetDistance(Game.Player.Character.Position, new Vector3(-1158f, 287f, 67f));
              if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(251f, -3060f, 5f)) < 40.0)
              {
                if (this.Vehiclesleft == 0)
                {
                  int num1 = 7590000;
                  if (this.VtoGet.IsDamaged)
                    num1 -= 750000;
                  if (this.VtoGet1.IsDamaged)
                    num1 -= 750000;
                  if (this.VtoGet2.IsDamaged)
                    num1 -= 750000;
                  if (this.VtoGet3.IsDamaged)
                    num1 -= 750000;
                  Game.Player.Money += num1;
                  if ((Entity) this.VtoGet != (Entity) null)
                    this.VtoGet.Delete();
                  if ((Entity) this.VtoGet1 != (Entity) null)
                    this.VtoGet1.Delete();
                  if ((Entity) this.VtoGet2 != (Entity) null)
                    this.VtoGet2.Delete();
                  if ((Entity) this.VtoGet3 != (Entity) null)
                    this.VtoGet3.Delete();
                  if (this.VtoGetBlip != (Blip) null)
                    this.VtoGetBlip.Remove();
                  foreach (Ped guard in this.Guards)
                  {
                    if ((Entity) guard != (Entity) null)
                      guard.Delete();
                  }
                  if (this.DestBlip != (Blip) null)
                    this.DestBlip.Remove();
                  this.VehicleSetup = false;
                  this.Missionnum = 0;
                  Script.Wait(200);
                  new MissionScreen().SetPass("Electircal Discharge", 7590000, "One of the cars was destroyed");
                  UI.Notify(this.GetHostName() + " We got the pickup, nice driving out there");
                }
                else
                {
                  if (this.DestBlip != (Blip) null)
                    this.DestBlip.Remove();
                  if (this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
                  {
                    this.VtoGet.Position = new Vector3(253f, -3058f, 5f);
                    this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).Task.LeaveVehicle(LeaveVehicleFlags.WarpOut);
                    this.VtoGet.LockStatus = VehicleLockStatus.Locked;
                    this.VtoGet.Rotation = new Vector3(0.0f, 0.0f, 46f);
                    Game.Player.Character.Position = new Vector3(247f, -3058f, 6f);
                    Script.Wait(1000);
                    num5 = this.Vehiclesleft--;
                    UI.Notify(this.GetHostName() + " Nice boss thats one down, " + this.Vehiclesleft.ToString() + " to go");
                  }
                  if (this.VtoGet1.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
                  {
                    this.VtoGet1.Position = new Vector3(250f, -3061f, 5f);
                    this.VtoGet1.GetPedOnSeat(VehicleSeat.Driver).Task.LeaveVehicle(LeaveVehicleFlags.WarpOut);
                    this.VtoGet1.LockStatus = VehicleLockStatus.Locked;
                    this.VtoGet1.Rotation = new Vector3(0.0f, 0.0f, 46f);
                    Game.Player.Character.Position = new Vector3(247f, -3058f, 6f);
                    Script.Wait(1000);
                    num5 = this.Vehiclesleft--;
                    UI.Notify(this.GetHostName() + " Nice boss thats one down, " + this.Vehiclesleft.ToString() + " to go");
                  }
                  if (this.VtoGet2.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
                  {
                    this.VtoGet2.Position = new Vector3(247f, -3063f, 5f);
                    this.VtoGet2.GetPedOnSeat(VehicleSeat.Driver).Task.LeaveVehicle(LeaveVehicleFlags.WarpOut);
                    this.VtoGet2.LockStatus = VehicleLockStatus.Locked;
                    this.VtoGet2.Rotation = new Vector3(0.0f, 0.0f, 46f);
                    Game.Player.Character.Position = new Vector3(247f, -3058f, 6f);
                    Script.Wait(1000);
                    num5 = this.Vehiclesleft--;
                    UI.Notify(this.GetHostName() + " Nice boss thats one down, " + this.Vehiclesleft.ToString() + " to go");
                  }
                  if (this.VtoGet3.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
                  {
                    this.VtoGet3.Position = new Vector3(245f, -3066f, 5f);
                    this.VtoGet3.GetPedOnSeat(VehicleSeat.Driver).Task.LeaveVehicle(LeaveVehicleFlags.WarpOut);
                    this.VtoGet3.LockStatus = VehicleLockStatus.Locked;
                    this.VtoGet3.Rotation = new Vector3(0.0f, 0.0f, 46f);
                    Game.Player.Character.Position = new Vector3(247f, -3058f, 6f);
                    Script.Wait(1000);
                    num5 = this.Vehiclesleft--;
                    UI.Notify(this.GetHostName() + " Nice boss thats one down, " + this.Vehiclesleft.ToString() + " to go");
                  }
                }
              }
            }
          }
          else
          {
            if ((Entity) this.VtoGet != (Entity) null)
              this.VtoGet.Delete();
            if (this.VtoGetBlip != (Blip) null)
              this.VtoGetBlip.Remove();
            foreach (Ped guard in this.Guards)
            {
              if ((Entity) guard != (Entity) null)
                guard.Delete();
            }
            this.VehicleSetup = false;
            this.Missionnum = 0;
            Script.Wait(200);
            new MissionScreen().SetFail("Electircal Discharge", 1000000, "One of the cars was destroyed");
            UI.Notify(this.GetHostName() + " ok we lost the car, the dealer will not be happy");
          }
        }
        if (this.Missionnum == 12 && (Entity) this.VtoGet != (Entity) null)
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(-1544f, 161f, 56f)) < 250.0 || (double) World.GetDistance(Game.Player.Character.Position, new Vector3(-1445f, 224f, 58f)) < 250.0 || (double) World.GetDistance(Game.Player.Character.Position, new Vector3(-1606f, 99f, 61f)) < 250.0)
          {
            foreach (Ped guard in this.Guards)
            {
              Ped ped = guard;
              int num1 = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
              Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) guard, (InputArgument) num1);
              Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
              Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
              guard.Task.FightAgainst(Game.Player.Character);
              Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped, (InputArgument) 1);
            }
          }
          if (this.VtoGet.IsAlive)
          {
            if (this.VtoGet.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
            {
              if (this.VtoGetBlip != (Blip) null)
                this.VtoGetBlip.Position = this.VtoGet.Position;
              if (!this.GotCar)
              {
                this.GotCar = true;
                UI.Notify(this.GetHostName() + " Nice bro! you got the car now bring it back to the Combined Vehicle Storage");
              }
              double distance1 = (double) World.GetDistance(Game.Player.Character.Position, new Vector3(-1158f, 287f, 67f));
              if ((double) World.GetDistance(Game.Player.Character.Position, this.LotLoc) < 40.0)
              {
                int num1 = 7590000;
                if (this.VtoGet.IsDamaged)
                  num1 -= 750000;
                Game.Player.Money += num1;
                if ((Entity) this.VtoGet != (Entity) null)
                  this.VtoGet.Delete();
                if (this.VtoGetBlip != (Blip) null)
                  this.VtoGetBlip.Remove();
                foreach (Ped guard in this.Guards)
                {
                  if ((Entity) guard != (Entity) null)
                    guard.Delete();
                }
                this.VehicleSetup = false;
                this.Missionnum = 0;
                Script.Wait(200);
                new MissionScreen().SetPass("ExPatriot", 7590000, "The Patriot was destroyed");
                UI.Notify(this.GetHostName() + " We got the pickup, nice driving out there");
              }
            }
          }
          else
          {
            if ((Entity) this.VtoGet != (Entity) null)
              this.VtoGet.Delete();
            if (this.VtoGetBlip != (Blip) null)
              this.VtoGetBlip.Remove();
            foreach (Ped guard in this.Guards)
            {
              if ((Entity) guard != (Entity) null)
                guard.Delete();
            }
            this.VehicleSetup = false;
            this.Missionnum = 0;
            Script.Wait(200);
            new MissionScreen().SetPass("ExPatriot", 7590000, "The Patriot was destroyed");
            UI.Notify(this.GetHostName() + " ok we lost the car, the dealer will not be happy");
          }
        }
        if (this.Missionnum == 11)
        {
          try
          {
            UI.ShowSubtitle("Retrieve each ~b~ Cargo ~w~ from the ~r~ vehicles~w~");
            if ((Entity) this.Bike1 != (Entity) null)
            {
              if ((Entity) this.CargoCrate1 != (Entity) null)
              {
                this.CargoCrate1.Position = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.CargoCrate1.Rotation = this.Bike1.Rotation;
              }
              if ((double) this.Bike1.Speed < 5.0 && this.NotGotCargo1)
              {
                World.DrawMarker(MarkerType.VerticalCylinder, this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f)), Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
                if (!this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.Bike1.Position) < 30.0)
                {
                  this.PickupPoint = this.Bike1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f));
                  this.SpawnedBreefcase = true;
                  if (this.CaseBlip != (Blip) null)
                    this.CaseBlip.Remove();
                  this.CaseBlip = World.CreateBlip(this.PickupPoint);
                  this.CaseBlip.Position = this.PickupPoint;
                  this.CaseBlip.Sprite = BlipSprite.SpecialCargo;
                  this.CaseBlip.Name = "Case";
                }
                if (this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.PickupPoint) < 5.0)
                {
                  this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to collect Cargo");
                  if (Game.IsControlJustPressed(2, GTA.Control.Context))
                  {
                    this.SpawnedBreefcase = false;
                    this.NotGotCargo1 = false;
                    if (this.Bike1Blip != (Blip) null)
                      this.Bike1Blip.Remove();
                    if ((Entity) this.BreefCase != (Entity) null)
                      this.BreefCase.Delete();
                    if (this.CaseBlip != (Blip) null)
                      this.CaseBlip.Remove();
                    UI.Notify(this.GetHostName() + " Good job, now retrieve the rest");
                  }
                }
              }
            }
            if ((Entity) this.Bike2 != (Entity) null)
            {
              if ((Entity) this.CargoCrate2 != (Entity) null)
              {
                this.CargoCrate2.Position = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.CargoCrate2.Rotation = this.Bike2.Rotation;
              }
              if ((double) this.Bike2.Speed < 5.0 && this.NotGotCargo2)
              {
                World.DrawMarker(MarkerType.VerticalCylinder, this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f)), Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
                if (!this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.Bike2.Position) < 30.0)
                {
                  this.PickupPoint = this.Bike2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f));
                  this.SpawnedBreefcase = true;
                  if (this.CaseBlip != (Blip) null)
                    this.CaseBlip.Remove();
                  this.CaseBlip = World.CreateBlip(this.PickupPoint);
                  this.CaseBlip.Position = this.PickupPoint;
                  this.CaseBlip.Sprite = BlipSprite.SpecialCargo;
                  this.CaseBlip.Name = "Case";
                }
                if (this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.PickupPoint) < 5.0)
                {
                  this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to collect Cargo");
                  if (Game.IsControlJustPressed(2, GTA.Control.Context))
                  {
                    this.SpawnedBreefcase = false;
                    this.NotGotCargo2 = false;
                    if (this.Bike2Blip != (Blip) null)
                      this.Bike2Blip.Remove();
                    if ((Entity) this.BreefCase != (Entity) null)
                      this.BreefCase.Delete();
                    if (this.CaseBlip != (Blip) null)
                      this.CaseBlip.Remove();
                    UI.Notify(this.GetHostName() + " Good job, now retrieve the rest");
                  }
                }
              }
            }
            if ((Entity) this.Bike3 != (Entity) null)
            {
              if ((Entity) this.CargoCrate3 != (Entity) null)
              {
                this.CargoCrate3.Position = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.CargoCrate3.Rotation = this.Bike3.Rotation;
              }
              if ((double) this.Bike3.Speed < 5.0 && this.NotGotCargo3)
              {
                World.DrawMarker(MarkerType.VerticalCylinder, this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f)), Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
                if (!this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.Bike3.Position) < 30.0)
                {
                  this.PickupPoint = this.Bike3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f));
                  this.SpawnedBreefcase = true;
                  if (this.CaseBlip != (Blip) null)
                    this.CaseBlip.Remove();
                  this.CaseBlip = World.CreateBlip(this.PickupPoint);
                  this.CaseBlip.Position = this.PickupPoint;
                  this.CaseBlip.Sprite = BlipSprite.SpecialCargo;
                  this.CaseBlip.Name = "Case";
                }
                if (this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.PickupPoint) < 5.0)
                {
                  this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to collect Cargo");
                  if (Game.IsControlJustPressed(2, GTA.Control.Context))
                  {
                    this.SpawnedBreefcase = false;
                    this.NotGotCargo3 = false;
                    if (this.Bike3Blip != (Blip) null)
                      this.Bike3Blip.Remove();
                    if ((Entity) this.BreefCase != (Entity) null)
                      this.BreefCase.Delete();
                    if (this.CaseBlip != (Blip) null)
                      this.CaseBlip.Remove();
                    UI.Notify(this.GetHostName() + " Good job, now retrieve the rest");
                  }
                }
              }
            }
            if ((Entity) this.Bike4 != (Entity) null)
            {
              if ((Entity) this.CargoCrate4 != (Entity) null)
              {
                this.CargoCrate4.Position = this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.CargoCrate4.Rotation = this.Bike4.Rotation;
              }
              if ((double) this.Bike4.Speed < 5.0 && this.NotGotCargo4)
              {
                World.DrawMarker(MarkerType.VerticalCylinder, this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f)), Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
                if (!this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.Bike4.Position) < 30.0)
                {
                  this.PickupPoint = this.Bike4.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f));
                  this.SpawnedBreefcase = true;
                  if (this.CaseBlip != (Blip) null)
                    this.CaseBlip.Remove();
                  this.CaseBlip = World.CreateBlip(this.PickupPoint);
                  this.CaseBlip.Position = this.PickupPoint;
                  this.CaseBlip.Sprite = BlipSprite.SpecialCargo;
                  this.CaseBlip.Name = "Case";
                }
                if (this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.PickupPoint) < 5.0)
                {
                  this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to collect Cargo");
                  if (Game.IsControlJustPressed(2, GTA.Control.Context))
                  {
                    this.SpawnedBreefcase = false;
                    this.NotGotCargo4 = false;
                    if (this.Bike4Blip != (Blip) null)
                      this.Bike4Blip.Remove();
                    if ((Entity) this.BreefCase != (Entity) null)
                      this.BreefCase.Delete();
                    if (this.CaseBlip != (Blip) null)
                      this.CaseBlip.Remove();
                    UI.Notify(this.GetHostName() + " Good job, now retrieve the rest");
                  }
                }
              }
            }
            if ((Entity) this.Bike5 != (Entity) null)
            {
              if ((Entity) this.CargoCrate5 != (Entity) null)
              {
                this.CargoCrate5.Position = this.Bike5.GetOffsetInWorldCoords(new Vector3(0.0f, -1.5f, -0.2f));
                this.CargoCrate5.Rotation = this.Bike5.Rotation;
              }
              if ((double) this.Bike5.Speed < 5.0 && this.NotGotCargo5)
              {
                World.DrawMarker(MarkerType.VerticalCylinder, this.Bike5.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f)), Vector3.Zero, Vector3.Zero, new Vector3(0.85f, 0.85f, 0.65f), color1);
                if (!this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.Bike5.Position) < 30.0)
                {
                  this.PickupPoint = this.Bike5.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, -1f));
                  this.SpawnedBreefcase = true;
                  if (this.CaseBlip != (Blip) null)
                    this.CaseBlip.Remove();
                  this.CaseBlip = World.CreateBlip(this.PickupPoint);
                  this.CaseBlip.Position = this.PickupPoint;
                  this.CaseBlip.Sprite = BlipSprite.SpecialCargo;
                  this.CaseBlip.Name = "Case";
                }
                if (this.SpawnedBreefcase && (double) World.GetDistance(Game.Player.Character.Position, this.PickupPoint) < 5.0)
                {
                  this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to collect Cargo");
                  if (Game.IsControlJustPressed(2, GTA.Control.Context))
                  {
                    this.SpawnedBreefcase = false;
                    this.NotGotCargo5 = false;
                    if (this.Bike5Blip != (Blip) null)
                      this.Bike5Blip.Remove();
                    if ((Entity) this.BreefCase != (Entity) null)
                      this.BreefCase.Delete();
                    if (this.CaseBlip != (Blip) null)
                      this.CaseBlip.Remove();
                    UI.Notify(this.GetHostName() + " Good job, now retrieve the rest");
                  }
                }
              }
            }
            if (!this.NotGotCargo1 && !this.NotGotCargo2 && (!this.NotGotCargo3 && !this.NotGotCargo4) && !this.NotGotCargo5)
            {
              this.GotBreefCase = true;
              this.Missionnum = 0;
              this.vehiclemissionid = 0;
              this.VehicleSetup = false;
              Game.FadeScreenOut(700);
              Script.Wait(600);
              Script.Wait(600);
              Game.FadeScreenIn(700);
              int num1 = new System.Random().Next((int) this.IncreaseStockMinAmount, (int) this.IncreaseStockMaxAmount) * this.RecoveryAmtVehicles;
              this.stocksvalue += (float) num1;
              UI.Notify(this.GetHostName() + " Good you have got the case back!");
              UI.Notify(this.GetHostName() + " Stocks just Increased, earned : ~g~" + num1.ToString("N"));
              this.RecoveryAmtVehicles = 0;
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              this.setupdelivery = false;
              if (this.PG.Count > 0)
              {
                foreach (Ped ped in this.PG)
                {
                  if ((Entity) ped != (Entity) null)
                    ped.Delete();
                }
              }
              if ((Entity) this.CargoCrate1 != (Entity) null)
                this.CargoCrate1.Delete();
              if ((Entity) this.CargoCrate2 != (Entity) null)
                this.CargoCrate2.Delete();
              if ((Entity) this.CargoCrate3 != (Entity) null)
                this.CargoCrate3.Delete();
              if ((Entity) this.CargoCrate4 != (Entity) null)
                this.CargoCrate4.Delete();
              if ((Entity) this.CargoCrate5 != (Entity) null)
                this.CargoCrate5.Delete();
              if ((Entity) this.BreefCase != (Entity) null)
                this.BreefCase.Delete();
              if (this.CaseBlip != (Blip) null)
                this.CaseBlip.Remove();
              if ((Entity) this.Bike1 != (Entity) null)
                this.Bike1.Delete();
              if ((Entity) this.Bike2 != (Entity) null)
                this.Bike2.Delete();
              if ((Entity) this.Bike3 != (Entity) null)
                this.Bike3.Delete();
              if ((Entity) this.Bike4 != (Entity) null)
                this.Bike4.Delete();
              if ((Entity) this.Bike5 != (Entity) null)
                this.Bike5.Delete();
              if (this.Bike1Blip != (Blip) null)
                this.Bike1Blip.Remove();
              if (this.Bike2Blip != (Blip) null)
                this.Bike2Blip.Remove();
              if (this.Bike3Blip != (Blip) null)
                this.Bike3Blip.Remove();
              if (this.Bike4Blip != (Blip) null)
                this.Bike4Blip.Remove();
              if (this.Bike5Blip != (Blip) null)
                this.Bike5Blip.Remove();
            }
            if ((Entity) this.Bike1 != (Entity) null)
            {
              if (this.Bike1Blip != (Blip) null)
                this.Bike1Blip.Position = this.Bike1.Position;
              if (this.Bike1.IsAlive)
              {
                if ((double) World.GetDistance(this.Bike1.Position, this.PointB) < 60.0)
                  this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointC, 60f, 160f);
                if ((double) World.GetDistance(this.Bike1.Position, this.PointC) < 60.0)
                  this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointD, 60f, 160f);
                if ((double) World.GetDistance(this.Bike1.Position, this.PointA) < 60.0)
                  this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 160f);
                if ((double) World.GetDistance(this.Bike1.Position, this.PointD) < 60.0)
                  this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointE, 60f, 160f);
                if ((double) World.GetDistance(this.Bike1.Position, this.PointE) < 60.0)
                  this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointA, 60f, 160f);
              }
              if (!this.Bike1.IsAlive)
                this.Bike1Blip.Remove();
              if ((Entity) this.Bike1 != (Entity) null)
              {
                if (this.Bike1Blip != (Blip) null)
                  this.Bike1Blip.Position = this.Bike1.Position;
                if (this.Bike1.IsAlive)
                {
                  if ((double) World.GetDistance(this.Bike1.Position, this.PointB) < 60.0)
                    this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointA, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike1.Position, this.PointC) < 60.0)
                    this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike1.Position, this.PointA) < 60.0)
                    this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointD, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike1.Position, this.PointD) < 60.0)
                    this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointB, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike1.Position, this.PointE) < 60.0)
                    this.Bike1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike1, this.PointC, 60f, 160f);
                }
                if (!this.Bike1.IsAlive)
                  this.Bike1Blip.Remove();
              }
              if ((Entity) this.Bike2 != (Entity) null)
              {
                if (this.Bike2Blip != (Blip) null)
                  this.Bike2Blip.Position = this.Bike2.Position;
                if (this.Bike2.IsAlive)
                {
                  if ((double) World.GetDistance(this.Bike2.Position, this.PointB) < 60.0)
                    this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointC, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike2.Position, this.PointC) < 60.0)
                    this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointD, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike2.Position, this.PointA) < 60.0)
                    this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointB, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike2.Position, this.PointD) < 60.0)
                    this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike2.Position, this.PointE) < 60.0)
                    this.Bike2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike2, this.PointA, 60f, 160f);
                }
                if (!this.Bike2.IsAlive)
                  this.Bike2Blip.Remove();
              }
              if ((Entity) this.Bike3 != (Entity) null)
              {
                if (this.Bike3Blip != (Blip) null)
                  this.Bike3Blip.Position = this.Bike3.Position;
                if (this.Bike3.IsAlive)
                {
                  if ((double) World.GetDistance(this.Bike3.Position, this.PointB) < 60.0)
                    this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointA, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike3.Position, this.PointC) < 60.0)
                    this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointD, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike3.Position, this.PointA) < 60.0)
                    this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike3.Position, this.PointD) < 60.0)
                    this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointA, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike3.Position, this.PointE) < 60.0)
                    this.Bike3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike3, this.PointC, 60f, 160f);
                }
                if (!this.Bike3.IsAlive)
                  this.Bike3Blip.Remove();
              }
              if ((Entity) this.Bike4 != (Entity) null)
              {
                if (this.Bike4Blip != (Blip) null)
                  this.Bike4Blip.Position = this.Bike4.Position;
                if (this.Bike4.IsAlive)
                {
                  if ((double) World.GetDistance(this.Bike4.Position, this.PointB) < 60.0)
                    this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointA, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike4.Position, this.PointC) < 60.0)
                    this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointD, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike4.Position, this.PointA) < 60.0)
                    this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointB, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike4.Position, this.PointD) < 60.0)
                    this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike4.Position, this.PointE) < 60.0)
                    this.Bike4.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike4, this.PointC, 60f, 160f);
                }
                if (!this.Bike4.IsAlive)
                  this.Bike4Blip.Remove();
              }
              if ((Entity) this.Bike5 != (Entity) null)
              {
                if (this.Bike5Blip != (Blip) null)
                  this.Bike5Blip.Position = this.Bike5.Position;
                if (this.Bike5.IsAlive)
                {
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointB) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointC) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointD, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointA) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointE, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointA) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointB, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointD) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointA, 60f, 160f);
                  if ((double) World.GetDistance(this.Bike5.Position, this.PointE) < 60.0)
                    this.Bike5.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Bike5, this.PointC, 60f, 160f);
                }
                if (!this.Bike5.IsAlive)
                  this.Bike5Blip.Remove();
              }
            }
          }
          catch
          {
            UI.Notify("Error 1");
          }
        }
        if (this.Missionnum == 10 && this.VehicleMissioncar.IsAlive)
        {
          if (this.VehicleMissioncar.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
          {
            this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
            if (!this.TriggeredWanted)
            {
              Game.Player.WantedLevel = 4;
              this.TriggeredWanted = true;
            }
          }
          if ((Entity) this.VehicleMissioncar != (Entity) null)
            this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
          if (this.warnedplayer)
          {
            UI.Notify(this.GetHostName() + " ok boss bring the vehicle to its designated storage and we can sell it ");
            this.warnedplayer = false;
          }
          if (this.VehicleMissioncar.GetPedOnSeat(VehicleSeat.Driver).IsPlayer && (double) World.GetDistance(Game.Player.Character.Position, this.AircraftStorageLoc) < 60.0)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
            {
              this.VehicleMissioncar.IsDriveable = false;
              Game.FadeScreenOut(300);
              Script.Wait(300);
              this.DestoryVehicle.Remove();
              this.VehicleSetup = false;
              Script.Wait(400);
              this.VehicleMissioncar.Delete();
              Game.Player.Character.Position = this.AircraftStorageLoc;
              Script.Wait(300);
              Game.FadeScreenIn(300);
            }
            this.stocksvalue = (float) ((double) this.stocksvalue + 425000.0 + 425000.0 * (double) this.profitMargin / 100.0);
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is in our possesion we will sell it when we get a chance ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
        }
        if (this.Missionnum == 9)
        {
          if (this.LotBlip != (Blip) null && this.AircraftStorageMarker != (Blip) null && this.DockBlip != (Blip) null)
          {
            this.LotBlip.Alpha = (int) byte.MaxValue;
            this.AircraftStorageMarker.Alpha = (int) byte.MaxValue;
            this.DockBlip.Alpha = (int) byte.MaxValue;
          }
          if (this.VehicleMissioncar.IsAlive)
          {
            if (this.VehicleMissioncar.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
            {
              this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
              if (!this.TriggeredWanted)
              {
                Game.Player.WantedLevel = 4;
                this.TriggeredWanted = true;
              }
            }
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
            if (this.warnedplayer)
            {
              UI.Notify(this.GetHostName() + " ok boss bring the vehicle to its designated storage and we can sell it ");
              this.warnedplayer = false;
            }
            if (this.VehicleMissioncar.GetPedOnSeat(VehicleSeat.Driver).IsPlayer && (double) World.GetDistance(Game.Player.Character.Position, this.LotLoc) < 60.0)
            {
              if (this.DestoryVehicle != (Blip) null)
                this.DestoryVehicle.Remove();
              if ((Entity) this.VehicleMissioncar != (Entity) null)
              {
                this.VehicleMissioncar.IsDriveable = false;
                Game.FadeScreenOut(300);
                Script.Wait(300);
                this.DestoryVehicle.Remove();
                this.VehicleSetup = false;
                this.VehicleMissioncar.Delete();
                Game.Player.Character.Position = this.LotLoc;
                Script.Wait(300);
                Game.FadeScreenIn(300);
              }
              this.stocksvalue = (float) ((double) this.stocksvalue + 225000.0 + 225000.0 * (double) this.profitMargin / 100.0);
              UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is in our possesion we will sell it when we get a chance ");
              UI.Notify(this.GetHostName() + " Stocks just Increased");
              this.ShowIncrease();
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
            }
          }
        }
        if (this.Missionnum == 7 || this.Missionnum == 6 || this.Missionnum == 8)
        {
          try
          {
            if ((Entity) this.VehicleMissioncar != (Entity) null)
            {
              if ((double) World.GetDistance(Game.Player.Character.Position, this.VehicleMissioncar.Position) < 500.0)
              {
                this.VehicleMissioncar.IsInvincible = false;
                this.VehicleMissioncar.IsVisible = true;
              }
              if ((double) World.GetDistance(Game.Player.Character.Position, this.VehicleMissioncar.Position) > 500.0)
              {
                this.VehicleMissioncar.IsInvincible = true;
                this.VehicleMissioncar.IsVisible = true;
              }
              if (this.VehicleMissioncar.IsAlive)
              {
                if (this.DestoryVehicle != (Blip) null && (Entity) this.VehicleMissioncar != (Entity) null)
                  this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
                if (!this.warnedplayer && (double) World.GetDistance(Game.Player.Character.Position, this.VehicleMissioncar.Position) < 100.0)
                {
                  if (this.VehicleMissioncar.Model.IsPlane)
                    UI.Notify(this.GetHostName() + " ok boss bring the vehicle to the ~b~Combined Aircraft Storage~w~, so we can sell it ");
                  if (this.VehicleMissioncar.Model.IsBoat)
                    UI.Notify(this.GetHostName() + " ok boss bring the vehicle to the  ~b~Combined Boat Storage~w~, so we can sell it ");
                  if (this.VehicleMissioncar.Model.IsCar)
                    UI.Notify(this.GetHostName() + " ok boss bring the vehicle to the  ~b~Combined Vehicle Storage~w~, so we can sell it ");
                  this.warnedplayer = true;
                }
                if (this.VehicleMissioncar.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
                {
                  Vector3 destination = this.LotLoc;
                  if (this.Missionnum == 7)
                    destination = this.LotLoc;
                  if (this.Missionnum == 6)
                    destination = this.AircraftStorageLoc;
                  if (this.Missionnum == 8)
                    destination = this.Dockloc;
                  if ((double) World.GetDistance(Game.Player.Character.Position, destination) < 60.0)
                  {
                    if (this.DestoryVehicle != (Blip) null)
                      this.DestoryVehicle.Remove();
                    if ((Entity) this.VehicleMissioncar != (Entity) null)
                    {
                      this.VehicleMissioncar.IsDriveable = false;
                      Game.FadeScreenOut(300);
                      Script.Wait(300);
                      this.VehicleSetup = false;
                      this.VehicleMissioncar.Delete();
                      Game.Player.Character.Position = destination;
                      Script.Wait(300);
                      Game.FadeScreenIn(300);
                    }
                    this.stocksvalue = (float) ((double) this.stocksvalue + 25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
                    UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is in our possesion we will sell it when we get a chance ");
                    UI.Notify(this.GetHostName() + " Stocks just Increased");
                    this.ShowIncrease();
                    this.VehicleSetup = false;
                    this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
                    this.Config.Save();
                  }
                }
              }
              else
              {
                if (this.DestoryVehicle != (Blip) null)
                  this.DestoryVehicle.Remove();
                if ((Entity) this.VehicleMissioncar != (Entity) null)
                {
                  this.VehicleMissioncar.IsDriveable = false;
                  Game.FadeScreenOut(300);
                  Script.Wait(300);
                  this.VehicleSetup = false;
                  this.VehicleMissioncar.Delete();
                  Script.Wait(300);
                  Game.FadeScreenIn(300);
                }
                UI.Notify(this.GetHostName() + " We lost the vehicle!, we will have to find another one! ");
                this.ShowIncrease();
                this.VehicleSetup = false;
              }
            }
          }
          catch
          {
            UI.Notify("1");
          }
        }
        if (this.Missionnum == 5 && (Entity) this.VehicleMissioncar != (Entity) null)
          this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
        if (this.Missionnum == 5 && (Entity) this.VehicleMissioncar != (Entity) null && (double) World.GetDistance(Game.Player.Character.Position, this.VehicleMissioncar.Position) < 500.0)
        {
          this.VehicleMissioncar.IsInvincible = false;
          this.VehicleMissioncar.IsVisible = true;
        }
        if (this.Missionnum == 2 || this.Missionnum == 3)
          this.DestoryVehicle.Position = this.VehicleMissioncar.Position;
        if ((Entity) this.VehicleMissioncar != (Entity) null && !this.VehicleMissioncar.IsAlive)
        {
          if (this.Missionnum == 10)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            Game.FadeScreenOut(500);
            Script.Wait(500);
            Script.Wait(500);
            Game.FadeScreenIn(500);
            UI.Notify(this.GetHostName() + " boss we needed that vehicle!, we will now have to do with out it ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 9)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            Game.FadeScreenOut(500);
            Script.Wait(500);
            this.VehicleMissioncar.Delete();
            Script.Wait(500);
            Game.FadeScreenIn(500);
            UI.Notify(this.GetHostName() + " boss we needed that vehicle!, we will now have to do with out it ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 5)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            this.stocksvalue = (float) ((double) this.stocksvalue + 125000.0 + 125000.0 * (double) this.profitMargin / 100.0);
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is destoryed ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 4)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            this.stocksvalue = (float) ((double) this.stocksvalue + 75000.0 + 75000.0 * (double) this.profitMargin / 100.0);
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is destoryed ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 3)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            this.stocksvalue = (float) ((double) this.stocksvalue + 50000.0 + 50000.0 * (double) this.profitMargin / 100.0);
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is destoryed ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 1)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            this.stocksvalue = (float) ((double) this.stocksvalue + 25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is destoryed ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
          if (this.Missionnum == 2)
          {
            if (this.DestoryVehicle != (Blip) null)
              this.DestoryVehicle.Remove();
            if ((Entity) this.VehicleMissioncar != (Entity) null)
              this.VehicleMissioncar.Delete();
            this.stocksvalue = (float) ((double) this.stocksvalue + 25000.0 + 25000.0 * (double) this.profitMargin / 100.0);
            UI.Notify(this.GetHostName() + " ok good, the enemy vehicle is destoryed ");
            UI.Notify(this.GetHostName() + " Stocks just Increased");
            this.ShowIncrease();
            this.VehicleSetup = false;
            this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
            this.Config.Save();
          }
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerEnter) < 3.0)
      {
        if (this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl) == 0)
          this.DisplayHelpTextThisFrame("Purchase this Business via ~g~ HKH191s Business Helper ");
        else
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Office");
      }
      if (this.Missionnum != 412)
      {
        if (this.SourcingCheckingforDamage)
        {
          if (this.NewVehicleSourcing && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null && Game.Player.Character.CurrentVehicle.DisplayName == this.SourcedVehicle)
            this.Vehicletoget = Game.Player.Character.CurrentVehicle;
          if ((Entity) this.Vehicletoget != (Entity) null && this.Vehicletoget.IsDamaged)
          {
            this.SourcingCheckingforDamage = false;
            UI.Notify(this.GetHostName() + " Be Carefull the Vehice is already damaged ");
          }
        }
        if (this.foundvehicleyet && !this.NewVehicleSourcing)
        {
          this.Vehicleloc = this.Vehicletoget.Position;
          if (this.VehicleMarker != (Blip) null)
            this.VehicleMarker.Position = this.Vehicletoget.Position;
          if (this.Vehicletoget.GetPedOnSeat(VehicleSeat.Driver).IsPlayer && this.foundvehicleyet)
          {
            this.foundvehicleyet = true;
            this.Vehicletoget.IsDriveable = true;
            UI.Notify(this.GetHostName() + " Boss that is the car we need, bring it back to the vehicle ~b~Vehicle Warehouse~w~ to sell it");
            this.foundvehicleyet = false;
            this.hasgotvehicle = true;
          }
        }
        if (this.foundvehicleyet && this.NewVehicleSourcing && ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && Game.Player.Character.CurrentVehicle.DisplayName == this.SourcedVehicle))
        {
          this.Vehicletoget = Game.Player.Character.CurrentVehicle;
          if (this.Vehicletoget.GetPedOnSeat(VehicleSeat.Driver).IsPlayer && this.foundvehicleyet)
          {
            this.foundvehicleyet = true;
            this.Vehicletoget.IsDriveable = true;
            UI.Notify(this.GetHostName() + " Boss that is the car we need, bring it back to the vehicle ~b~Vehicle Warehouse~w~ to sell it");
            this.foundvehicleyet = false;
            this.hasgotvehicle = true;
          }
        }
        if ((Entity) this.Vehicletoget != (Entity) null && (double) World.GetDistance(Game.Player.Character.Position, this.WherehouseMarker) < 10.0 && (this.hasgotvehicle && !this.NewVehicleSourcing) && !this.Vehicletoget.IsDead)
        {
          if (this.SourcingCheckingforDamage)
            UI.Notify("Congradulations the vehicle is undamaged");
          this.Missionnum = 0;
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.VehicleMarker.Remove();
          this.Vehicletoget = (Vehicle) null;
          this.Vehicletoget = (Vehicle) null;
          this.hasgotvehicle = false;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.Missionnum = 0;
          UI.Notify(this.GetHostName() + " Ok store the vehicle away and you can either ~b~ Keep~w~ or ~b~ Sell~w~ the car");
        }
        if (this.SourcedVehicle != null && (double) World.GetDistance(Game.Player.Character.Position, this.WherehouseMarker) < 10.0 && (this.hasgotvehicle && this.NewVehicleSourcing))
        {
          if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && Game.Player.Character.CurrentVehicle.DisplayName == this.SourcedVehicle)
            this.Vehicletoget = Game.Player.Character.CurrentVehicle;
          if ((Entity) this.Vehicletoget != (Entity) null && !this.Vehicletoget.IsDead)
          {
            if (this.SourcingCheckingforDamage)
              UI.Notify("Congradulations the vehicle is undamaged");
            this.Missionnum = 0;
            Game.FadeScreenOut(300);
            Script.Wait(300);
            this.Vehicletoget = (Vehicle) null;
            this.hasgotvehicle = false;
            this.SourcedVehicle = (string) null;
            this.NewVehicleSourcing = false;
            Script.Wait(300);
            Game.FadeScreenIn(300);
            UI.Notify(this.GetHostName() + " Ok store the vehicle away and you can either ~b~ Keep~w~ or ~b~ Sell~w~ the car");
          }
        }
      }
      if (this.Missionnum == 412 && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if (Game.Player.Character.CurrentVehicle.ClassType == this.VClass)
        {
          this.Vehicletoget = Game.Player.Character.CurrentVehicle;
          if (this.Vehicletoget.GetPedOnSeat(VehicleSeat.Driver).IsPlayer && this.foundvehicleyet)
          {
            this.foundvehicleyet = true;
            this.Vehicletoget.IsDriveable = true;
            UI.Notify(this.GetHostName() + " Boss that is the car we need, bring it back to the vehicle ~b~Vehicle Warehouse~w~ to sell it");
            this.foundvehicleyet = false;
            this.hasgotvehicle = true;
          }
        }
        if (Game.Player.Character.CurrentVehicle.ClassType != this.VClass)
        {
          this.Vehicletoget = (Vehicle) null;
          this.foundvehicleyet = false;
        }
        if ((Entity) this.Vehicletoget != (Entity) null && (double) World.GetDistance(this.Vehicletoget.Position, this.WherehouseMarker) < 10.0 && (this.hasgotvehicle && !this.Vehicletoget.IsDead))
        {
          if (this.SourcingCheckingforDamage)
            UI.Notify("Congradulations the vehicle is undamaged");
          this.Missionnum = 0;
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.hasgotvehicle = false;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.Missionnum = 0;
          UI.Notify(this.GetHostName() + " Ok store the vehicle away and you can either ~b~ Keep~w~ or ~b~ Sell~w~ the car");
          this.Vehicletoget = (Vehicle) null;
          this.Vehicletoget = (Vehicle) null;
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerExit) < 3.0)
        this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Exit Office");
      if (!this.SellStockDeliveryMission)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMarker) < 3.0)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Enter Office");
        if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMarker) < 60.0)
          World.DrawMarker(MarkerType.VerticalCylinder, this.GarageMarker, Vector3.Zero, Vector3.Zero, new Vector3(1f, 1f, 1f), color1);
        if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageMarker) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.Delete();
          Game.Player.Character.Position = this.RoofEnterMarker;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ChairPos) < 2.0)
      {
        if (this.IsSittinginCeoSeat)
          this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Open Menu, Press ~INPUT_COVER~ to Exit");
        if (!this.IsSittinginCeoSeat)
          this.DisplayHelpTextThisFrame("Press ~INPUT_COVER~ to sit on CEO chair to access Menu");
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ChairPos) > 4.0 && this.IsSittinginCeoSeat)
      {
        if (!this.WCamOn && !this.PlayerChangingName)
          this.modMenuPool.CloseAllMenus();
        this.IsSittinginCeoSeat = false;
        Game.Player.Character.FreezePosition = true;
        Game.FadeScreenOut(500);
        Script.Wait(500);
        Game.Player.Character.Position = this.ChairPos;
        Game.Player.Character.Heading = this.P_Rotation;
        Function.Call(Hash._0xB4EC2312F4E5B1F1, (InputArgument) 0.0f);
        Function.Call(Hash._0x6D0858B8EDFD2B7D, (InputArgument) 0.0f);
        Game.Player.Character.Task.ClearAnimation("anim@amb@office@laptops@male@var_c@base@", "base");
        Game.Player.Character.FreezePosition = false;
        Script.Wait(500);
        Game.FadeScreenIn(500);
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofExitMarker) < 3.0)
        this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to return to office");
      if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofEnterMarker) < 3.0)
        this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to go to roof or ~INPUT_COVER~ to go to undergound garage");
      if ((double) World.GetDistance(Game.Player.Character.Position, this.SleepPos) >= 3.0)
        return;
      this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Sleep");
    }

    private void DisplayHelpTextThisFrame(string text)
    {
      Function.Call(Hash._0x8509B634FBE7DA11, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0x238FFE5C7B0498A6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1, (InputArgument) -1);
    }

    private void OnKeyDown()
    {
      if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.Exit) < 4.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
          ExecutiveTower.VehicleA.Delete();
        if ((Entity) ExecutiveTower.VehicleB != (Entity) null)
          ExecutiveTower.VehicleB.Delete();
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_modgarage");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_02_cargarage_c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_modgarage");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_15_cargarage_c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_modgarage");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_sm_13_cargarage_c");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_modgarage");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_a");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_b");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "imp_dt1_11_cargarage_c");
        this.RefreshInteriors(this.Design);
        Script.Wait(1);
        Game.Player.Character.Position = this.ModShopEnter;
        Script.Wait(1);
        this.RefreshInteriors(this.Design);
        this.Delete();
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, ExecutiveTower.CustomizeMenuMarker) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && !ExecutiveTower.CustomizemainMenu.Visible)
        ExecutiveTower.CustomizemainMenu.Visible = !ExecutiveTower.CustomizemainMenu.Visible;
      if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) ExecutiveTower.VehicleA != (Entity) null && ExecutiveTower.VehicleA.GetPedOnSeat(VehicleSeat.Driver).IsPlayer)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          this.SC.LoadIniFile(ExecutiveTower.Path + ExecutiveTower.GarageNum + "//" + ExecutiveTower.Saveloc);
          this.SC.SaveWithoutDelete();
          UI.Notify(this.GetHostName() + " Vehicle Saved");
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
            ExecutiveTower.VehicleA.Delete();
          UI.Notify(this.GetHostName() + " Vehicle set back to garage");
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && this.IsinInterior)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerA) < 2.0)
          this.IsinInterior = false;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerB) < 2.0)
          this.IsinInterior = false;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.EnterMarkerC) < 2.0)
          this.IsinInterior = false;
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Cover) && !this.IsinInterior)
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerA) < 2.0)
          this.IsinInterior = true;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerB) < 2.0)
          this.IsinInterior = true;
        if ((double) World.GetDistance(Game.Player.Character.Position, this.ExitMarkerC) < 2.0)
          this.IsinInterior = true;
      }
      if (this.Missionnum == 13 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(213f, -936f, 24f)) < 3.0)
          Game.Player.Character.Position = new Vector3(227f, -1001f, -99f);
        else if ((double) World.GetDistance(Game.Player.Character.Position, new Vector3(227f, -1001f, -99f)) < 4.0)
        {
          if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
          {
            Game.Player.Character.CurrentVehicle.Position = new Vector3(213f, -936f, 24f);
            Game.Player.Character.CurrentVehicle.Rotation = new Vector3(0.0f, 0.0f, -34f);
            Game.Player.WantedLevel = 2;
          }
          else
            Game.Player.Character.Position = new Vector3(213f, -936f, 24f);
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerEnter) < 3.0)
      {
        if (!Game.IsControlJustPressed(2, GTA.Control.Context))
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
        Script.Wait(100);
        if (this.purchaselvl <= 0)
          return;
        if (Game.Player.WantedLevel < 1)
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.Delete();
          this.RefreshInteriors(this.Design);
          Game.Player.Character.Position = this.MarkerExit;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = true;
          try
          {
            if (this.AssistantPedModelType.Equals("Pedhash"))
            {
              PedHash assistantPedModelPedHash = this.AssistantPedModelPedHash;
              if ((Entity) this.AssistantPed != (Entity) null)
                this.AssistantPed.Delete();
              this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelPedHash), this.AssistantPos, this.AssistantRot);
              this.SetupAssistant(this.AssistantPed, this.AssistantRot);
            }
            else if (this.AssistantPedModelType.Equals("string"))
            {
              string assistantPedModelString = this.AssistantPedModelString;
              if ((Entity) this.AssistantPed != (Entity) null)
                this.AssistantPed.Delete();
              this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelString), this.AssistantPos, this.AssistantRot);
              this.SetupAssistant(this.AssistantPed, this.AssistantRot);
            }
            else
            {
              PedHash assistantPedModelPedHash = this.AssistantPedModelPedHash;
              if ((Entity) this.AssistantPed != (Entity) null)
                this.AssistantPed.Delete();
              this.AssistantPed = World.CreatePed(this.RequestModel(assistantPedModelPedHash), this.AssistantPos, this.AssistantRot);
              this.SetupAssistant(this.AssistantPed, this.AssistantRot);
            }
          }
          catch
          {
            PedHash Name = PedHash.ExecutivePAFemale01;
            if ((Entity) this.AssistantPed != (Entity) null)
              this.AssistantPed.Delete();
            this.AssistantPed = World.CreatePed(this.RequestModel(Name), this.AssistantPos, this.AssistantRot);
            this.SetupAssistant(this.AssistantPed, this.AssistantRot);
          }
        }
        else
        {
          this.DisplayHelpTextThisFrame("Lose the cops");
          UI.Notify(this.GetHostName() + " Please lose the cops boss");
        }
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.MarkerExit) < 2.0)
      {
        if (!Game.IsControlJustPressed(2, GTA.Control.Context))
          return;
        Game.FadeScreenOut(300);
        Script.Wait(300);
        this.Load();
        this.RefreshInteriors(this.Design);
        this.Delete();
        Game.Player.Character.Position = this.MarkerEnter;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.ChairPos) < 2.0)
      {
        if (this.IsSittinginCeoSeat)
        {
          if (Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) && this.mainMenu.Visible)
          {
            Prop ceoChairProp = this.CEOChairProp;
            ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) ceoChairProp.Position.X, (InputArgument) ceoChairProp.Position.Y, (InputArgument) ceoChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) ceoChairProp.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) ceoChairProp, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            if (Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
              UI.Notify("Debug 2");
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//ExecutiveBusiness//Main.ini");
            if (!this.mainMenu.Visible)
            {
              Prop ceoChairProp = this.CEOChairProp;
              ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
              int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) ceoChairProp.Position.X, (InputArgument) ceoChairProp.Position.Y, (InputArgument) ceoChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) ceoChairProp.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) ceoChairProp, (InputArgument) num, (InputArgument) "computer_enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(100);
              this.mainMenu.Visible = !this.mainMenu.Visible;
              if (Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
                UI.Notify("Debug 1");
            }
          }
          if (!Game.IsControlJustPressed(2, GTA.Control.Cover))
            return;
          this.modMenuPool.CloseAllMenus();
          this.IsSittinginCeoSeat = false;
          this.CEOChairProp.FreezePosition = false;
          Script.Wait(100);
          ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "exit", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "exit_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Script.Wait(4000);
          Game.Player.Character.Task.ClearAll();
          this.CEOChairProp.FreezePosition = true;
          if (!Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
            return;
          UI.Notify("Debug 3");
        }
        else
        {
          if (this.IsSittinginCeoSeat || !Game.IsControlJustPressed(2, GTA.Control.Cover))
            return;
          this.IsinInterior = true;
          this.CEOChairProp.FreezePosition = false;
          Script.Wait(100);
          string str = "anim@amb@office@boss@male@";
          ExecutiveTower.LoadDict("anim@amb@office@boss@male@");
          if (!Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
            return;
          this.Scene1 = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.CEOChairProp.Position.X, (InputArgument) this.CEOChairProp.Position.Y, (InputArgument) this.CEOChairProp.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.CEOChairProp.Rotation.Z, (InputArgument) 2);
          Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) this.Scene1, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) this.Scene1));
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) this.Scene1, (InputArgument) "enter", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.CEOChairProp, (InputArgument) this.Scene1, (InputArgument) "enter_chair", (InputArgument) ExecutiveTower.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          Script.Wait(5000);
          this.CEOChairProp.FreezePosition = true;
          this.IsSittinginCeoSeat = true;
          if (!Game.Player.Name.ToUpper().Equals("CINNBARGNU"))
            return;
          UI.Notify("Debug 4");
        }
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofExitMarker) < 2.0)
      {
        if (!Game.IsControlJustPressed(2, GTA.Control.Context))
          return;
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.RoofEnterMarker;
        this.Load();
        this.Delete();
        this.RefreshInteriors(this.Design);
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = true;
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.RoofEnterMarker) < 2.0)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          Game.FadeScreenOut(300);
          Script.Wait(300);
          this.Load();
          Game.Player.Character.Position = this.RoofExitMarker;
          Script.Wait(300);
          Game.FadeScreenIn(300);
          this.IsinInterior = false;
        }
        if (!Game.IsControlJustPressed(2, GTA.Control.Cover))
          return;
        Game.FadeScreenOut(300);
        Script.Wait(300);
        this.Load();
        Game.Player.Character.Position = this.GarageMarker;
        Script.Wait(300);
        Game.FadeScreenIn(300);
        this.IsinInterior = false;
      }
      else
      {
        if ((double) World.GetDistance(Game.Player.Character.Position, this.SleepPos) >= 2.0 || !Game.IsControlJustPressed(2, GTA.Control.Context))
          return;
        Game.Player.Character.FreezePosition = true;
        Game.FadeScreenOut(500);
        Script.Wait(500);
        Function.Call(Hash._0xC8CA9670B9D83B3B, (InputArgument) 6, (InputArgument) 0, (InputArgument) 0);
        Game.Player.WantedLevel = 0;
        Function.Call(Hash._0x8FE22675A5A45817, (InputArgument) Game.Player.Character);
        Function.Call(Hash._0x9C720776DAA43E7E, (InputArgument) Game.Player.Character);
        Game.Player.Character.Position = this.SleepPos;
        Game.Player.Character.Heading = 248.15f;
        Function.Call(Hash._0xB4EC2312F4E5B1F1, (InputArgument) 0.0f);
        Function.Call(Hash._0x6D0858B8EDFD2B7D, (InputArgument) 0.0f);
        Game.Player.Character.FreezePosition = false;
        Script.Wait(1500);
        Game.FadeScreenIn(500);
        this.IsinInterior = true;
      }
    }

    private void OnShutdown(object sender, EventArgs e)
    {
      this.CargoWarehouseScript.OnShutdown();
      this.VehicleWarehouseScript.OnShutdown();
      if (false)
        return;
      if (this.DeliverPointBlip != (Blip) null)
        this.DeliverPointBlip.Remove();
      foreach (Vehicle asellMissionVehicle in this.SourceASellMissionVehicles)
      {
        if ((Entity) asellMissionVehicle != (Entity) null)
          asellMissionVehicle.Delete();
      }
      foreach (Prop asellMissionProp in this.SourceASellMissionProps)
      {
        if ((Entity) asellMissionProp != (Entity) null)
          asellMissionProp.Delete();
      }
      foreach (Blip asellMissionBlip in this.SourceASellMissionBlips)
      {
        if (asellMissionBlip != (Blip) null)
          asellMissionBlip.Remove();
      }
      foreach (Ped sourceAsellMissionPed in this.SourceASellMissionPeds)
      {
        if ((Entity) sourceAsellMissionPed != (Entity) null)
          sourceAsellMissionPed.Delete();
      }
      if (this.PG.Count > 0)
      {
        foreach (Ped ped in this.PG)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
      }
      if ((Entity) this.CargoCrate1 != (Entity) null)
        this.CargoCrate1.Delete();
      if ((Entity) this.CargoCrate2 != (Entity) null)
        this.CargoCrate2.Delete();
      if ((Entity) this.CargoCrate3 != (Entity) null)
        this.CargoCrate3.Delete();
      if ((Entity) this.CargoCrate4 != (Entity) null)
        this.CargoCrate4.Delete();
      if ((Entity) this.CargoCrate5 != (Entity) null)
        this.CargoCrate5.Delete();
      if ((Entity) this.BreefCase != (Entity) null)
        this.BreefCase.Delete();
      if (this.CaseBlip != (Blip) null)
        this.CaseBlip.Remove();
      if ((Entity) this.Bike1 != (Entity) null)
        this.Bike1.Delete();
      if ((Entity) this.Bike2 != (Entity) null)
        this.Bike2.Delete();
      if ((Entity) this.Bike3 != (Entity) null)
        this.Bike3.Delete();
      if ((Entity) this.Bike4 != (Entity) null)
        this.Bike4.Delete();
      if ((Entity) this.Bike5 != (Entity) null)
        this.Bike5.Delete();
      if (this.Bike1Blip != (Blip) null)
        this.Bike1Blip.Remove();
      if (this.Bike2Blip != (Blip) null)
        this.Bike2Blip.Remove();
      if (this.Bike3Blip != (Blip) null)
        this.Bike3Blip.Remove();
      if (this.Bike4Blip != (Blip) null)
        this.Bike4Blip.Remove();
      if (this.Bike5Blip != (Blip) null)
        this.Bike5Blip.Remove();
      if (this.Cam != (Camera) null)
      {
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.Cam.IsActive = false;
        this.Cam.Destroy();
      }
      if ((Entity) this.Vehicle1 != (Entity) null)
        this.Vehicle1.Delete();
      if ((Entity) this.Vehicle2 != (Entity) null)
        this.Vehicle2.Delete();
      if ((Entity) this.Vehicle3 != (Entity) null)
        this.Vehicle3.Delete();
      if ((Entity) this.Vehicle4 != (Entity) null)
        this.Vehicle4.Delete();
      if ((Entity) this.Vehicle5 != (Entity) null)
        this.Vehicle5.Delete();
      if ((Entity) this.Vehicle5 != (Entity) null)
        this.Vehicle5.Delete();
      if ((Entity) this.Vehicle6 != (Entity) null)
        this.Vehicle6.Delete();
      if ((Entity) this.Vehicle7 != (Entity) null)
        this.Vehicle7.Delete();
      if ((Entity) this.Vehicle8 != (Entity) null)
        this.Vehicle8.Delete();
      if ((Entity) this.Vehicle9 != (Entity) null)
        this.Vehicle9.Delete();
      if ((Entity) this.Vehicle10 != (Entity) null)
        this.Vehicle10.Delete();
      if ((Entity) this.Vehicle11 != (Entity) null)
        this.Vehicle11.Delete();
      if ((Entity) this.Vehicle12 != (Entity) null)
        this.Vehicle12.Delete();
      if ((Entity) this.Vehicle13 != (Entity) null)
        this.Vehicle13.Delete();
      if ((Entity) this.Vehicle14 != (Entity) null)
        this.Vehicle14.Delete();
      if ((Entity) this.Vehicle15 != (Entity) null)
        this.Vehicle15.Delete();
      if ((Entity) this.Vehicle16 != (Entity) null)
        this.Vehicle16.Delete();
      if ((Entity) this.Vehicle17 != (Entity) null)
        this.Vehicle17.Delete();
      if ((Entity) this.Vehicle18 != (Entity) null)
        this.Vehicle18.Delete();
      if ((Entity) this.Vehicle19 != (Entity) null)
        this.Vehicle19.Delete();
      if ((Entity) this.Vehicle20 != (Entity) null)
        this.Vehicle20.Delete();
      foreach (Prop chair in this.Chairs)
      {
        if ((Entity) chair != (Entity) null)
          chair.Delete();
      }
      try
      {
        if (this.EndPointBlip != (Blip) null)
          this.EndPointBlip.Remove();
        if ((Entity) this.Sam1 != (Entity) null)
          this.Sam1.Delete();
        if ((Entity) this.Sam2 != (Entity) null)
          this.Sam2.Delete();
        if ((Entity) this.Sam3 != (Entity) null)
          this.Sam3.Delete();
        if (this.Sam1blip != (Blip) null)
          this.Sam1blip.Remove();
        if (this.Sam2blip != (Blip) null)
          this.Sam2blip.Remove();
        if (this.Sam3blip != (Blip) null)
          this.Sam3blip.Remove();
        if (this.SuppyGuards.Count > 0)
        {
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
        }
        if (this.DropBlip.Count > 0)
        {
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
        }
        if ((Entity) this.StockVeh != (Entity) null)
          this.StockVeh.Delete();
        if (this.SellStockProps.Count > 0)
        {
          foreach (Prop sellStockProp in this.SellStockProps)
          {
            if ((Entity) sellStockProp != (Entity) null)
              sellStockProp.Delete();
          }
        }
        if (this.SupplyGarageBlip != (Blip) null)
          this.SupplyGarageBlip.Remove();
      }
      catch
      {
      }
      if ((Entity) this.ChairProp != (Entity) null)
        this.ChairProp.Delete();
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Remove();
      if (this.AircraftStorageMarker != (Blip) null)
        this.AircraftStorageMarker.Remove();
      if (this.LotBlip != (Blip) null)
        this.LotBlip.Remove();
      if (this.DockBlip != (Blip) null)
        this.DockBlip.Remove();
      if ((Entity) ExecutiveTower.VehicleA != (Entity) null)
        ExecutiveTower.VehicleA.Delete();
      if ((Entity) ExecutiveTower.VehicleB != (Entity) null)
        ExecutiveTower.VehicleB.Delete();
      if (this.DestBlip != (Blip) null)
        this.DestBlip.Remove();
      if ((Entity) this.Computer != (Entity) null)
      {
        if (this.IsinInterior)
          this.SpawnProp("ex_prop_monitor_01_ex", this.ComputerPos, this.Computer.Rotation);
        int num = this.IsinInterior ? 1 : 0;
        this.Computer.Delete();
      }
      if ((Entity) this.AssistantPed != (Entity) null)
        this.AssistantPed.Delete();
      if ((Entity) this.CEOChairProp != (Entity) null)
        this.CEOChairProp.Delete();
      if ((Entity) this.AssistantChairProp != (Entity) null)
        this.AssistantChairProp.Delete();
      if (this.PlayerChangingNameCam != (Camera) null)
      {
        World.RenderingCamera = this.PlayerChangingNameCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.PlayerChangingNameCam.IsActive = false;
        this.PlayerChangingNameCam.Destroy();
        Game.Player.Character.FreezePosition = false;
      }
      if (this.WarehouseCam != (Camera) null)
      {
        World.RenderingCamera = this.WarehouseCam;
        Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
        this.WarehouseCam.IsActive = false;
        this.WarehouseCam.Destroy();
        Game.Player.Character.FreezePosition = false;
      }
      if (this.DestoryVehicle != (Blip) null)
        this.DestoryVehicle.Remove();
      if ((Entity) this.VehicleMissioncar != (Entity) null)
        this.VehicleMissioncar.Delete();
      if ((Entity) this.VehicleId != (Entity) null)
        this.VehicleId.Delete();
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if ((Entity) this.VtoGet1 != (Entity) null)
        this.VtoGet1.Delete();
      if ((Entity) this.VtoGet2 != (Entity) null)
        this.VtoGet2.Delete();
      if ((Entity) this.VtoGet3 != (Entity) null)
        this.VtoGet3.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if (this.DropzoneBlip != (Blip) null)
        this.DropzoneBlip.Remove();
      if (!((Entity) this.RentedVehicle != (Entity) null))
        return;
      this.RentedVehicle.Delete();
    }

    public class CargoWarehouseData : Script
    {
      public int Owned { get; set; }

      public int Size { get; set; }

      public int Cost { get; set; }

      public int Maxcrates { get; set; }

      public Vector3 Location { get; set; }

      public string WarehouseName { get; set; }

      public string WarehouseLocation { get; set; }

      public string WarehouseDescription { get; set; }

      public int DiscountCost { get; set; }

      public string PicTexture { get; set; }

      public int ID { get; set; }

      public int Index { get; set; }

      public CargoWarehouseData()
      {
      }

      public CargoWarehouseData(
        int O,
        int S,
        int C,
        int Mc,
        Vector3 L,
        string Wn,
        string Wl,
        string Wd,
        int Dc,
        string Pt)
      {
        this.Owned = O;
        this.Size = S;
        this.Cost = C;
        this.Maxcrates = Mc;
        this.Location = L;
        this.WarehouseName = Wn;
        this.WarehouseLocation = Wl;
        this.WarehouseDescription = Wd;
        this.DiscountCost = Dc;
        this.PicTexture = Pt;
      }
    }

    public class VehicleWarehouseData : Script
    {
      public int Owned { get; set; }

      public string VehicleWarehouseName { get; set; }

      public string VehicleWarehouseLocationName { get; set; }

      public string VehicleWarehousePicTex { get; set; }

      public string VehicleWarehouseDescription { get; set; }

      public Vector3 VehicleWarehouseCoords { get; set; }

      public int Price { get; set; }

      public int DiscountPrice { get; set; }

      public VehicleWarehouseData()
      {
      }

      public VehicleWarehouseData(
        int O,
        Vector3 wLoc,
        string Wn,
        string Wln,
        string Pictex,
        int p,
        int Dp,
        string Desc)
      {
        this.Owned = O;
        this.VehicleWarehouseCoords = wLoc;
        this.VehicleWarehouseName = Wn;
        this.VehicleWarehouseLocationName = Wln;
        this.VehicleWarehousePicTex = Pictex;
        this.VehicleWarehouseDescription = Desc;
        this.Price = p;
        this.DiscountPrice = Dp;
      }
    }

    public class Flare : Script
    {
      public Vector3 Location { get; set; }

      public bool Created { get; set; }

      public Prop FlareProp { get; set; }

      public int FlareID_1 { get; set; }

      public int FlareID_2 { get; set; }

      public int FlareID_3 { get; set; }

      public Flare()
      {
      }

      public Flare(Prop FP, int Fid1, int Fid2, int Fid3)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
        this.FlareID_2 = Fid2;
        this.FlareID_3 = Fid3;
      }

      public Flare(Prop FP, int Fid1)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
      }

      public Flare(Prop FP, int Fid1, bool C)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
        this.Created = C;
      }

      public Flare(Vector3 Loc, bool C)
      {
        this.Location = Loc;
        this.Created = C;
      }

      public Flare(Prop FP, Vector3 Loc, bool C)
      {
        this.FlareProp = FP;
        this.Location = Loc;
        this.Created = C;
      }
    }

    public class SpawnH
    {
      public Vector3 Position { get; set; }

      public float Heading { get; set; }

      public SpawnH()
      {
      }

      public SpawnH(Vector3 P, float H)
      {
        this.Position = P;
        this.Heading = H;
      }
    }

    public enum Nodetype
    {
      AnyRoad,
      Road,
      Offroad,
      Water,
    }

    public class NamedLocation
    {
      public Vector3 Position { get; set; }

      public string Location { get; set; }

      public float Heading { get; set; }

      public bool UsedLocation { get; set; }

      public NamedLocation()
      {
      }

      public NamedLocation(Vector3 P, string L)
      {
        this.Position = P;
        this.Location = L;
      }

      public NamedLocation(Vector3 P, float H, string L)
      {
        this.Position = P;
        this.Heading = H;
        this.Location = L;
      }
    }
  }
}
