using GTA;
using GTA.Math;
using GTA.Native;
using Microsoft.CSharp.RuntimeBinder;
using NativeUI;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq.Expressions;
using System.Runtime.CompilerServices;
using System.Windows.Forms;

namespace AfterHoursBusiness
{
  public class Class1 : Script
  {
    public int PounderCustomUnlocked;
    public int MuleCustomUnlocked;
    public int SpeedoCustomUnlocked;
    public bool RefreshingRadio;
    private bool firstTime = false;
    private string ModName = "After Hours Business mod";
    private string Developer = "HKH191";
    private string Version = "1";
    public Vector3 MenuMarker;
    private ScriptSettings Config;
    private ScriptSettings Config2;
    private ScriptSettings Config3;
    private ScriptSettings OnlineInteriorsConfig;
    private Keys Key1;
    public Vector3 BuyMarker;
    public Vector3 BuyMarker2;
    public int num;
    private MenuPool modMenuPool;
    private UIMenu Races;
    private UIMenu VehicleGaragePool;
    private UIMenu mainMenu;
    private UIMenu methgarage;
    private UIMenu VehicleWherehouseOptions;
    private UIMenu ProductStock;
    private UIMenu Sourcingmenu2;
    public bool bought;
    public int purchaselvl;
    public int maxstocks;
    public float stocksvalue;
    public float profitMargin;
    public int stockscount;
    public int stockstimer;
    public static int GetInVehicleBay;
    public static int GetInStorageBay;
    public int waittime;
    public int DisplayWait;
    public bool SetupPeds;
    public int Lighttime;
    public List<Prop> CelingLights = new List<Prop>();
    public Blip TowerBlip;
    public bool NewVehicleSourcing;
    public VehicleColor CabPrimary;
    public VehicleColor CabSecondary;
    public float increaseGain;
    public AllStocks Allstocks;
    public Vector3 Entry;
    public Vector3 Exit;
    public Vector3 Entry2;
    public Vector3 Exit2;
    public bool IsInInterior;
    public List<Prop> DJProps = new List<Prop>();
    public Vector3 GarageEntry = new Vector3(-1618.505f, -3007.501f, -76f);
    public Vector3 GarageExit = new Vector3(-1507.674f, -3017.103f, -80f);
    public Garages Garages;
    public Vector3 GarageVehicleSpawnOutside = new Vector3(-1197.383f, -729.1903f, 20f);
    private MenuPool modMenuPool4;
    private UIMenu GarageMenu1;
    private UIMenu mainMenu4;
    public Vehicle SaveVehicle;
    public string LoadPath = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//";
    public bool WipedLens;
    private MenuPool modMenuPool3;
    private UIMenu mainMenu3;
    private UIMenu Options3;
    public Vector3 GarageOptions = new Vector3(-1506f, -3002f, -83f);
    public Vehicle Terrobyte;
    public Vector3 TerrobyteSpawn = new Vector3(-1627f, -3000f, -78f);
    public int TerroybiteBought;
    public Vector3 VehicleOptions = new Vector3(-1641f, -3003f, -79f);
    public Vector3 VehicleSpawn = new Vector3(-1639f, -3008f, -79f);
    public UIMenu SpecialVehicleOptions;
    public Vehicle SpecialVehicle;
    public string VehicleLoadPath;
    public int MenacerBought;
    public int ScramJetBought;
    public int OppressorMKIIBought;
    public int PatriotStretchBought;
    public int SwingerBought;
    public int StraffordBought;
    public AfterHoursBusiness.SaveCar SaveLoad;
    public bool SetupPrivacyGlass;
    public Vector3 PedsSpawn = new Vector3(-1595f, -3012f, -80f);
    public List<Ped> Peds = new List<Ped>();
    public int numberofDancers = 20;
    public UIMenu FalseAdvertising;
    public int missionnum;
    public bool MissionSetup;
    public Vehicle VehicletoDestroy;
    public Vector3 VehicleToDestroySpawn;
    public Vector3 Destination;
    public Blip VehicletoDestroyBlip;
    public UIMenu ExteriorOptions;
    public string Design;
    public string DJ;
    public Ped DJped;
    public Ped DJped2;
    public List<Ped> p = new List<Ped>();
    public bool PlayRadioMusic;
    public bool RadioMusicOn;
    public Vector3 Vehicle1Loc = new Vector3(-86.7646f, -822.949f, 222f);
    public Vehicle Vehicle1;
    public string DefaultRadioStation = "1_";
    public int WaredrobeOwned;
    public UIMenu WoredrobeMainMenu;
    public UIMenu WoredrobeMenu;
    public Vector3 WaredrobeMarker = new Vector3(-1619.715f, -3020.182f, -76.3f);
    public int ID_O;
    public string ID_C;
    public int Comp;
    public GTA.Model OldCharacter;
    public WeaponTint Liv;
    public string GarageNum;
    public int LightMoveTimer;
    private ScriptSettings ScriptConfig;
    public bool IsScriptEnabled;
    public Camera Cam;
    public bool CameraOn;
    public Vector3 GarageCamPos = new Vector3(-92f, -822f, 228f);
    public float GarageCamRot = -117f;
    private Vector3 P;
    public bool ISinviewMode;
    public string path = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//";
    public Vector3 ChairPos = new Vector3(-1619.619f, -3011.295f, -76.7f);
    public Vector3 ChairPos2 = new Vector3(-1507.047f, -3032.259f, -80.8f);
    public float P_Rotation = 37f;
    public bool IsSittinginCeoSeat;
    public bool IsSittinginCeoSeat2;
    public Blip GarageB;
    public string HostName;
    public BlipColor Blip_Colour;
    public string Uicolour;
    public Color MarkerColor;
    public string MarkerColorString;
    public List<Prop> PrivacyGlassProps = new List<Prop>();
    public int N_Style;
    public int N_PodiumStyle;
    public int N_Booze;
    public int N_DJ;
    public int N_DJLights;
    public int N_ProjectorType;
    public int N_Lights;
    public int N_LightsRig;
    public int N_Upgrade;
    public int N_ClubName;
    public int N_trophies;
    public int N_WorkLights;
    public int N_Clutter;
    public int N_DryIce;
    public int N_DelivTruck;
    public int N_DancerAGender;
    public int N_DancerAStyle;
    public int N_DancerBGender;
    public int N_DancerBStyle;
    public int N_PrivacyGlass;
    public Color N_CeilingColour;
    public string N_CeilingColourstring;
    public string N_SpotLightColourstring;
    public Color N_SpotLightColour;
    public bool RandomSpotlightColour;
    public Prop Chair_A;
    public Prop Chair_B;
    public Prop Chair_C;
    public int DryIceParticleMultiplier = 1;
    public List<Ped> MainPeds = new List<Ped>();
    public List<Prop> MiscProps = new List<Prop>();
    public bool OpenGunlockerDoor;
    public List<Vector3> DrinkPosPent = new List<Vector3>();
    public List<float> DrinkPosRot = new List<float>();
    public Prop Champaine;
    public bool IsDrinking;
    public int DrinkTimer;
    public List<Prop> Champ = new List<Prop>();
    public int Effect;
    public UIMenu MainStuffMenu;
    public UIMenu DrinksMenu;
    public int LightMoveInterval;
    public Ped DancerA;
    public Ped DancerB;
    public UIMenu Misc;
    public Prop ClubNameProp;
    public List<Vector3> DancePos = new List<Vector3>();
    public List<float> DanceHeading = new List<float>();
    public bool MovingSpotLights = true;
    public bool MulticolorLights = true;
    public bool SpinningMulticolorLights = false;
    public List<Prop> LensRotater = new List<Prop>();
    public List<Prop> Lens = new List<Prop>();
    public List<Prop> SecondaryLens = new List<Prop>();
    public List<Prop> ThirdLens = new List<Prop>();
    public List<float> LensMinX = new List<float>();
    public List<float> LensMaxX = new List<float>();
    public List<float> LensMinY = new List<float>();
    public List<float> LensMaxY = new List<float>();
    public List<float> LensMinZ = new List<float>();
    public List<float> LensMaxZ = new List<float>();
    public List<float> LensTaskProgress = new List<float>();
    public bool RadioOn;
    public Prop Vent;
    public List<Vector3> SeatPos = new List<Vector3>();
    public List<float> SeatRot = new List<float>();
    public bool sitting;
    public Color RandomC = Color.Wheat;
    public int LightChangeInterval;
    public int LightTimer = 0;
    public Ped Guard;
    public Prop Poster;
    public Prop Poster1;
    public Prop Poster2;
    public bool SmokeCreated;
    public int SpotLightType;
    public int LightNode = 0;
    public bool TurnRadioOffON;
    public int NightClubLoc;
    public UIMenu NightClubBuyNewLoc;
    public int GunLockerBought = 1;
    public Vector3 OutsideLightFXPos;
    public float OutsideLightFXHeading;
    public Vector3 OutsideClubnamePos;
    public float OutsideClubnameHeading;
    public int MoneyVaultBought;
    public string GarageID;
    public bool StockSupplyRunMission;
    public bool SellStockDeliveryMission;
    public Vehicle StockVeh;
    public List<Vector3> SellStockLoc = new List<Vector3>();
    public int SellStockPointsBeenAt;
    public List<Prop> SellStockProps = new List<Prop>();
    public Prop SellStockProp1;
    public Prop SellStockProp2;
    public Prop SellStockProp3;
    public Prop SellStockProp4;
    public Prop SellStockProp5;
    public Prop SellStockProp6;
    public Prop SellStockProp7;
    public Prop SellStockProp8;
    public Prop SellStockProp9;
    public List<string> CrateProps = new List<string>()
    {
      "ex_prop_crate_xldiam",
      "ex_prop_crate_wlife_sc",
      "ex_prop_crate_wlife_bc",
      "ex_prop_crate_watch",
      "ex_prop_crate_tob_sc",
      "ex_prop_crate_tob_bc",
      "ex_prop_crate_shide",
      "ex_prop_crate_pharma_sc",
      "ex_prop_crate_pharma_bc",
      "ex_prop_crate_oegg",
      "ex_prop_crate_narc_sc",
      "ex_prop_crate_narc_bc",
      "ex_prop_crate_money_sc",
      "ex_prop_crate_money_bc",
      "ex_prop_crate_minig",
      "ex_prop_crate_med_sc",
      "ex_prop_crate_med_bc",
      "ex_prop_crate_jewels_sc",
      "ex_prop_crate_jewels_racks_sc",
      "ex_prop_crate_jewels_racks_bc",
      "ex_prop_crate_jewels_bc",
      "ex_prop_crate_highend_pharma_sc",
      "ex_prop_crate_highend_pharma_bc",
      "ex_prop_crate_gems_sc",
      "ex_prop_crate_gems_bc",
      "ex_prop_crate_furjacket_sc",
      "ex_prop_crate_furjacket_bc",
      "ex_prop_crate_freel",
      "ex_prop_crate_expl_sc",
      "ex_prop_crate_expl_bc",
      "ex_prop_crate_elec_sc",
      "ex_prop_crate_elec_bc",
      "ex_prop_crate_clothing_sc",
      "ex_prop_crate_clothing_bc",
      "ex_prop_crate_closed_sc",
      "ex_prop_crate_closed_rw",
      "ex_prop_crate_closed_mw",
      "ex_prop_crate_closed_ms",
      "ex_prop_crate_closed_bc",
      "ex_prop_crate_bull_sc_02",
      "ex_prop_crate_bull_bc_02",
      "ex_prop_crate_biohazard_sc",
      "ex_prop_crate_biohazard_bc",
      "ex_prop_crate_art_sc",
      "ex_prop_crate_art_bc",
      "ex_prop_crate_art_02_sc",
      "ex_prop_crate_art_02_bc",
      "ex_prop_crate_ammo_sc",
      "ex_prop_crate_ammo_bc"
    };
    public int AmttoDeliver;
    public List<Vector3> DropPoint = new List<Vector3>();
    public List<Blip> DropBlip = new List<Blip>();
    public List<Ped> SuppyGuards = new List<Ped>();
    public bool CreateSupplyVehicle;
    public bool GotVehicle;
    public int SupplyMission = 1;
    public Blip SupplyGarageBlip;
    public Vector3 Sam1Loc;
    public Vector3 Sam2Loc;
    public Vector3 Sam3Loc;
    public Vehicle Sam1;
    public Vehicle Sam2;
    public Vehicle Sam3;
    public Blip Sam1blip;
    public Blip Sam2blip;
    public Blip Sam3blip;
    public Blip EndPointBlip;
    public Vector3 EndPoint;
    private MenuPool MoneymodMenuPool;
    private UIMenu MoneymainMenu;
    public Prop GunLockerDoor;
    public Prop MoneyVaultDoor;
    public bool isGLOpen;
    public bool isMVOpen;
    public float MoneyStored;
    public float Commission;
    public UIMenu MoneyMenu;
    public Vector3 MoneyStorageMarker = new Vector3(-1621.34f, -3008.47f, -76.2f);
    public int currentbank;
    public bool read;
    public bool CreatedWaitingPeds;
    public Vector3 LuxuryCarPos;
    public float LuxuryCarheading;
    public Vector3 WaitingPedPosStart;
    public float WaitingPedRot;
    public Vector3 OutsideBouncerPos_1;
    public float OutsideBouncerRot_1;
    public Vector3 OutsideBouncerPos_2;
    public float OutsideBouncerRot_2;
    public float FenceRot;
    public Ped OutsideBouncer_1;
    public Ped OutsideBouncer_2;
    public Vehicle LuxuryCar;
    public List<Ped> WaitingPed = new List<Ped>();
    public List<Prop> WaitingPedFence = new List<Prop>();
    public VehicleColor PrimaryColor = VehicleColor.PureGold;
    public VehicleColor SecondaryColor = VehicleColor.MatteBlack;
    public VehicleHash LuxuryCarHash = VehicleHash.Windsor2;
    public Vector3 EntryMarkerA;
    public Vector3 EntryMarkerB;
    public Vector3 PlayerDancePos1 = new Vector3(-1604.539f, -3012.507f, -77f);
    public Vector3 PlayerDancePos2 = new Vector3(-1595.292f, -3012.144f, -80f);
    public int SpawnDancersInNightclub = 0;
    public List<Class1.DancePositionsSettings> Dance_Positions = new List<Class1.DancePositionsSettings>();
    public List<Vector3> DancePositions = new List<Vector3>();
    public List<Vector3> LeanPos = new List<Vector3>();
    public List<Ped> Dancers = new List<Ped>();
    public bool IsLeaning;
    public UIMenu SpecialMissions;
    public Vehicle VtoGet;
    public Blip VtoGetBlip;
    public bool GotCar;
    public Vehicle VtoGet1;
    public Vehicle VtoGet2;
    public Vehicle VtoGet3;
    public int Missionnum;
    public List<Ped> Guards = new List<Ped>();
    public List<Ped> Driver = new List<Ped>();
    public bool VehicleSetup;
    public Vector3 Radiopos = new Vector3(-1604.72f, -3014.16f, -78.6f);
    public Vector3 LastHitPos;
    public bool RandomCelingLightColor;
    public int CelingLightChangeInterval;
    public int CelingLightTimer;
    public bool MoneyVaultDoorOpen;
    public float BusinessUpgradeBasePrice = 125000f;
    public float IncreaseStockMinAmount = 25000f;
    public float IncreaseStockMaxAmount = 350000f;
    public float DecreaseStockMinAmount = 25000f;
    public float DecreaseStockMaxAmount = 350000f;
    public float BusinessUpgradeIncreaseGain = 75000f;
    private UIMenu weaponsMenu;
    public Vector3 GunLockerMarker = new Vector3(-1615.8f, -3015.7f, -76.3f);
    private UIMenu MK2Pumpshotgun;
    private UIMenu MK2SNSPistol;
    private UIMenu MK2Revolver;
    private UIMenu Mk2SpecialCarbine;
    private UIMenu MK2Bullpup;
    private UIMenu MK2MarksmanRifle;
    private UIMenu MK2Pistol;
    private UIMenu MK2SMG;
    private UIMenu MK2LMG;
    private UIMenu MK2Carbine;
    private UIMenu MK2AssaultRifle;
    private UIMenu MK2Sniper;
    private UIMenu GunlockerMenu;
    public int Tintscount = 32;
    public int LiveryColor;
    public BlipColor Safehouse_Colour;
    public Color SafehouseMColor;
    public string SafehouseMColorString;
    private ScriptSettings MainConfigFile;
    public bool UseNewEnterance;
    public Blip CocaineBlip;
    public Blip WeedBlip;
    public Blip MoneyForgeBlip;
    public Blip FakeIDBlip;
    public Blip MethBlip;
    public Vector3 WeedFarmExit = new Vector3(416.9f, 6520.6f, 26.5f);
    public Vector3 ForgeryExit = new Vector3(-1090.7f, 2715.4f, 18.5f);
    public Vector3 MoneyPrinterExit = new Vector3(-433.9f, -160f, 36.5f);
    public Vector3 CocaineExit = new Vector3(1701.4f, 4857.8f, 41.5f);
    public Vector3 MethLabExit = new Vector3(916.8f, 3576.8f, 32.5f);
    public Vector3 LastEnt;
    private ScriptSettings STConfig3;
    private ScriptSettings STConfig;
    private ScriptSettings Product;
    private MenuPool STmodMenuPool;
    private UIMenu STmainMenu;
    private UIMenu Buy;
    private UIMenu Sell;
    private UIMenu Enter;
    public Blip ballasBlip1;
    public int secondBuisnessBought;
    public Vector3 SecondBusinessLoc = new Vector3(854.195f, -2095.18f, 29f);
    public int ForgeryBought;
    public int MoneyPrinterBought;
    public int WeedFarmBought;
    public int CocaineBought;
    public int MethLabBought;
    public Vector3 WeedFarmEnter;
    public Vector3 ForgeryEnter;
    public Vector3 MoneyPrinterEnter;
    public Vector3 CocaineEnter;
    public Vector3 MethLabEnter;
    public Vector3 WeedMenu;
    public Vector3 ForgeryMenu;
    public Vector3 MoneyPrinterMenu;
    public Vector3 CocaineMenu;
    public Vector3 MethMenu;
    private MenuPool MethMenuPool;
    private UIMenu MethUIMenu;
    private UIMenu MethProduce;
    private UIMenu MethSell;
    private MenuPool CocaineMenuPool;
    private UIMenu CocaineUIMenu;
    private UIMenu CocaineProduce;
    private UIMenu CocaineSell;
    private MenuPool WeedMenuPool;
    private UIMenu WeedUIMenu;
    private UIMenu WeedProduce;
    private UIMenu WeedSell;
    public int MethProduct;
    public float MethValue;
    public int CocaineProduct;
    public float CocaineValue;
    public int MoneyProduct;
    public float MoneyValue;
    public int ForgeryProduct;
    public float ForgeryValue;
    public int WeedProduct;
    public float WeedValue;
    public int timer;
    public AllStocks AllStocks;
    public List<Vector3> STDropPoint = new List<Vector3>();
    public List<Blip> STDropBlip = new List<Blip>();
    public int Droptype;
    public Vehicle DropVehicle;
    public Blip DropVehicleBlip;
    public int STmissionnum;
    public bool PlayingMission;
    public int PointsBeenAt;
    public float amountToSell;
    public int StockAmount;
    public float vehicleHealth;
    public float MaxWeedWait;
    public float MaxCocaineWait;
    public float MaxMethWait;
    public float MaxForgeryWait;
    public float MaxCounterfeitWait;
    public float WeedWait;
    public float CocaineWait;
    public float MethWait;
    public float CounterfeitWait;
    public float ForgeryWait;
    public bool ShowCompletion;
    public int StockTimer;
    public bool ProducingMeth;
    public bool ProducingCocaine;
    public bool ProducingWeed;
    public bool ProducingCounterfeit;
    public bool ProducingForgery;
    public int Methbags;
    public int Cocainebags;
    public int Weedbags;
    public int Counterfeitbags;
    public int Forgerybags;
    public bool EnteredMethYet;
    public bool EnteredCocaineYet;
    public bool EnteredForgeryYet;
    public bool EnteredFakeIDYet;
    public bool EnteredWeedYet;
    public int STAmttoDeliver;
    public bool killedDriver;
    public Vector3 BallasSpawn;
    public Vector3 VagosSpawn;
    public Vector3 FamiliesSpawn;
    public List<Ped> Gang = new List<Ped>();
    public UIMenu FailedPeaceTreaty;
    public bool NOTIFY;
    public bool AllEliminated;
    public bool ExitVehicle;
    public List<Vehicle> GangVehicles = new List<Vehicle>();
    private UIMenu SubBusinessRaid;
    public bool isAtSubBusiness;
    public bool STMissionSetup;
    public int mission;
    public bool StartedRaid;
    public Vector3 SubBusinessLoc = new Vector3(856.399f, -2091f, 29f);
    public float SpawnAttackerTimer;
    public bool RaidSetup;
    public List<Ped> STPeds = new List<Ped>();
    public List<Vector3> STpPosition = new List<Vector3>();
    public List<float> STpRotation = new List<float>();
    public bool ReadIni;
    public bool Createdpeds;
    public bool MaxWaitBasedonPurchaseLevel;
    public List<Prop> ChiarProps = new List<Prop>();
    public int MissionSellType;
    public bool ShowStockIncrease;
    public DateTime CurrentDate;
    public DateTime NextDate;
    public int DaysWait = 3;
    public int NextDay;
    public int NextMonth;
    public int NextYear;
    public bool BYPASS_NOSAVE_OR_CRASH = true;
    public int DAYSTORESET_UPDATETIME = 12;
    public int Now;
    public static Prop Whiskey;
    public static Prop WhiskeyGlass;
    public static Prop Wheat;
    public float DrunkLevel;
    public int DrinkScene;
    public int DrinkType;
    public static Prop Wine;
    public static Prop WineGlass;
    public static Vector3 WinePosition;
    public static Vector3 WineGlassPosition;
    public static Vector3 WineRotation;
    public static Vector3 WineGlassRotation;
    public static int DrunkStage = 1;
    public static int WhiskeyTaskScriptStatus = -1;
    public static int WineTaskScriptStatus = -1;
    public static int WheatTaskScriptStatus = -1;
    public static List<GTA.Model> WineModels = new List<GTA.Model>()
    {
      (GTA.Model) 21833643
    };
    public static List<GTA.Model> WineGlassModels = new List<GTA.Model>()
    {
      (GTA.Model) -35679191
    };
    public static List<GTA.Model> WheatModels = new List<GTA.Model>()
    {
      (GTA.Model) 469594741
    };
    public static List<GTA.Model> WhiskeyModels = new List<GTA.Model>()
    {
      (GTA.Model) 488156118
    };
    public static List<GTA.Model> WhiskeyGlassModels = new List<GTA.Model>()
    {
      (GTA.Model) -1533900808,
      (GTA.Model) 1480049515
    };
    public static Vector3 WhiskeyPosition;
    public static Vector3 WhiskeyGlassPosition;
    public static Vector3 WhiskeyRotation;
    public static Vector3 WhiskeyGlassRotation;
    public static Vector3 WheatPosition;
    public static Vector3 WheatRotation;
    public int DrunkCamTimer;
    public Prop Bottle;
    public Prop Glass;
    public UIResRectangle RectangleGUI = new UIResRectangle(new Point(0, 0), new Size(0, 0));
    public List<UIMenu> GUIMenus = new List<UIMenu>();
    public float M = 0.0f;
    public string Price = "000";
    public string Model = "";
    public string man = "";
    public string ListPath = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\MilitaryTrader\\AllVehicles.ini";
    public Vector3 InsideGarageSpawn = new Vector3(-1520.109f, -2978.68f, -81.5f);
    public int renderTargetHandle;
    public bool startrender;
    private List<string> ClubDancerList = new List<string>();
    private readonly List<string> djVideos = new List<string>()
    {
      "SOL",
      "TOU",
      "DIX",
      "TBM"
    };
    private readonly List<string> screenTypes = new List<string>()
    {
      "LSER",
      "LED",
      "GEO",
      "RIB",
      "NL"
    };
    private readonly List<string> clubs = new List<string>()
    {
      "GALAXY",
      "LOS",
      "OMEGA",
      "TECH",
      "GEFANGNIS",
      "MAIS",
      "FUNHOUSE",
      "PALACE",
      "PARADISE"
    };
    private static readonly List<Vector3> dryIcePositions = new List<Vector3>()
    {
      new Vector3(-1600f, -3012f, -80f),
      new Vector3(-1595f, -3012f, -80f),
      new Vector3(-1590f, -3012f, -80f),
      new Vector3(-1602.932f, -3019.1f, -79.99f),
      new Vector3(-1593.238f, -3017.05f, -79.99f),
      new Vector3(-1597.134f, -3008.2f, -79.99f),
      new Vector3(-1589.966f, -3008.518f, -79.99f)
    };
    private static readonly List<Vector3> dryIceRotations = new List<Vector3>()
    {
      new Vector3(0.0f, 0.0f, 0.0f),
      new Vector3(0.0f, 0.0f, 0.0f),
      new Vector3(0.0f, 0.0f, 0.0f),
      new Vector3(0.0f, -10f, 66f),
      new Vector3(0.0f, -10f, 110f),
      new Vector3(0.0f, -10f, -122.53f),
      new Vector3(0.0f, -10f, -166.97f)
    };
    private int ONscreens;
    private readonly List<string> NDJ1_0 = new List<string>()
    {
      "PL_DIX_GEO_GALAXY",
      "PL_DIX_GEO_LOS",
      "PL_DIX_GEO_OMEGA",
      "PL_DIX_GEO_TECH",
      "PL_DIX_GEO_GEFANGNIS",
      "PL_DIX_GEO_MAIS",
      "PL_DIX_GEO_FUNHOUSE",
      "PL_DIX_GEO_PALACE",
      "PL_DIX_GEO_PARADISE"
    };
    private readonly List<string> NDJ2_0 = new List<string>()
    {
      "PL_SOL_GEO_GALAXY",
      "PL_SOL_GEO_LOS",
      "PL_SOL_GEO_OMEGA",
      "PL_SOL_GEO_TECH",
      "PL_SOL_GEO_GEFANGNIS",
      "PL_SOL_GEO_MAIS",
      "PL_SOL_GEO_FUNHOUSE",
      "PL_SOL_GEO_PALACE",
      "PL_SOL_GEO_PARADISE"
    };
    private readonly List<string> NDJ3_0 = new List<string>()
    {
      "PL_TOU_GEO_GALAXY",
      "PL_TOU_GEO_LOS",
      "PL_TOU_GEO_OMEGA",
      "PL_TOU_GEO_TECH",
      "PL_TOU_GEO_GEFANGNIS",
      "PL_TOU_GEO_MAIS",
      "PL_TOU_GEO_FUNHOUSE",
      "PL_TOU_GEO_PALACE",
      "PL_TOU_GEO_PARADISE"
    };
    private readonly List<string> NDJ4_0 = new List<string>()
    {
      "PL_TBM_GEO_GALAXY",
      "PL_TBM_GEO_LOS",
      "PL_TBM_GEO_OMEGA",
      "PL_TBM_GEO_TECH",
      "PL_TBM_GEO_GEFANGNIS",
      "PL_TBM_GEO_MAIS",
      "PL_TBM_GEO_FUNHOUSE",
      "PL_TBM_GEO_PALACE",
      "PL_TBM_GEO_PARADISE"
    };
    private readonly List<string> NDJ1_1 = new List<string>()
    {
      "PL_DIX_LED_GALAXY",
      "PL_DIX_LED_LOS",
      "PL_DIX_LED_OMEGA",
      "PL_DIX_LED_TECH",
      "PL_DIX_LED_GEFANGNIS",
      "PL_DIX_LED_MAIS",
      "PL_DIX_LED_FUNHOUSE",
      "PL_DIX_LED_PALACE",
      "PL_DIX_LED_PARADISE"
    };
    private readonly List<string> NDJ2_1 = new List<string>()
    {
      "PL_SOL_LED_GALAXY",
      "PL_SOL_LED_LOS",
      "PL_SOL_LED_OMEGA",
      "PL_SOL_LED_TECH",
      "PL_SOL_LED_GEFANGNIS",
      "PL_SOL_LED_MAIS",
      "PL_SOL_LED_FUNHOUSE",
      "PL_SOL_LED_PALACE",
      "PL_SOL_LED_PARADISE"
    };
    private readonly List<string> NDJ3_1 = new List<string>()
    {
      "PL_TOU_LED_GALAXY",
      "PL_TOU_LED_LOS",
      "PL_TOU_LED_OMEGA",
      "PL_TOU_LED_TECH",
      "PL_TOU_LED_GEFANGNIS",
      "PL_TOU_LED_MAIS",
      "PL_TOU_LED_FUNHOUSE",
      "PL_TOU_LED_PALACE",
      "PL_TOU_LED_PARADISE"
    };
    private readonly List<string> NDJ4_1 = new List<string>()
    {
      "PL_TBM_LED_GALAXY",
      "PL_TBM_LED_LOS",
      "PL_TBM_LED_OMEGA",
      "PL_TBM_LED_TECH",
      "PL_TBM_LED_GEFANGNIS",
      "PL_TBM_LED_MAIS",
      "PL_TBM_LED_FUNHOUSE",
      "PL_TBM_LED_PALACE",
      "PL_TBM_LED_PARADISE"
    };
    private readonly List<string> NDJ1_2 = new List<string>()
    {
      "PL_DIX_LSER_GALAXY",
      "PL_DIX_LSER_LOS",
      "PL_DIX_LSER_OMEGA",
      "PL_DIX_LSER_TECH",
      "PL_DIX_LSER_GEFANGNIS",
      "PL_DIX_LSER_MAIS",
      "PL_DIX_LSER_FUNHOUSE",
      "PL_DIX_LSER_PALACE",
      "PL_DIX_LSER_PARADISE"
    };
    private readonly List<string> NDJ2_2 = new List<string>()
    {
      "PL_SOL_LSER_GALAXY",
      "PL_SOL_LSER_LOS",
      "PL_SOL_LSER_OMEGA",
      "PL_SOL_LSER_TECH",
      "PL_SOL_LSER_GEFANGNIS",
      "PL_SOL_LSER_MAIS",
      "PL_SOL_LSER_FUNHOUSE",
      "PL_SOL_LSER_PALACE",
      "PL_SOL_LSER_PARADISE"
    };
    private readonly List<string> NDJ3_2 = new List<string>()
    {
      "PL_TOU_LSER_GALAXY",
      "PL_TOU_LSER_LOS",
      "PL_TOU_LSER_OMEGA",
      "PL_TOU_LSER_TECH",
      "PL_TOU_LSER_GEFANGNIS",
      "PL_TOU_LSER_MAIS",
      "PL_TOU_LSER_FUNHOUSE",
      "PL_TOU_LSER_PALACE",
      "PL_TOU_LSER_PARADISE"
    };
    private readonly List<string> NDJ4_2 = new List<string>()
    {
      "PL_TBM_LSER_GALAXY",
      "PL_TBM_LSER_LOS",
      "PL_TBM_LSER_OMEGA",
      "PL_TBM_LSER_TECH",
      "PL_TBM_LSER_GEFANGNIS",
      "PL_TBM_LSER_MAIS",
      "PL_TBM_LSER_FUNHOUSE",
      "PL_TBM_LSER_PALACE",
      "PL_TBM_LSER_PARADISE"
    };
    private readonly List<string> NDJ1_3 = new List<string>()
    {
      "PL_DIX_NL_GALAXY",
      "PL_DIX_NL_LOS",
      "PL_DIX_NL_OMEGA",
      "PL_DIX_NL_TECH",
      "PL_DIX_NL_GEFANGNIS",
      "PL_DIX_NL_MAIS",
      "PL_DIX_NL_FUNHOUSE",
      "PL_DIX_NL_PALACE",
      "PL_DIX_NL_PARADISE"
    };
    private readonly List<string> NDJ2_3 = new List<string>()
    {
      "PL_SOL_NL_GALAXY",
      "PL_SOL_NL_LOS",
      "PL_SOL_NL_OMEGA",
      "PL_SOL_NL_TECH",
      "PL_SOL_NL_GEFANGNIS",
      "PL_SOL_NL_MAIS",
      "PL_SOL_NL_FUNHOUSE",
      "PL_SOL_NL_PALACE",
      "PL_SOL_NL_PARADISE"
    };
    private readonly List<string> NDJ3_3 = new List<string>()
    {
      "PL_TOU_NL_GALAXY",
      "PL_TOU_NL_LOS",
      "PL_TOU_NL_OMEGA",
      "PL_TOU_NL_TECH",
      "PL_TOU_NL_GEFANGNIS",
      "PL_TOU_NL_MAIS",
      "PL_TOU_NL_FUNHOUSE",
      "PL_TOU_NL_PALACE",
      "PL_TOU_NL_PARADISE"
    };
    private readonly List<string> NDJ4_3 = new List<string>()
    {
      "PL_TBM_NL_GALAXY",
      "PL_TBM_NL_LOS",
      "PL_TBM_NL_OMEGA",
      "PL_TBM_NL_TECH",
      "PL_TBM_NL_GEFANGNIS",
      "PL_TBM_NL_MAIS",
      "PL_TBM_NL_FUNHOUSE",
      "PL_TBM_NL_PALACE",
      "PL_TBM_NL_PARADISE"
    };
    private readonly List<string> NDJ1_4 = new List<string>()
    {
      "PL_DIX_RIB_GALAXY",
      "PL_DIX_RIB_LOS",
      "PL_DIX_RIB_OMEGA",
      "PL_DIX_RIB_TECH",
      "PL_DIX_RIB_GEFANGNIS",
      "PL_DIX_RIB_MAIS",
      "PL_DIX_RIB_FUNHOUSE",
      "PL_DIX_RIB_PALACE",
      "PL_DIX_RIB_PARADISE"
    };
    private readonly List<string> NDJ2_4 = new List<string>()
    {
      "PL_SOL_RIB_GALAXY",
      "PL_SOL_RIB_LOS",
      "PL_SOL_RIB_OMEGA",
      "PL_SOL_RIB_TECH",
      "PL_SOL_RIB_GEFANGNIS",
      "PL_SOL_RIB_MAIS",
      "PL_SOL_RIB_FUNHOUSE",
      "PL_SOL_RIB_PALACE",
      "PL_SOL_RIB_PARADISE"
    };
    private readonly List<string> NDJ3_4 = new List<string>()
    {
      "PL_TOU_RIB_GALAXY",
      "PL_TOU_RIB_LOS",
      "PL_TOU_RIB_OMEGA",
      "PL_TOU_RIB_TECH",
      "PL_TOU_RIB_GEFANGNIS",
      "PL_TOU_RIB_MAIS",
      "PL_TOU_RIB_FUNHOUSE",
      "PL_TOU_RIB_PALACE",
      "PL_TOU_RIB_PARADISE"
    };
    private readonly List<string> NDJ4_4 = new List<string>()
    {
      "PL_TBM_RIB_GALAXY",
      "PL_TBM_RIB_LOS",
      "PL_TBM_RIB_OMEGA",
      "PL_TBM_RIB_TECH",
      "PL_TBM_RIB_GEFANGNIS",
      "PL_TBM_RIB_MAIS",
      "PL_TBM_RIB_FUNHOUSE",
      "PL_TBM_RIB_PALACE",
      "PL_TBM_RIB_PARADISE"
    };
    public int NCStageS;
    public int NightMovie;
    public bool CleanUpS;
    private static List<string> RandomBeam = new List<string>()
    {
      "ba_prop_battle_lights_fx_riga",
      "ba_prop_battle_lights_fx_rigb",
      "ba_prop_battle_lights_fx_rigc",
      "ba_prop_battle_lights_fx_rigd",
      "ba_prop_battle_lights_fx_rige",
      "ba_prop_battle_lights_fx_rigf",
      "ba_prop_battle_lights_fx_rigg",
      "ba_prop_battle_lights_fx_righ"
    };
    private readonly List<Vector3> roofLightsCoords = new List<Vector3>()
    {
      new Vector3(-1594.428f, -3009.102f, -74.27881f),
      new Vector3(-1592.256f, -3010.441f, -74.58991f),
      new Vector3(-1596.599f, -3009.103f, -74.27881f),
      new Vector3(-1598.767f, -3013.599f, -74.27881f),
      new Vector3(-1598.766f, -3014.921f, -74.58991f),
      new Vector3(-1594.424f, -3014.918f, -74.58991f),
      new Vector3(-1598.768f, -3011.798f, -74.27881f),
      new Vector3(-1598.769f, -3010.445f, -74.58991f),
      new Vector3(-1594.423f, -3016.302f, -74.27881f),
      new Vector3(-1592.253f, -3016.301f, -74.27881f),
      new Vector3(-1592.257f, -3009.1f, -74.27881f),
      new Vector3(-1598.765f, -3016.305f, -74.27881f),
      new Vector3(-1600.94f, -3009.106f, -74.27881f),
      new Vector3(-1596.596f, -3013.598f, -74.27881f),
      new Vector3(-1598.77f, -3009.104f, -74.27881f),
      new Vector3(-1600.937f, -3014.922f, -74.58991f),
      new Vector3(-1600.938f, -3013.601f, -74.27881f),
      new Vector3(-1600.939f, -3010.446f, -74.58991f),
      new Vector3(-1596.598f, -3010.444f, -74.58991f),
      new Vector3(-1596.597f, -3011.796f, -74.27881f),
      new Vector3(-1592.255f, -3011.794f, -74.27881f),
      new Vector3(-1592.254f, -3013.595f, -74.27881f),
      new Vector3(-1596.594f, -3016.303f, -74.27881f),
      new Vector3(-1594.426f, -3011.795f, -74.27881f),
      new Vector3(-1594.425f, -3013.596f, -74.27881f),
      new Vector3(-1594.427f, -3010.442f, -74.58991f),
      new Vector3(-1596.595f, -3014.919f, -74.58991f),
      new Vector3(-1600.939f, -3011.799f, -74.27881f),
      new Vector3(-1600.936f, -3016.306f, -74.27881f),
      new Vector3(-1592.253f, -3014.917f, -74.58991f)
    };
    private static List<int> dryIceParticles = new List<int>()
    {
      0,
      0,
      0,
      0,
      0,
      0,
      0
    };
    public int Attacktimer;
    public List<Vehicle> AttackVehicles = new List<Vehicle>();
    public List<Ped> AttackPeds = new List<Ped>();
    public bool Firsttime;
    public List<Ped> MainPedsUnderground = new List<Ped>();
    public List<Prop> MainChairsUnderground = new List<Prop>();
    public List<Prop> SmokeEmitters = new List<Prop>();
    public float widths = 0.0f;
    public float xcoord = 0.921f;
    public bool active = false;
    public string CurrentDance;
    public string CurrentDanceDict;
    public bool ChoosenDance;
    public int DanceTimer;
    public int currentdancedict = 0;
    public int currentdanceid = 0;
    public ulong update2;
    public bool RotLights;
    public List<Vector3> Spotrot = new List<Vector3>();
    public List<Vector3> Spotloc = new List<Vector3>();
    public List<Prop> NLightObject = new List<Prop>();
    public bool GrabbedLights;
    public Scaleform GUIscaleform;
    public int GUIMT;
    public float GUIPosY;
    public float GUIPosX;
    public bool AdhawlScaleOn;
    public bool SecuroservCargoOn;
    public bool SecuroservVehicleOn;
    public bool HangerCargoCrateGUION;
    public bool NightclubManagementOn;
    public bool BunkerLogisiticsGUIOn;
    public int frame;
    public float Screen;
    public float Tab;
    public bool GUIOn;
    public bool ShowingOverlay;
    public bool SellingCargo;
    public bool StealingCargo;
    public int OverlayIndex;
    public int SellType;
    public int GUIAPP;
    public int GUIBIX;
    public bool GUICheckBool;
    public GTA.Control Key = GTA.Control.Attack;
    public GTA.Control BackKey = GTA.Control.Aim;
    public int NC_Upgrade1Discounted = 0;
    public int NC_Upgrade1DiscountedPrice = 1425000;
    public int NC_Upgrade1Price = 1500000;
    public int NC_Upgrade2Discounted = 0;
    public int NC_Upgrade2DiscountedPrice = 475000;
    public int NC_Upgrade2Price = 500000;
    public int NC_Upgrade3Discounted = 0;
    public int NC_Upgrade3DiscountedPrice = 695000;
    public int NC_Upgrade3Price = 725000;
    public int NC_Upgrade1UnLocked = 2;
    public int NC_Upgrade2UnLocked = 2;
    public int NC_Upgrade3UnLocked = 2;
    public float NC_Popularity = 0.0f;
    public int NC_MultiplierSell;
    public int NC_MultiplierBuyCrate;
    public int NC_MultiplierUpg;
    public int NC_MultiplierBuyUpgTechnician = 3;
    public int NC_NightclubJobsCompleted = 0;
    public int NC_NightClubEarnings = 0;
    public int NC_WarehouseSalesCompleted = 0;
    public int NC_WarehouseEarnings = 0;
    public int NC_TotalEarnings = 0;
    public int NC_safeCapacityMax = 250000;
    public float NC_safeCapacityCrt = 0.0f;
    public int NC_Dailyincome = 0;
    public int NC_GoodsAquired = 0;
    public int NC_GoodsSold = 0;
    public int NC_Technician1Status = 1;
    public int NC_Technician1LockedStatus = 0;
    public int NC_Technician1Task = 0;
    public int NC_Technician2Status = 1;
    public int NC_Technician2LockedStatus = 0;
    public int NC_Technician2Task = 1;
    public int NC_Technician3Status = 0;
    public int NC_Technician3LockedStatus = 0;
    public int NC_Technician3Task = -1;
    public int NC_Technician4Status = 0;
    public int NC_Technician4LockedStatus = 0;
    public int NC_Technician4Task = -1;
    public int NC_Technician5Status = 0;
    public int NC_Technician5LockedStatus = 0;
    public int NC_Technician5Task = -1;
    public int NC_CelebAppearances = 15;
    public int NC_CargoStockCurrent = 0;
    public int NC_CargoStockMax = 50;
    public int NC_CargoPricePerCrate = 3000;
    public int NC_SAIStockCurrent = 0;
    public int NC_SAIStockMax = 50;
    public int NC_SAIPricePerCrate = 2000;
    public int NC_PharStockCurrent = 0;
    public int NC_PharStockMax = 50;
    public int NC_PharPricePerCrate = 3500;
    public int NC_SportingGoodsStockCurrent = 0;
    public int NC_SportingGoodsStockMax = 50;
    public int NC_SportingGoodsPricePerCrate = 4400;
    public int NC_PrintCopyStockCurrent = 0;
    public int NC_PrintCopyStockMax = 50;
    public int NC_PrintCopyPricePerCrate = 7400;
    public int NC_CounterfeitStockCurrent = 0;
    public int NC_CounterfeitStockMax = 50;
    public int NC_CounterfeitPricePerCrate = 8800;
    public int NC_OrgProduceStockCurrent = 0;
    public int NC_OrgProduceStockMax = 50;
    public int NC_OrgProducePricePerCrate = 6200;
    public string NC_Owner = "HKH191";
    public int NC_Goods = 7;
    public int NC_AssignedTask;
    public int NC_SellType;
    public bool GettingNewTask;
    public int TechnicialSelected;
    public int NC_PlayerVisits = 1;
    public int NC_ClubType = 3;
    public string NC_Location = "La Mesa";
    private string NC_NightclubLocImg = "CLUB_VESPUCCI";
    public bool SupplyMissionOn;
    public int SupplyMissionID;
    public int SupplyMissionStage;
    public List<Vehicle> SupplyMissionVehicles = new List<Vehicle>();
    public List<Ped> SupplyMissionPeds = new List<Ped>();
    public List<Prop> SupplyMissionProps = new List<Prop>();
    public List<Prop> SupplyMissionPropsSecondary = new List<Prop>();
    public List<Blip> SupplyMissionBlips = new List<Blip>();
    public Vehicle SupplyMissionMainVehicle;
    public Vector3 AreaOffset;
    public int EnemySpawnSet;
    public bool WaitingForEnemySpawn;
    public bool CreatedDropSpawn;
    public int WarehouseSelected;
    public int SS_WarehousesOwned;
    public int StockIncrease;
    public int StockWait;
    public bool FirstSetStockIncrease;
    public bool DisplayCrateStockIncrease = true;
    public int Delivered;
    public int Deliveries;
    public Ped DeliverPed;
    public Prop PosterAnim_Poster;
    public bool PlayingPosterAnim;
    public int PosterScene;
    public List<Class1.PosterPosition> Posters = new List<Class1.PosterPosition>()
    {
      new Class1.PosterPosition(new Vector3(419.6295f, -986.0109f, 29.36773f), -90f, false),
      new Class1.PosterPosition(new Vector3(42.49189f, -948.2601f, 29.36268f), 249.2121f, false),
      new Class1.PosterPosition(new Vector3(225.0577f, -1334.873f, 29.32246f), 221.8436f, false),
      new Class1.PosterPosition(new Vector3(98.81043f, -1313.706f, 29.32246f), 299.8436f, false),
      new Class1.PosterPosition(new Vector3(-26.01712f, -1112.739f, 26.57325f), 72.25287f, false),
      new Class1.PosterPosition(new Vector3(-22.06122f, -980.4091f, 29.29894f), 248.358f, false),
      new Class1.PosterPosition(new Vector3(21.32199f, -705.9732f, 45.97305f), 23.01744f, false),
      new Class1.PosterPosition(new Vector3(-124.9842f, -652.6741f, 40.50921f), 70.05756f, false),
      new Class1.PosterPosition(new Vector3(-183.6334f, -362.5927f, 32.65873f), 42.04998f, false),
      new Class1.PosterPosition(new Vector3(-450.9166f, -399.8838f, 33.50661f), 125.6327f, false),
      new Class1.PosterPosition(new Vector3(-200.6599f, -582.6946f, 48.23313f), 309.1599f, false),
      new Class1.PosterPosition(new Vector3(-659.0793f, -677.0249f, 31.58162f), 138.8135f, false),
      new Class1.PosterPosition(new Vector3(-995.9542f, -714.4748f, 21.52282f), 218.8135f, false),
      new Class1.PosterPosition(new Vector3(-847.3267f, -810.1143f, 19.29832f), 272.7438f, false),
      new Class1.PosterPosition(new Vector3(-830.3901f, -960.0172f, 15.35784f), 206.0995f, false),
      new Class1.PosterPosition(new Vector3(-850.8434f, -1133.815f, 6.877372f), 31.33677f, false),
      new Class1.PosterPosition(new Vector3(-879.4749f, -1233.628f, 5.654792f), 155.9195f, false),
      new Class1.PosterPosition(new Vector3(-1030.957f, -1128.743f, 2.158597f), 30.38386f, false),
      new Class1.PosterPosition(new Vector3(-1205.715f, -950.1711f, 2.150162f), 300.5586f, false),
      new Class1.PosterPosition(new Vector3(-1374.852f, -780.5588f, 19.3469f), 308.0109f, false),
      new Class1.PosterPosition(new Vector3(-1269.243f, -501.728f, 33.00374f), 264.0635f, false),
      new Class1.PosterPosition(new Vector3(-995.2767f, -322.0088f, 37.81512f), 25.03694f, false),
      new Class1.PosterPosition(new Vector3(-589.2048f, -210.4261f, 37.47429f), 298.1835f, false),
      new Class1.PosterPosition(new Vector3(-746.1764f, -81.85367f, 37.38299f), 25.88812f, false),
      new Class1.PosterPosition(new Vector3(-1370.987f, 140.1628f, 56.33497f), 186.1115f, false),
      new Class1.PosterPosition(new Vector3(-1271.844f, 315.3491f, 65.51179f), 331.7092f, false),
      new Class1.PosterPosition(new Vector3(-802.7781f, 308.7078f, 86.00427f), 356.9776f, false),
      new Class1.PosterPosition(new Vector3(-805.0479f, 308.699f, 86.03925f), 0.43799f, false),
      new Class1.PosterPosition(new Vector3(-752.2142f, 279.0429f, 85.47915f), 178.5131f, false),
      new Class1.PosterPosition(new Vector3(-512.4136f, 290.8529f, 83.20657f), 265.8915f, false),
      new Class1.PosterPosition(new Vector3(-356.4613f, 141.5105f, 66.45272f), 359.4231f, false),
      new Class1.PosterPosition(new Vector3(73.19355f, 277.8156f, 110.2102f), 338.5164f, false),
      new Class1.PosterPosition(new Vector3(315.9937f, -75.42513f, 69.61778f), 339.4593f, false),
      new Class1.PosterPosition(new Vector3(758.6806f, -704.1501f, 28.57832f), 87.91463f, false),
      new Class1.PosterPosition(new Vector3(800.9755f, -956.7664f, 25.83598f), 267.9044f, false),
      new Class1.PosterPosition(new Vector3(514.9783f, -1412.19f, 29.29084f), 1.80772f, false),
      new Class1.PosterPosition(new Vector3(363.1411f, -1452.95f, 29.43155f), 52.14973f, false),
      new Class1.PosterPosition(new Vector3(277.5909f, -1516.373f, 29.29161f), 27.11529f, false),
      new Class1.PosterPosition(new Vector3(330.8978f, -1609.196f, 32.53415f), 229.5158f, false),
      new Class1.PosterPosition(new Vector3(139.7341f, -1587.569f, 29.29692f), 140.027f, false),
      new Class1.PosterPosition(new Vector3(38.20721f, -1760.273f, 29.30195f), 229.699f, false),
      new Class1.PosterPosition(new Vector3(-98.45155f, -1784.526f, 29.11605f), 138.669f, false),
      new Class1.PosterPosition(new Vector3(-53.91402f, -1744.174f, 29.31149f), 227.2133f, false),
      new Class1.PosterPosition(new Vector3(-147.5491f, -1701.656f, 30.67179f), 49.94547f, false),
      new Class1.PosterPosition(new Vector3(-271.8366f, -1922.991f, 29.94605f), 139.3361f, false),
      new Class1.PosterPosition(new Vector3(-234.2394f, -2003.758f, 29.94603f), 79.22464f, false),
      new Class1.PosterPosition(new Vector3(-160.6605f, -926.6266f, 29.28847f), 247.4891f, false),
      new Class1.PosterPosition(new Vector3(-271.8366f, -1922.991f, 29.94605f), 139.3361f, false),
      new Class1.PosterPosition(new Vector3(-296.3217f, -1384.21f, 31.30679f), 90.26245f, false),
      new Class1.PosterPosition(new Vector3(-342.8583f, -1487.337f, 30.75422f), 90.9198f, false),
      new Class1.PosterPosition(new Vector3(-324.1146f, -1534.475f, 27.56908f), 178.0156f, false),
      new Class1.PosterPosition(new Vector3(-227.2775f, -1574.207f, 34.06022f), 233.2656f, false),
      new Class1.PosterPosition(new Vector3(-182.962f, -1434.076f, 31.3095f), 29.95036f, false),
      new Class1.PosterPosition(new Vector3(18.91483f, -1507.083f, 31.85012f), 46.64692f, false),
      new Class1.PosterPosition(new Vector3(22.01578f, -1503.403f, 31.85011f), 49.0986f, false),
      new Class1.PosterPosition(new Vector3(154.8917f, -1559.825f, 29.26175f), 312.2033f, false),
      new Class1.PosterPosition(new Vector3(398.0333f, -1790.051f, 29.1446f), 140.1266f, false),
      new Class1.PosterPosition(new Vector3(445.0513f, -1867.481f, 27.5704f), 223.9787f, false),
      new Class1.PosterPosition(new Vector3(354.9598f, -1988.96f, 24.27139f), 248.6068f, false),
      new Class1.PosterPosition(new Vector3(126.0832f, -1300.116f, 29.23274f), 32.15136f, false),
      new Class1.PosterPosition(new Vector3(72.19383f, -1385.95f, 29.39492f), 178.4643f, false),
      new Class1.PosterPosition(new Vector3(-291.0554f, -1093.408f, 23.72584f), 70.1114f, false),
      new Class1.PosterPosition(new Vector3(-222.2741f, -901.7996f, 29.66159f), 162.1244f, false),
      new Class1.PosterPosition(new Vector3(-555.3397f, -911.484f, 23.86475f), 87.33977f, false),
      new Class1.PosterPosition(new Vector3(-560.735f, -930.2327f, 23.87101f), 90.69569f, false),
      new Class1.PosterPosition(new Vector3(-508.7455f, -737.2081f, 32.56997f), 4.780066f, false),
      new Class1.PosterPosition(new Vector3(-1346.802f, -638.6347f, 27.49751f), 122.6462f, false),
      new Class1.PosterPosition(new Vector3(-1420.228f, -473.9285f, 34.06292f), 304.5248f, false),
      new Class1.PosterPosition(new Vector3(-1464.969f, -631.6401f, 30.83133f), 216.0971f, false),
      new Class1.PosterPosition(new Vector3(-1640.048f, -480.0747f, 37.78166f), 233.231f, false),
      new Class1.PosterPosition(new Vector3(-1687.269f, -291.0485f, 51.89037f), 54.48538f, false),
      new Class1.PosterPosition(new Vector3(-1582.432f, -82.39668f, 54.27591f), 89.97682f, false),
      new Class1.PosterPosition(new Vector3(-1392.986f, 257.6683f, 61.40197f), 285.6366f, false),
      new Class1.PosterPosition(new Vector3(-635.2559f, 35.38282f, 40.96078f), 269.0067f, false),
      new Class1.PosterPosition(new Vector3(-385.2221f, -50.84206f, 49.02442f), 159.5538f, false),
      new Class1.PosterPosition(new Vector3(-169.5853f, -99.75695f, 53.59044f), 159.5538f, false),
      new Class1.PosterPosition(new Vector3(139.1679f, -167.4659f, 54.56217f), 337.5308f, false),
      new Class1.PosterPosition(new Vector3(165.0151f, -221.5563f, 54.25614f), 161.343f, false),
      new Class1.PosterPosition(new Vector3(309.9808f, -229.3162f, 54.07772f), 340.0182f, false),
      new Class1.PosterPosition(new Vector3(389.191f, -248.7571f, 54.39457f), 250.1666f, false),
      new Class1.PosterPosition(new Vector3(696.6078f, -303.3817f, 59.24592f), 193.5883f, false),
      new Class1.PosterPosition(new Vector3(910.4919f, 53.09566f, 80.89365f), 57.94453f, false),
      new Class1.PosterPosition(new Vector3(1052.507f, 209.1795f, 80.99389f), 238.4127f, false),
      new Class1.PosterPosition(new Vector3(965.3895f, -143.6833f, 74.48441f), 327.9562f, false),
      new Class1.PosterPosition(new Vector3(834.6992f, -1277.017f, 26.42273f), 177.7072f, false),
      new Class1.PosterPosition(new Vector3(815.403f, -1382.955f, 26.8478f), 271.1274f, false),
      new Class1.PosterPosition(new Vector3(813.6098f, -1621.481f, 31.47525f), 82.45718f, false),
      new Class1.PosterPosition(new Vector3(749.7003f, -1762.765f, 29.34461f), 178.0154f, false),
      new Class1.PosterPosition(new Vector3(970.0547f, -1777.578f, 31.07021f), 172.5266f, false),
      new Class1.PosterPosition(new Vector3(797.1606f, -2094.899f, 29.43166f), 263.6698f, false),
      new Class1.PosterPosition(new Vector3(773.2269f, -2469.673f, 20.56716f), 264.0081f, false),
      new Class1.PosterPosition(new Vector3(-244.2192f, -2028.324f, 29.94605f), 46.70269f, false),
      new Class1.PosterPosition(new Vector3(-477.3115f, -1768.52f, 20.90629f), 351.967f, false),
      new Class1.PosterPosition(new Vector3(-623.6274f, -1682.811f, 24.7011f), 322.3181f, false),
      new Class1.PosterPosition(new Vector3(-694.9789f, -1396.26f, 5.150263f), 49.57756f, false),
      new Class1.PosterPosition(new Vector3(752.3242f, 1294.353f, 360.2886f), 268.3905f, false),
      new Class1.PosterPosition(new Vector3(228.8308f, 1158.66f, 225.5499f), 103.9991f, false),
      new Class1.PosterPosition(new Vector3(222.2603f, 1186.044f, 225.46f), 102.444f, false),
      new Class1.PosterPosition(new Vector3(218.9707f, 1199.77f, 225.46f), 102.7974f, false),
      new Class1.PosterPosition(new Vector3(85.85094f, 811.7628f, 211.2644f), 49.29033f, false),
      new Class1.PosterPosition(new Vector3(-425.6398f, 1108.489f, 327.6823f), 163.8001f, false),
      new Class1.PosterPosition(new Vector3(-456.2416f, 1085.757f, 327.682f), 254.1926f, false),
      new Class1.PosterPosition(new Vector3(-409.7249f, 1071.137f, 323.8444f), 345.9999f, false),
      new Class1.PosterPosition(new Vector3(-1651.959f, 276.0211f, 59.60606f), 112.4439f, false),
      new Class1.PosterPosition(new Vector3(-1675.077f, 140.5703f, 63.36876f), 126.298f, false),
      new Class1.PosterPosition(new Vector3(-1348.236f, 118.2094f, 56.33401f), 94.64892f, false),
      new Class1.PosterPosition(new Vector3(-611.2861f, -92.91056f, 42.93484f), 62.87657f, false),
      new Class1.PosterPosition(new Vector3(-516.1385f, -26.65094f, 45.60896f), 177.2502f, false),
      new Class1.PosterPosition(new Vector3(-331.5429f, -68.96012f, 54.74802f), 70.42928f, false),
      new Class1.PosterPosition(new Vector3(-462.4458f, -352.8872f, 34.50164f), 175.094f, false),
      new Class1.PosterPosition(new Vector3(-243.4945f, -349.7203f, 29.98197f), 227.1171f, false),
      new Class1.PosterPosition(new Vector3(-123.8219f, -580.3672f, 48.2277f), 308.8716f, false),
      new Class1.PosterPosition(new Vector3(-78.02976f, -704.5294f, 44.2289f), 341.4398f, false),
      new Class1.PosterPosition(new Vector3(-129.4631f, -886.0141f, 29.453f), 337.5363f, false),
      new Class1.PosterPosition(new Vector3(290.2165f, -1367.294f, 31.91131f), 50.60266f, false),
      new Class1.PosterPosition(new Vector3(926.2466f, -1074.106f, 34.65679f), 359.1666f, false),
      new Class1.PosterPosition(new Vector3(940.3823f, -885.5734f, 43.61663f), 115.6461f, false),
      new Class1.PosterPosition(new Vector3(1060.358f, -779.4406f, 58.2627f), 178.6023f, false),
      new Class1.PosterPosition(new Vector3(1071.144f, -778.7734f, 58.26273f), 270.7249f, false),
      new Class1.PosterPosition(new Vector3(1223.926f, -1314.331f, 35.16137f), 83.90658f, false),
      new Class1.PosterPosition(new Vector3(1039.375f, -2112.836f, 32.74049f), 174.3325f, false),
      new Class1.PosterPosition(new Vector3(965.1179f, -2476.984f, 28.47281f), 174.6281f, false),
      new Class1.PosterPosition(new Vector3(136.6418f, -1988.195f, 18.3017f), 54.22198f, false)
    };
    public List<Class1.NamedLocation> VipPositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(147.3503f, -1309.005f, 29.20229f), 146f, "Stripclub"),
      new Class1.NamedLocation(new Vector3(-69.04137f, -1090.171f, 26.66f), 66f, "Premium Deluxe Motorsport"),
      new Class1.NamedLocation(new Vector3(-384.4495f, 221.1495f, 83.89f), 1f, "Wide Open"),
      new Class1.NamedLocation(new Vector3(-562.73f, 271.05f, 83.01f), 178f, "Tequi-La-La"),
      new Class1.NamedLocation(new Vector3(-771.4775f, 300.5826f, 85.714f), 169f, "Eclipse Towers"),
      new Class1.NamedLocation(new Vector3(-1286.813f, 2998.775f, 64.95f), 146f, "The Richmand Hotel"),
      new Class1.NamedLocation(new Vector3(-1374.739f, 49.82f, 53.7f), 128f, "Los Santos Golf Club"),
      new Class1.NamedLocation(new Vector3(-1063.791f, -501.39f, 36.03f), 21f, "The Movie Studios"),
      new Class1.NamedLocation(new Vector3(-1043.541f, -220.56f, 37.8f), 59f, "Life Invader"),
      new Class1.NamedLocation(new Vector3(-1038.208f, -2731.677f, 20.16f), -30f, "Los Santos International Airport"),
      new Class1.NamedLocation(new Vector3(-213.26f, -2007.046f, 27.75f), -108f, "Maze Bank Arena"),
      new Class1.NamedLocation(new Vector3(280.7785f, -1559.597f, 29.43f), -22f, "Legion Square"),
      new Class1.NamedLocation(new Vector3(-1323.477f, -1301.83f, 5f), 14f, "Vespucci Beach"),
      new Class1.NamedLocation(new Vector3(-1637.267f, -1008.118f, 13f), -32f, "Vespucci Peir"),
      new Class1.NamedLocation(new Vector3(-162.36f, -154.15f, 43.62f), 108f, "Rockford Plaza"),
      new Class1.NamedLocation(new Vector3(242.8109f, -385.83f, 45.4f), -40f, "Los Santos Court House"),
      new Class1.NamedLocation(new Vector3(921.84f, 43.8f, 81.1f), 103f, "Diamond Casino & Resort")
    };
    public List<Class1.NamedLocation> BlimpMusicPositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(-449.8f, 1091.785f, 398.21f), 0.0f, "Observatory"),
      new Class1.NamedLocation(new Vector3(-1352.061f, 61.73f, 116.89f), 0.0f, "The Golf Club"),
      new Class1.NamedLocation(new Vector3(-1315.833f, 289.8099f, 116.19f), 0.0f, "The Richmand Hotel"),
      new Class1.NamedLocation(new Vector3(-115.62f, 351.05f, 194f), 0.0f, "The Gentry Manor"),
      new Class1.NamedLocation(new Vector3(-318.91f, -1963.505f, 122.73f), 0.0f, "Maze Bank Arena"),
      new Class1.NamedLocation(new Vector3(-1331.975f, -1473.98f, 50.78f), 0.0f, "Vespucci Beach"),
      new Class1.NamedLocation(new Vector3(193.05f, -938.82f, 90f), 0.0f, "Legion Square"),
      new Class1.NamedLocation(new Vector3(-207.78f, -244.32f, 142.37f), 0.0f, "Rockford Hills"),
      new Class1.NamedLocation(new Vector3(-1630.95f, 208.67f, 126f), 0.0f, "USLA"),
      new Class1.NamedLocation(new Vector3(-1024.854f, -1083.469f, 58f), 0.0f, "Vespucci Canalls")
    };
    public List<Class1.NamedLocation> DeveloperVehiclePositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(277.163f, 315.32f, 104.5f), 216.2f, ""),
      new Class1.NamedLocation(new Vector3(443.36f, 252.86f, 102.2f), 253f, ""),
      new Class1.NamedLocation(new Vector3(293.35f, 73.8f, 93.87f), 342f, ""),
      new Class1.NamedLocation(new Vector3(458.53f, -281.54f, 47.69f), 298f, ""),
      new Class1.NamedLocation(new Vector3(111.83f, -44.5912f, 40.12f), 203f, ""),
      new Class1.NamedLocation(new Vector3(-355.45f, -103.185f, 44.66f), 338f, ""),
      new Class1.NamedLocation(new Vector3(-593.042f, 198.268f, 70.3f), 56f, ""),
      new Class1.NamedLocation(new Vector3(-946.67f, 307.91f, 70.18f), 0.0f, ""),
      new Class1.NamedLocation(new Vector3(-1313.52f, 262.88f, 61.83f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-1313.52f, 262.88f, 61.83f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-1317.98f, -242.5052f, 41.44f), 270f, ""),
      new Class1.NamedLocation(new Vector3(-810.02f, -760.84f, 20.97f), 273f, ""),
      new Class1.NamedLocation(new Vector3(-702.47f, -864.1142f, 22.46f), 268f, ""),
      new Class1.NamedLocation(new Vector3(-287.037f, -614.9019f, 32.42f), 103f, ""),
      new Class1.NamedLocation(new Vector3(-304.97f, -758.72f, 32.96f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-136.98f, -987.642f, 26.27f), 121f, ""),
      new Class1.NamedLocation(new Vector3(230.63f, -778.5473f, 29.7f), 73f, "")
    };
    public List<Class1.NamedLocation> RetreiveMulePositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(277.163f, 315.32f, 104.5f), 216.2f, ""),
      new Class1.NamedLocation(new Vector3(443.36f, 252.86f, 102.2f), 253f, ""),
      new Class1.NamedLocation(new Vector3(293.35f, 73.8f, 93.87f), 342f, ""),
      new Class1.NamedLocation(new Vector3(458.53f, -281.54f, 47.69f), 298f, ""),
      new Class1.NamedLocation(new Vector3(111.83f, -44.5912f, 40.12f), 203f, ""),
      new Class1.NamedLocation(new Vector3(-355.45f, -103.185f, 44.66f), 338f, ""),
      new Class1.NamedLocation(new Vector3(-593.042f, 198.268f, 70.3f), 56f, ""),
      new Class1.NamedLocation(new Vector3(-946.67f, 307.91f, 70.18f), 0.0f, ""),
      new Class1.NamedLocation(new Vector3(-1313.52f, 262.88f, 61.83f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-1313.52f, 262.88f, 61.83f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-1317.98f, -242.5052f, 41.44f), 270f, ""),
      new Class1.NamedLocation(new Vector3(-810.02f, -760.84f, 20.97f), 273f, ""),
      new Class1.NamedLocation(new Vector3(-702.47f, -864.1142f, 22.46f), 268f, ""),
      new Class1.NamedLocation(new Vector3(-287.037f, -614.9019f, 32.42f), 103f, ""),
      new Class1.NamedLocation(new Vector3(-304.97f, -758.72f, 32.96f), 342f, ""),
      new Class1.NamedLocation(new Vector3(-136.98f, -987.642f, 26.27f), 121f, ""),
      new Class1.NamedLocation(new Vector3(230.63f, -778.5473f, 29.7f), 73f, ""),
      new Class1.NamedLocation(new Vector3(41.13f, 3662.803f, 38.58f), 274f, ""),
      new Class1.NamedLocation(new Vector3(576.78f, 2682.73f, 40.76f), 303f, ""),
      new Class1.NamedLocation(new Vector3(-928.6658f, -1283.827f, 4.03f), 283f, "")
    };
    public List<Class1.NamedLocation> BlimpSpawnPositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(-1604.785f, -2679.746f, 16.21f), -28f, ""),
      new Class1.NamedLocation(new Vector3(-1300.883f, -3204.96f, 16.45f), 54f, ""),
      new Class1.NamedLocation(new Vector3(-1081.928f, -3145.384f, 16.42f), -121f, ""),
      new Class1.NamedLocation(new Vector3(-1322.099f, -2461.66f, 16.28f), 31f, "")
    };
    public List<Class1.NamedLocation> HelicopterSpawnPositions = new List<Class1.NamedLocation>()
    {
      new Class1.NamedLocation(new Vector3(-247.63f, -144.0112f, 85.12f), -7.7f, ""),
      new Class1.NamedLocation(new Vector3(-1248.128f, -387.8f, 59.18f), 26.69f, ""),
      new Class1.NamedLocation(new Vector3(-500.0792f, 54.6f, 56.39f), -6.3f, ""),
      new Class1.NamedLocation(new Vector3(257.9192f, 78.92f, 99.78f), -111f, ""),
      new Class1.NamedLocation(new Vector3(189.58f, -237.34f, 65.636f), -19f, ""),
      new Class1.NamedLocation(new Vector3(-359.454f, -92.86f, 45.46f), 160f, ""),
      new Class1.NamedLocation(new Vector3(-769.35f, -177.05f, 48.59f), 28f, ""),
      new Class1.NamedLocation(new Vector3(261.672f, 252.0377f, 137.65f), 72f, ""),
      new Class1.NamedLocation(new Vector3(-1296.145f, -575.1738f, 44.46f), -53f, ""),
      new Class1.NamedLocation(new Vector3(-1183.548f, -1408.031f, 17.801f), 126f, ""),
      new Class1.NamedLocation(new Vector3(-590.81f, -1620.033f, 37.75f), -6f, ""),
      new Class1.NamedLocation(new Vector3(-314.75f, -1376.608f, 41f), -89f, ""),
      new Class1.NamedLocation(new Vector3(-142.57f, -1268.951f, 47.79f), -3f, ""),
      new Class1.NamedLocation(new Vector3(746.89f, -704.39f, 49.038f), 86f, ""),
      new Class1.NamedLocation(new Vector3(923.96f, -897.018f, 53.211f), -91.74f, ""),
      new Class1.NamedLocation(new Vector3(900.48f, -2198.64f, 37.34f), -2f, "")
    };
    public Vector3 LastPosterPos;
    public float LastPosterHeading;
    public bool createdPoster;
    public Prop PosterLoc;
    public Vector3 OffsetPoster = new Vector3(0.0f, 1f, 0.0f);
    public int ObjectivesGot;
    public int ObjectivesNeeded;
    public int ObjectiveCurrent;
    public Ped VIPped1;
    public Ped VIPped2;
    public List<Class1.NamedLocation> CurrentObjs_NamedLocations = new List<Class1.NamedLocation>();
    public List<Class1.PosterPosition> CurrentObjs_PosterPos = new List<Class1.PosterPosition>();
    public List<Vector3> CurrentObjs_Vector3 = new List<Vector3>();
    public List<Class1.Flare> SmokeParticles = new List<Class1.Flare>();
    public Blip MainBlip;
    public bool SamplePlaying;
    public float SampleTimer;
    public Vector3 MusicLoc;
    public Class1.NamedLocation CurrentNamedLocation;
    public List<PedHash> EnemyPedhashes = new List<PedHash>()
    {
      PedHash.Hillbilly01AMM,
      PedHash.Hillbilly02AMM,
      PedHash.ONeil,
      PedHash.SalvaBoss01GMY,
      PedHash.Salton04AMM,
      PedHash.SalvaGoon01GMY,
      PedHash.SalvaGoon02GMY,
      PedHash.SalvaGoon03GMY,
      PedHash.MilitaryBum,
      PedHash.Lost02GMY,
      PedHash.Lost01GFY
    };
    public DateTime CurrentDate_Daily;
    public DateTime NextDate_Daily;
    public int DaysWait_Daily = 1;
    public int NextDay_Daily;
    public int NextMonth_Daily;
    public int NextYear_Daily;
    public bool BYPASS_NOSAVE_OR_CRASH_Daily = true;
    public int DAYSTORESET_UPDATETIME_Daily = 2;
    public int Now_Daily;
    public int DJChoosen;
    public bool WaitingForRaid;
    public bool isAtRaidLocation;
    public Vector3 RaidLocation;
    public int RaidHour;
    public float Raidtimer;
    public Blip BlipItem_SetupMission;
    public int RaidEnemyTime;
    public int NextHour;
    public int CurrentTime;
    public int NextRaidTimer;
    public int RaidCounter;
    public List<object> Slots = new List<object>();
    public Vehicle Current;
    public int PedDanceTimer;
    public bool PedsDancing;
    public bool InTransition;
    public int Stage;
    public int DanceScene;
    public string DanceLoadDirect;
    public Prop PlayerDrink;

    private void CheckForScriptEnabled(string iniName)
    {
      try
      {
        this.ScriptConfig = ScriptSettings.Load(iniName);
        this.IsScriptEnabled = this.ScriptConfig.GetValue<bool>("After Hours Business", "Main", this.IsScriptEnabled);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public Class1(bool Create)
    {
      this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
      if (!this.IsScriptEnabled)
        return;
      this.Aborted += new EventHandler(this.OnShutdown);
      this.Interval = 1;
      this.Tick += new EventHandler(this.OnTick);
      this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
    }

    public Class1()
    {
      this.CheckForScriptEnabled("scripts//DisableBusinesses.ini");
      if (!this.IsScriptEnabled)
        return;
      this.SaveLoad = new AfterHoursBusiness.SaveCar();
      this.Garages = new Garages();
      this.Allstocks = new AllStocks();
      this.SeatPos.Add(new Vector3(-1593.367f, -3002.496f, -77.4f));
      this.SeatRot.Add(81f);
      this.SeatPos.Add(new Vector3(-1594.613f, -2999.257f, -77.4f));
      this.SeatRot.Add(180f);
      this.SeatPos.Add(new Vector3(-1598.054f, -2999.325f, -77.4f));
      this.SeatRot.Add(172f);
      this.SeatPos.Add(new Vector3(-1601.567f, -3000.451f, -77.4f));
      this.SeatRot.Add(-90f);
      this.SeatPos.Add(new Vector3(-1601.495f, -3002.543f, -77.4f));
      this.SeatRot.Add(-90f);
      this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.LoadIniFile2("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.DrinkPosPent.Add(new Vector3(-1586.786f, -3012.969f, -77f));
      this.DrinkPosRot.Add(-103f);
      this.DrinkPosPent.Add(new Vector3(-1608.695f, -3018.081f, -76f));
      this.DrinkPosRot.Add(90f);
      this.DrinkPosPent.Add(new Vector3(-1578.143f, -3014.956f, -80f));
      this.DrinkPosRot.Add(174f);
      this.CreateBanner();
      this.Setup();
      this.Aborted += new EventHandler(this.OnShutdown);
      this.Interval = 1;
      this.Tick += new EventHandler(this.OnTick);
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_02_ba_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_03_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_02_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_03_ba_milo_");
    }

    public void AddCrowdSpawns()
    {
      this.DancePos.Add(new Vector3(-1599.286f, -3014.479f, -79.00606f));
      this.DanceHeading.Add(74.99979f);
      this.DancePos.Add(new Vector3(-1599.256f, -3012.859f, -79.00606f));
      this.DanceHeading.Add(89.9997f);
      this.DancePos.Add(new Vector3(-1599.485f, -3011.013f, -79.00606f));
      this.DanceHeading.Add(99.99955f);
      this.DancePos.Add(new Vector3(-1599.478f, -3009.316f, -79.00606f));
      this.DanceHeading.Add(109.9995f);
      this.DancePos.Add(new Vector3(-1598.276f, -3010.419f, -79.00606f));
      this.DanceHeading.Add(89.99937f);
      this.DancePos.Add(new Vector3(-1598.178f, -3012.107f, -79.00606f));
      this.DanceHeading.Add(94.99931f);
      this.DancePos.Add(new Vector3(-1597.81f, -3013.999f, -79.00606f));
      this.DanceHeading.Add(64.99922f);
      this.DancePos.Add(new Vector3(-1596.136f, -3014.376f, -79.00606f));
      this.DanceHeading.Add(64.99922f);
      this.DancePos.Add(new Vector3(-1596.532f, -3012.257f, -79.00606f));
      this.DanceHeading.Add(84.99911f);
      this.DancePos.Add(new Vector3(-1597.38f, -3009.078f, -79.00606f));
      this.DanceHeading.Add(84.99911f);
      this.DancePos.Add(new Vector3(-1596.245f, -3010.349f, -79.00606f));
      this.DanceHeading.Add(94.99898f);
      this.DancePos.Add(new Vector3(-1594.98f, -3011.497f, -79.00606f));
      this.DanceHeading.Add(74.99896f);
      this.DancePos.Add(new Vector3(-1594.685f, -3013.496f, -79.00606f));
      this.DanceHeading.Add(89.99895f);
      this.DancePos.Add(new Vector3(-1594.415f, -3009.547f, -79.00606f));
      this.DanceHeading.Add(4.99889f);
      this.DancePos.Add(new Vector3(-1593.241f, -3011.182f, -79.00606f));
      this.DanceHeading.Add(94.99889f);
      this.DancePos.Add(new Vector3(-1593.164f, -3013.143f, -79.00606f));
      this.DanceHeading.Add(69.99878f);
      this.DancePos.Add(new Vector3(-1593.243f, -3014.435f, -79.00606f));
      this.DanceHeading.Add(69.99878f);
      this.DancePos.Add(new Vector3(-1593.338f, -3009.497f, -79.00606f));
      this.DanceHeading.Add(99.99875f);
      this.DancePos.Add(new Vector3(-1597.302f, -3013.429f, -79.00606f));
      this.DanceHeading.Add(89.99841f);
      this.DancePos.Add(new Vector3(-1597.293f, -3011.11f, -79.00606f));
      this.DanceHeading.Add(89.99841f);
      this.DancePos.Add(new Vector3(-1595.858f, -3012.948f, -79.00606f));
      this.DanceHeading.Add(89.99841f);
      this.DancePos.Add(new Vector3(-1594.718f, -3012.382f, -79.00606f));
      this.DanceHeading.Add(84.99833f);
      this.DancePos.Add(new Vector3(-1592.485f, -3011.958f, -79.00606f));
      this.DanceHeading.Add(104.9983f);
      this.DancePos.Add(new Vector3(-1592.1f, -3009.135f, -79.00606f));
      this.DanceHeading.Add(104.9983f);
      this.DancePos.Add(new Vector3(-1594.456f, -3010.849f, -79.00606f));
      this.DanceHeading.Add(74.99818f);
      this.DancePos.Add(new Vector3(-1594.935f, -3014.76f, -79.00606f));
      this.DanceHeading.Add(79.99802f);
      this.DancePos.Add(new Vector3(-1593.958f, -3012.06f, -79.00606f));
      this.DanceHeading.Add(79.99802f);
      this.DancePos.Add(new Vector3(-1592.025f, -3014.925f, -79.00606f));
      this.DanceHeading.Add(74.99796f);
      this.DancePos.Add(new Vector3(-1592.057f, -3013.273f, -79.00606f));
      this.DanceHeading.Add(74.99796f);
      this.DancePos.Add(new Vector3(-1597.023f, -3015.123f, -79.00606f));
      this.DanceHeading.Add(84.99932f);
      this.DancePos.Add(new Vector3(-1596.166f, -3011.476f, -79.00606f));
      this.DanceHeading.Add(119.999f);
      this.DancePos.Add(new Vector3(-1595.68f, -3009.549f, -79.00606f));
      this.DanceHeading.Add(119.999f);
      this.DancePos.Add(new Vector3(-1592.181f, -3010.726f, -79.00606f));
      this.DanceHeading.Add(119.999f);
      this.DancePos.Add(new Vector3(-1598.637f, -3008.974f, -79.00606f));
      this.DanceHeading.Add(129.9987f);
      this.DancePos.Add(new Vector3(-1589.201f, -3013.824f, -79.00606f));
      this.DanceHeading.Add(349.998f);
      this.DancePos.Add(new Vector3(-1588.086f, -3012.85f, -79.00606f));
      this.DanceHeading.Add(139.9975f);
      this.DancePos.Add(new Vector3(-1589.525f, -3011.373f, -79.00606f));
      this.DanceHeading.Add(104.9997f);
      this.DancePos.Add(new Vector3(-1589.588f, -3009.793f, -79.00606f));
      this.DanceHeading.Add(134.9996f);
      this.DancePos.Add(new Vector3(-1590.238f, -3016.211f, -79.00606f));
      this.DanceHeading.Add(64.99924f);
      this.DancePos.Add(new Vector3(-1612.493f, -3008.006f, -79.00598f));
      this.DanceHeading.Add(0.0f);
      this.DancePos.Add(new Vector3(-1612.234f, -3007.077f, -79.00598f));
      this.DanceHeading.Add(184.9996f);
      this.DancePos.Add(new Vector3(-1603.387f, -3004.944f, -79.00606f));
      this.DanceHeading.Add(199.9994f);
      this.DancePos.Add(new Vector3(-1601.498f, -3005.343f, -79.00606f));
      this.DanceHeading.Add(164.9993f);
      this.DancePos.Add(new Vector3(-1601.012f, -3006.264f, -79.00606f));
      this.DanceHeading.Add(159.9992f);
      this.DancePos.Add(new Vector3(-1597.325f, -3017.721f, -79.00606f));
      this.DanceHeading.Add(59.99892f);
      this.DancePos.Add(new Vector3(-1598.735f, -3018.321f, -79.00606f));
      this.DanceHeading.Add(34.99891f);
      this.DancePos.Add(new Vector3(-1599.519f, -3017.069f, -79.00606f));
      this.DanceHeading.Add(34.99886f);
      this.DancePos.Add(new Vector3(-1598.335f, -3016.935f, -79.00606f));
      this.DanceHeading.Add(34.99886f);
      this.DancePos.Add(new Vector3(-1600.323f, -3017.858f, -79.00606f));
      this.DanceHeading.Add(24.99882f);
      this.DancePos.Add(new Vector3(-1588.297f, -3017.595f, -79.00606f));
      this.DanceHeading.Add(49.99993f);
      this.DancePos.Add(new Vector3(-1589.377f, -3017.98f, -79.00606f));
      this.DanceHeading.Add(9.999737f);
      this.DancePos.Add(new Vector3(-1586.512f, -3013.608f, -79.00606f));
      this.DanceHeading.Add(109.9994f);
      this.DancePos.Add(new Vector3(-1586.575f, -3014.707f, -79.00606f));
      this.DanceHeading.Add(84.99927f);
      this.DancePos.Add(new Vector3(-1591.812f, -3016.253f, -79.00606f));
      this.DanceHeading.Add(79.9994f);
      this.DancePos.Add(new Vector3(-1597.269f, -3009.916f, -79.00606f));
      this.DanceHeading.Add(139.9992f);
      this.DancePos.Add(new Vector3(-1595.497f, -3010.56f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1594.243f, -3014.202f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1592.819f, -3014.009f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1593.165f, -3012.437f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1593.301f, -3010.349f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1597.35f, -3011.214f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1598.791f, -3013.354f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1598.803f, -3011.52f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1599.409f, -3010.063f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1594.033f, -3010.641f, -79.00606f));
      this.DanceHeading.Add(89.99896f);
      this.DancePos.Add(new Vector3(-1586.844f, -3007.437f, -76.005f));
      this.DanceHeading.Add(119.9996f);
      this.DancePos.Add(new Vector3(-1588.096f, -3007.108f, -76.005f));
      this.DanceHeading.Add(219.9995f);
      this.DancePos.Add(new Vector3(-1587.767f, -3008.194f, -76.005f));
      this.DanceHeading.Add(69.99921f);
      this.DancePos.Add(new Vector3(-1591.617f, -3005.606f, -76.005f));
      this.DanceHeading.Add(184.9989f);
      this.DancePos.Add(new Vector3(-1590.441f, -3005.738f, -76.005f));
      this.DanceHeading.Add(149.9988f);
      this.DancePos.Add(new Vector3(-1590.841f, -3010.893f, -76.005f));
      this.DanceHeading.Add(99.99868f);
      this.DancePos.Add(new Vector3(-1590.943f, -3013.203f, -76.005f));
      this.DanceHeading.Add(69.99854f);
      this.DancePos.Add(new Vector3(-1588.974f, -3009.629f, -76.005f));
      this.DanceHeading.Add(104.9985f);
      this.DancePos.Add(new Vector3(-1589.04f, -3010.499f, -76.005f));
      this.DanceHeading.Add(89.99847f);
      this.DancePos.Add(new Vector3(-1589.088f, -3011.289f, -76.005f));
      this.DanceHeading.Add(59.99844f);
      this.DancePos.Add(new Vector3(-1589.014f, -3014.441f, -76.005f));
      this.DanceHeading.Add(84.9984f);
      this.DancePos.Add(new Vector3(-1589.096f, -3015.45f, -76.005f));
      this.DanceHeading.Add(84.9984f);
      this.DancePos.Add(new Vector3(-1598.902f, -3002.512f, -75.80515f));
      this.DanceHeading.Add(169.9981f);
      this.DancePos.Add(new Vector3(-1596.829f, -3002.128f, -75.80515f));
      this.DanceHeading.Add(179.9978f);
      this.DancePos.Add(new Vector3(-1595.684f, -3002.082f, -75.80515f));
      this.DanceHeading.Add(179.9978f);
      this.DancePos.Add(new Vector3(-1594.913f, -3002.999f, -75.80515f));
      this.DanceHeading.Add(129.9978f);
      this.DancePos.Add(new Vector3(-1570.322f, -3010.008f, -74.40612f));
      this.DanceHeading.Add(359.9995f);
      this.DancePos.Add(new Vector3(-1570.246f, -3008.846f, -74.40612f));
      this.DanceHeading.Add(184.9993f);
      this.DancePos.Add(new Vector3(-1577.993f, -3003.408f, -79.006f));
      this.DanceHeading.Add(189.9993f);
      this.DancePos.Add(new Vector3(-1577.993f, -3004.384f, -79.00592f));
      this.DanceHeading.Add(9.998798f);
      this.DancePos.Add(new Vector3(-1576.395f, -3002.714f, -79.006f));
      this.DanceHeading.Add(279.9984f);
      this.DancePos.Add(new Vector3(-1575.477f, -3002.813f, -79.006f));
      this.DanceHeading.Add(94.99823f);
      this.DancePos.Add(new Vector3(-1576.352f, -3008.952f, -79.00592f));
      this.DanceHeading.Add(144.998f);
      this.DancePos.Add(new Vector3(-1576.787f, -3009.808f, -79.00592f));
      this.DanceHeading.Add(339.9975f);
      this.DancePos.Add(new Vector3(-1578.559f, -3013.081f, -79.00592f));
      this.DanceHeading.Add(129.9973f);
      this.DancePos.Add(new Vector3(-1579.377f, -3013.815f, -79.00592f));
      this.DanceHeading.Add(339.997f);
      this.DancePos.Add(new Vector3(-1575.995f, -3012.552f, -79.00592f));
      this.DanceHeading.Add(104.9966f);
      this.DancePos.Add(new Vector3(-1577.948f, -3014.697f, -79.00592f));
      this.DanceHeading.Add(189.9961f);
      this.DancePos.Add(new Vector3(-1584.026f, -3012.306f, -79.00606f));
      this.DanceHeading.Add(14.99531f);
      this.DancePos.Add(new Vector3(-1584.957f, -3012.322f, -79.00606f));
      this.DanceHeading.Add(359.9953f);
      this.DancePos.Add(new Vector3(-1586.489f, -3015.89f, -79.00606f));
      this.DanceHeading.Add(84.99461f);
      this.DancePos.Add(new Vector3(-1586.564f, -3017.121f, -79.00606f));
      this.DanceHeading.Add(84.99461f);
      this.DancePos.Add(new Vector3(-1587.175f, -3005.756f, -79.00606f));
      this.DanceHeading.Add(199.9944f);
      this.DancePos.Add(new Vector3(-1587.464f, -3006.929f, -79.00606f));
      this.DanceHeading.Add(24.99405f);
      this.DancePos.Add(new Vector3(-1580.195f, -3014.741f, -79.00592f));
      this.DanceHeading.Add(204.9996f);
      this.DancePos.Add(new Vector3(-1581.842f, -3014.713f, -79.00595f));
      this.DanceHeading.Add(94.99954f);
      this.DancePos.Add(new Vector3(-1575.791f, -3014.468f, -79.00592f));
      this.DanceHeading.Add(119.9995f);
      this.DancePos.Add(new Vector3(-1576.229f, -3011.572f, -79.00592f));
      this.DanceHeading.Add(134.9993f);
      this.DancePos.Add(new Vector3(-1610.928f, -3014.574f, -79.00598f));
      this.DanceHeading.Add(219.9994f);
      this.DancePos.Add(new Vector3(-1610.87f, -3015.806f, -79.00598f));
      this.DanceHeading.Add(19.99897f);
      this.DancePos.Add(new Vector3(-1608.783f, -3010.835f, -79.00598f));
      this.DanceHeading.Add(279.9986f);
      this.DancePos.Add(new Vector3(-1568.304f, -3003.584f, -76.20597f));
      this.DanceHeading.Add(139.9997f);
      this.DancePos.Add(new Vector3(-1611.871f, -3011.186f, -79.00598f));
      this.DanceHeading.Add(74.99944f);
      this.DancePos.Add(new Vector3(-1601.101f, -3007.519f, -76.005f));
      this.DanceHeading.Add(204.9998f);
      this.DancePos.Add(new Vector3(-1598.456f, -3007.338f, -76.005f));
      this.DanceHeading.Add(189.9997f);
      this.DancePos.Add(new Vector3(-1599.195f, -3007.438f, -76.005f));
      this.DanceHeading.Add(194.9995f);
      this.DancePos.Add(new Vector3(-1593.753f, -3007.614f, -76.005f));
      this.DanceHeading.Add(169.9995f);
      this.DancePos.Add(new Vector3(-1587.037f, -3013.597f, -76.005f));
      this.DanceHeading.Add(294.9988f);
      this.DancePos.Add(new Vector3(-1590.921f, -3009.216f, -76.005f));
      this.DanceHeading.Add(119.9984f);
      this.DancePos.Add(new Vector3(-1590.932f, -3014.61f, -76.005f));
      this.DanceHeading.Add(79.99821f);
      this.DancePos.Add(new Vector3(-1588.272f, -3018.683f, -76.005f));
      this.DanceHeading.Add(24.99807f);
      this.DancePos.Add(new Vector3(-1590.673f, -3018.393f, -76.005f));
      this.DanceHeading.Add(339.998f);
      this.DancePos.Add(new Vector3(-1585.887f, -3016.833f, -76.005f));
      this.DanceHeading.Add(309.9998f);
      this.DancePos.Add(new Vector3(-1586.915f, -3009.674f, -76.005f));
      this.DanceHeading.Add(249.9992f);
      this.DancePos.Add(new Vector3(-1600.778f, -3002.237f, -75.80515f));
      this.DanceHeading.Add(279.9997f);
      this.DancePos.Add(new Vector3(-1597.622f, -3000.057f, -75.80515f));
      this.DanceHeading.Add(184.9996f);
      this.DancePos.Add(new Vector3(-1593.891f, -3001.232f, -75.80515f));
      this.DanceHeading.Add(109.9995f);
      this.DancePos.Add(new Vector3(-1570.153f, -3002.578f, -76.20597f));
      this.DanceHeading.Add(184.9996f);
      this.DancePos.Add(new Vector3(-1612.796f, -3005.434f, -79.00598f));
      this.DanceHeading.Add(239.9995f);
      this.DancePos.Add(new Vector3(-1605.323f, -3017.834f, -78.40482f));
      this.DanceHeading.Add(309.9991f);
      this.DancePos.Add(new Vector3(-1590.468f, -3010.858f, -79.00606f));
      this.DanceHeading.Add(94.99987f);
      this.DancePos.Add(new Vector3(-1594.557f, -3004.772f, -76.005f));
      this.DanceHeading.Add(139.9995f);
      this.DancePos.Add(new Vector3(-1605.868f, -3007.602f, -76.005f));
      this.DanceHeading.Add(319.9996f);
    }

    public void SpawnDancers()
    {
      this.ChoosenDance = false;
      if (this.Peds.Count > 0)
      {
        foreach (Ped ped in this.Peds)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
        this.Peds.Clear();
      }
      if (this.Dance_Positions.Count > 0)
        this.Dance_Positions.Clear();
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      for (int index = 0; index < 128; ++index)
        this.Dance_Positions.Add(new Class1.DancePositionsSettings(this.DancePos[index], this.DanceHeading[index]));
      System.Random random = new System.Random();
      int num = 0;
      while (num < 20)
      {
        int index1 = random.Next(0, this.Dance_Positions.Count);
        if (!this.Dance_Positions[index1].Created)
        {
          this.Dance_Positions[index1].Created = true;
          int index2 = random.Next(0, this.ClubDancerList.Count);
          Vector3 dancePo = this.DancePos[index1];
          float heading = this.DanceHeading[index1];
          Ped ped = World.CreatePed(this.RequestModel(this.ClubDancerList[index2]), dancePo, heading);
          this.SetupPed(ped);
          ped.Heading = this.DanceHeading[index1];
          this.SetRandomOutfit(ped);
          ++num;
        }
        else
          random.Next(0, this.Dance_Positions.Count);
      }
      for (int index1 = 0; index1 < 128; ++index1)
      {
        if (random.Next(0, 100) < (int) this.NC_Popularity)
        {
          int index2 = index1;
          if (!this.Dance_Positions[index2].Created)
          {
            this.Dance_Positions[index2].Created = true;
            int index3 = random.Next(0, this.ClubDancerList.Count);
            Vector3 dancePo = this.DancePos[index2];
            float heading = this.DanceHeading[index2];
            Ped ped = World.CreatePed(this.RequestModel(this.ClubDancerList[index3]), dancePo, heading);
            this.SetupPed(ped);
            ped.Heading = this.DanceHeading[index2];
            this.SetRandomOutfit(ped);
            ++index1;
          }
          else
            random.Next(0, this.Dance_Positions.Count);
        }
      }
      if (this.SpawnDancersInNightclub != 0 || this.Peds.Count <= 0)
        return;
      foreach (Ped ped in this.Peds)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
    }

    public void DeleteDancers()
    {
      this.ChoosenDance = false;
      if (this.Peds.Count > 0)
      {
        foreach (Ped ped in this.Peds)
        {
          if ((Entity) ped != (Entity) null)
            ped.Delete();
        }
      }
      if (this.Peds.Count <= 0)
        return;
      this.Peds.Clear();
    }

    public string GetHostName()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.HostName = this.Config.GetValue<string>("Misc", "HostName", this.HostName);
      this.Uicolour = this.Config.GetValue<string>("Misc", "Uicolour", this.Uicolour);
      string str = "~" + this.Uicolour + "~";
      return this.HostName;
    }

    public void MainModRefresh()
    {
      UI.Notify("~g~ Found Refresh Sequence~w~");
      this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.LoadIniFile2("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.NightClubLoc = this.Config.GetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
      this.SetNightclubLocation();
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.SetupMarker();
      this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
      this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
      this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
      if (this.purchaselvl >= 1)
      {
        this.GarageB.Color = this.Blip_Colour;
        this.GarageB.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl == 0)
      {
        this.GarageB.Color = this.Blip_Colour;
        this.GarageB.Alpha = 0;
      }
      if (this.purchaselvl >= 1)
      {
        this.TowerBlip.Color = this.Blip_Colour;
        this.TowerBlip.Alpha = (int) byte.MaxValue;
      }
      if (this.purchaselvl != 0)
        return;
      this.TowerBlip.Color = BlipColor.White;
      this.TowerBlip.Alpha = 0;
    }

    public void MainModDestroy()
    {
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Remove();
      if (this.GarageB != (Blip) null)
        this.GarageB.Remove();
      if ((Entity) this.OutsideBouncer_1 != (Entity) null)
        this.OutsideBouncer_1.Delete();
      if ((Entity) this.OutsideBouncer_2 != (Entity) null)
        this.OutsideBouncer_2.Delete();
      if ((Entity) this.LuxuryCar != (Entity) null)
        this.LuxuryCar.Delete();
      foreach (Ped ped in this.WaitingPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.WaitingPedFence)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
    }

    private void LoadIniFile3(string iniName)
    {
      try
      {
        this.Config3 = ScriptSettings.Load(iniName);
        this.CabPrimary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary);
        this.CabSecondary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabPrimary);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Main.ini Failed To Load.");
      }
    }

    private void LoadIniFile2(string iniName)
    {
      try
      {
        this.Config2 = ScriptSettings.Load(iniName);
        this.BusinessUpgradeIncreaseGain = this.Config2.GetValue<float>("Prices", "BusinessUpgradeIncreaseGain", this.BusinessUpgradeIncreaseGain);
        this.BusinessUpgradeBasePrice = this.Config2.GetValue<float>("Prices", "BusinessUpgradeBasePrice", this.BusinessUpgradeBasePrice);
        this.IncreaseStockMinAmount = this.Config2.GetValue<float>("Prices", "IncreaseStockMinAmount", this.IncreaseStockMinAmount);
        this.IncreaseStockMaxAmount = this.Config2.GetValue<float>("Prices", "IncreaseStockMaxAmount", this.IncreaseStockMaxAmount);
        this.DecreaseStockMinAmount = this.Config2.GetValue<float>("Prices", "DecreaseStockMinAmount", this.DecreaseStockMinAmount);
        this.DecreaseStockMaxAmount = this.Config2.GetValue<float>("Prices", "DecreaseStockMaxAmount", this.DecreaseStockMaxAmount);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Main.ini Failed To Load.");
      }
    }

    private void LoadIniFile(string iniName)
    {
      try
      {
        this.Config = ScriptSettings.Load(iniName);
        this.NightClubLoc = this.Config.GetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
        this.Key1 = this.Config.GetValue<Keys>("Configurations", "Key1", this.Key1);
        this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
        this.stockscount = this.Config.GetValue<int>("Setup", "stockslevel", this.stockscount);
        this.stocksvalue = this.Config.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.Design = this.Config.GetValue<string>("Setup", "Design", this.Design);
        this.DJ = this.Config.GetValue<string>("Setup", "DJ", this.DJ);
        this.MenacerBought = this.Config.GetValue<int>("Vehicles", "MenacerBought", this.MenacerBought);
        this.ScramJetBought = this.Config.GetValue<int>("Vehicles", "ScramJetBought", this.ScramJetBought);
        this.OppressorMKIIBought = this.Config.GetValue<int>("Vehicles", "OppressorMKIIBought", this.OppressorMKIIBought);
        this.PatriotStretchBought = this.Config.GetValue<int>("Vehicles", "PatriotStretchBought", this.PatriotStretchBought);
        this.SwingerBought = this.Config.GetValue<int>("Vehicles", "SwingerBought", this.SwingerBought);
        this.StraffordBought = this.Config.GetValue<int>("Vehicles", "StraffordBought", this.StraffordBought);
        this.TerroybiteBought = this.Config.GetValue<int>("MISC", "TerroybiteBought", this.TerroybiteBought);
        this.Blip_Colour = this.Config.GetValue<BlipColor>("Misc", "Blip_Colour", this.Blip_Colour);
        this.HostName = this.Config.GetValue<string>("Misc", "HostName", this.HostName);
        this.Uicolour = this.Config.GetValue<string>("Misc", "Uicolour", this.Uicolour);
        this.PounderCustomUnlocked = this.Config.GetValue<int>("Vehicles", "PounderCustomUnlocked", this.PounderCustomUnlocked);
        this.MuleCustomUnlocked = this.Config.GetValue<int>("Vehicles", "MuleCustomUnlocked", this.MuleCustomUnlocked);
        this.SpeedoCustomUnlocked = this.Config.GetValue<int>("Vehicles", "SpeedoCustomUnlocked", this.SpeedoCustomUnlocked);
        this.MarkerColorString = this.Config.GetValue<string>("Misc", "MarkerColor", this.MarkerColorString);
        if (this.MarkerColorString.Contains("ARGB"))
        {
          string[] strArray = this.MarkerColorString.Split(new string[1]
          {
            "_"
          }, StringSplitOptions.None);
          this.MarkerColor = Color.FromArgb(int.Parse(strArray[1]), int.Parse(strArray[2]), int.Parse(strArray[3]));
        }
        if (!this.MarkerColorString.Contains("ARGB"))
          this.MarkerColor = Color.FromName(this.MarkerColorString);
        this.N_Style = this.Config.GetValue<int>("Interior", "N_Style", this.N_Style);
        this.N_PodiumStyle = this.Config.GetValue<int>("Interior", "N_PodiumStyle", this.N_PodiumStyle);
        this.N_Booze = this.Config.GetValue<int>("Interior", "N_Booze", this.N_Booze);
        this.N_DJLights = this.Config.GetValue<int>("Interior", "N_DJLights", this.N_DJLights);
        this.N_ProjectorType = this.Config.GetValue<int>("Interior", "N_ProjectorType", this.N_ProjectorType);
        this.N_Lights = this.Config.GetValue<int>("Interior", "N_Lights", this.N_Lights);
        this.N_LightsRig = this.Config.GetValue<int>("Interior", "N_LightsRig", this.N_LightsRig);
        this.N_Upgrade = this.Config.GetValue<int>("Interior", "N_Upgrade", this.N_Upgrade);
        this.N_ClubName = this.Config.GetValue<int>("Interior", "N_ClubName", this.N_ClubName);
        this.N_trophies = this.Config.GetValue<int>("Interior", "N_trophies", this.N_trophies);
        this.N_WorkLights = this.Config.GetValue<int>("Interior", "N_WorkLights", this.N_WorkLights);
        this.N_DJ = this.Config.GetValue<int>("Interior", "N_DJ", this.N_DJ);
        this.GunLockerBought = this.Config.GetValue<int>("Interior", "N_Gunlocker", this.GunLockerBought);
        this.WaredrobeOwned = this.Config.GetValue<int>("Interior", "N_Waredrobe", this.WaredrobeOwned);
        this.MoneyVaultBought = this.Config.GetValue<int>("Interior", "N_MoneyVault", this.MoneyVaultBought);
        this.N_Clutter = this.Config.GetValue<int>("Interior", "N_Clutter", this.N_Clutter);
        this.N_DryIce = this.Config.GetValue<int>("Interior", "N_DryIce", this.N_DryIce);
        this.N_DelivTruck = this.Config.GetValue<int>("Interior", "N_DelivTruck", this.N_DelivTruck);
        this.N_PrivacyGlass = this.Config.GetValue<int>("Interior", "N_PrivacyGlass", this.N_PrivacyGlass);
        this.N_DancerAGender = this.Config.GetValue<int>("Interior", "N_DancerAGender", this.N_DancerAGender);
        this.N_DancerAStyle = this.Config.GetValue<int>("Interior", "N_DancerAStyle", this.N_DancerAStyle);
        this.N_DancerBGender = this.Config.GetValue<int>("Interior", "N_DancerBGender", this.N_DancerBGender);
        this.N_DancerBStyle = this.Config.GetValue<int>("Interior", "N_DancerAStyle", this.N_DancerBStyle);
        this.PlayRadioMusic = this.Config.GetValue<bool>("Interior", "PlayRadioMusic", this.PlayRadioMusic);
        this.DefaultRadioStation = this.Config.GetValue<string>("Interior", "DefaultRadioStation", this.DefaultRadioStation);
        this.SpawnDancersInNightclub = this.Config.GetValue<int>("Interior", "SpawnDancersInNightclub", this.SpawnDancersInNightclub);
        this.N_SpotLightColourstring = this.Config.GetValue<string>("Interior", "N_SpotLightColour", this.N_SpotLightColourstring);
        this.N_SpotLightColour = Color.FromName(this.N_SpotLightColourstring);
        this.MovingSpotLights = this.Config.GetValue<bool>("Interior", "MovingSpotLights", this.MovingSpotLights);
        this.N_CeilingColourstring = this.Config.GetValue<string>("Interior", "N_CeilingColour", this.N_CeilingColourstring);
        this.N_CeilingColour = Color.FromName(this.N_CeilingColourstring);
        this.SpotLightType = this.Config.GetValue<int>("Interior", "SpotLightType", this.SpotLightType);
        this.RandomSpotlightColour = this.Config.GetValue<bool>("Interior", "RandomSpotlightColour", this.RandomSpotlightColour);
        this.LightChangeInterval = this.Config.GetValue<int>("Interior", "LightChangeInterval", this.LightChangeInterval);
        this.LightMoveInterval = this.Config.GetValue<int>("Interior", "LightMoveInterval", this.LightMoveInterval);
        this.RandomCelingLightColor = this.Config.GetValue<bool>("Interior", "RandomCelingLightColor", this.RandomCelingLightColor);
        this.CelingLightChangeInterval = this.Config.GetValue<int>("Interior", "CelingLightChangeInterval", this.CelingLightChangeInterval);
        this.DryIceParticleMultiplier = this.Config.GetValue<int>("Interior", "DryIceParticleMultiplier", this.DryIceParticleMultiplier);
        this.PrimaryColor = this.Config.GetValue<VehicleColor>("Misc", "PrimaryColor", this.PrimaryColor);
        this.SecondaryColor = this.Config.GetValue<VehicleColor>("Misc", "SecondaryColor", this.SecondaryColor);
        this.LuxuryCarHash = this.Config.GetValue<VehicleHash>("Misc", "LuxuryCarHash", this.LuxuryCarHash);
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case0_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case1_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case2_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case3_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case4_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case5_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case6_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case7_taleofus");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case0_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case1_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case2_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case3_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case4_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case5_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case6_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case7_dixon");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case0_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case1_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case2_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case3_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case4_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case5_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case6_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case7_solomun");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case0_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case1_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case2_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case3_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case4_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case5_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case6_madonna");
        Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_case7_madonna");
        if (this.N_DJ == 0)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case0_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case1_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case2_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case3_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case4_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case5_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case6_taleofus");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case7_taleofus");
        }
        if (this.N_DJ == 1)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case0_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case1_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case2_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case3_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case4_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case5_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case6_dixon");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case7_dixon");
        }
        if (this.N_DJ == 2)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case0_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case1_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case2_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case3_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case4_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case5_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case6_solomun");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case7_solomun");
        }
        if (this.N_DJ == 3)
        {
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case0_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case1_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case2_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case3_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case4_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case5_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case6_madonna");
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_case7_madonna");
        }
        this.NC_Popularity = this.Config.GetValue<float>("Nightclub_Management", "Popularity", this.NC_Popularity);
        this.NC_NightclubJobsCompleted = this.Config.GetValue<int>("Nightclub_Management", "NightclubJobsCompleted", this.NC_NightclubJobsCompleted);
        this.NC_NightClubEarnings = this.Config.GetValue<int>("Nightclub_Management", "NightClubEarnings", this.NC_NightClubEarnings);
        this.NC_WarehouseSalesCompleted = this.Config.GetValue<int>("Nightclub_Management", "WarehouseSalesCompleted", this.NC_WarehouseSalesCompleted);
        this.NC_Upgrade1UnLocked = this.Config.GetValue<int>("Nightclub_Management", "Upgrade1UnLocked", this.NC_Upgrade1UnLocked);
        this.NC_Upgrade2UnLocked = this.Config.GetValue<int>("Nightclub_Management", "Upgrade2UnLocked", this.NC_Upgrade2UnLocked);
        this.NC_Upgrade3UnLocked = this.Config.GetValue<int>("Nightclub_Management", "Upgrade3UnLocked", this.NC_Upgrade3UnLocked);
        this.NC_WarehouseEarnings = this.Config.GetValue<int>("Nightclub_Management", "WarehouseEarnings", this.NC_WarehouseEarnings);
        this.NC_TotalEarnings = this.Config.GetValue<int>("Nightclub_Management", "TotalEarnings", this.NC_TotalEarnings);
        this.NC_safeCapacityMax = this.Config.GetValue<int>("Nightclub_Management", "safeCapacityMax", this.NC_safeCapacityMax);
        this.NC_safeCapacityCrt = this.Config.GetValue<float>("Nightclub_Management", "safeCapacityCrt", this.NC_safeCapacityCrt);
        this.NC_safeCapacityCrt = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 10.ToString() + "]", this.NC_safeCapacityCrt);
        this.NC_Dailyincome = this.Config.GetValue<int>("Nightclub_Management", "Dailyincome", this.NC_Dailyincome);
        this.NC_GoodsAquired = this.Config.GetValue<int>("Nightclub_Management", "GoodsAquired", this.NC_GoodsAquired);
        this.NC_GoodsSold = this.Config.GetValue<int>("Nightclub_Management", "GoodsSold", this.NC_GoodsSold);
        this.NC_Technician1Status = this.Config.GetValue<int>("Nightclub_Management", "Technician1Status", this.NC_Technician1Status);
        this.NC_Technician1Task = this.Config.GetValue<int>("Nightclub_Management", "Technician1Task", this.NC_Technician1Task);
        this.NC_Technician2Status = this.Config.GetValue<int>("Nightclub_Management", "Technician2Status", this.NC_Technician2Status);
        this.NC_Technician2Task = this.Config.GetValue<int>("Nightclub_Management", "Technician2Task", this.NC_Technician2Task);
        this.NC_Technician3Status = this.Config.GetValue<int>("Nightclub_Management", "Technician3Status", this.NC_Technician3Status);
        this.NC_Technician3Task = this.Config.GetValue<int>("Nightclub_Management", "Technician3Task", this.NC_Technician3Task);
        this.NC_Technician4Status = this.Config.GetValue<int>("Nightclub_Management", "Technician4Status", this.NC_Technician4Status);
        this.NC_Technician4Task = this.Config.GetValue<int>("Nightclub_Management", "Technician4Task", this.NC_Technician4Task);
        this.NC_Technician5Status = this.Config.GetValue<int>("Nightclub_Management", "Technician5Status", this.NC_Technician5Status);
        this.NC_Technician5Task = this.Config.GetValue<int>("Nightclub_Management", "Technician5Task", this.NC_Technician5Task);
        this.NC_CelebAppearances = this.Config.GetValue<int>("Nightclub_Management", "CelebAppearances", this.NC_CelebAppearances);
        this.NC_MultiplierSell = this.Config.GetValue<int>("Nightclub_Management_Misc", "MultiplierSell", this.NC_MultiplierSell);
        this.NC_MultiplierBuyCrate = this.Config.GetValue<int>("Nightclub_Management_Misc", "MultiplierBuyCrate", this.NC_MultiplierBuyCrate);
        this.NC_MultiplierUpg = this.Config.GetValue<int>("Nightclub_Management_Misc", "MultiplierUpg", this.NC_MultiplierUpg);
        this.NC_MultiplierBuyUpgTechnician = this.Config.GetValue<int>("Nightclub_Management_Misc", "MultiplierBuyUpgTechnician", this.NC_MultiplierBuyUpgTechnician);
        this.NC_CargoStockCurrent = this.Config.GetValue<int>("NM_CargoStock", "CargoStockCurrent", this.NC_CargoStockCurrent);
        this.NC_CargoStockMax = this.Config.GetValue<int>("NM_CargoStock", "CargoStockMax", this.NC_CargoStockMax);
        this.NC_CargoPricePerCrate = this.Config.GetValue<int>("NM_CargoStock", "CargoPricePerCrate", this.NC_CargoPricePerCrate);
        this.NC_SAIStockCurrent = this.Config.GetValue<int>("NM_SAIStock", "SAIStockCurrent", this.NC_SAIStockCurrent);
        this.NC_SAIStockMax = this.Config.GetValue<int>("NM_SAIStock", "SAIStockMax", this.NC_SAIStockMax);
        this.NC_SAIPricePerCrate = this.Config.GetValue<int>("NM_SAIStock", "SAIPricePerCrate", this.NC_SAIPricePerCrate);
        this.NC_PharStockCurrent = this.Config.GetValue<int>("NM_PharStock", "PharStockCurrent", this.NC_PharStockCurrent);
        this.NC_PharStockMax = this.Config.GetValue<int>("NM_PharStock", "PharStockMax", this.NC_PharStockMax);
        this.NC_PharPricePerCrate = this.Config.GetValue<int>("NM_PharStock", "PharPricePerCrate", this.NC_PharPricePerCrate);
        this.NC_SportingGoodsStockCurrent = this.Config.GetValue<int>("NM_SportingGoodsStock", "SportingGoodsStockCurrent", this.NC_SportingGoodsStockCurrent);
        this.NC_SportingGoodsStockMax = this.Config.GetValue<int>("NM_SportingGoodsStock", "SportingGoodsStockMax", this.NC_SportingGoodsStockMax);
        this.NC_SportingGoodsPricePerCrate = this.Config.GetValue<int>("NM_SportingGoodsStock", "SportingGoodsPricePerCrate", this.NC_SportingGoodsPricePerCrate);
        this.NC_PrintCopyStockCurrent = this.Config.GetValue<int>("NM_PrintCopyStock", "PrintCopyStockCurrent", this.NC_PrintCopyStockCurrent);
        this.NC_PrintCopyStockMax = this.Config.GetValue<int>("NM_PrintCopyStock", "PrintCopyStockMax", this.NC_PrintCopyStockMax);
        this.NC_PrintCopyPricePerCrate = this.Config.GetValue<int>("NM_PrintCopyStock", "PrintCopyPricePerCrate", this.NC_PrintCopyPricePerCrate);
        this.NC_CounterfeitStockCurrent = this.Config.GetValue<int>("NM_CounterfeitStockStock", "CounterfeitStockCurrent", this.NC_CounterfeitStockCurrent);
        this.NC_CounterfeitStockMax = this.Config.GetValue<int>("NM_CounterfeitStockStock", "CounterfeitStockMax", this.NC_CounterfeitStockMax);
        this.NC_CounterfeitPricePerCrate = this.Config.GetValue<int>("NM_CounterfeitStockStock", "CounterfeitPricePerCrate", this.NC_CounterfeitPricePerCrate);
        this.NC_OrgProduceStockCurrent = this.Config.GetValue<int>("NM_OrgProduceStockStock", "OrgProduceStockCurrent", this.NC_OrgProduceStockCurrent);
        this.NC_OrgProduceStockMax = this.Config.GetValue<int>("NM_OrgProduceStockStock", "OrgProduceStockMax", this.NC_OrgProduceStockMax);
        this.NC_OrgProducePricePerCrate = this.Config.GetValue<int>("NM_OrgProduceStockStock", "OrgProducePricePerCrate", this.NC_OrgProducePricePerCrate);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Main.ini Failed To Load.");
      }
    }

    public void SetNightclubLocation()
    {
      if (this.NightClubLoc == 0)
      {
        this.Entry = new Vector3(-1285.281f, -651.9348f, 25.5f);
        this.Entry2 = new Vector3(-1181.11f, -752.158f, 18.2f);
        this.GarageVehicleSpawnOutside = new Vector3(-1197.383f, -729.1903f, 20f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(-1289.859f, -654.7882f, 28f);
        this.OutsideClubnameHeading = -145f;
        this.LuxuryCarPos = new Vector3(-1285.8f, -642.7f, 25f);
        this.LuxuryCarheading = -55f;
        this.OutsideBouncerPos_1 = new Vector3(-1287.114f, -652.6f, 26f);
        this.OutsideBouncerRot_1 = -1.4f;
        this.OutsideBouncerPos_2 = new Vector3(-1285.6f, -649.1f, 26f);
        this.OutsideBouncerRot_2 = -60f;
        this.WaitingPedPosStart = new Vector3(-1283.98f, -648.45f, 26f);
        this.WaitingPedRot = 128f;
        this.FenceRot = 85f;
      }
      if (this.NightClubLoc == 1)
      {
        this.Entry = new Vector3(375.9f, 219.7f, 102f);
        this.Entry2 = new Vector3(372.1f, 253.2f, 102f);
        this.GarageVehicleSpawnOutside = new Vector3(384.3f, 226.3f, 102f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(374.7f, 220f, 111f);
        this.OutsideClubnameHeading = 68.7f;
        this.LuxuryCarPos = new Vector3(380.5f, 212.38f, 102f);
        this.LuxuryCarheading = -19f;
        this.OutsideBouncerPos_1 = new Vector3(376.24f, 222.35f, 103f);
        this.OutsideBouncerRot_1 = -101f;
        this.OutsideBouncerPos_2 = new Vector3(375.5f, 216.09f, 103f);
        this.OutsideBouncerRot_2 = 169f;
        this.WaitingPedPosStart = new Vector3(374.49f, 215.33f, 103f);
        this.WaitingPedRot = -27f;
        this.FenceRot = 100f;
      }
      if (this.NightClubLoc == 2)
      {
        this.Entry = new Vector3(-15.7f, 216.5f, 105f);
        this.Entry2 = new Vector3(-41.5f, 227.9f, 106f);
        this.GarageVehicleSpawnOutside = new Vector3(-22.9f, 212.4f, 105f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(-17.6f, 219.1f, 108f);
        this.OutsideClubnameHeading = -5f;
        this.LuxuryCarPos = new Vector3(-37.115f, 218.8f, 106f);
        this.LuxuryCarheading = 79f;
        this.OutsideBouncerPos_1 = new Vector3(-15.4f, 218.09f, 106f);
        this.OutsideBouncerRot_1 = 113f;
        this.OutsideBouncerPos_2 = new Vector3(-17.6f, 215.35f, 106f);
        this.OutsideBouncerRot_2 = 92f;
        this.WaitingPedPosStart = new Vector3(-19.211f, 216.73f, 106f);
        this.WaitingPedRot = -101f;
        this.FenceRot = 105f;
      }
      if (this.NightClubLoc == 3)
      {
        this.Entry = new Vector3(-1194.9f, -1189.2f, 6.5f);
        this.Entry2 = new Vector3(-1173.6f, -1152.9f, 4f);
        this.GarageVehicleSpawnOutside = new Vector3(-1169.6f, -1145.9f, 4f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(-1193.6f, -1191.099f, 8.5f);
        this.OutsideClubnameHeading = -83f;
        this.LuxuryCarPos = new Vector3(-1204.38f, -1181.2f, 7f);
        this.LuxuryCarheading = -168f;
        this.OutsideBouncerPos_1 = new Vector3(-1194.242f, -1191.15f, 7f);
        this.OutsideBouncerRot_1 = 100f;
        this.OutsideBouncerPos_2 = new Vector3(-1196.8f, -1188.9f, 7f);
        this.OutsideBouncerRot_2 = 3f;
        this.WaitingPedPosStart = new Vector3(-1196.3f, -1187.6f, 7f);
        this.WaitingPedRot = -173f;
        this.FenceRot = 85f;
      }
      if (this.NightClubLoc == 4)
      {
        this.Entry = new Vector3(-120.8f, -1258.5f, 28f);
        this.Entry2 = new Vector3(-175.2f, -1289.9f, 30f);
        this.GarageVehicleSpawnOutside = new Vector3(-163.9f, -1297.5f, 30f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(-121.1f, -1258.6f, 34.4f);
        this.OutsideClubnameHeading = 90f;
        this.LuxuryCarPos = new Vector3(-114.22f, -1265.808f, 28f);
        this.LuxuryCarheading = 4f;
        this.OutsideBouncerPos_1 = new Vector3(-120.7f, -1256.7f, 29f);
        this.OutsideBouncerRot_1 = -110f;
        this.OutsideBouncerPos_2 = new Vector3(-119.7f, -1259.8f, 29f);
        this.OutsideBouncerRot_2 = -179f;
        this.WaitingPedPosStart = new Vector3(-120.4f, -1261.078f, 29f);
        this.WaitingPedRot = 10f;
        this.FenceRot = 85f;
      }
      if (this.NightClubLoc == 5)
      {
        this.Entry = new Vector3(364.9f, -966.1f, 28f);
        this.Entry2 = new Vector3(349.7f, -995.4f, 28f);
        this.GarageVehicleSpawnOutside = new Vector3(323.8f, -999.2f, 28.6f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(364.9f, -965.9f, 32.1f);
        this.OutsideClubnameHeading = 180f;
        this.LuxuryCarPos = new Vector3(370.19f, -958.6f, 28f);
        this.LuxuryCarheading = -92f;
        this.OutsideBouncerPos_1 = new Vector3(366.12f, -965.8f, 29f);
        this.OutsideBouncerRot_1 = 14f;
        this.OutsideBouncerPos_2 = new Vector3(364.185f, -964.2f, 29f);
        this.OutsideBouncerRot_2 = 91f;
        this.WaitingPedPosStart = new Vector3(362.7f, -964.8008f, 29f);
        this.WaitingPedRot = -97f;
        this.FenceRot = 90f;
      }
      if (this.NightClubLoc == 6)
      {
        this.Entry = new Vector3(766.9f, -1317.4f, 26f);
        this.Entry2 = new Vector3(758.009f, -1332.4f, 26f);
        this.GarageVehicleSpawnOutside = new Vector3(747.4f, -1342.3f, 25f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(766.5f, -1317.5f, 31.4f);
        this.OutsideClubnameHeading = 90f;
        this.LuxuryCarPos = new Vector3(770.843f, -1335.561f, 25f);
        this.LuxuryCarheading = -89f;
        this.OutsideBouncerPos_1 = new Vector3(768.5544f, -1317.266f, 27f);
        this.OutsideBouncerRot_1 = -176f;
        this.OutsideBouncerPos_2 = new Vector3(766.8884f, -1322.977f, 26f);
        this.OutsideBouncerRot_2 = -152f;
        this.WaitingPedPosStart = new Vector3(767.47f, -1324.53f, 26f);
        this.WaitingPedRot = -1f;
        this.FenceRot = 115f;
      }
      if (this.NightClubLoc == 7)
      {
        this.Entry = new Vector3(871.2f, -2100.5f, 29f);
        this.Entry2 = new Vector3(905.7f, -2135.6f, 29f);
        this.GarageVehicleSpawnOutside = new Vector3(890.8f, -2088.6f, 29f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(876.9f, -2094.69f, 39f);
        this.OutsideClubnameHeading = 175f;
        this.LuxuryCarPos = new Vector3(867.9264f, -2125.853f, 30f);
        this.LuxuryCarheading = -3f;
        this.OutsideBouncerPos_1 = new Vector3(870.59f, -2102.868f, 30f);
        this.OutsideBouncerRot_1 = 78f;
        this.OutsideBouncerPos_2 = new Vector3(870.7807f, -2099.3f, 30f);
        this.OutsideBouncerRot_2 = -13f;
        this.WaitingPedPosStart = new Vector3(871.335f, -2097.85f, 30f);
        this.WaitingPedRot = 171f;
        this.FenceRot = 85f;
      }
      if (this.NightClubLoc == 8)
      {
        this.Entry = new Vector3(-659.2f, -2369.3f, 13f);
        this.Entry2 = new Vector3(-706.9f, -2448.6f, 13f);
        this.GarageVehicleSpawnOutside = new Vector3(-693.5f, -2465.3f, 13f);
        if (this.GarageB != (Blip) null)
          this.GarageB.Position = this.GarageVehicleSpawnOutside;
        if (this.TowerBlip != (Blip) null)
          this.TowerBlip.Position = this.Entry;
        this.OutsideClubnamePos = new Vector3(-650f, -2355.6f, 14.6f);
        this.OutsideClubnameHeading = -120f;
        this.LuxuryCarPos = new Vector3(-662.84f, -2361.862f, 13f);
        this.LuxuryCarheading = -41f;
        this.OutsideBouncerPos_1 = new Vector3(-659.63f, -2370.951f, 14f);
        this.OutsideBouncerRot_1 = 51f;
        this.OutsideBouncerPos_2 = new Vector3(-658.1799f, -2367.69f, 14f);
        this.OutsideBouncerRot_2 = -23f;
        this.WaitingPedPosStart = new Vector3(-657.88f, -2365.5f, 14f);
        this.WaitingPedRot = 150f;
        this.FenceRot = 85f;
      }
      if (this.NightClubLoc != 9)
        return;
      this.Entry = new Vector3(194.3f, -3276.033f, 4.5f);
      this.Entry2 = new Vector3(247.68f, -3315.9f, 5f);
      this.GarageVehicleSpawnOutside = new Vector3(235.005f, -3324.4f, 4.5f);
      if (this.GarageB != (Blip) null)
        this.GarageB.Position = this.GarageVehicleSpawnOutside;
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Position = this.Entry;
      this.OutsideClubnamePos = new Vector3(195.9f, -3305.7f, 8f);
      this.OutsideClubnameHeading = -90f;
      this.LuxuryCarPos = new Vector3(193.4f, -3285.26f, 5.24f);
      this.LuxuryCarheading = -179f;
      this.OutsideBouncerPos_1 = new Vector3(195.3195f, -3277.091f, 6f);
      this.OutsideBouncerRot_1 = 93f;
      this.OutsideBouncerPos_2 = new Vector3(195.0919f, -3274.696f, 6f);
      this.OutsideBouncerRot_2 = 5f;
      this.WaitingPedPosStart = new Vector3(194.4505f, -3273.073f, 6f);
      this.WaitingPedRot = -175f;
      this.FenceRot = 85f;
    }

    private void SetupMarker()
    {
      this.TowerBlip = World.CreateBlip(this.Entry);
      this.TowerBlip.Sprite = BlipSprite.NightclubProperty;
      this.TowerBlip.Name = "After Hours Business";
      this.TowerBlip.IsShortRange = true;
      this.GarageB = World.CreateBlip(this.GarageVehicleSpawnOutside);
      this.GarageB.Sprite = BlipSprite.Garage;
      this.GarageB.Name = "AHB Garage";
      this.GarageB.IsShortRange = true;
    }

    public GTA.Model RequestModel(string Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(10000);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(VehicleHash Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(10000);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(PedHash Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(10000);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public GTA.Model RequestModel(int Name)
    {
      GTA.Model model = new GTA.Model(Name);
      model.Request(10000);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(50);
        return model;
      }
      model.MarkAsNoLongerNeeded();
      return model;
    }

    public float Get_RGB(Color C, string argb)
    {
      if (argb.Equals("a"))
        return (float) C.A;
      if (argb.Equals("r"))
        return (float) C.R;
      if (argb.Equals("g"))
        return (float) C.G;
      return argb.Equals("b") ? (float) C.B : (float) byte.MaxValue;
    }

    public void SetLivery(string Weapon, string Component) => Function.Call((Hash) 11521724316029606125, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component), (InputArgument) this.LiveryColor);

    public int GetLivery(string Weapon, string Component) => Function.Call<int>((Hash) 17340547693307858733, (InputArgument) Function.Call<Ped>(Hash._0xD80958FC74E988A6), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Weapon), (InputArgument) Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) Component));

    public bool CheckWeaponCamo(Weapon Weapon)
    {
      bool flag = false;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        flag = true;
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        flag = true;
      return flag;
    }

    public void SetWeaponLivery(Weapon Weapon)
    {
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        this.SetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        this.SetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        this.SetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        this.SetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        this.SetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        this.SetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (!Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        return;
      this.SetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
    }

    public int GetWeaponLivery(Weapon Weapon)
    {
      int num = 0;
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo02))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo03))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo04))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo05))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo06))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo07))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo08))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo09))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2Camo10))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.AssaultRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_ASSAULTRIFLE_MK2", "COMPONENT_ASSAULTRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleClip01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo02))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo03))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo04))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo05))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo06))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo07))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo08))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo09))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2Camo10))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.BullpupRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_BULLPUPRIFLE_MK2", "COMPONENT_BULLPUPRIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo02))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo03))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo04))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo05))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo06))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo07))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo08))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo09))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2Camo10))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CarbineRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_CARBINERIFLE_MK2", "COMPONENT_CARBINERIFLE_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo02))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo03))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo04))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo05))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo06))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo07))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo08))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo09))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2Camo10))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.CombatMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_COMBATMG_MK2", "COMPONENT_COMBATMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo02))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo0))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo03))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo04))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo05))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo06))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo07))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo09))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2Camo10))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.HeavySniperMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_HEAVYSNIPER_MK2", "COMPONENT_HEAVYSNIPER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo02))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo03))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo04))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo05))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo06))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo07))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo08))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo09))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2Camo10))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.MarksmanRifleMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_MARKSMANRIFLE_MK2", "COMPONENT_MARKSMANRIFLE_MK2_CAMO_IND_01");
      int livery;
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo02))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_02");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo03))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_03");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo04))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_04");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo05))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_05");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo06))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_06");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo07))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_07");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo08))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_08");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo09))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_09");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2Camo10))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_10");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PistolMk2CamoIndependence01))
      {
        livery = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01_SLIDE");
        num = this.GetLivery("WEAPON_PISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_IND_01");
      }
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo02))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo03))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo04))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo05))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo06))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo07))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo08))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo09))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2Camo10))
        num = this.GetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.PumpShotgunMk2CamoIndependence01))
        this.SetLivery("WEAPON_PUMPSHOTGUN_MK2", "COMPONENT_PUMPSHOTGUN_MK2_CAMO_IND_01r");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo02))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo03))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo04))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo05))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo06))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo07))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo08))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo09))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2Camo10))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.RevolverMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_REVOLVER_MK2", "COMPONENT_REVOLVER_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo02))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo03))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo04))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo05))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo06))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo07))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo08))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo09))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2Camo10))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SMGMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SMG_MK2", "COMPONENT_SMG_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoSlide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_PISTOL_MK2_CAMO_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo02Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_02_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo03Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_03_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo04Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_04_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo05Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_05_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo06Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_06_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo07Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_07_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo08Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_08_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo09Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_09_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2Camo10Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_10_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01");
      if (Weapon.IsComponentActive(WeaponComponent.SNSPistolMk2CamoIndependence01Slide))
        num = this.GetLivery("WEAPON_SNSPISTOL_MK2", "COMPONENT_SNSPISTOL_MK2_CAMO_IND_01_SLIDE");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo02))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_02");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo03))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_03");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo04))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_04");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo05))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_05");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo06))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_06");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo07))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_07");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo08))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_08");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo09))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_09");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2Camo10))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_10");
      if (Weapon.IsComponentActive(WeaponComponent.SpecialCarbineMk2CamoIndependence01))
        num = this.GetLivery("WEAPON_SPECIALCARBINE_MK2", "COMPONENT_SPECIALCARBINE_MK2_CAMO_IND_01");
      return num;
    }

    private void SetupWeapons()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Classic Black");
      items1.Add((object) "Classic Gray");
      items1.Add((object) "Classic Two-Tone");
      items1.Add((object) "Classic White");
      items1.Add((object) "Classic Beige");
      items1.Add((object) "Classic Green");
      items1.Add((object) "Classic Blue");
      items1.Add((object) "Classic Earth");
      items1.Add((object) "Classic Brown & Black");
      items1.Add((object) "Red Contrast");
      items1.Add((object) "Blue Contrast");
      items1.Add((object) "Yellow Contrast");
      items1.Add((object) "Orange Contrast");
      items1.Add((object) "Bold Pink");
      items1.Add((object) "Bold Purple & Yellow");
      items1.Add((object) "Bold Orange");
      items1.Add((object) "Bold Green & Purple");
      items1.Add((object) "Bold Red & Black");
      items1.Add((object) "Bold Green & Black");
      items1.Add((object) "Bold Cyan & Black");
      items1.Add((object) "Bold Yellow & Black");
      items1.Add((object) "Bold Red & White");
      items1.Add((object) "Bold Blue & White");
      items1.Add((object) "Metallic Gold");
      items1.Add((object) "Metallic Platinum");
      items1.Add((object) "Metallic Gray & Lilac");
      items1.Add((object) "Metallic Purple & Lime");
      items1.Add((object) "Metallic Red");
      items1.Add((object) "Metallic Green");
      items1.Add((object) "Metallic Blue");
      items1.Add((object) "Metallic White & Aqua");
      items1.Add((object) "Metallic Red & Yellow");
      List<object> items2 = new List<object>();
      items2.Add((object) "Grey");
      items2.Add((object) "Dark Grey");
      items2.Add((object) "Black");
      items2.Add((object) "White");
      items2.Add((object) "Blue ");
      items2.Add((object) "Cyan");
      items2.Add((object) "Aqua");
      items2.Add((object) "Cool Blue");
      items2.Add((object) "Dark Blue");
      items2.Add((object) "Royal Blue");
      items2.Add((object) "Plum");
      items2.Add((object) "Dark Purple");
      items2.Add((object) "Purple");
      items2.Add((object) "Red");
      items2.Add((object) "Wine Red");
      items2.Add((object) "Magenta");
      items2.Add((object) "Pink ");
      items2.Add((object) "Salmon");
      items2.Add((object) "Hot Pink");
      items2.Add((object) "Rust Orange ");
      items2.Add((object) "Brown");
      items2.Add((object) "Earth");
      items2.Add((object) "Orange");
      items2.Add((object) "Light Orange");
      items2.Add((object) "Dark Yellow");
      items2.Add((object) "Yellow");
      items2.Add((object) "Light Brown");
      items2.Add((object) "Lime Green");
      items2.Add((object) "Olive");
      items2.Add((object) "Moss");
      items2.Add((object) "Turquoise");
      items2.Add((object) "Dark Green");
      float CPrice = 34000f;
      List<object> Mk2Weapons = new List<object>();
      Mk2Weapons.Add((object) WeaponHash.AssaultrifleMk2);
      Mk2Weapons.Add((object) WeaponHash.BullpupRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CarbineRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.CombatMGMk2);
      Mk2Weapons.Add((object) WeaponHash.HeavySniperMk2);
      Mk2Weapons.Add((object) WeaponHash.MarksmanRifleMk2);
      Mk2Weapons.Add((object) WeaponHash.PistolMk2);
      Mk2Weapons.Add((object) WeaponHash.PumpShotgunMk2);
      Mk2Weapons.Add((object) WeaponHash.RevolverMk2);
      Mk2Weapons.Add((object) WeaponHash.SMGMk2);
      Mk2Weapons.Add((object) WeaponHash.SNSPistolMk2);
      Mk2Weapons.Add((object) WeaponHash.SpecialCarbineMk2);
      List<object> Components = new List<object>();
      Components.Add((object) WeaponComponent.AssaultRifleClip01);
      Components.Add((object) WeaponComponent.AssaultRifleClip02);
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Mk2 Weapons (Advanced)");
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem W = new UIMenuListItem("Weapon : ", Mk2Weapons, 0);
      uiMenu1.AddItem((UIMenuItem) W);
      UIMenuListItem C = new UIMenuListItem("Component  : ", Components, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      UIMenuItem Enable = new UIMenuItem("Enable Component : $" + CPrice.ToString("N"));
      uiMenu1.AddItem(Enable);
      UIMenuItem DIsable = new UIMenuItem("Disable Component");
      uiMenu1.AddItem(DIsable);
      UIMenuItem uiMenuItem1 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem1);
      UIMenuListItem WT = new UIMenuListItem("Tint ", items1, 0);
      uiMenu1.AddItem((UIMenuItem) WT);
      UIMenuItem getTintAV = new UIMenuItem("Buy Tint: $10,000");
      uiMenu1.AddItem(getTintAV);
      UIMenuItem uiMenuItem2 = new UIMenuItem("-------------------------------------------------------------");
      uiMenu1.AddItem(uiMenuItem2);
      UIMenuListItem WT2 = new UIMenuListItem("Livery Tint ", items2, 0);
      uiMenu1.AddItem((UIMenuItem) WT2);
      UIMenuItem getTintAV2 = new UIMenuItem("Buy Livery Tint: $10,000");
      uiMenu1.AddItem(getTintAV2);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == W)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__0 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__0, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
          if (target1((CallSite) p1, obj1))
          {
            Components.Clear();
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__2 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__361.\u003C\u003Ep__2 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__2, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            foreach (WeaponComponent weaponComponent in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) weaponComponent.GetHashCode()))
                  Components.Add((object) weaponComponent);
              }
              catch
              {
              }
            }
          }
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__4.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p4 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__4;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__3, Components[C.Index]);
          string str = target2((CallSite) p4, obj2);
          if (str.Contains("Muzzle"))
          {
            CPrice = 45700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
        }
        if (item != C)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__361.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, string> target = Class1.\u003C\u003Eo__361.\u003C\u003Ep__6.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, string>> p6 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__6;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__361.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj = Class1.\u003C\u003Eo__361.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__5, Components[C.Index]);
        string str1 = target((CallSite) p6, obj);
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Barrel"))
        {
          CPrice = 48700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Sights"))
        {
          CPrice = 24700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Tracer"))
        {
          CPrice = 42700f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("FMJ"))
        {
          CPrice = 73000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ArmourPiercing"))
        {
          CPrice = 63000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Incediary"))
        {
          CPrice = 49000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("ClipExplosive"))
        {
          CPrice = 115450f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Grip"))
        {
          CPrice = 14080f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Supp"))
        {
          CPrice = 40250f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Clip02"))
        {
          CPrice = 60000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo01"))
        {
          CPrice = 40000f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo02"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo03"))
        {
          CPrice = 43500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo04"))
        {
          CPrice = 45500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo05"))
        {
          CPrice = 49500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo06"))
        {
          CPrice = 75500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo07"))
        {
          CPrice = 51500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo08"))
        {
          CPrice = 53500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo09"))
        {
          CPrice = 55500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Camo10"))
        {
          CPrice = 60500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
        if (str1.Contains("Independence"))
        {
          CPrice = 100500f;
          Enable.Text = "Enable Component : $" + CPrice.ToString("N");
        }
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTintAV2)
        {
          this.LiveryColor = WT2.Index;
          if (Game.Player.Character.Weapons.Current != null)
            this.SetWeaponLivery(Game.Player.Character.Weapons.Current);
        }
        if (item == getTintAV)
        {
          try
          {
            int index1 = WT.Index;
            Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.Weapons.Current.GetHashCode(), (InputArgument) index1);
            Game.Player.Character.Weapons.Current.Tint = (WeaponTint) index1;
            Game.Player.Money -= 10000;
          }
          catch (Exception ex)
          {
            UI.Notify("Error");
          }
        }
        if (item == Enable)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p8 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__7, Components[C.Index]);
          string str = target1((CallSite) p8, obj1);
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Barrel"))
          {
            CPrice = 48700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Sights"))
          {
            CPrice = 24700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Tracer"))
          {
            CPrice = 42700f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("FMJ"))
          {
            CPrice = 73000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ArmourPiercing"))
          {
            CPrice = 63000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Incediary"))
          {
            CPrice = 49000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("ClipExplosive"))
          {
            CPrice = 115450f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Grip"))
          {
            CPrice = 14080f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Supp"))
          {
            CPrice = 40250f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Clip02"))
          {
            CPrice = 60000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo01"))
          {
            CPrice = 40000f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo02"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo03"))
          {
            CPrice = 43500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo04"))
          {
            CPrice = 45500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo05"))
          {
            CPrice = 49500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo06"))
          {
            CPrice = 75500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo07"))
          {
            CPrice = 51500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo08"))
          {
            CPrice = 53500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo09"))
          {
            CPrice = 55500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Camo10"))
          {
            CPrice = 60500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if (str.Contains("Independence"))
          {
            CPrice = 100500f;
            Enable.Text = "Enable Component : $" + CPrice.ToString("N");
          }
          if ((double) Game.Player.Money >= (double) CPrice)
          {
            Game.Player.Money -= (int) CPrice;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__10 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__361.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__10.Target;
            // ISSUE: reference to a compiler-generated field
            CallSite<Func<CallSite, object, bool>> p10 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__10;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__361.\u003C\u003Ep__9 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            object obj2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__9, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
            if (target2((CallSite) p10, obj2))
            {
              if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) W.IndexToItem(W.Index).GetHashCode(), (InputArgument) C.IndexToItem(C.Index).GetHashCode()))
              {
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__11 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__361.\u003C\u003Ep__11 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__361.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__11, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__12 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__361.\u003C\u003Ep__12 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
                  {
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                    CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
                  }));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__361.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__12, Game.Player.Character.Weapons.Current, Components[C.Index], true);
              }
            }
          }
        }
        if (item != DIsable)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__361.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target3 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__14.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p14 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__14;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__13 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__361.\u003C\u003Ep__13 = CallSite<Func<CallSite, WeaponCollection, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "HasWeapon", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj3 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__13, Game.Player.Character.Weapons, Mk2Weapons[W.Index]);
        if (target3((CallSite) p14, obj3))
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__19.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool>> p19 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__19;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, bool, object> target2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__18.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, bool, object>> p18 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__18;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__17 = CallSite<Func<CallSite, System.Type, Hash, object, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "Call", (IEnumerable<System.Type>) new System.Type[1]
            {
              typeof (bool)
            }, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, System.Type, Hash, object, object, object> target4 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__17.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, System.Type, Hash, object, object, object>> p17 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__17;
          System.Type type = typeof (Function);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__15, Mk2Weapons[W.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "GetHashCode", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj2 = Class1.\u003C\u003Eo__361.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__16, Components[C.Index]);
          object obj4 = target4((CallSite) p17, type, Hash._0x5CEE3DF569CECAB0, obj1, obj2);
          object obj5 = target2((CallSite) p18, obj4, true);
          if (target1((CallSite) p19, obj5))
          {
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__20 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__361.\u003C\u003Ep__20 = CallSite<Action<CallSite, WeaponCollection, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Select", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__20, Game.Player.Character.Weapons, Mk2Weapons[W.Index], true);
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__361.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__361.\u003C\u003Ep__21 = CallSite<Action<CallSite, Weapon, object, bool>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "SetComponent", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[3]
              {
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
                CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
              }));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__361.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__361.\u003C\u003Ep__21, Game.Player.Character.Weapons.Current, Components[C.Index], false);
          }
        }
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Scifi Weapons");
      this.GUIMenus.Add(uiMenu2);
      UIMenu menu = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Mk2 Weapons");
      this.GUIMenus.Add(menu);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.GunlockerMenu, "Normal Weapons");
      this.GUIMenus.Add(uiMenu3);
      List<object> items3 = new List<object>();
      for (int index = 0; index < this.Tintscount; ++index)
        items3.Add((object) index);
      this.MK2Pumpshotgun = this.modMenuPool.AddSubMenu(menu, "MK2 Pump Shotgun");
      this.GUIMenus.Add(this.MK2Pumpshotgun);
      this.MK2SNSPistol = this.modMenuPool.AddSubMenu(menu, "MK2 SNS Pistol");
      this.GUIMenus.Add(this.MK2SNSPistol);
      this.MK2Revolver = this.modMenuPool.AddSubMenu(menu, "MK2 Revolver");
      this.GUIMenus.Add(this.MK2Revolver);
      this.Mk2SpecialCarbine = this.modMenuPool.AddSubMenu(menu, "MK2 Special Carbine");
      this.GUIMenus.Add(this.Mk2SpecialCarbine);
      this.MK2Bullpup = this.modMenuPool.AddSubMenu(menu, "MK2 Bullpup Rifle");
      this.GUIMenus.Add(this.MK2Bullpup);
      this.MK2MarksmanRifle = this.modMenuPool.AddSubMenu(menu, "MK2 Marksmans Rifle");
      this.GUIMenus.Add(this.MK2MarksmanRifle);
      this.MK2Pistol = this.modMenuPool.AddSubMenu(menu, "MK2 Pistol");
      this.GUIMenus.Add(this.MK2Pistol);
      this.MK2SMG = this.modMenuPool.AddSubMenu(menu, "MK2 SMG");
      this.GUIMenus.Add(this.MK2SMG);
      this.MK2LMG = this.modMenuPool.AddSubMenu(menu, "MK2 LMG");
      this.GUIMenus.Add(this.MK2LMG);
      this.MK2Carbine = this.modMenuPool.AddSubMenu(menu, "MK2 Carbine");
      this.GUIMenus.Add(this.MK2Carbine);
      this.MK2AssaultRifle = this.modMenuPool.AddSubMenu(menu, "MK2 Assault Rifle");
      this.GUIMenus.Add(this.MK2AssaultRifle);
      this.MK2Sniper = this.modMenuPool.AddSubMenu(menu, "MK2 Sniper");
      this.GUIMenus.Add(this.MK2Sniper);
      UIMenuItem mk2ShotgunP = new UIMenuItem("MK2 Pump Shotgun: $75,000");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunP);
      UIMenuItem mk2Shotgunclip = new UIMenuItem("Normal Shells : $0");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip);
      UIMenuItem mk2Shotgunclip1 = new UIMenuItem("Dragon's Breath Shells : $65,200");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip1);
      UIMenuItem mk2Shotgunclip3 = new UIMenuItem("Flechette Shells: $75,140");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip3);
      UIMenuItem mk2Shotgunclip2 = new UIMenuItem("Steel Buckshot Shells: $96,645");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip2);
      UIMenuItem mk2Shotgunclip4 = new UIMenuItem("Explosive Shells: $145,850");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunclip4);
      UIMenuItem mk2Shotgunsights = new UIMenuItem("Holographic Sight: $29,260");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights);
      UIMenuItem mk2Shotgunsights2 = new UIMenuItem("Small Scope: $39,920");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights2);
      UIMenuItem mk2Shotgunsights3 = new UIMenuItem("Medium Scope: $50,785");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunsights3);
      UIMenuItem mk2Shotgunflashlight = new UIMenuItem("Flashlight: $10,500");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunflashlight);
      UIMenuItem mk2ShotgunSuppressor = new UIMenuItem("Suppressor: $45,860");
      this.MK2Pumpshotgun.AddItem(mk2ShotgunSuppressor);
      UIMenuItem mk2Shotgunmuzzle = new UIMenuItem("Muzzle Brake: $37,650");
      this.MK2Pumpshotgun.AddItem(mk2Shotgunmuzzle);
      UIMenuListItem list1 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Pumpshotgun.AddItem((UIMenuItem) list1);
      UIMenuItem getTint1 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pumpshotgun.AddItem(getTint1);
      UIMenuItem mk2Snspistol = new UIMenuItem("MK2 SNS Pistol: $35,000");
      this.MK2SNSPistol.AddItem(mk2Snspistol);
      UIMenuItem mk2Snspistolclipn = new UIMenuItem("Default Clip: $8,000");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipn);
      UIMenuItem mk2Snspistolclipe = new UIMenuItem("Extended Clip: $18,300");
      this.MK2SNSPistol.AddItem(mk2Snspistolclipe);
      UIMenuItem mk2Snspistolclip1 = new UIMenuItem("Tracer Rounds: $34,320");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip1);
      UIMenuItem mk2Snspistolclip2 = new UIMenuItem("Incendiary Rounds: $41,700");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip2);
      UIMenuItem mk2Snspistolclip3 = new UIMenuItem("Hollow Point Rounds : $47,580");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip3);
      UIMenuItem mk2Snspistolclip4 = new UIMenuItem("Full Metal Jacket Rounds: $62,400");
      this.MK2SNSPistol.AddItem(mk2Snspistolclip4);
      UIMenuItem mk2Snspistolflash = new UIMenuItem("Flashlight: $7,500");
      this.MK2SNSPistol.AddItem(mk2Snspistolflash);
      UIMenuItem mk2Snspistolscope1 = new UIMenuItem("Mounted Scope: $16,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolscope1);
      UIMenuItem mk2Snspistolsuppressor = new UIMenuItem("Suppressor: $28,750");
      this.MK2SNSPistol.AddItem(mk2Snspistolsuppressor);
      UIMenuItem mk2Snspistolcomp = new UIMenuItem("Compensator: $21,250");
      this.MK2SNSPistol.AddItem(mk2Snspistolcomp);
      UIMenuListItem list2 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2SNSPistol.AddItem((UIMenuItem) list2);
      UIMenuItem getTint2 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SNSPistol.AddItem(getTint2);
      UIMenuItem mk2Revolver = new UIMenuItem("MK2 Revolver: $35,000");
      this.MK2Revolver.AddItem(mk2Revolver);
      UIMenuItem mk2Revolverclip = new UIMenuItem("Normal Rounds: $0");
      this.MK2Revolver.AddItem(mk2Revolverclip);
      UIMenuItem mk2Revolverclip1 = new UIMenuItem("Tracer Rounds: $31,460");
      this.MK2Revolver.AddItem(mk2Revolverclip1);
      UIMenuItem mk2Revolverclip2 = new UIMenuItem("Incendiary Rounds: $38,225");
      this.MK2Revolver.AddItem(mk2Revolverclip2);
      UIMenuItem mk2Revolverclip3 = new UIMenuItem("Hollow Point Rounds: $43,615");
      this.MK2Revolver.AddItem(mk2Revolverclip3);
      UIMenuItem mk2Revolverclip4 = new UIMenuItem("Full Metal Jacket Rounds: $57,200");
      this.MK2Revolver.AddItem(mk2Revolverclip4);
      UIMenuItem mk2Revolversights = new UIMenuItem("Holographic Sight: $16,250");
      this.MK2Revolver.AddItem(mk2Revolversights);
      UIMenuItem mk2Revolversights1 = new UIMenuItem("Small Scope: $25,450");
      this.MK2Revolver.AddItem(mk2Revolversights1);
      UIMenuItem mk2Revolverflashlight = new UIMenuItem("Flashlight: $7,500");
      this.MK2Revolver.AddItem(mk2Revolverflashlight);
      UIMenuItem mk2RevolverComp = new UIMenuItem("Compensator: $21,250");
      this.MK2Revolver.AddItem(mk2RevolverComp);
      UIMenuListItem list3 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Revolver.AddItem((UIMenuItem) list3);
      UIMenuItem getTint3 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Revolver.AddItem(getTint3);
      UIMenuItem mk2SCarbine = new UIMenuItem("MK2 Special Carbine: $65,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbine);
      UIMenuItem mk2SCarbineclip = new UIMenuItem("Default Clip: $5,000");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip);
      UIMenuItem mk2SCarbineclip1 = new UIMenuItem("Extended Clip: $26,450");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip1);
      UIMenuItem mk2SCarbineclip2 = new UIMenuItem("Tracer Rounds: $61,465");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip2);
      UIMenuItem mk2SCarbineclip3 = new UIMenuItem("Incendiary Rounds : $70,950");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip3);
      UIMenuItem mk2SCarbineclip4 = new UIMenuItem("Armor Piercing Rounds : $90,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip4);
      UIMenuItem mk2SCarbineclip5 = new UIMenuItem("Full Metal Jacket Rounds : $104,775");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineclip5);
      UIMenuItem mk2SCarbineflash = new UIMenuItem("Flashlight: $10,500");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbineflash);
      UIMenuItem mk2SCarbinesight1 = new UIMenuItem("Holographic Sight: $19,600");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight1);
      UIMenuItem mk2SCarbinesight2 = new UIMenuItem("Small Scope: $23,730");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight2);
      UIMenuItem mk2SCarbinesight3 = new UIMenuItem("Large Scope: $34,020");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesight3);
      UIMenuItem mk2SCarbinesupressor = new UIMenuItem("Suppressor : $40,250");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinesupressor);
      UIMenuItem mk2SCarbinemuzzle = new UIMenuItem("Muzzle : $29,750");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinemuzzle);
      UIMenuItem mk2SCarbinegrip = new UIMenuItem("Grip : $14,080");
      this.Mk2SpecialCarbine.AddItem(mk2SCarbinegrip);
      UIMenuListItem list4 = new UIMenuListItem("Tint ", items3, 0);
      this.Mk2SpecialCarbine.AddItem((UIMenuItem) list4);
      UIMenuItem getTint4 = new UIMenuItem("Buy Tint: $10,000");
      this.Mk2SpecialCarbine.AddItem(getTint4);
      UIMenuItem mk2Bullpup = new UIMenuItem("MK2 Bullpup Rifle: $60,000");
      this.MK2Bullpup.AddItem(mk2Bullpup);
      UIMenuItem mk2Bullpupclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2Bullpup.AddItem(mk2Bullpupclip1);
      UIMenuItem mk2Bullpupclip2 = new UIMenuItem("Extended Clip : $22,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip2);
      UIMenuItem mk2Bullpupclip3 = new UIMenuItem("Tracer Rounds : $44,350");
      this.MK2Bullpup.AddItem(mk2Bullpupclip3);
      UIMenuItem mk2Bullpupclip4 = new UIMenuItem("Incendiary Rounds : $52,100");
      this.MK2Bullpup.AddItem(mk2Bullpupclip4);
      UIMenuItem mk2Bullpupclip5 = new UIMenuItem("Armor Piercing Rounds  : $87,320");
      this.MK2Bullpup.AddItem(mk2Bullpupclip5);
      UIMenuItem mk2Bullpupclip6 = new UIMenuItem("Full Metal Jacket Rounds : $77,490");
      this.MK2Bullpup.AddItem(mk2Bullpupclip6);
      UIMenuItem mk2Bullpupflash = new UIMenuItem("Flashlight  : $10,500");
      this.MK2Bullpup.AddItem(mk2Bullpupflash);
      UIMenuItem mk2Bullpupsight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2Bullpup.AddItem(mk2Bullpupsight1);
      UIMenuItem mk2Bullpupsight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2Bullpup.AddItem(mk2Bullpupsight2);
      UIMenuItem mk2Bullpupsight3 = new UIMenuItem("Medium Scope : $34,020");
      this.MK2Bullpup.AddItem(mk2Bullpupsight3);
      UIMenuItem mk2BullpupBarrel = new UIMenuItem("Heavy Barrel : $49,000");
      this.MK2Bullpup.AddItem(mk2BullpupBarrel);
      UIMenuItem mk2BullpupGrip = new UIMenuItem("Grip : $14,080");
      this.MK2Bullpup.AddItem(mk2BullpupGrip);
      UIMenuItem mk2Bullpupmuzzle = new UIMenuItem("Muzzle  : $29,750");
      this.MK2Bullpup.AddItem(mk2Bullpupmuzzle);
      UIMenuItem mk2BullpupSuppressor = new UIMenuItem("Suppressor  : $40,250");
      this.MK2Bullpup.AddItem(mk2BullpupSuppressor);
      UIMenuListItem list5 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Bullpup.AddItem((UIMenuItem) list5);
      UIMenuItem getTint5 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Bullpup.AddItem(getTint5);
      UIMenuItem mk2marksman = new UIMenuItem("MK2 Marksman Rifle : $80,000");
      this.MK2MarksmanRifle.AddItem(mk2marksman);
      UIMenuItem mk2marksmanclip1 = new UIMenuItem("Default Clip : $5,000");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip1);
      UIMenuItem mk2marksmanclip2 = new UIMenuItem("Extended Clip : $26,850");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip2);
      UIMenuItem mk2marksmanclip3 = new UIMenuItem("Tracer Rounds : $49,775");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip3);
      UIMenuItem mk2marksmanclip4 = new UIMenuItem("Incendiary Rounds : $57,295");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip4);
      UIMenuItem mk2marksmanclip5 = new UIMenuItem("Armor Piercing Rounds  : $73,560");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip5);
      UIMenuItem mk2marksmanclip6 = new UIMenuItem("Full Metal Jacket Rounds : $85,570");
      this.MK2MarksmanRifle.AddItem(mk2marksmanclip6);
      UIMenuItem mk2marksmanflash = new UIMenuItem("Flashlight  : $11,250");
      this.MK2MarksmanRifle.AddItem(mk2marksmanflash);
      UIMenuItem mk2marksmansight1 = new UIMenuItem("Holographic Sight  : $11,485");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight1);
      UIMenuItem mk2marksmansight2 = new UIMenuItem("Large Scope  : $17,870");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight2);
      UIMenuItem mk2marksmansight3 = new UIMenuItem("Zoom Scope  : $27,150");
      this.MK2MarksmanRifle.AddItem(mk2marksmansight3);
      UIMenuItem mk2marksmanGrip = new UIMenuItem("Grip  : $14,080");
      this.MK2MarksmanRifle.AddItem(mk2marksmanGrip);
      UIMenuItem mk2marksmanmuzzle = new UIMenuItem("Muzzle  : $44,620");
      this.MK2MarksmanRifle.AddItem(mk2marksmanmuzzle);
      UIMenuItem mk2marksmanSuppressor = new UIMenuItem("Suppressor  : $60,375");
      this.MK2MarksmanRifle.AddItem(mk2marksmanSuppressor);
      UIMenuListItem list6 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2MarksmanRifle.AddItem((UIMenuItem) list6);
      UIMenuItem getTint6 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2MarksmanRifle.AddItem(getTint6);
      UIMenuItem mk2pistol = new UIMenuItem("MK2 Pistol : $20,000");
      this.MK2Pistol.AddItem(mk2pistol);
      UIMenuItem mk2pistolClip = new UIMenuItem("Default Clip : $0");
      this.MK2Pistol.AddItem(mk2pistolClip);
      UIMenuItem mk2pistolClip1 = new UIMenuItem("Extended Clip : $15,250");
      this.MK2Pistol.AddItem(mk2pistolClip1);
      UIMenuItem mk2pistolClip2 = new UIMenuItem("Tracer Rounds : $32,850");
      this.MK2Pistol.AddItem(mk2pistolClip2);
      UIMenuItem mk2pistolClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2Pistol.AddItem(mk2pistolClip3);
      UIMenuItem mk2pistolClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2Pistol.AddItem(mk2pistolClip4);
      UIMenuItem mk2pistolClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2Pistol.AddItem(mk2pistolClip5);
      UIMenuItem mk2pistolSight1 = new UIMenuItem("Mounted Scope : $16,250");
      this.MK2Pistol.AddItem(mk2pistolSight1);
      UIMenuItem mk2pistolflash = new UIMenuItem("Flashlight : $7,500");
      this.MK2Pistol.AddItem(mk2pistolflash);
      UIMenuItem mk2pistolsupp = new UIMenuItem("Suppressor : $28,750");
      this.MK2Pistol.AddItem(mk2pistolsupp);
      UIMenuItem mk2pistolcomp = new UIMenuItem("Compensator : $21,250");
      this.MK2Pistol.AddItem(mk2pistolcomp);
      UIMenuListItem list7 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Pistol.AddItem((UIMenuItem) list7);
      UIMenuItem getTint7 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Pistol.AddItem(getTint7);
      UIMenuItem mk2smg = new UIMenuItem("MK2 SMG : $25,000");
      this.MK2SMG.AddItem(mk2smg);
      UIMenuItem mk2smgclip = new UIMenuItem("Default Clip : $0");
      this.MK2SMG.AddItem(mk2smgclip);
      UIMenuItem mk2smgclip1 = new UIMenuItem("Extended Clip : $18,300");
      this.MK2SMG.AddItem(mk2smgclip1);
      UIMenuItem mk2smgClip2 = new UIMenuItem("Tracer Rounds : $28,600");
      this.MK2SMG.AddItem(mk2smgClip2);
      UIMenuItem mk2smgClip3 = new UIMenuItem("Incendiary Rounds : $34,750");
      this.MK2SMG.AddItem(mk2smgClip3);
      UIMenuItem mk2smgClip4 = new UIMenuItem("Hollow Point Rounds : $39,650");
      this.MK2SMG.AddItem(mk2smgClip4);
      UIMenuItem mk2smgClip5 = new UIMenuItem("Full Metal Jacket Rounds  : $52,000");
      this.MK2SMG.AddItem(mk2smgClip5);
      this.MK2SMG.AddItem(new UIMenuItem("Flashlight : $7,500"));
      UIMenuItem mk2smgsight1 = new UIMenuItem("Holographic Sight : $15,200");
      this.MK2SMG.AddItem(mk2smgsight1);
      UIMenuItem mk2smgsight2 = new UIMenuItem("Small Scope: $19,950");
      this.MK2SMG.AddItem(mk2smgsight2);
      UIMenuItem mk2smgsight3 = new UIMenuItem("Holographic Sight : $24,100");
      this.MK2SMG.AddItem(mk2smgsight3);
      UIMenuItem mk2smgsupp = new UIMenuItem("Suppressor  : $34,500");
      this.MK2SMG.AddItem(mk2smgsupp);
      UIMenuItem mk2smgmuzzle = new UIMenuItem("Muzzle : $25,500");
      this.MK2SMG.AddItem(mk2smgmuzzle);
      UIMenuItem mk2smgbarrel = new UIMenuItem("Barrel : $22,500");
      this.MK2SMG.AddItem(mk2smgbarrel);
      UIMenuListItem list8 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2SMG.AddItem((UIMenuItem) list8);
      UIMenuItem getTint8 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2SMG.AddItem(getTint8);
      UIMenuItem mk2carbine = new UIMenuItem("MK2 Carbine : $35,000");
      this.MK2Carbine.AddItem(mk2carbine);
      UIMenuItem mk2carbineClip1 = new UIMenuItem("Default Clip: $0");
      this.MK2Carbine.AddItem(mk2carbineClip1);
      UIMenuItem mk2carbineClip2 = new UIMenuItem("Extended Clip: $25,925");
      this.MK2Carbine.AddItem(mk2carbineClip2);
      UIMenuItem mk2carbineClip3 = new UIMenuItem("Tracer Rounds: $44,700");
      this.MK2Carbine.AddItem(mk2carbineClip3);
      UIMenuItem mk2carbineClip4 = new UIMenuItem("Incendiary Rounds : $51,600");
      this.MK2Carbine.AddItem(mk2carbineClip4);
      UIMenuItem mk2carbineClip5 = new UIMenuItem("Armor Piercing Rounds: $66,000 ");
      this.MK2Carbine.AddItem(mk2carbineClip5);
      UIMenuItem mk2carbineClip6 = new UIMenuItem("Full Metal Jacket Rounds: $76,200 ");
      this.MK2Carbine.AddItem(mk2carbineClip6);
      UIMenuItem mk2carbineGrip = new UIMenuItem("Grip: $14,080 ");
      this.MK2Carbine.AddItem(mk2carbineGrip);
      UIMenuItem mk2carbineFlash = new UIMenuItem("Flashlight: $10,500 ");
      this.MK2Carbine.AddItem(mk2carbineFlash);
      UIMenuItem mk2carbineSight1 = new UIMenuItem("Holographic Sight: $19,600  ");
      this.MK2Carbine.AddItem(mk2carbineSight1);
      UIMenuItem mk2carbineSight2 = new UIMenuItem("Small Scope: $23,730 ");
      this.MK2Carbine.AddItem(mk2carbineSight2);
      UIMenuItem mk2carbineSight3 = new UIMenuItem("Large Scope: $34,020 ");
      this.MK2Carbine.AddItem(mk2carbineSight3);
      UIMenuItem mk2carbineSupp = new UIMenuItem("Suppressor: $40,250 ");
      this.MK2Carbine.AddItem(mk2carbineSupp);
      UIMenuListItem list9 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Carbine.AddItem((UIMenuItem) list9);
      UIMenuItem getTint9 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Carbine.AddItem(getTint9);
      UIMenuItem mk2AR = new UIMenuItem("MK2 Assault Rifle : $30,000");
      this.MK2AssaultRifle.AddItem(mk2AR);
      UIMenuItem mk2ARClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2AssaultRifle.AddItem(mk2ARClip1);
      UIMenuItem mk2ARClip2 = new UIMenuItem("Extended Clip: $22,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip2);
      UIMenuItem mk2ARClip3 = new UIMenuItem("Tracer Rounds  : $42,700");
      this.MK2AssaultRifle.AddItem(mk2ARClip3);
      UIMenuItem mk2ARClip4 = new UIMenuItem("Incendiary Rounds  : $49,400");
      this.MK2AssaultRifle.AddItem(mk2ARClip4);
      UIMenuItem mk2ARClip5 = new UIMenuItem("Armor Piercing Rounds : $63,200");
      this.MK2AssaultRifle.AddItem(mk2ARClip5);
      UIMenuItem mk2ARClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $73,000");
      this.MK2AssaultRifle.AddItem(mk2ARClip6);
      UIMenuItem mk2ARClipFlash = new UIMenuItem("Flashlight : $10,500");
      this.MK2AssaultRifle.AddItem(mk2ARClipFlash);
      UIMenuItem mk2ARClipSight1 = new UIMenuItem("Holographic Sight : $19,600");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight1);
      UIMenuItem mk2ARClipSight2 = new UIMenuItem("Small Scope : $23,730");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight2);
      UIMenuItem mk2ARClipSight3 = new UIMenuItem("Large Scope : $33,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipSight3);
      UIMenuItem mk2ARClipGrip = new UIMenuItem("Grip : $14,000");
      this.MK2AssaultRifle.AddItem(mk2ARClipGrip);
      UIMenuItem mk2ARsuppressor = new UIMenuItem("Suppressor : $40,250");
      this.MK2AssaultRifle.AddItem(mk2ARsuppressor);
      UIMenuListItem list10 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2AssaultRifle.AddItem((UIMenuItem) list10);
      UIMenuItem getTint10 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2AssaultRifle.AddItem(getTint10);
      UIMenuItem mk2lmg = new UIMenuItem("MK2 LMG : $95,000");
      this.MK2LMG.AddItem(mk2lmg);
      UIMenuItem mk2lmgClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2LMG.AddItem(mk2lmgClip1);
      UIMenuItem mk2lmgClip2 = new UIMenuItem("Extended Clip : $28,975");
      this.MK2LMG.AddItem(mk2lmgClip2);
      UIMenuItem mk2lmgClip3 = new UIMenuItem("Tracer Rounds : $57,100");
      this.MK2LMG.AddItem(mk2lmgClip3);
      UIMenuItem mk2lmgClip4 = new UIMenuItem("Incendiary Rounds : $64,650");
      this.MK2LMG.AddItem(mk2lmgClip4);
      UIMenuItem mk2lmgClip5 = new UIMenuItem("Armor Piercing Rounds : $82,550");
      this.MK2LMG.AddItem(mk2lmgClip5);
      UIMenuItem mk2lmgClip6 = new UIMenuItem("Full Metal Jacket Rounds  : $94,950");
      this.MK2LMG.AddItem(mk2lmgClip6);
      UIMenuItem mk2lmgGrip = new UIMenuItem("Grip : $20,180");
      this.MK2LMG.AddItem(mk2lmgGrip);
      UIMenuItem mk2lmgSight1 = new UIMenuItem("Holographic Sight : $26,600");
      this.MK2LMG.AddItem(mk2lmgSight1);
      UIMenuItem mk2lmgSight2 = new UIMenuItem("Small Scope : $36,290");
      this.MK2LMG.AddItem(mk2lmgSight2);
      UIMenuItem mk2lmgSight3 = new UIMenuItem("Large Scope : $46,170");
      this.MK2LMG.AddItem(mk2lmgSight3);
      UIMenuItem mk2lmgMuzzle = new UIMenuItem("Flat Muzzle Brake : $40,375");
      this.MK2LMG.AddItem(mk2lmgMuzzle);
      UIMenuItem mk2lmgBarrel = new UIMenuItem("Heavy Barrel : $66,500");
      this.MK2LMG.AddItem(mk2lmgBarrel);
      UIMenuListItem list11 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2LMG.AddItem((UIMenuItem) list11);
      UIMenuItem getTint11 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2LMG.AddItem(getTint11);
      UIMenuItem mk2sniper = new UIMenuItem("MK2 Heavy Sniper : $100,000");
      this.MK2Sniper.AddItem(mk2sniper);
      UIMenuItem mk2sniperClip1 = new UIMenuItem("Default Clip : $0");
      this.MK2Sniper.AddItem(mk2sniperClip1);
      UIMenuItem mk2sniperClip2 = new UIMenuItem("Extended Clip : $35,025");
      this.MK2Sniper.AddItem(mk2sniperClip2);
      UIMenuItem mk2sniperClip3 = new UIMenuItem("Incendiary Rounds : $59,275");
      this.MK2Sniper.AddItem(mk2sniperClip3);
      UIMenuItem mk2sniperClip4 = new UIMenuItem("Armor Piercing Rounds : $76,100");
      this.MK2Sniper.AddItem(mk2sniperClip4);
      UIMenuItem mk2sniperClip5 = new UIMenuItem("Full Metal Jacket Rounds : $88,525");
      this.MK2Sniper.AddItem(mk2sniperClip5);
      UIMenuItem mk2sniperClip6 = new UIMenuItem("Explosive Rounds : $115,450");
      this.MK2Sniper.AddItem(mk2sniperClip6);
      UIMenuItem mk2sniperSight1 = new UIMenuItem("Zoom scope : $20.200");
      this.MK2Sniper.AddItem(mk2sniperSight1);
      UIMenuItem mk2sniperSight2 = new UIMenuItem("Advanced Scope : $32,000");
      this.MK2Sniper.AddItem(mk2sniperSight2);
      UIMenuItem mk2sniperSight3 = new UIMenuItem("Night Vision Scope : $57,400");
      this.MK2Sniper.AddItem(mk2sniperSight3);
      UIMenuItem mk2sniperSight4 = new UIMenuItem("Thermal Scope : $69,000");
      this.MK2Sniper.AddItem(mk2sniperSight4);
      UIMenuItem mk2sniperSupp = new UIMenuItem("Suppressor : $40,250");
      this.MK2Sniper.AddItem(mk2sniperSupp);
      UIMenuItem mk2sniperMuzzle = new UIMenuItem("Bell-End Muzzle Brake : $57,790");
      this.MK2Sniper.AddItem(mk2sniperMuzzle);
      UIMenuItem mk2sniperBarrel = new UIMenuItem("Heavy Barrel : $27,500");
      this.MK2Sniper.AddItem(mk2sniperBarrel);
      UIMenuListItem list12 = new UIMenuListItem("Tint ", items3, 0);
      this.MK2Sniper.AddItem((UIMenuItem) list12);
      UIMenuItem getTint12 = new UIMenuItem("Buy Tint: $10,000");
      this.MK2Sniper.AddItem(getTint12);
      List<object> items4 = new List<object>();
      WeaponHash[] allweaponhashes = (WeaponHash[]) Enum.GetValues(typeof (WeaponHash));
      for (int index = 0; index < allweaponhashes.Length; ++index)
        items4.Add((object) allweaponhashes[index]);
      UIMenuListItem list = new UIMenuListItem("Weapon: ", items4, 0);
      uiMenu3.AddItem((UIMenuItem) list);
      UIMenuItem getWeapon = new UIMenuItem("Buy Weapon : $10000");
      uiMenu3.AddItem(getWeapon);
      UIMenuItem RayGun = new UIMenuItem("Ray Gun : $100,000");
      uiMenu2.AddItem(RayGun);
      UIMenuItem UnholyHellbringer = new UIMenuItem("UnholyHellbringer : $250,000");
      uiMenu2.AddItem(UnholyHellbringer);
      UIMenuItem Widowmaker = new UIMenuItem("Widowmaker : $1,000,000");
      uiMenu2.AddItem(Widowmaker);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != getWeapon)
          return;
        WeaponHash hash = allweaponhashes[list.Index];
        int num;
        switch (hash)
        {
          case WeaponHash.HeavySniperMk2:
          case WeaponHash.AssaultrifleMk2:
          case WeaponHash.PumpShotgunMk2:
          case WeaponHash.MarksmanRifleMk2:
          case WeaponHash.SMGMk2:
          case WeaponHash.BullpupRifleMk2:
          case WeaponHash.SpecialCarbineMk2:
          case WeaponHash.PistolMk2:
          case WeaponHash.RevolverMk2:
          case WeaponHash.CombatMGMk2:
          case WeaponHash.CarbineRifleMk2:
            num = 1;
            break;
          default:
            num = hash == WeaponHash.SNSPistolMk2 ? 1 : 0;
            break;
        }
        if (num != 0)
        {
          UI.Notify(this.GetHostName() + " Boss, this is a MKII weapon please perchase it from the MkII page");
        }
        else
        {
          Game.Player.Character.Weapons.Give(hash, 9999, true, true);
          Game.Player.Money -= 10000;
        }
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RayGun)
        {
          if (Game.Player.Money >= 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2939590305U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
        }
        if (item == UnholyHellbringer)
        {
          if (Game.Player.Money >= 250000)
          {
            Game.Player.Money -= 250000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1198256469, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
        }
        if (item != Widowmaker)
          return;
        if (Game.Player.Money >= 1000000)
        {
          Game.Player.Money -= 1000000;
          Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3056410471U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " You dont have enough money for this weapon ");
      });
      this.MK2Sniper.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint12)
        {
          int index1 = list12.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) list12.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2sniper)
        {
          if (Game.Player.Money > 100000)
          {
            Game.Player.Money -= 100000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4196276776U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip2)
        {
          if (Game.Player.Money > 35025)
          {
            Game.Player.Money -= 35025;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 752418717);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip3)
        {
          if (Game.Player.Money > 59275)
          {
            Game.Player.Money -= 59275;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 247526935);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip4)
        {
          if (Game.Player.Money > 76100)
          {
            Game.Player.Money -= 76100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 4164277972U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip5)
        {
          if (Game.Player.Money > 88525)
          {
            Game.Player.Money -= 88525;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1005144310);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperClip6)
        {
          if (Game.Player.Money > 115450)
          {
            Game.Player.Money -= 115450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2313935527U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight1)
        {
          if (Game.Player.Money > 20200)
          {
            Game.Player.Money -= 20200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2193687427U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight2)
        {
          if (Game.Player.Money > 32000)
          {
            Game.Player.Money -= 32000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3159677559U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight3)
        {
          if (Game.Player.Money > 57400)
          {
            Game.Player.Money -= 57400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 3061846192U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSight4)
        {
          if (Game.Player.Money > 69000)
          {
            Game.Player.Money -= 69000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 776198721);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperSupp)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2890063729U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2sniperMuzzle)
        {
          if (Game.Player.Money > 57790)
          {
            Game.Player.Money -= 57790;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 1764221345);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2sniperBarrel)
          return;
        if (Game.Player.Money > 27500)
        {
          Game.Player.Money -= 27500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 2425761975U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2LMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint11)
        {
          int index1 = list11.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) list11.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2lmg)
        {
          if (Game.Player.Money > 95000)
          {
            Game.Player.Money -= 95000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1227564412);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip2)
        {
          if (Game.Player.Money > 28975)
          {
            Game.Player.Money -= 28975;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 400507625);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip3)
        {
          if (Game.Player.Money > 57100)
          {
            Game.Player.Money -= 57100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 4133787461U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip4)
        {
          if (Game.Player.Money > 64650)
          {
            Game.Player.Money -= 64650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3274096058U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip5)
        {
          if (Game.Player.Money > 82550)
          {
            Game.Player.Money -= 82550;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 696788003);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgClip6)
        {
          if (Game.Player.Money > 94950)
          {
            Game.Player.Money -= 94950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1475288264);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgGrip)
        {
          if (Game.Player.Money > 20180)
          {
            Game.Player.Money -= 20180;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight1)
        {
          if (Game.Player.Money > 26600)
          {
            Game.Player.Money -= 26600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight2)
        {
          if (Game.Player.Money > 36290)
          {
            Game.Player.Money -= 36290;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgSight3)
        {
          if (Game.Player.Money > 46170)
          {
            Game.Player.Money -= 46170;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2lmgMuzzle)
        {
          if (Game.Player.Money > 40375)
          {
            Game.Player.Money -= 40375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3113485012U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2lmgBarrel)
          return;
        if (Game.Player.Money > 66500)
        {
          Game.Player.Money -= 66500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 3051509595U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Carbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint9)
        {
          int index1 = list9.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) list9.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2carbine)
        {
          if (Game.Player.Money > 35000)
          {
            Game.Player.Money -= 35000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip1)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1283078430);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip2)
        {
          if (Game.Player.Money > 25925)
          {
            Game.Player.Money -= 25925;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1574296533);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip3)
        {
          if (Game.Player.Money > 44700)
          {
            Game.Player.Money -= 44700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 391640422);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip4)
        {
          if (Game.Player.Money > 51600)
          {
            Game.Player.Money -= 51600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1025884839);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip5)
        {
          if (Game.Player.Money > 66000)
          {
            Game.Player.Money -= 66000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 626875735);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineClip6)
        {
          if (Game.Player.Money > 76000)
          {
            Game.Player.Money -= 76000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1141059345);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2carbineSight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2carbineSupp)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 2205435306U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2SMG.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint8)
        {
          int index1 = list8.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) list8.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2smg)
        {
          if (Game.Player.Money > 25000)
          {
            Game.Player.Money -= 25000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1277460590);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgclip1)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3112393518U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip2)
        {
          if (Game.Player.Money > 32850)
          {
            Game.Player.Money -= 32850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2146055916);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3650233061U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 974903034);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgClip5)
        {
          if (Game.Player.Money > 52000)
          {
            Game.Player.Money -= 52000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 190476639);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight1)
        {
          if (Game.Player.Money > 15200)
          {
            Game.Player.Money -= 15200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 2681951826U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight2)
        {
          if (Game.Player.Money > 19950)
          {
            Game.Player.Money -= 19950;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3842157419U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsight3)
        {
          if (Game.Player.Money > 24100)
          {
            Game.Player.Money -= 24100;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgsupp)
        {
          if (Game.Player.Money > 34500)
          {
            Game.Player.Money -= 34500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1038927834);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2smgmuzzle)
        {
          if (Game.Player.Money > 25500)
          {
            Game.Player.Money -= 25500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3113485012U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2smgbarrel)
          return;
        if (Game.Player.Money > 22500)
        {
          Game.Player.Money -= 22500;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 3641720545U);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 1000);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2AssaultRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint10)
        {
          int index1 = list10.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) list10.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2AR)
        {
          if (Game.Player.Money > 30000)
          {
            Game.Player.Money -= 30000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip1)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2249208895U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip2)
        {
          if (Game.Player.Money > 22000)
          {
            Game.Player.Money -= 22000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3509242479U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip3)
        {
          if (Game.Player.Money > 42700)
          {
            Game.Player.Money -= 42700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4012669121U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip4)
        {
          if (Game.Player.Money > 49400)
          {
            Game.Player.Money -= 49400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 4218476627U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip5)
        {
          if (Game.Player.Money > 63200)
          {
            Game.Player.Money -= 63200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2816286296U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClip6)
        {
          if (Game.Player.Money > 73000)
          {
            Game.Player.Money -= 73000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1675665560);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipFlash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipGrip)
        {
          if (Game.Player.Money > 14000)
          {
            Game.Player.Money -= 14000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2640679034U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ARClipSight3)
        {
          if (Game.Player.Money > 33000)
          {
            Game.Player.Money -= 33000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 3328927042U);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2ARsuppressor)
          return;
        if (Game.Player.Money > 40250)
        {
          Game.Player.Money -= 40250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 2805810788U);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Pistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint7)
        {
          int index1 = list7.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) list7.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2pistol)
        {
          if (Game.Player.Money > 20000)
          {
            Game.Player.Money -= 20000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2499030370U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip1)
        {
          if (Game.Player.Money > 15250)
          {
            Game.Player.Money -= 15250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1591132456);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip2)
        {
          if (Game.Player.Money > 28600)
          {
            Game.Player.Money -= 28600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 634039983);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip3)
        {
          if (Game.Player.Money > 34750)
          {
            Game.Player.Money -= 34750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 733837882);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip4)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2248057097U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolClip5)
        {
          if (Game.Player.Money > 39650)
          {
            Game.Player.Money -= 39650;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1329061674);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolSight1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 2396306288U);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2pistolsupp)
        {
          if (Game.Player.Money > 28750)
          {
            Game.Player.Money -= 28750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1709866683);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2pistolcomp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 568543123);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 1000);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Pumpshotgun.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint1)
        {
          int index1 = list1.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) list1.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Shotgunclip4)
        {
          if (Game.Player.Money > 145000)
          {
            Game.Player.Money -= 145000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1004815965);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip)
        {
          if (Game.Player.Money > 0)
          {
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -845938367);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip2)
        {
          if (Game.Player.Money > 96645)
          {
            Game.Player.Money -= 96645;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1315288101);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip3)
        {
          if (Game.Player.Money > 75140)
          {
            Game.Player.Money -= 75140;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -380098265);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunclip1)
        {
          if (Game.Player.Money > 65200)
          {
            Game.Player.Money -= 65200;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1618338827);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1000);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ShotgunP)
        {
          if (Game.Player.Money > 75000)
          {
            Game.Player.Money -= 75000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunflashlight)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights)
        {
          if (Game.Player.Money > 29320)
          {
            Game.Player.Money -= 29320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights2)
        {
          if (Game.Player.Money > 39920)
          {
            Game.Player.Money -= 39920;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Shotgunsights3)
        {
          if (Game.Player.Money > 50785)
          {
            Game.Player.Money -= 50785;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2ShotgunSuppressor)
        {
          if (Game.Player.Money > 45860)
          {
            Game.Player.Money -= 45860;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) -1404903567);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Shotgunmuzzle)
          return;
        if (Game.Player.Money > 37650)
        {
          Game.Player.Money -= 37650;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 1602080333);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2SNSPistol.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint2)
        {
          int index1 = list2.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) list2.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Snspistol)
        {
          if (Game.Player.Money > 45000)
          {
            Game.Player.Money -= 45000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipn)
        {
          if (Game.Player.Money > 8000)
          {
            Game.Player.Money -= 8000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 21392614);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclipe)
        {
          if (Game.Player.Money > 18300)
          {
            Game.Player.Money -= 18300;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -829683854);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip1)
        {
          if (Game.Player.Money > 34320)
          {
            Game.Player.Money -= 34320;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1876057490);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip2)
        {
          if (Game.Player.Money > 41700)
          {
            Game.Player.Money -= 41700;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -424845447);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip3)
        {
          if (Game.Player.Money > 47580)
          {
            Game.Player.Money -= 47580;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1928301566);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolclip4)
        {
          if (Game.Player.Money > 62400)
          {
            Game.Player.Money -= 62400;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1055790298);
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolcomp)
        {
          if (Game.Player.Money > 21250)
          {
            Game.Player.Money -= 21250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) -1434287169);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolflash)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1246324211);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Snspistolscope1)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1205768792);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Snspistolsuppressor)
          return;
        if (Game.Player.Money > 28750)
        {
          Game.Player.Money -= 28750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 1709866683);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Revolver.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint3)
        {
          int index1 = list3.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) list3.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Revolver)
        {
          if (Game.Player.Money > 85000)
          {
            Game.Player.Money -= 85000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip)
        {
          if (Game.Player.Money > 0)
          {
            Game.Player.Money = Game.Player.Money;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -1172055874);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip1)
        {
          if (Game.Player.Money > 31460)
          {
            Game.Player.Money -= 31460;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) -958864266);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip2)
        {
          if (Game.Player.Money > 38225)
          {
            Game.Player.Money -= 38225;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 15712037);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip3)
        {
          if (Game.Player.Money > 43615)
          {
            Game.Player.Money -= 43615;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 284438159);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverclip4)
        {
          if (Game.Player.Money > 57200)
          {
            Game.Player.Money -= 57200;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 231258687);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolversights)
        {
          if (Game.Player.Money > 16250)
          {
            Game.Player.Money -= 16250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolversights1)
        {
          if (Game.Player.Money > 25450)
          {
            Game.Player.Money -= 25450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Revolverflashlight)
        {
          if (Game.Player.Money > 7500)
          {
            Game.Player.Money -= 7500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 899381934);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2RevolverComp)
          return;
        if (Game.Player.Money > 21250)
        {
          Game.Player.Money -= 21250;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 654802123);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.Mk2SpecialCarbine.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint4)
        {
          int index1 = list4.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) list4.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2SCarbine)
        {
          if (Game.Player.Money > 65000)
          {
            Game.Player.Money -= 65000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 382112385);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip1)
        {
          if (Game.Player.Money > 26450)
          {
            Game.Player.Money -= 26450;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -568352468);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip2)
        {
          if (Game.Player.Money > 61465)
          {
            Game.Player.Money -= 61465;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -2023373174);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip3)
        {
          if (Game.Player.Money > 70950)
          {
            Game.Player.Money -= 70950;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -570355066);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip4)
        {
          if (Game.Player.Money > 90750)
          {
            Game.Player.Money -= 90750;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1362433589);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineclip5)
        {
          if (Game.Player.Money > 104775)
          {
            Game.Player.Money -= 104775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1346235024);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbineflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 77277509);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -966040254);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinesupressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1489156508);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2SCarbinemuzzle)
        {
          if (Game.Player.Money > 29750)
          {
            Game.Player.Money -= 29750;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1181482284);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2SCarbinegrip)
          return;
        if (Game.Player.Money > 14080)
        {
          Game.Player.Money -= 14080;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) -1654288262);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2Bullpup.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint5)
        {
          int index1 = list5.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) list5.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2Bullpup)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 25766362);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip2)
        {
          if (Game.Player.Money > 22100)
          {
            Game.Player.Money -= 22100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -273676760);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip3)
        {
          if (Game.Player.Money > 44350)
          {
            Game.Player.Money -= 44350;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2111807319);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip4)
        {
          if (Game.Player.Money > 52100)
          {
            Game.Player.Money -= 52100;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1449330342);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip5)
        {
          if (Game.Player.Money > 87320)
          {
            Game.Player.Money -= 87320;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -89655827);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupclip6)
        {
          if (Game.Player.Money > 77490)
          {
            Game.Player.Money -= 77490;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1130501904);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupflash)
        {
          if (Game.Player.Money > 10500)
          {
            Game.Player.Money -= 10500;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight1)
        {
          if (Game.Player.Money > 19600)
          {
            Game.Player.Money -= 19600;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight2)
        {
          if (Game.Player.Money > 23730)
          {
            Game.Player.Money -= 23730;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -944910075);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2Bullpupsight3)
        {
          if (Game.Player.Money > 34020)
          {
            Game.Player.Money -= 34020;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1060929921);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupBarrel)
        {
          if (Game.Player.Money > 49000)
          {
            Game.Player.Money -= 49000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 1704640795);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1654288262);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2BullpupSuppressor)
        {
          if (Game.Player.Money > 40250)
          {
            Game.Player.Money -= 40250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -2089531990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2Bullpupmuzzle)
          return;
        if (Game.Player.Money > 29750)
        {
          Game.Player.Money -= 29750;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) -1181482284);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
      this.MK2MarksmanRifle.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == getTint6)
        {
          int index1 = list6.Index;
          Function.Call(Hash._0x50969B9B89ED5738, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) list6.Index);
          Game.Player.Money -= 10000;
        }
        if (item == mk2marksman)
        {
          if (Game.Player.Money > 60000)
          {
            Game.Player.Money -= 60000;
            Function.Call(Hash._0xBF0FD6E56C964FCB, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 999999, (InputArgument) true, (InputArgument) true);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip1)
        {
          if (Game.Player.Money > 5000)
          {
            Game.Player.Money -= 5000;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1797182002);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip3)
        {
          if (Game.Player.Money > 49775)
          {
            Game.Player.Money -= 49775;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -679861550);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip4)
        {
          if (Game.Player.Money > 57295)
          {
            Game.Player.Money -= 57295;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1842849902);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip5)
        {
          if (Game.Player.Money > 73560)
          {
            Game.Player.Money -= 73560;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -193998727);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip6)
        {
          if (Game.Player.Money > 85570)
          {
            Game.Player.Money -= 85570;
            Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1000);
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -515203373);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanclip2)
        {
          if (Game.Player.Money > 26850)
          {
            Game.Player.Money -= 26850;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -422587990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanflash)
        {
          if (Game.Player.Money > 11250)
          {
            Game.Player.Money -= 11250;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 2076495324);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight1)
        {
          if (Game.Player.Money > 11485)
          {
            Game.Player.Money -= 11485;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1108334355);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight2)
        {
          if (Game.Player.Money > 17870)
          {
            Game.Player.Money -= 17870;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -966040254);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmansight3)
        {
          if (Game.Player.Money > 27150)
          {
            Game.Player.Money -= 27150;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 1528590652);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanGrip)
        {
          if (Game.Player.Money > 14080)
          {
            Game.Player.Money -= 14080;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1654288262);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item == mk2marksmanSuppressor)
        {
          if (Game.Player.Money > 60375)
          {
            Game.Player.Money -= 60375;
            Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -2089531990);
            UI.Notify(this.GetHostName() + " Have fun with your new toy");
          }
          else
            UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
        }
        if (item != mk2marksmanmuzzle)
          return;
        if (Game.Player.Money > 44620)
        {
          Game.Player.Money -= 44620;
          Function.Call(Hash._0xD966D51AA5B28BB9, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) -1181482284);
          UI.Notify(this.GetHostName() + " Have fun with your new toy");
        }
        else
          UI.Notify(this.GetHostName() + " you do not have enough money to purchase this Weapon!");
      });
    }

    private void ArmedPed(Ped Ped, WeaponHash Weapon) => Ped.Weapons.Give(Weapon, 9999, true, true);

    private void SetupVagos(Vehicle Car, int type)
    {
      if (type == 1)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
        Car.PrimaryColor = VehicleColor.MetallicRaceYellow;
        Car.SecondaryColor = VehicleColor.MetallicRaceYellow;
        Car.SetMod(VehicleMod.Livery, 6, true);
        Car.SetMod(VehicleMod.Plaques, 2, true);
        Car.SetMod(VehicleMod.BackWheels, 3, true);
        Car.SetMod(VehicleMod.DialDesign, 13, true);
        Car.SetMod(VehicleMod.SteeringWheels, 15, true);
      }
      if (type != 2)
        return;
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
      Car.PrimaryColor = VehicleColor.MetallicRaceYellow;
      Car.SecondaryColor = VehicleColor.MetallicRaceYellow;
      Car.SetMod(VehicleMod.Livery, 4, true);
      Car.SetMod(VehicleMod.Plaques, 2, true);
      Car.SetMod(VehicleMod.BackWheels, 3, true);
      Car.SetMod(VehicleMod.DialDesign, 13, true);
      Car.SetMod(VehicleMod.SteeringWheels, 15, true);
    }

    private void SetupBallas(Vehicle Car, int type)
    {
      if (type == 1)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
        Car.PrimaryColor = VehicleColor.MetallicPurpleBlue;
        Car.SecondaryColor = VehicleColor.MetallicPurpleBlue;
        Car.SetMod(VehicleMod.Livery, 3, true);
        Car.SetMod(VehicleMod.Plaques, 1, true);
        Car.SetMod(VehicleMod.BackWheels, 3, true);
        Car.SetMod(VehicleMod.DialDesign, 13, true);
        Car.SetMod(VehicleMod.SteeringWheels, 15, true);
      }
      if (type != 2)
        return;
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
      Car.PrimaryColor = VehicleColor.MetallicPurpleBlue;
      Car.SecondaryColor = VehicleColor.MetallicPurpleBlue;
      Car.SetMod(VehicleMod.Livery, 10, true);
      Car.SetMod(VehicleMod.Plaques, 1, true);
      Car.SetMod(VehicleMod.BackWheels, 3, true);
      Car.SetMod(VehicleMod.DialDesign, 13, true);
      Car.SetMod(VehicleMod.SteeringWheels, 15, true);
    }

    private void SetupFamilies(Vehicle Car, int type)
    {
      if (type == 1)
      {
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
        Car.PrimaryColor = VehicleColor.MetallicGreen;
        Car.SecondaryColor = VehicleColor.MetallicGreen;
        Car.SetMod(VehicleMod.Livery, 7, true);
        Car.SetMod(VehicleMod.Plaques, 5, true);
        Car.SetMod(VehicleMod.BackWheels, 3, true);
        Car.SetMod(VehicleMod.DialDesign, 13, true);
        Car.SetMod(VehicleMod.SteeringWheels, 15, true);
      }
      if (type != 2)
        return;
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) Car.Handle, (InputArgument) 0);
      Car.PrimaryColor = VehicleColor.MetallicGreen;
      Car.SecondaryColor = VehicleColor.MetallicGreen;
      Car.SetMod(VehicleMod.Livery, 4, true);
      Car.SetMod(VehicleMod.Plaques, 5, true);
      Car.SetMod(VehicleMod.BackWheels, 3, true);
      Car.SetMod(VehicleMod.DialDesign, 13, true);
      Car.SetMod(VehicleMod.SteeringWheels, 15, true);
    }

    public void SetupSellStock(int Type, int veh)
    {
      this.STLoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.Droptype = Type;
      if ((Entity) this.DropVehicle != (Entity) null)
        this.DropVehicle.Delete();
      if (this.DropVehicleBlip != (Blip) null)
        this.DropVehicleBlip.Remove();
      foreach (Blip blip in this.STDropBlip)
      {
        if (blip != (Blip) null)
          blip.Remove();
      }
      this.STDropBlip.Clear();
      if (veh == -1)
      {
        this.DropVehicle = Game.Player.Character.CurrentVehicle;
        this.DropVehicleBlip = this.DropVehicle.CurrentBlip;
        this.DropVehicle.BodyHealth = 3000f;
      }
      if (veh == 0)
      {
        this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Mule, this.GarageVehicleSpawnOutside);
        this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
        this.DropVehicleBlip.Sprite = BlipSprite.Truck;
        this.DropVehicleBlip.Name = "Delivery Vehicle";
        this.DropVehicleBlip.Color = this.Blip_Colour;
        this.DropVehicle.BodyHealth = 3000f;
      }
      if (veh == 1)
      {
        if (this.SpeedoCustomUnlocked == 1)
        {
          this.SaveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Storage\\SpeedoCustom.ini");
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Speedo4, this.GarageVehicleSpawnOutside);
          this.SaveLoad.Load(this.DropVehicle);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 4000f;
        }
        else
        {
          UI.Notify(this.GetHostName() + " : You do not own the Speedo Custom, you will have to use a standard Mule instead");
          if ((Entity) this.DropVehicle != (Entity) null)
            this.DropVehicle.Delete();
          if (this.DropVehicleBlip != (Blip) null)
            this.DropVehicleBlip.Remove();
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Mule, this.GarageVehicleSpawnOutside);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 3000f;
        }
      }
      if (veh == 2)
      {
        if (this.MuleCustomUnlocked == 1)
        {
          this.SaveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Storage\\MuleCustom.ini");
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Mule4, this.GarageVehicleSpawnOutside);
          this.SaveLoad.Load(this.DropVehicle);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 4500f;
        }
        else
        {
          UI.Notify(this.GetHostName() + " : You do not own the Mule Custom, you will have to use a standard Mule instead");
          if ((Entity) this.DropVehicle != (Entity) null)
            this.DropVehicle.Delete();
          if (this.DropVehicleBlip != (Blip) null)
            this.DropVehicleBlip.Remove();
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Mule, this.GarageVehicleSpawnOutside);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 3000f;
        }
      }
      if (veh == 3)
      {
        if (this.PounderCustomUnlocked == 1)
        {
          this.SaveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Storage\\PounderCustom.ini");
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Pounder2, this.GarageVehicleSpawnOutside);
          this.SaveLoad.Load(this.DropVehicle);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 5000f;
        }
        else
        {
          UI.Notify(this.GetHostName() + " : You do not own the Pounder Custom, you will have to use a standard Mule instead");
          if ((Entity) this.DropVehicle != (Entity) null)
            this.DropVehicle.Delete();
          if (this.DropVehicleBlip != (Blip) null)
            this.DropVehicleBlip.Remove();
          this.DropVehicle = World.CreateVehicle((GTA.Model) VehicleHash.Mule, this.GarageVehicleSpawnOutside);
          this.DropVehicleBlip = World.CreateBlip(this.DropVehicle.Position);
          this.DropVehicleBlip.Sprite = BlipSprite.Truck;
          this.DropVehicleBlip.Name = "Delivery Vehicle";
          this.DropVehicleBlip.Color = this.Blip_Colour;
          this.DropVehicle.BodyHealth = 3000f;
        }
      }
      if (this.Droptype == 11)
      {
        this.amountToSell = this.MethValue;
        this.StockAmount = this.Methbags;
        UI.Notify(this.GetHostName() + " : Ok Boss you have choosen to sell all ~y~Meth~w~ product, there is a " + this.DropVehicle.FriendlyName + " parked outside, if the Vehicle gets destroyed, we lose everything! be careful");
        if (this.StockAmount < 30)
          this.STAmttoDeliver = 2;
        if (this.StockAmount >= 30 && this.StockAmount < 70)
          this.STAmttoDeliver = 3;
        if (this.StockAmount >= 70 && this.StockAmount < 120)
          this.STAmttoDeliver = 4;
        if (this.StockAmount >= 120 && this.StockAmount < 150)
          this.STAmttoDeliver = 5;
        if (this.StockAmount >= 150 && this.StockAmount < 190)
          this.STAmttoDeliver = 6;
        if (this.StockAmount >= 190 && this.StockAmount < 230)
          this.STAmttoDeliver = 7;
        if (this.StockAmount >= 230 && this.StockAmount < 260)
          this.STAmttoDeliver = 8;
        if (this.StockAmount >= 260 && this.StockAmount < 290)
          this.STAmttoDeliver = 9;
        if (this.StockAmount >= 290 && this.StockAmount < 330)
          this.STAmttoDeliver = 10;
        if (this.StockAmount >= 330 && this.StockAmount < 360)
          this.STAmttoDeliver = 12;
        if (this.StockAmount >= 360 && this.StockAmount < 400)
          this.STAmttoDeliver = 14;
        if (this.StockAmount >= 400)
          this.STAmttoDeliver = 16;
        UI.Notify(this.GetHostName() + " :  ~b~Because your Stock Level is " + this.StockAmount.ToString() + ", you need to deliver to a minimum of " + this.STAmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a yellow crate icon on your map, good luck");
      }
      if (this.Droptype == 12)
      {
        this.amountToSell = this.CocaineValue;
        this.StockAmount = this.Cocainebags;
        UI.Notify(this.GetHostName() + " : Ok Boss you have choosen to sell all ~y~Cocaine ~w~ product, there is a " + this.DropVehicle.FriendlyName + " parked outside, if the Vehicle gets destroyed, we lose everything! be careful");
        if (this.StockAmount < 30)
          this.STAmttoDeliver = 2;
        if (this.StockAmount >= 30 && this.StockAmount < 70)
          this.STAmttoDeliver = 3;
        if (this.StockAmount >= 70 && this.StockAmount < 120)
          this.STAmttoDeliver = 4;
        if (this.StockAmount >= 120 && this.StockAmount < 150)
          this.STAmttoDeliver = 5;
        if (this.StockAmount >= 150 && this.StockAmount < 190)
          this.STAmttoDeliver = 6;
        if (this.StockAmount >= 190 && this.StockAmount < 230)
          this.STAmttoDeliver = 7;
        if (this.StockAmount >= 230 && this.StockAmount < 260)
          this.STAmttoDeliver = 8;
        if (this.StockAmount >= 260 && this.StockAmount < 290)
          this.STAmttoDeliver = 9;
        if (this.StockAmount >= 290 && this.StockAmount < 330)
          this.STAmttoDeliver = 10;
        if (this.StockAmount >= 330 && this.StockAmount < 360)
          this.STAmttoDeliver = 12;
        if (this.StockAmount >= 360 && this.StockAmount < 400)
          this.STAmttoDeliver = 14;
        if (this.StockAmount >= 400)
          this.STAmttoDeliver = 16;
        UI.Notify(this.GetHostName() + " :  ~b~Because your Stock Level is " + this.StockAmount.ToString() + ", you need to deliver to a minimum of " + this.STAmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a yellow crate icon on your map, good luck");
      }
      if (this.Droptype == 13)
      {
        this.amountToSell = this.WeedValue;
        this.StockAmount = this.Weedbags;
        UI.Notify(this.GetHostName() + " : Ok Boss you have choosen to sell all ~y~Weed~w~ product, there is a " + this.DropVehicle.FriendlyName + " parked outside, if the Vehicle gets destroyed, we lose everything! be careful");
        if (this.StockAmount < 30)
          this.STAmttoDeliver = 2;
        if (this.StockAmount >= 30 && this.StockAmount < 70)
          this.STAmttoDeliver = 3;
        if (this.StockAmount >= 70 && this.StockAmount < 120)
          this.STAmttoDeliver = 4;
        if (this.StockAmount >= 120 && this.StockAmount < 150)
          this.STAmttoDeliver = 5;
        if (this.StockAmount >= 150 && this.StockAmount < 190)
          this.STAmttoDeliver = 6;
        if (this.StockAmount >= 190 && this.StockAmount < 230)
          this.STAmttoDeliver = 7;
        if (this.StockAmount >= 230 && this.StockAmount < 260)
          this.STAmttoDeliver = 8;
        if (this.StockAmount >= 260 && this.StockAmount < 290)
          this.STAmttoDeliver = 9;
        if (this.StockAmount >= 290 && this.StockAmount < 330)
          this.STAmttoDeliver = 10;
        if (this.StockAmount >= 330 && this.StockAmount < 360)
          this.STAmttoDeliver = 12;
        if (this.StockAmount >= 360 && this.StockAmount < 400)
          this.STAmttoDeliver = 14;
        if (this.StockAmount >= 400)
          this.STAmttoDeliver = 16;
        UI.Notify(this.GetHostName() + " :  ~b~Because your Stock Level is " + this.StockAmount.ToString() + ", you need to deliver to a minimum of " + this.STAmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a crate icon on your map, good luck");
      }
      if (this.Droptype > 10)
      {
        this.STmissionnum = 1;
        this.PointsBeenAt = 0;
        this.PlayingMission = true;
        foreach (Vector3 position in this.STDropPoint)
        {
          Blip blip = World.CreateBlip(position);
          blip.Sprite = BlipSprite.SpecialCargo;
          blip.Name = "Sell Drop Point";
          blip.Color = this.Blip_Colour;
          this.STDropBlip.Add(blip);
          blip.IsShortRange = true;
        }
      }
      if (this.Droptype > 8)
        return;
      if (this.MissionSellType == 1)
      {
        float num = (float) ((double) this.NC_CargoStockCurrent / (double) this.NC_CargoStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 2)
      {
        float num = (float) ((double) this.NC_SportingGoodsStockCurrent / (double) this.NC_SportingGoodsStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 3)
      {
        float num = (float) ((double) this.NC_SAIStockCurrent / (double) this.NC_SAIStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 4)
      {
        float num = (float) ((double) this.NC_PharStockCurrent / (double) this.NC_PharStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 5)
      {
        float num = (float) ((double) this.NC_OrgProduceStockCurrent / (double) this.NC_OrgProduceStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 6)
      {
        float num = (float) ((double) this.NC_PrintCopyStockCurrent / (double) this.NC_PrintCopyStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 7)
      {
        float num = (float) ((double) this.NC_CounterfeitStockCurrent / (double) this.NC_CounterfeitStockMax * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 1;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 2;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 3;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 4;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 5;
      }
      if (this.MissionSellType == 8)
      {
        float num = (float) ((double) (this.NC_CargoStockCurrent + this.NC_SportingGoodsStockCurrent + this.NC_SAIStockCurrent + this.NC_PharStockCurrent + this.NC_OrgProduceStockCurrent + this.NC_PrintCopyStockCurrent + this.NC_CounterfeitStockCurrent) / (double) (this.NC_CargoStockMax + this.NC_SportingGoodsStockMax + this.NC_SAIStockMax + this.NC_PharStockMax + this.NC_OrgProduceStockMax + this.NC_PrintCopyStockMax + this.NC_CounterfeitStockMax) * 100.0);
        if ((double) num < 15.0)
          this.Deliveries = 4;
        if ((double) num >= 15.0 && (double) num < 30.0)
          this.Deliveries = 6;
        if ((double) num >= 30.0 && (double) num < 50.0)
          this.Deliveries = 8;
        if ((double) num >= 50.0 && (double) num < 70.0)
          this.Deliveries = 10;
        if ((double) num >= 70.0 && (double) num < 100.0)
          this.Deliveries = 12;
      }
      foreach (Blip supplyMissionBlip in this.SupplyMissionBlips)
      {
        if (supplyMissionBlip != (Blip) null)
          supplyMissionBlip.Remove();
      }
      if (this.SupplyMissionBlips.Count > 0)
        this.SupplyMissionBlips.Clear();
      this.AreaOffset = this.DropPoint[new System.Random().Next(0, this.DropPoint.Count)];
      Blip blip1 = World.CreateBlip(this.AreaOffset);
      blip1.Sprite = BlipSprite.SpecialCargo;
      blip1.Name = "Sell Drop Point";
      blip1.Color = BlipColor.Yellow;
      this.SupplyMissionBlips.Add(blip1);
      blip1.IsShortRange = true;
      UI.Notify("Delivered " + this.Delivered.ToString() + "/" + this.Deliveries.ToString());
    }

    public void ShowStats(UIMenu Menu, string Name)
    {
      List<object> TF = new List<object>();
      TF.Add((object) false);
      TF.Add((object) true);
      List<object> WaitAmmount = new List<object>();
      int num1 = 500;
      WaitAmmount.Add((object) num1);
      for (int index = 1; index < 45; ++index)
        WaitAmmount.Add((object) (num1 + index * 250));
      List<object> objectList = new List<object>();
      int num2 = 1;
      for (int index = 1; index < 100; ++index)
        objectList.Add((object) (num2 + index));
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(Menu.ParentMenu, "Show Stats ");
      this.GUIMenus.Add(uiMenu1);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(Menu.ParentMenu, "Set Max Wait");
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem SetMax = new UIMenuListItem("Max Wait : ", WaitAmmount, 1);
      uiMenu2.AddItem((UIMenuItem) SetMax);
      UIMenuListItem MWPL = new UIMenuListItem("Max Wait = 200 * Purchase Level : ", TF, 1);
      uiMenu2.AddItem((UIMenuItem) MWPL);
      MWPL.Description = "Max wait is Calculated from Purchase Level";
      UIMenuItem uiMenuItem = new UIMenuItem("-------------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != MWPL)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__498.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MaxWaitBasedonPurchaseLevel = Class1.\u003C\u003Eo__498.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__0, TF[MWPL.Index]);
        this.Product.SetValue<bool>("PRODUCTION", "MaxWaitBasedonPurchaseLevel", this.MaxWaitBasedonPurchaseLevel);
        this.Product.Save();
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__498.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target1 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__2.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p2 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__2;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__498.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj1 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__1, TF[MWPL.Index], true);
        if (target1((CallSite) p2, obj1))
          UI.Notify(this.GetHostName() + " :  Max Wait Based on Purchase Level has been Turned On,~" + this.Uicolour + "~ Calculation : 200 * Purchase Level");
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__4 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__498.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, bool>>.Create(Binder.UnaryOperation(CSharpBinderFlags.None, ExpressionType.IsTrue, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        Func<CallSite, object, bool> target2 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__4.Target;
        // ISSUE: reference to a compiler-generated field
        CallSite<Func<CallSite, object, bool>> p4 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__4;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__3 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__498.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, bool, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Equal, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        object obj2 = Class1.\u003C\u003Eo__498.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__3, TF[MWPL.Index], false);
        if (target2((CallSite) p4, obj2))
          UI.Notify(this.GetHostName() + " :  Max Wait Based on Purchase Level has been Turned Off");
      });
      if (Name.Equals("Cocaine"))
      {
        UIMenuItem SMCocaine = new UIMenuItem("Set Cacaine Lockup Max Wait");
        uiMenu2.AddItem(SMCocaine);
        SMCocaine.Description = "The max Amt of Product able to be produced in any one time, (1000=10kg)=10 Product of Cocaine";
        uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
        {
          if (item != SMCocaine)
            return;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__498.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MaxCocaineWait = Class1.\u003C\u003Eo__498.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__5, WaitAmmount[SetMax.Index]);
          this.Product.SetValue<float>("PRODUCTION", "MaxCocaineWait", this.MaxCocaineWait);
          this.Product.Save();
          UI.Notify(this.GetHostName() + " : Cocaine Wait is now set to ~y~" + this.MaxCocaineWait.ToString() + "/" + (this.MaxCocaineWait / 100f).ToString() + "kg~w~, Cocaine Can be Produced at any one time");
        });
      }
      if (Name.Equals("Meth"))
      {
        UIMenuItem SMMeth = new UIMenuItem("Set Meth Lab Max Wait");
        uiMenu2.AddItem(SMMeth);
        SMMeth.Description = "The max Amt of Product able to be produced in any one time, (1000=10kg)=10 Product of Meth";
        uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
        {
          if (item != SMMeth)
            return;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__498.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MaxMethWait = Class1.\u003C\u003Eo__498.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__6, WaitAmmount[SetMax.Index]);
          this.Product.SetValue<float>("PRODUCTION", "MaxMethWait", this.MaxMethWait);
          this.Product.Save();
          UI.Notify(this.GetHostName() + " : Meth Wait is now set to ~y~" + this.MaxMethWait.ToString() + "/" + (this.MaxMethWait / 100f).ToString() + "kg~w~, Meth Can be Produced at any one time");
        });
      }
      if (Name.Equals("Weed"))
      {
        UIMenuItem SMWeed = new UIMenuItem("Set Weed Farm Max Wait");
        uiMenu2.AddItem(SMWeed);
        SMWeed.Description = "The max Amt of Product able to be produced in any one time, (1000=10kg)=10 Product of Weed";
        uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
        {
          if (item != SMWeed)
            return;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__498.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__498.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, float>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (float), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MaxWeedWait = Class1.\u003C\u003Eo__498.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__498.\u003C\u003Ep__7, WaitAmmount[SetMax.Index]);
          this.Product.SetValue<float>("PRODUCTION", "MaxWeedWait", this.MaxWeedWait);
          this.Product.Save();
          UI.Notify(this.GetHostName() + " : Weed Wait is now set to ~y~" + this.MaxWeedWait.ToString() + "/" + (this.MaxWeedWait / 100f).ToString() + "kg~w~, Weed Can be Produced at any one time");
        });
      }
      UIMenuItem SLevel = new UIMenuItem("Show Level");
      uiMenu1.AddItem(SLevel);
      if (Name.Equals("Cocaine"))
      {
        UIMenuItem SCocaine = new UIMenuItem("Show Cacaine Lockup Stats");
        uiMenu1.AddItem(SCocaine);
        uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
        {
          if (item == SLevel)
          {
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            UI.Notify(this.GetHostName() + " : Level of Business : " + this.purchaselvl.ToString());
          }
          if (item != SCocaine)
            return;
          this.CocaineWait = this.Product.GetValue<float>("PRODUCTION", "CocaineWait", this.CocaineWait);
          this.Cocainebags = this.Product.GetValue<int>("PRODUCTION", "Cocainebags", this.Cocainebags);
          if ((double) this.CocaineWait > 0.0)
            UI.Notify(this.GetHostName() + " : ~y~" + this.Cocainebags.ToString() + " Cocaine Bags ~w~ ready to sell, able to produce more in ~y~" + this.CocaineWait.ToString() + "~w~ ticks");
          else
            UI.Notify(this.GetHostName() + " : ~y~" + this.Cocainebags.ToString() + " Cocaine Bags ~w~ ready to sell, able to produce more in ~y~ Ready Now");
        });
      }
      if (Name.Equals("Meth"))
      {
        UIMenuItem SMeth = new UIMenuItem("Show Meth Lab Stats");
        uiMenu1.AddItem(SMeth);
        uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
        {
          if (item == SLevel)
          {
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            UI.Notify(this.GetHostName() + " : Level of Business : " + this.purchaselvl.ToString());
          }
          if (item != SMeth)
            return;
          this.MethWait = this.Product.GetValue<float>("PRODUCTION", "MethWait", this.MethWait);
          this.Methbags = this.Product.GetValue<int>("PRODUCTION", "Methbags", this.Methbags);
          if ((double) this.MethWait > 0.0)
            UI.Notify(this.GetHostName() + " : ~y~" + this.Methbags.ToString() + " Meth Bags ~w~ ready to sell, able to produce more in ~y~" + this.MethWait.ToString() + "~w~ ticks");
          else
            UI.Notify(this.GetHostName() + " : ~y~" + this.Methbags.ToString() + " Meth Bags ~w~ ready to sell, able to produce more in ~y~ Ready Now");
        });
      }
      if (!Name.Equals("Weed"))
        return;
      UIMenuItem SWeed = new UIMenuItem("Show Weed Farm Stats");
      uiMenu1.AddItem(SWeed);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SLevel)
        {
          this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          UI.Notify(this.GetHostName() + " : Level of Business : " + this.purchaselvl.ToString());
        }
        if (item != SWeed)
          return;
        this.WeedWait = this.Product.GetValue<float>("PRODUCTION", "WeedWait", this.WeedWait);
        this.Weedbags = this.Product.GetValue<int>("PRODUCTION", "Weedbags", this.Weedbags);
        if ((double) this.WeedWait > 0.0)
          UI.Notify(this.GetHostName() + " : ~y~" + this.Weedbags.ToString() + " Weed Bags ~w~ ready to sell, able to produce more in ~y~" + this.WeedWait.ToString() + "~w~ ticks");
        else
          UI.Notify(this.GetHostName() + " : ~y~" + this.Weedbags.ToString() + " Weed Bags ~w~ ready to sell, able to produce more in ~y~ Ready Now");
      });
    }

    private void STLoadIniFile(string iniName)
    {
      try
      {
        this.STConfig = ScriptSettings.Load(iniName);
        this.Key1 = this.STConfig.GetValue<Keys>("Configurations", "Key1", this.Key1);
        this.purchaselvl = this.STConfig.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
        this.stockscount = this.STConfig.GetValue<int>("Setup", "stockslevel", this.stockscount);
        this.stocksvalue = this.STConfig.GetValue<float>("Setup", "StocksValue", this.stocksvalue);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    private void STLoadIniFile3(string iniName)
    {
      try
      {
        this.STConfig3 = ScriptSettings.Load(iniName);
        this.ShowStockIncrease = this.STConfig3.GetValue<bool>("Setup", "ShowStockIncrease", this.ShowStockIncrease);
        try
        {
          this.NextDay = this.STConfig3.GetValue<int>("Setup", "NextDay", this.NextDay);
          this.NextMonth = this.STConfig3.GetValue<int>("Setup", "NextMonth", this.NextMonth);
          this.NextYear = this.STConfig3.GetValue<int>("Setup", "NextYear", this.NextYear);
          this.DaysWait = this.STConfig3.GetValue<int>("Setup", "DaysWait", this.DaysWait);
          this.BYPASS_NOSAVE_OR_CRASH = this.STConfig3.GetValue<bool>("Setup", "BYPASS_NOSAVE_OR_CRASH", this.BYPASS_NOSAVE_OR_CRASH);
          this.DAYSTORESET_UPDATETIME = this.STConfig3.GetValue<int>("Setup", "DAYSTORESET_UPDATETIME", this.DAYSTORESET_UPDATETIME);
        }
        catch (Exception ex)
        {
          this.NextDay = 10;
          this.STConfig3.SetValue<int>("Setup", "NextDay", this.NextDay);
          this.NextMonth = 10;
          this.STConfig3.SetValue<int>("Setup", "NextMonth", this.NextMonth);
          this.NextYear = 2010;
          this.STConfig3.SetValue<int>("Setup", "NextYear", this.NextYear);
          this.DaysWait = 3;
          this.STConfig3.SetValue<int>("Setup", "DaysWait", this.DaysWait);
          this.BYPASS_NOSAVE_OR_CRASH = true;
          this.STConfig3.SetValue<bool>("Setup", "BYPASS_NOSAVE_OR_CRASH", this.BYPASS_NOSAVE_OR_CRASH);
          this.DAYSTORESET_UPDATETIME = 12;
          this.STConfig3.SetValue<int>("Setup", "DAYSTORESET_UPDATETIME", this.DAYSTORESET_UPDATETIME);
          this.STConfig3.Save();
        }
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    private void STLoadIniFile2(string iniName)
    {
      try
      {
        this.Product = ScriptSettings.Load(iniName);
        this.Key1 = this.Product.GetValue<Keys>("Configurations", "Key1", this.Key1);
        this.MethProduct = this.Product.GetValue<int>("PRODUCTION", "MethProduct", this.MethProduct);
        this.MethValue = this.Product.GetValue<float>("PRODUCTION", "MethValue", this.MethValue);
        this.CocaineProduct = this.Product.GetValue<int>("PRODUCTION", "CocaineProduct", this.CocaineProduct);
        this.CocaineValue = this.Product.GetValue<float>("PRODUCTION", "CocaineValue", this.CocaineValue);
        this.WeedProduct = this.Product.GetValue<int>("PRODUCTION", "WeedProduct", this.WeedProduct);
        this.WeedValue = this.Product.GetValue<float>("PRODUCTION", "WeedValue", this.WeedValue);
        this.MaxWeedWait = this.Product.GetValue<float>("PRODUCTION", "MaxWeedWait", this.MaxWeedWait);
        this.MaxCocaineWait = this.Product.GetValue<float>("PRODUCTION", "MaxCocaineWait", this.MaxCocaineWait);
        this.MaxMethWait = this.Product.GetValue<float>("PRODUCTION", "MaxMethWait", this.MaxMethWait);
        this.MaxCounterfeitWait = this.Product.GetValue<float>("PRODUCTION", "MaxCounterfeitWait", this.MaxCounterfeitWait);
        this.MaxForgeryWait = this.Product.GetValue<float>("PRODUCTION", "MaxForgeryWait", this.MaxForgeryWait);
        this.WeedWait = this.Product.GetValue<float>("PRODUCTION", "WeedWait", this.MethWait);
        this.Weedbags = this.Product.GetValue<int>("PRODUCTION", "Weedbags", this.Weedbags);
        this.CocaineWait = this.Product.GetValue<float>("PRODUCTION", "CocaineWait", this.CocaineWait);
        this.Cocainebags = this.Product.GetValue<int>("PRODUCTION", "Cocainebags", this.Cocainebags);
        this.MethWait = this.Product.GetValue<float>("PRODUCTION", "MethWait", this.MethWait);
        this.Methbags = this.Product.GetValue<int>("PRODUCTION", "Methbags", this.Methbags);
        this.CounterfeitWait = this.Product.GetValue<float>("PRODUCTION", "CounterfeitWait", this.CounterfeitWait);
        this.Counterfeitbags = this.Product.GetValue<int>("PRODUCTION", "Counterfeitbags", this.Counterfeitbags);
        this.ForgeryWait = this.Product.GetValue<float>("PRODUCTION", "ForgeryWait", this.ForgeryWait);
        this.Forgerybags = this.Product.GetValue<int>("PRODUCTION", "Forgerybags", this.Forgerybags);
        this.StockTimer = 0;
        this.ShowCompletion = this.Product.GetValue<bool>("PRODUCTION", "ShowCompletion", this.ShowCompletion);
        this.MaxWaitBasedonPurchaseLevel = this.Product.GetValue<bool>("PRODUCTION", "MaxWaitBasedonPurchaseLevel", this.MaxWaitBasedonPurchaseLevel);
      }
      catch (Exception ex)
      {
        UI.Notify("~r~Error~w~: Config.ini Failed To Load.");
      }
    }

    public void IncreaseValue(float P)
    {
      float num = this.increaseGain / 100f;
      if (this.MethLabBought == 1)
        this.MethValue += (float) (18000.0 * (double) num / 100.0);
      if (this.CocaineBought == 1)
        this.CocaineValue += (float) (22000.0 * (double) num / 100.0);
      if (this.MoneyPrinterBought == 1)
        this.MoneyValue += (float) (26000.0 * (double) num / 100.0);
      if (this.ForgeryBought == 1)
        this.ForgeryValue += (float) (28000.0 * (double) num / 100.0);
      if (this.WeedFarmBought == 1)
        this.WeedValue += (float) (34000.0 * (double) num / 100.0);
      this.Product.SetValue<float>("PRODUCTION", "MethValue", this.MethValue);
      this.Product.SetValue<float>("PRODUCTION", "CocaineValue", this.CocaineValue);
      this.Product.SetValue<float>("PRODUCTION", "WeedValue", this.WeedValue);
      this.Product.Save();
    }

    public void SetDate()
    {
      this.STLoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      if (this.GetDay() + this.DaysWait <= 30)
      {
        this.NextDay = this.GetDay() + this.DaysWait;
        this.NextMonth = this.GetMonth();
      }
      if (this.GetDay() + this.DaysWait > 30)
      {
        this.NextDay = -(30 - (this.GetDay() + this.DaysWait));
        if (this.GetMonth() + 1 <= 12)
          this.NextMonth = this.GetDay() + 1;
        if (this.GetMonth() + 1 > 12)
          this.NextMonth = 1;
      }
      this.NextYear = this.GetYear();
    }

    public int GetHour() => Function.Call<int>(Hash._0x25223CA6B4D20B7F);

    public int GetMinutes() => Function.Call<int>(Hash._0x13D2B8ADD79640F2);

    public int GetDay() => Function.Call<int>(Hash._0x3D10BC92A4DB1D35);

    public int GetMonth() => Function.Call<int>(Hash._0xBBC72712E80257A1);

    public int GetYear() => Function.Call<int>(Hash._0x961777E64BDAF717);

    public void GetDateRelative()
    {
      if (!this.BYPASS_NOSAVE_OR_CRASH || this.Now == this.GetDay())
        return;
      this.Now = this.GetDay();
      int num1 = this.GetDay() + this.DAYSTORESET_UPDATETIME;
      int num2 = this.GetMonth();
      int year = this.GetYear();
      if (num1 < 0)
      {
        num1 = -num1;
        if (this.GetMonth() + 1 <= 12)
          num2 = this.GetMonth() + 1;
        if (this.GetMonth() + 1 > 12)
          num2 = 1;
      }
      if (num1 > 30)
        num1 = 30;
      if (this.GetMonth() + 1 > 12)
        num2 = 1;
      if (num1 <= this.NextDay && num2 <= this.NextMonth || (num2 < this.NextMonth || num2 > this.NextMonth) || year != this.NextYear)
      {
        this.NextMonth = this.GetMonth();
        this.NextDay = this.GetDay() + this.DaysWait;
        this.NextYear = this.GetYear();
      }
    }

    private void Setupbuisness(UIMenu Menu)
    {
      List<object> objectList = new List<object>()
      {
        (object) false,
        (object) true
      };
      List<object> items = new List<object>();
      int num1 = 1;
      for (int index = 1; index < 100; ++index)
        items.Add((object) (num1 + index));
      UIMenu uiMenu1 = this.STmodMenuPool.AddSubMenu(Menu, "Expand Business ");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem Update = new UIMenuItem("Update Stats");
      uiMenu1.AddItem(Update);
      UIMenuItem BuyNewLevel = new UIMenuItem(" Buy Level ");
      uiMenu1.AddItem(BuyNewLevel);
      UIMenuListItem list2 = new UIMenuListItem("Select Level: ", items, 1);
      uiMenu1.AddItem((UIMenuItem) list2);
      UIMenuItem Jump = new UIMenuItem("Jump Straight to Level");
      uiMenu1.AddItem(Jump);
      UIMenuItem Show = new UIMenuItem("Show Level");
      uiMenu1.AddItem(Show);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Jump)
        {
          int num2 = list2.Index + 1;
          if (num2 > this.purchaselvl)
          {
            int num3 = 0;
            int num4 = 0;
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            for (int purchaselvl = this.purchaselvl; purchaselvl < num2; ++purchaselvl)
            {
              double num5 = 1.75;
              if (this.purchaselvl < 25)
                num5 = 1.75;
              if (this.purchaselvl > 25 && index < 50)
                num5 = 2.25;
              if (this.purchaselvl > 50 && this.purchaselvl < 70)
                num5 = 3.5;
              if (this.purchaselvl > 75 && this.purchaselvl < 100)
                num5 = 4.75;
              num3 += (int) (200000.0 * num5 * (double) num2);
              ++num4;
            }
            UI.Notify("OK your new level will be " + (this.purchaselvl += num4 + 1).ToString() + ", at a price of $" + num3.ToString() + ", Do u want to continue Enter Y or N");
            Script.Wait(1000);
            Vector3 position = Game.Player.Character.Position;
            Game.Player.Character.Position = new Vector3(274f, 273f, 272f);
            Script.Wait(1);
            Game.Player.Character.Position = position;
            this.STLoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
            try
            {
              if (Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 1).Equals("Y"))
              {
                if (Game.Player.Money >= num3)
                {
                  Game.Player.Money -= num3;
                  this.purchaselvl = num2;
                  float num5 = (float) (125000 * this.purchaselvl) / 0.75f;
                  this.maxstocks = 10 * this.purchaselvl;
                  this.maxstocks = 10 * this.purchaselvl;
                  this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
                  this.increaseGain = num5;
                  this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                  this.Config.Save();
                }
                else
                {
                  this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                  UI.Notify("You dont have enough money to purchase this upgrade");
                }
              }
              else
              {
                this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                UI.Notify(" You Entered the Wrong key or N");
              }
            }
            catch (NullReferenceException ex)
            {
              this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              UI.Notify("You did not enter a key!");
            }
          }
        }
        double num6;
        int num7;
        if (item == Update)
        {
          int num2 = list2.Index + 1;
          double num3 = 1.75;
          if (this.purchaselvl < 25)
            num3 = 1.75;
          if (this.purchaselvl > 25 && index < 50)
            num3 = 2.25;
          if (this.purchaselvl > 50 && this.purchaselvl < 70)
            num3 = 3.5;
          if (this.purchaselvl > 75 && this.purchaselvl < 100)
            num3 = 4.75;
          num6 = 200000.0 * num3 * (double) num2;
          UI.Notify("Price " + num6.ToString());
          UI.Notify("Level to Buy " + (num2 + 1).ToString());
          UI.Notify("increaseGain : $" + ((float) (125000 * num2) / 0.75f).ToString());
          num6 = 0.85 * (double) num2 + 0.0;
          UI.Notify("Profit Margin :" + num6.ToString() + "%");
          num7 = 10 * num2;
          UI.Notify("Max Stocks : " + num7.ToString());
        }
        if (item == BuyNewLevel)
        {
          int num2 = list2.Index + 1;
          this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          if (this.purchaselvl + 1 == num2)
          {
            double num3 = 1.75;
            if (this.purchaselvl < 25)
              num3 = 1.75;
            if (this.purchaselvl > 25 && index < 50)
              num3 = 2.25;
            if (this.purchaselvl > 50 && this.purchaselvl < 70)
              num3 = 3.5;
            if (this.purchaselvl > 75 && this.purchaselvl < 100)
              num3 = 4.75;
            if ((double) Game.Player.Money >= 200000.0 * num3 * (double) num2)
            {
              Game.Player.Money -= (int) (200000.0 * num3 * (double) num2);
              ++this.purchaselvl;
              this.maxstocks = 10 * this.purchaselvl;
              float num4 = (float) (125000 * this.purchaselvl) / 0.75f;
              this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
              this.increaseGain = num4;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Config.Save();
            }
            else
              UI.Notify("You dont have enough money to purchase this upgrade");
            Vector3 position = Game.Player.Character.Position;
            Game.Player.Character.Position = new Vector3(274f, 273f, 272f);
            Script.Wait(1);
            Game.Player.Character.Position = position;
            this.STLoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          }
          else
            UI.Notify("The level you are trying to purchase is either to high or to low!, please purchase the level before, to purchase this level");
        }
        if (item != Show)
          return;
        double num8 = 1.75;
        if (this.purchaselvl < 25)
          num8 = 1.75;
        if (this.purchaselvl > 25 && index < 50)
          num8 = 2.25;
        if (this.purchaselvl > 50 && this.purchaselvl < 70)
          num8 = 3.5;
        if (this.purchaselvl > 75 && this.purchaselvl < 100)
          num8 = 4.75;
        num6 = 200000.0 * num8 * (double) this.purchaselvl;
        UI.Notify("Price for Next Level $" + num6.ToString());
        num7 = this.purchaselvl + 1;
        UI.Notify("Next Level " + num7.ToString());
        UI.Notify("increaseGain : $" + ((float) (125000 * this.purchaselvl) / 0.75f).ToString());
        num6 = 0.85 * (double) this.purchaselvl + 0.0;
        UI.Notify("Profit Margin :" + num6.ToString() + "%");
        num7 = 10 * this.purchaselvl;
        UI.Notify("Max Stocks : " + num7.ToString());
      });
      this.GUIMenus.Add(this.STmodMenuPool.AddSubMenu(Menu, "Supply - Increase Stock"));
      UIMenu Menu1 = this.STmodMenuPool.AddSubMenu(Menu, "Defend Raid -Decrease Production Time");
      this.GUIMenus.Add(Menu1);
      this.SubBusinesRaids(Menu1);
      UIMenu uiMenu2 = this.STmodMenuPool.AddSubMenu(Menu, "Show Stats ");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem uiMenuItem1 = new UIMenuItem("Show Level");
      uiMenu2.AddItem(uiMenuItem1);
      UIMenuItem uiMenuItem2 = new UIMenuItem("Show Cacaine Lockup Stats");
      uiMenu2.AddItem(uiMenuItem2);
      UIMenuItem uiMenuItem3 = new UIMenuItem("Show Meth Lab Stats");
      uiMenu2.AddItem(uiMenuItem3);
      UIMenuItem uiMenuItem4 = new UIMenuItem("Show Weed Farm Stats");
      uiMenu2.AddItem(uiMenuItem4);
    }

    private void SubBusinesRaids(UIMenu Menu)
    {
      UIMenu uiMenu = this.STmodMenuPool.AddSubMenu(Menu, "Nightclub Raids");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Loc1 = new UIMenuItem("Defend LS Subbusiness | Hard |");
      uiMenu.AddItem(Loc1);
      UIMenuItem Loc2 = new UIMenuItem("Defend Cocaine Lab | Medium |");
      uiMenu.AddItem(Loc2);
      UIMenuItem Loc3 = new UIMenuItem("Defend Meth Lab | Medium |");
      uiMenu.AddItem(Loc3);
      UIMenuItem Loc4 = new UIMenuItem("Defend Weed Farm | Medium |");
      uiMenu.AddItem(Loc4);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Loc1)
        {
          this.RaidSetup = true;
          this.isAtSubBusiness = true;
          this.mission = 1;
          UI.Notify(this.GetHostName() + " : boss quickly get to our sub business, we are expecting to be raided by the gangs of Los Santos");
        }
        if (item == Loc2)
        {
          this.RaidSetup = true;
          this.isAtSubBusiness = true;
          this.mission = 2;
          UI.Notify(this.GetHostName() + " : boss quickly get to our sub business, we are expecting to be raided by the gangs of Los Santos");
        }
        if (item == Loc3)
        {
          this.RaidSetup = true;
          this.isAtSubBusiness = true;
          this.mission = 3;
          UI.Notify(this.GetHostName() + " : boss quickly get to our sub business, we are expecting to be raided by the gangs of Los Santos");
        }
        if (item != Loc4)
          return;
        this.RaidSetup = true;
        this.isAtSubBusiness = true;
        this.mission = 4;
        UI.Notify(this.GetHostName() + " : boss quickly get to our sub business, we are expecting to be raided by the gangs of Los Santos");
      });
    }

    private void DisplayHelpTextThisFrameNoSound(string text)
    {
      Function.Call(Hash._0x8509B634FBE7DA11, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0x238FFE5C7B0498A6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) -1);
    }

    private void DeliverPoints()
    {
      this.STDropPoint.Add(new Vector3(966f, -126f, 74f));
      this.STDropPoint.Add(new Vector3(200f, 383f, 107f));
      this.STDropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.STDropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.STDropPoint.Add(new Vector3(-1539f, -76f, 53f));
      this.STDropPoint.Add(new Vector3(-2077f, -313f, 12f));
      this.STDropPoint.Add(new Vector3(-1451f, -364f, 43f));
      this.STDropPoint.Add(new Vector3(-587f, -1112f, 22f));
      this.STDropPoint.Add(new Vector3(102.6f, 6634.6f, 30f));
      this.STDropPoint.Add(new Vector3(-172.8f, 6452.8f, 29f));
      this.STDropPoint.Add(new Vector3(-265.1f, 6335.5f, 30f));
      this.STDropPoint.Add(new Vector3(-697.3f, 5772.9f, 15f));
      this.STDropPoint.Add(new Vector3(-575.2f, 5335.6f, 68f));
      this.STDropPoint.Add(new Vector3(35.9f, 6284.5f, 29f));
      this.STDropPoint.Add(new Vector3(1724f, 6399.4f, 31f));
      this.STDropPoint.Add(new Vector3(2467.7f, 4961.9f, 43f));
      this.STDropPoint.Add(new Vector3(2104.9f, 4767.5f, 39f));
      this.STDropPoint.Add(new Vector3(1501.6f, 3763.7f, 31f));
      this.STDropPoint.Add(new Vector3(1374.5f, 3602.9f, 33f));
      this.STDropPoint.Add(new Vector3(1689.4f, 3310.9f, 39f));
      this.STDropPoint.Add(new Vector3(1989f, 3032f, 46f));
      this.STDropPoint.Add(new Vector3(2320.1f, 2499.5f, 45f));
      this.STDropPoint.Add(new Vector3(2365.2f, 2644.9f, 45f));
      this.STDropPoint.Add(new Vector3(2411.1f, 3058.2f, 46f));
      this.STDropPoint.Add(new Vector3(2812.8f, 1589.4f, 22f));
      this.STDropPoint.Add(new Vector3(-1567.1f, 2770.7f, 15f));
      this.STDropPoint.Add(new Vector3(-1911.4f, 2061f, 138f));
      this.STDropPoint.Add(new Vector3(-310.8f, 2739.6f, 65f));
      this.STDropPoint.Add(new Vector3(-288.5f, 2568.7f, 70f));
      this.STDropPoint.Add(new Vector3(-85.6f, 2805.1f, 51f));
      this.STDropPoint.Add(new Vector3(42.2f, 2786f, 56f));
      this.STDropPoint.Add(new Vector3(216.7f, 2462.3f, 54f));
    }

    public static void TextNotification(
      string avatar,
      string author,
      string title,
      string message)
    {
      Function.Call(Hash._0x67C540AA08E4A6F5, (InputArgument) -1, (InputArgument) "CONFIRM_BEEP", (InputArgument) "HUD_MINI_GAME_SOUNDSET");
      Function.Call(Hash._0x202709F4C58A0424, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) message);
      Function.Call<int>(Hash._0x1CCD9A37359072CF, (InputArgument) avatar, (InputArgument) avatar, (InputArgument) true, (InputArgument) 0, (InputArgument) title, (InputArgument) author);
    }

    public void DrawSpotlight(
      Color C,
      Vector3 pos,
      Vector3 Rot,
      float range,
      float brightness,
      float roundness)
    {
      Vector3 vector3 = pos;
      vector3 = new Vector3(vector3.X, vector3.Y, vector3.Z);
      Vector3 dir = new Vector3(Rot.X, Rot.Y - 90f, Rot.Z);
      World.DrawSpotLightWithShadow(pos, dir, C, range, brightness, 0.0f, 35f, 1f);
    }

    public void DrawLight(Color C, Vector3 pos, float range, float brightness)
    {
      this.Get_RGB(C, "r");
      this.Get_RGB(C, "g");
      this.Get_RGB(C, "b");
      Vector3 pos1 = pos;
      pos1 = new Vector3(pos1.X, pos1.Y, pos1.Z + 20f);
      Vector3 dir = pos - pos1;
      dir.Normalize();
      World.DrawSpotLight(pos1, dir, C, range, brightness, 0.0f, 10f, 1f);
    }

    public void DisablePedFleeing(Ped p)
    {
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) p, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) p, (InputArgument) 17, (InputArgument) 1);
      Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) p, (InputArgument) 1);
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) p, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) p, (InputArgument) 17, (InputArgument) 1);
      p.BlockPermanentEvents = true;
      p.RelationshipGroup = 1;
      p.AlwaysKeepTask = true;
    }

    public void RefreshInterior()
    {
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_m_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      this.ClubDancerList.Add("a_f_y_clubcust_01");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_1_dlc_int_01_ba_milo_");
      Function.Call(Hash._0xEE6C5AD3ECE0A82D, (InputArgument) "ba_int_placement_ba_interior_2_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_1_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_2_dlc_int_01_ba_milo_");
      int num1 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1604.664, (InputArgument) -3012.583, (InputArgument) -80.0);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_security_upgrade\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba\uFEFF_equipment_setup");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_Style02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_Style03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "int01_ba_style02_podium");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_style03_podium");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "int01_ba_lights_screen\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_Screen\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "I\uFEFFnt01_ba_bar_cont\uFEFFent\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_booze_0\uFEFF1\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_booze_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_booze_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_dj01\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int0\uFEFF1_ba_dj02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_dj03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_dj04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_01_Lights_01\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_01_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_01_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_01_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_02_Lights_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_02_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_02_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_02_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_03_Lights_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_03_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_03_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_03_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_04_Lights_01\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_04_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_04_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "DJ_04_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "light_rigs_off");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_lightgrid_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_Clutter");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_equipment_upgrade");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_01\uFEFF\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_05");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_06");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_07");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_08");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_clubname_09");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_dry_ice");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_deliverytruck");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy05");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy07");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy09");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy08");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy11");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy10\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trophy02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_trad_lights\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num1, (InputArgument) "Int01_ba_Worklamps\uFEFF");
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      Script.Wait(500);
      Function.Call(Hash._0x41F37C3427C75AE0, (InputArgument) num1);
      int num2 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1604.664, (InputArgument) -3012.583, (InputArgument) -80.0);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "int01_ba_style01_podium\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num2, (InputArgument) "int01_ba_style01_podium");
      int num3 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1604.664, (InputArgument) -3012.583, (InputArgument) -80.0);
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "int01_ba_lights_screen\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "Int01_ba_Screen\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "I\uFEFFnt01_ba_bar_cont\uFEFFent\uFEFF");
      if (this.N_ClubName >= 0 && this.N_ClubName <= 8)
      {
        if (this.N_ClubName == 9)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_01\uFEFF");
        if (this.N_ClubName == 1)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_02");
        if (this.N_ClubName == 2)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_03");
        if (this.N_ClubName == 3)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_04");
        if (this.N_ClubName == 4)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_05");
        if (this.N_ClubName == 5)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_06");
        if (this.N_ClubName == 6)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_07");
        if (this.N_ClubName == 7)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_08");
        if (this.N_ClubName == 8)
          Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_clubname_09");
      }
      if (this.N_Style == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "int01_ba_style02");
      if (this.N_Style == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "int01_ba_style03");
      if (this.N_Style == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "int01_ba_style01");
      if (this.N_PodiumStyle == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "int01_ba_style02_podium");
      if (this.N_PodiumStyle == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_style03_podium");
      if (this.N_PodiumStyle == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_style01_podium");
      if (this.N_Booze == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_booze_0\uFEFF1\uFEFF");
      if (this.N_Booze == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_booze_02");
      if (this.N_Booze == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_booze_03");
      if (this.N_DJ == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_dj01\uFEFF");
      if (this.N_DJ == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int0\uFEFF1_ba_dj02");
      if (this.N_DJ == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_dj03");
      if (this.N_DJ == 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_dj04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_01_Lights_01\uFEFF\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_01_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_01_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_01_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_02_Lights_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_02_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_02_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_02_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_03_Lights_01");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_03_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_03_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_03_Lights_04");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_04_Lights_01\uFEFF");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_04_Lights_02");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_04_Lights_03");
      Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "DJ_04_Lights_04");
      if (this.N_DJ == 0 && this.N_DJLights == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_01_Lights_01\uFEFF\uFEFF");
      if (this.N_DJ == 0 && this.N_DJLights == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_01_Lights_02");
      if (this.N_DJ == 0 && this.N_DJLights == 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_01_Lights_03");
      if (this.N_DJ == 0 && this.N_DJLights == 4)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_01_Lights_04");
      if (this.N_DJ == 1 && this.N_DJLights == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_02_Lights_01");
      if (this.N_DJ == 1 && this.N_DJLights == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_02_Lights_02");
      if (this.N_DJ == 1 && this.N_DJLights == 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_02_Lights_03");
      if (this.N_DJ == 1 && this.N_DJLights == 4)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_02_Lights_04");
      if (this.N_DJ == 2 && this.N_DJLights == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_03_Lights_01");
      if (this.N_DJ == 2 && this.N_DJLights == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_03_Lights_02");
      if (this.N_DJ == 2 && this.N_DJLights == 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_03_Lights_03");
      if (this.N_DJ == 2 && this.N_DJLights == 4)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_03_Lights_04");
      if (this.N_DJ == 3 && this.N_DJLights == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_04_Lights_01\uFEFF");
      if (this.N_DJ == 3 && this.N_DJLights == 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_04_Lights_02");
      if (this.N_DJ == 3 && this.N_DJLights == 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_04_Lights_03");
      if (this.N_DJ == 3 && this.N_DJLights == 4)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "DJ_04_Lights_04");
      if (this.N_LightsRig == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "light_rigs_off");
      if (this.N_LightsRig == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_lightgrid_01");
      if (this.N_Clutter == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_Clutter");
      if (this.N_Upgrade == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_security_upgrade\uFEFF");
      if (this.N_Upgrade == 2)
      {
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_security_upgrade\uFEFF");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba\uFEFF_equipment_setup");
      }
      if (this.N_Upgrade == 3)
      {
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_security_upgrade\uFEFF");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba\uFEFF_equipment_setup");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_equipment_upgrade");
        foreach (Prop djProp in this.DJProps)
        {
          if ((Entity) djProp != (Entity) null)
            djProp.Delete();
        }
        Prop prop1 = World.CreateProp(this.RequestModel(-822947892), new Vector3(-1606.337f, -3012.451f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop1.FreezePosition = true;
        this.DJProps.Add(prop1);
        Prop prop2 = World.CreateProp(this.RequestModel(-822947892), new Vector3(-1606.337f, -3012.451f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop2.FreezePosition = true;
        this.DJProps.Add(prop2);
        Prop prop3 = World.CreateProp(this.RequestModel(992125567), new Vector3(-1602.347f, -3012.973f, -77.91727f), new Vector3(0.0f, 0.0f, -104f), false, false);
        prop3.FreezePosition = true;
        this.DJProps.Add(prop3);
        Prop prop4 = World.CreateProp(this.RequestModel(992125567), new Vector3(-1602.4f, -3013.315f, -77.91727f), new Vector3(0.0f, 0.0f, -102f), false, false);
        prop4.FreezePosition = true;
        this.DJProps.Add(prop4);
        Prop prop5 = World.CreateProp(this.RequestModel(-154609122), new Vector3(-1606.59f, -3012.568f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop5.FreezePosition = true;
        this.DJProps.Add(prop5);
        Prop prop6 = World.CreateProp(this.RequestModel(54971870), new Vector3(-1603.972f, -3013.315f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop6.FreezePosition = true;
        this.DJProps.Add(prop6);
        Prop prop7 = World.CreateProp(this.RequestModel(1943033760), new Vector3(-1606.394f, -3012.817f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop7.FreezePosition = true;
        this.DJProps.Add(prop7);
        Prop prop8 = World.CreateProp(this.RequestModel(-781987689), new Vector3(-1603.769f, -3013.584f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop8.FreezePosition = true;
        this.DJProps.Add(prop8);
        Prop prop9 = World.CreateProp(this.RequestModel(54971870), new Vector3(-1604.075f, -3013.248f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop9.FreezePosition = true;
        this.DJProps.Add(prop9);
        Prop prop10 = World.CreateProp(this.RequestModel(992125567), new Vector3(-1602.376f, -3012.245f, -77.91727f), new Vector3(0.0f, 0.0f, -77.00004f), false, false);
        prop10.FreezePosition = true;
        this.DJProps.Add(prop10);
        Prop prop11 = World.CreateProp(this.RequestModel(1051204975), new Vector3(-1606.396f, -3012.627f, -78.80138f), new Vector3(0.0f, 0.0f, 180f), false, false);
        prop11.FreezePosition = true;
        this.DJProps.Add(prop11);
        Prop prop12 = World.CreateProp(this.RequestModel(1943033760), new Vector3(-1606.331f, -3012.59f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop12.FreezePosition = true;
        this.DJProps.Add(prop12);
        Prop prop13 = World.CreateProp(this.RequestModel(600913159), new Vector3(-1603.735f, -3013.399f, -77.97968f), new Vector3(0.0f, 0.0f, -55.00002f), false, false);
        prop13.FreezePosition = true;
        this.DJProps.Add(prop13);
        Prop prop14 = World.CreateProp(this.RequestModel(600913159), new Vector3(-1603.83f, -3013.36f, -77.97968f), new Vector3(0.0f, 0.0f, -55.00002f), false, false);
        prop14.FreezePosition = true;
        this.DJProps.Add(prop14);
        Prop prop15 = World.CreateProp(this.RequestModel(-822947892), new Vector3(-1606.478f, -3012.417f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop15.FreezePosition = true;
        this.DJProps.Add(prop15);
        Prop prop16 = World.CreateProp(this.RequestModel(1943033760), new Vector3(-1606.22f, -3012.648f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop16.FreezePosition = true;
        this.DJProps.Add(prop16);
        Prop prop17 = World.CreateProp(this.RequestModel(600913159), new Vector3(-1603.811f, -3013.451f, -77.97968f), new Vector3(0.0f, 0.0f, -55.00002f), false, false);
        prop17.FreezePosition = true;
        this.DJProps.Add(prop17);
        Prop prop18 = World.CreateProp(this.RequestModel(1644097553), new Vector3(-1603.983f, -3013.508f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop18.FreezePosition = true;
        this.DJProps.Add(prop18);
        Prop prop19 = World.CreateProp(this.RequestModel(1925761914), new Vector3(-1606.478f, -3012.691f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop19.FreezePosition = true;
        this.DJProps.Add(prop19);
        Prop prop20 = World.CreateProp(this.RequestModel(54971870), new Vector3(-1604.075f, -3013.358f, -77.97968f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop20.FreezePosition = true;
        this.DJProps.Add(prop20);
        Prop prop21 = World.CreateProp(this.RequestModel(992125567), new Vector3(-1602.399f, -3011.906f, -77.91727f), new Vector3(0.0f, 0.0f, -77.00004f), false, false);
        prop21.FreezePosition = true;
        this.DJProps.Add(prop21);
        Prop prop22 = World.CreateProp(this.RequestModel(277657116), new Vector3(-1602.37f, -3012.604f, -77.91727f), new Vector3(0.0f, 0.0f, -90f), false, false);
        prop22.FreezePosition = true;
        this.DJProps.Add(prop22);
        Prop prop23 = World.CreateProp(this.RequestModel(1051204975), new Vector3(-1603.866f, -3013.417f, -78.80138f), new Vector3(0.0f, 0.0f, 180f), false, false);
        prop23.FreezePosition = true;
        this.DJProps.Add(prop23);
      }
      if (this.N_DryIce == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_dry_ice");
      if (this.N_DelivTruck == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_deliverytruck");
      if (this.N_trophies >= 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy04");
      if (this.N_trophies >= 2)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy05");
      if (this.N_trophies >= 3)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy07");
      if (this.N_trophies >= 4)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy09");
      if (this.N_trophies >= 5)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy08");
      if (this.N_trophies >= 6)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy11");
      if (this.N_trophies >= 7)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy10\uFEFF");
      if (this.N_trophies >= 8)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy03");
      if (this.N_trophies >= 9)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy01");
      if (this.N_trophies >= 9)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trophy02");
      if (this.N_WorkLights == 0)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_trad_lights\uFEFF");
      if (this.N_WorkLights == 1)
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num3, (InputArgument) "Int01_ba_Worklamps\uFEFF");
      if ((uint) this.N_Style > 0U)
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "int01_ba_style01");
      if ((uint) this.N_PodiumStyle > 0U)
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num3, (InputArgument) "Int01_ba_style01_podium");
      if ((Entity) this.DJped != (Entity) null)
        this.DJped.Delete();
      if ((Entity) this.DJped2 != (Entity) null)
        this.DJped2.Delete();
      if (this.N_DJ == 0)
      {
        this.DJped = World.CreatePed(this.RequestModel("ig_talmm"), new Vector3(-1603.215f, -3011.961f, -78.8f), -100f);
        Script.Wait(1);
        this.DJped.Rotation = new Vector3(0.0f, 0.0f, this.DJped.Rotation.Z + 0.0f);
        Script.Wait(100);
        this.DJped2 = World.CreatePed(this.RequestModel("ig_talcc"), new Vector3(-1603.152f, -3013.042f, -78.8f), -95f);
        Script.Wait(1);
        this.DJped2.Rotation = new Vector3(0.0f, 0.0f, this.DJped2.Rotation.Z + 0.0f);
        this.DJped.FreezePosition = true;
        this.DJped2.FreezePosition = true;
      }
      if (this.N_DJ == 1)
      {
        this.DJped = World.CreatePed(this.RequestModel("ig_dix"), new Vector3(-1603.072f, -3012.484f, -78.8f), -84f);
        Script.Wait(1);
        this.DJped.Rotation = new Vector3(0.0f, 0.0f, this.DJped.Rotation.Z + 0.0f);
      }
      if (this.N_DJ == 2)
      {
        this.DJped = World.CreatePed(this.RequestModel("ig_sol"), new Vector3(-1603.072f, -3012.484f, -78.8f), -84f);
        Script.Wait(1);
        this.DJped.Rotation = new Vector3(0.0f, 0.0f, this.DJped.Rotation.Z + 90f);
      }
      if (this.N_DJ == 3)
      {
        this.DJped = World.CreatePed(this.RequestModel("ig_djblamadon"), new Vector3(-1603.072f, -3012.484f, -78.8f), -84f);
        Script.Wait(1);
        this.DJped.Rotation = new Vector3(0.0f, 0.0f, this.DJped.Rotation.Z - 0.0f);
      }
      if ((Entity) this.DJped != (Entity) null)
      {
        this.DJped.FreezePosition = true;
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.DJped, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.DJped, (InputArgument) 17, (InputArgument) 1);
        Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) this.DJped, (InputArgument) 1);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.DJped, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.DJped, (InputArgument) 17, (InputArgument) 1);
        this.DJped.RelationshipGroup = 1;
        this.DJped.AlwaysKeepTask = true;
        if (this.N_DJ == 0)
          this.DJped.Task.PlayAnimation("anim@amb@nightclub@djs@tale_of_us@", "tou_dance_a_cc", 2000f, -1, true, -1f);
        if (this.N_DJ == 1)
          this.DJped.Task.PlayAnimation("anim@amb@nightclub@djs@dixon@", "dixn_dance_a_dixon", 2000f, -1, true, -1f);
        if (this.N_DJ == 2)
          this.DJped.Task.PlayAnimation("anim@amb@nightclub@djs@solomun@", "sol_dance_a_sol", 2000f, -1, true, -1f);
        if (this.N_DJ == 3)
          this.DJped.Task.PlayAnimation("anim@amb@nightclub@djs@black_madonna@", "dance_a_loop_blamadon", 2000f, -1, true, -1f);
      }
      if ((Entity) this.DJped2 != (Entity) null)
      {
        this.DJped2.FreezePosition = true;
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.DJped2, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.DJped2, (InputArgument) 17, (InputArgument) 1);
        Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) this.DJped2, (InputArgument) 1);
        Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) this.DJped2, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x9F7794730795E019, (InputArgument) this.DJped2, (InputArgument) 17, (InputArgument) 1);
        this.DJped2.RelationshipGroup = 1;
        this.DJped2.AlwaysKeepTask = true;
        if (this.N_DJ == 0)
          this.DJped2.Task.PlayAnimation("anim@amb@nightclub@djs@tale_of_us@", "tou_dance_a_cc", 2000f, -1, true, -1f);
        if (this.N_DJ == 1)
          this.DJped2.Task.PlayAnimation("anim@amb@nightclub@djs@dixon@", "dixn_dance_a_dixon", 2000f, -1, true, -1f);
        if (this.N_DJ == 2)
          this.DJped2.Task.PlayAnimation("anim@amb@nightclub@djs@solomun@", "sol_dance_a_sol", 2000f, -1, true, -1f);
        if (this.N_DJ == 3)
          this.DJped2.Task.PlayAnimation("anim@amb@nightclub@djs@black_madonna@", "dance_a_loop_blamadon", 2000f, -1, true, -1f);
      }
      if ((Entity) this.DancerA != (Entity) null)
        this.DancerA.Delete();
      if ((Entity) this.DancerB != (Entity) null)
        this.DancerB.Delete();
      if (this.N_DancerAGender == 0)
      {
        if (this.N_DancerAStyle == 0)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_f_y_dancerave_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
        if (this.N_DancerAStyle == 1)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_f_y_dancelthr_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
        if (this.N_DancerAStyle == 2)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_f_y_danceburl_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
      }
      if (this.N_DancerAGender == 1)
      {
        if (this.N_DancerAStyle == 0)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_m_y_dancerave_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
        if (this.N_DancerAStyle == 1)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_m_y_dancelthr_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
        if (this.N_DancerAStyle == 2)
        {
          this.DancerA = World.CreatePed(this.RequestModel("u_m_y_danceburl_01"), new Vector3(-1596.169f, -3007.991f, -79.15f), -173f);
          this.DisablePedFleeing(this.DancerA);
          this.DancerA.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
      }
      if (this.N_DancerBGender == 0)
      {
        if (this.N_DancerBStyle == 0)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_f_y_dancerave_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
        if (this.N_DancerBStyle == 1)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_f_y_dancelthr_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
        if (this.N_DancerBStyle == 2)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_f_y_danceburl_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        }
      }
      if (this.N_DancerBGender == 1)
      {
        if (this.N_DancerBStyle == 0)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_m_y_dancerave_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
        if (this.N_DancerBStyle == 1)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_m_y_dancelthr_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
        if (this.N_DancerBStyle == 2)
        {
          this.DancerB = World.CreatePed(this.RequestModel("u_m_y_danceburl_01"), new Vector3(-1598.478f, -3015.765f, -79.15f), -40f);
          this.DisablePedFleeing(this.DancerB);
          this.DancerB.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
        }
      }
      if ((Entity) this.DancerA != (Entity) null)
        this.DancerA.FreezePosition = true;
      if ((Entity) this.DancerB != (Entity) null)
        this.DancerB.FreezePosition = true;
      Vector3 outsideClubnamePos = this.OutsideClubnamePos;
      if (true)
      {
        if (this.N_ClubName == 1)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_studio"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 2)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_omega"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 3)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_technologie"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 4)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_gefangnis"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 5)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_maison"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 6)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_tonys"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 7)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_palace"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 8)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_paradise"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
        if (this.N_ClubName == 9)
        {
          this.ClubNameProp = World.CreateProp(this.RequestModel("ba_prop_sign_galaxy"), this.OutsideClubnamePos, true, false);
          this.ClubNameProp.Rotation = new Vector3(0.0f, 0.0f, this.OutsideClubnameHeading);
          this.ClubNameProp.FreezePosition = true;
        }
      }
      if (this.GunLockerBought != 1)
        ;
      if (this.GunLockerBought != 0)
        ;
      if ((Entity) this.Chair_A != (Entity) null)
        this.Chair_A.Delete();
      if ((Entity) this.Chair_B != (Entity) null)
        this.Chair_B.Delete();
      if ((Entity) this.Chair_C != (Entity) null)
        this.Chair_C.Delete();
      if (this.N_Style == 0)
      {
        this.Chair_A = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_01"), new Vector3(-1619.764f, -3011.447f, -76.1f), new Vector3(0.0f, 0.0f, 160f), true, false);
        this.Chair_A.FreezePosition = true;
        this.Chair_B = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_01"), new Vector3(-1617.602f, -3013.105f, -76.1f), new Vector3(0.0f, 0.0f, 25f), true, false);
        this.Chair_B.FreezePosition = true;
        this.Chair_C = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_01"), new Vector3(-1506.9f, -3032.2f, -80.2f), new Vector3(0.0f, 0.0f, -25f), true, false);
        this.Chair_C.FreezePosition = true;
      }
      if (this.N_Style == 1)
      {
        this.Chair_A = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_03"), new Vector3(-1619.764f, -3011.447f, -76.1f), new Vector3(0.0f, 0.0f, 160f), true, false);
        this.Chair_A.FreezePosition = true;
        this.Chair_B = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_03"), new Vector3(-1617.602f, -3013.105f, -76.1f), new Vector3(0.0f, 0.0f, 25f), true, false);
        this.Chair_B.FreezePosition = true;
        this.Chair_C = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_03"), new Vector3(-1506.9f, -3032.2f, -80.2f), new Vector3(0.0f, 0.0f, -25f), true, false);
        this.Chair_C.FreezePosition = true;
      }
      if (this.N_Style == 2)
      {
        this.Chair_A = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_02"), new Vector3(-1619.764f, -3011.447f, -76.1f), new Vector3(0.0f, 0.0f, 160f), true, false);
        this.Chair_A.FreezePosition = true;
        this.Chair_B = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_02"), new Vector3(-1617.602f, -3013.105f, -76.1f), new Vector3(0.0f, 0.0f, 25f), true, false);
        this.Chair_B.FreezePosition = true;
        this.Chair_C = World.CreateProp(this.RequestModel("ba_prop_battle_club_chair_02"), new Vector3(-1506.9f, -3032.2f, -80.2f), new Vector3(0.0f, 0.0f, -25f), true, false);
        this.Chair_C.FreezePosition = true;
      }
      foreach (Ped dancer in this.Dancers)
      {
        if ((Entity) dancer != (Entity) null)
          dancer.Delete();
      }
      string Name1 = "";
      string Name2 = "";
      if (this.N_DancerAGender == 0)
      {
        if (this.N_DancerAStyle == 0)
          Name2 = "u_f_y_dancerave_01";
        if (this.N_DancerAStyle == 1)
          Name2 = "u_f_y_dancelthr_01";
        if (this.N_DancerAStyle == 2)
          Name2 = "u_f_y_danceburl_01";
      }
      if (this.N_DancerAGender == 1)
      {
        if (this.N_DancerAStyle == 0)
          Name2 = "u_m_y_dancerave_01";
        if (this.N_DancerAStyle == 1)
          Name2 = "u_m_y_dancelthr_01";
        if (this.N_DancerAStyle == 2)
          Name2 = "u_m_y_danceburl_01";
      }
      if (this.N_DancerBGender == 0)
      {
        if (this.N_DancerBStyle == 0)
          Name1 = "u_f_y_dancerave_01";
        if (this.N_DancerBStyle == 1)
          Name1 = "u_f_y_dancelthr_01";
        if (this.N_DancerBStyle == 2)
          Name1 = "u_f_y_danceburl_01";
      }
      if (this.N_DancerBGender == 1)
      {
        if (this.N_DancerBStyle == 0)
          Name1 = "u_m_y_dancerave_01";
        if (this.N_DancerBStyle == 1)
          Name1 = "u_m_y_dancelthr_01";
        if (this.N_DancerBStyle == 2)
          Name1 = "u_m_y_danceburl_01";
      }
      System.Random random = new System.Random();
      List<object> objectList = new List<object>();
      string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt");
      string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@";
      foreach (string str2 in strArray)
        objectList.Add((object) str2);
      int index = random.Next(0, objectList.Count);
      Ped ped1 = World.CreatePed(this.RequestModel(Name2), new Vector3(-1592.356f, -3004.987f, -77f));
      ped1.Rotation = new Vector3(0.0f, 0.0f, -180f);
      int num4 = random.Next(0, 100);
      if (num4 < 50)
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__528.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__528.\u003C\u003Ep__0 = CallSite<Action<CallSite, Tasks, string, object, float, int, bool, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "PlayAnimation", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__528.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__528.\u003C\u003Ep__0, ped1.Task, str1, objectList[index], 256f, -1, true, -1f);
      }
      if (num4 >= 50)
      {
        if (ped1.Gender == Gender.Female)
          ped1.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        if (ped1.Gender == Gender.Male)
          ped1.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
      }
      this.DisablePedFleeing(ped1);
      this.Dancers.Add(ped1);
      Script.Wait(1);
      Ped ped2 = World.CreatePed(this.RequestModel(Name1), new Vector3(-1597.387f, -3004.987f, -77f));
      ped2.Rotation = new Vector3(0.0f, 0.0f, -180f);
      int num5 = random.Next(0, 100);
      if (num5 < 50)
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__528.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__528.\u003C\u003Ep__1 = CallSite<Action<CallSite, Tasks, string, object, float, int, bool, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "PlayAnimation", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__528.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__528.\u003C\u003Ep__1, ped2.Task, str1, objectList[index], 256f, -1, true, -1f);
      }
      if (num5 >= 50)
      {
        if (ped2.Gender == Gender.Female)
          ped2.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        if (ped2.Gender == Gender.Male)
          ped2.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
      }
      this.DisablePedFleeing(ped2);
      this.Dancers.Add(ped2);
      Script.Wait(1);
      Ped ped3 = World.CreatePed(this.RequestModel(Name2), new Vector3(-1602.432f, -3004.987f, -77f));
      ped3.Rotation = new Vector3(0.0f, 0.0f, -180f);
      int num6 = random.Next(0, 100);
      if (num6 < 50)
      {
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__528.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__528.\u003C\u003Ep__2 = CallSite<Action<CallSite, Tasks, string, object, float, int, bool, float>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "PlayAnimation", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[7]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__528.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__528.\u003C\u003Ep__2, ped3.Task, str1, objectList[index], 256f, -1, true, -1f);
      }
      if (num6 >= 50)
      {
        if (ped3.Gender == Gender.Female)
          ped3.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_female^2", 2000f, -1, true, -1f);
        if (ped3.Gender == Gender.Male)
          ped3.Task.PlayAnimation("anim@amb@nightclub@dancers@podium_dancers@", "hi_dance_facedj_17_v2_male^5", 2000f, -1, true, -1f);
      }
      this.DisablePedFleeing(ped3);
      this.Dancers.Add(ped3);
      if (this.N_Style == 0)
      {
        int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1604.664, (InputArgument) -3012.583, (InputArgument) -78.0);
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num7, (InputArgument) "int01_ba_style01\uFEFF");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) "int01_ba_style01\uFEFF");
      }
      if (this.N_PodiumStyle == 0)
      {
        int num7 = Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) -1604.664, (InputArgument) -3012.583, (InputArgument) -78.0);
        Function.Call(Hash._0x420BD37289EEE162, (InputArgument) num7, (InputArgument) "int01_ba_style01_podium\uFEFF\uFEFF");
        Function.Call(Hash._0x55E86AF2712B36A1, (InputArgument) num7, (InputArgument) "int01_ba_style01_podium\uFEFF\uFEFF");
      }
      if ((Entity) this.Poster != (Entity) null)
        this.Poster.Delete();
      if ((Entity) this.Poster1 != (Entity) null)
        this.Poster1.Delete();
      if ((Entity) this.Poster2 != (Entity) null)
        this.Poster2.Delete();
      if (this.N_DJ == 0)
      {
        this.Poster = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_01"), new Vector3(-1288.972f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster.FreezePosition = true;
        Script.Wait(1);
        this.Poster1 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_01"), new Vector3(-1289.471f, -654.6758f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster1.FreezePosition = true;
        Script.Wait(1);
        this.Poster2 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_01"), new Vector3(-1288.558f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster2.FreezePosition = true;
      }
      if (this.N_DJ == 1)
      {
        this.Poster = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_02"), new Vector3(-1288.972f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster.FreezePosition = true;
        Script.Wait(1);
        this.Poster1 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_02"), new Vector3(-1289.471f, -654.6758f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster1.FreezePosition = true;
        Script.Wait(1);
        this.Poster2 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_02"), new Vector3(-1288.558f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster2.FreezePosition = true;
      }
      if (this.N_DJ == 2)
      {
        this.Poster = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_03"), new Vector3(-1288.972f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster.FreezePosition = true;
        Script.Wait(1);
        this.Poster1 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_03"), new Vector3(-1289.471f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster1.FreezePosition = true;
        Script.Wait(1);
        this.Poster2 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_03"), new Vector3(-1288.558f, -654.6797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster2.FreezePosition = true;
      }
      if (this.N_DJ == 3)
      {
        this.Poster = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_04"), new Vector3(-1288.972f, -654.5797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster.FreezePosition = true;
        Script.Wait(1);
        this.Poster1 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_04"), new Vector3(-1289.471f, -654.4797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster1.FreezePosition = true;
        Script.Wait(1);
        this.Poster2 = World.CreateProp(this.RequestModel("ba_prop_battle_poster_skin_04"), new Vector3(-1288.558f, -654.3797f, 26.5f), new Vector3(0.0f, 0.0f, -140f), true, false);
        this.Poster2.FreezePosition = true;
      }
      this.DeleteDancers();
      this.SpawnDancers();
      this.WipedLens = false;
      this.TurnRadioOffON = true;
      this.SetupPrivacyGlass = false;
      this.OpenGunlockerDoor = false;
    }

    public void WhiskeyMethod()
    {
      try
      {
        switch (Class1.WhiskeyTaskScriptStatus)
        {
          case 0:
            this.Bottle.IsVisible = false;
            this.Glass.IsVisible = false;
            Class1.WhiskeyTaskScriptStatus = 1;
            break;
          case 1:
            Class1.Whiskey = this.Bottle;
            Class1.WhiskeyGlass = this.Glass;
            Class1.WhiskeyPosition = Class1.Whiskey.Position;
            Class1.WhiskeyRotation = Class1.Whiskey.Rotation;
            Class1.WhiskeyTaskScriptStatus = 2;
            break;
          case 2:
            Game.Player.Character.Task.PlayAnimation("mp_safehousewhiskey@", "enter", 2f, 15500, false, -1f);
            this.Bottle.IsVisible = true;
            Script.Wait(1500);
            Class1.Whiskey.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.06f, -0.04f, -0.06f), new Vector3(-60f, 0.0f, 0.0f));
            Class1.WhiskeyTaskScriptStatus = 3;
            break;
          case 3:
            if (Class1.Whiskey.IsAttachedTo((Entity) Game.Player.Character))
            {
              Script.Wait(2000);
              Class1.WhiskeyGlass.Position = Class1.Whiskey.GetOffsetInWorldCoords(new Vector3(0.0f, 0.2f, 0.0f));
              Class1.WhiskeyGlass.IsVisible = true;
              Class1.WhiskeyGlassPosition = Class1.WhiskeyGlass.Position;
              Class1.WhiskeyGlassRotation = Class1.WhiskeyGlass.Rotation;
              Script.Wait(1000);
              Class1.WhiskeyGlass.AttachTo((Entity) Game.Player.Character, Game.Player.Character.GetBoneIndex(Bone.IK_L_Hand), new Vector3(0.1f, 0.0f, 0.04f), new Vector3(-100f, 10f, 0.0f));
              Script.Wait(2000);
              Class1.Whiskey.Detach();
              Class1.Whiskey.Position = Class1.WhiskeyPosition;
              Class1.Whiskey.Rotation = Class1.WhiskeyRotation;
              Class1.WhiskeyTaskScriptStatus = 4;
              Class1.Whiskey.IsVisible = false;
              break;
            }
            break;
          case 4:
            if (Class1.WhiskeyGlass.IsAttachedTo((Entity) Game.Player.Character))
            {
              Script.Wait(4000);
              Class1.WhiskeyGlass.Detach();
              Class1.WhiskeyGlass.Position = Class1.WhiskeyGlassPosition;
              Class1.WhiskeyGlass.Rotation = Class1.WhiskeyGlassRotation;
              Class1.WhiskeyTaskScriptStatus = 5;
              this.DrunkLevel += 2f;
              this.Bottle.MarkAsNoLongerNeeded();
              this.Glass.MarkAsNoLongerNeeded();
              break;
            }
            break;
          case 5:
            if (Class1.DrunkStage == 1)
              ++Class1.DrunkStage;
            Class1.WhiskeyTaskScriptStatus = -1;
            break;
        }
        if (!Game.Player.IsDead && !Game.Player.Character.IsRagdoll)
          return;
        Class1.Whiskey.Detach();
        Class1.WhiskeyGlass.Detach();
        Class1.Whiskey.Position = Class1.WhiskeyPosition;
        Class1.Whiskey.Rotation = Class1.WhiskeyRotation;
        Class1.WhiskeyGlass.Position = Class1.WhiskeyGlassPosition;
        Class1.WhiskeyGlass.Rotation = Class1.WhiskeyGlassRotation;
        Class1.WhiskeyTaskScriptStatus = -1;
      }
      catch (Exception ex)
      {
      }
    }

    public void WineMethod()
    {
      try
      {
        Ped character = Game.Player.Character;
        Prop[] nearbyProps1 = World.GetNearbyProps(Game.Player.Character.Position, 3f);
        Prop[] nearbyProps2 = World.GetNearbyProps(Game.Player.Character.Position, 3f);
        int index1 = 0;
        for (int index2 = nearbyProps1.Length - 1; index1 <= index2; ++index1)
        {
          if (Class1.WineTaskScriptStatus == -1 && (Entity) Game.Player.Character.CurrentVehicle == (Entity) null && (Class1.WineModels.Contains(nearbyProps1[index1].Model) && (double) character.Position.DistanceTo(nearbyProps1[index1].Position) <= 1.0))
          {
            this.DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to Drink Wine");
            if (Game.IsControlJustPressed(0, GTA.Control.Context))
            {
              Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
              Class1.Wine = nearbyProps1[index1];
              Class1.WineTaskScriptStatus = 0;
            }
          }
        }
        switch (Class1.WineTaskScriptStatus)
        {
          case 0:
            Class1.WineTaskScriptStatus = 1;
            break;
          case 1:
            Class1.WinePosition = Class1.Wine.Position;
            Class1.WineRotation = Class1.Wine.Rotation;
            Class1.WineTaskScriptStatus = 2;
            break;
          case 2:
            int index3 = 0;
            for (int index2 = nearbyProps2.Length - 1; index3 <= index2; ++index3)
            {
              if (Class1.WineGlassModels.Contains(nearbyProps2[index3].Model))
                Class1.WineGlass = nearbyProps2[index3];
            }
            Game.Player.Character.Task.PlayAnimation("mp_safehousewine@", "drinking_wine", 2f, 15500, false, -1f);
            Script.Wait(1000);
            Class1.Wine.AttachTo((Entity) character, character.GetBoneIndex(Bone.PH_R_Hand), new Vector3(0.13f, -0.1f, -0.12f), new Vector3(-60f, 0.0f, 0.0f));
            Class1.WineTaskScriptStatus = 3;
            break;
          case 3:
            if (Class1.Wine.IsAttachedTo((Entity) character))
            {
              Class1.WineGlassPosition = Class1.WineGlass.Position;
              Class1.WineGlassRotation = Class1.WineGlass.Rotation;
              Script.Wait(500);
              Class1.WineGlass.AttachTo((Entity) character, character.GetBoneIndex(Bone.PH_L_Hand), new Vector3(0.1f, -0.09f, 0.05f), new Vector3(-100f, 10f, 0.0f));
              Class1.WineTaskScriptStatus = 4;
              ++this.DrunkLevel;
              break;
            }
            break;
          case 4:
            if (Class1.WineGlass.IsAttachedTo((Entity) character))
            {
              Script.Wait(5000);
              Class1.Wine.Detach();
              Class1.Wine.Position = Class1.WinePosition;
              Class1.Wine.Rotation = Class1.WineRotation;
              Script.Wait(9000);
              Class1.WineGlass.Detach();
              Class1.WineGlass.Position = Class1.WineGlassPosition;
              Class1.WineGlass.Rotation = Class1.WineGlassRotation;
              Class1.WineTaskScriptStatus = 5;
              break;
            }
            break;
          case 5:
            Class1.WineTaskScriptStatus = -1;
            break;
        }
        if (!Game.Player.IsDead && !Game.Player.Character.IsRagdoll)
          return;
        Class1.Wine.Detach();
        Class1.WineGlass.Detach();
        Class1.Wine.Position = Class1.WinePosition;
        Class1.Wine.Rotation = Class1.WineRotation;
        Class1.WineGlass.Position = Class1.WineGlassPosition;
        Class1.WineGlass.Rotation = Class1.WineGlassRotation;
        Class1.WineTaskScriptStatus = -1;
      }
      catch
      {
      }
    }

    public void Drinks()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.DrinksMenu, nameof (Drinks));
      this.GUIMenus.Add(uiMenu);
      this.GUIMenus.Add(uiMenu);
      UIMenuItem DrinkA = new UIMenuItem("Pisswasser                                               $25");
      uiMenu.AddItem(DrinkA);
      UIMenuItem DrinkB = new UIMenuItem("Vodka Shot                                              $75");
      uiMenu.AddItem(DrinkB);
      UIMenuItem DrinkC = new UIMenuItem("The Mount Whiskey Shot                       $250");
      uiMenu.AddItem(DrinkC);
      UIMenuItem DrinkD = new UIMenuItem("Richard's Whiskey Shot                       $1,000");
      uiMenu.AddItem(DrinkD);
      UIMenuItem DrinkE = new UIMenuItem("Macbeth Whiskey Shot                       $5,000");
      uiMenu.AddItem(DrinkE);
      UIMenuItem DrinkF = new UIMenuItem("Bleuter'd Champaine Slver                $30,000");
      uiMenu.AddItem(DrinkF);
      UIMenuItem DrinkG = new UIMenuItem("Bleuter'd Champaine Gold                $50,000");
      uiMenu.AddItem(DrinkG);
      UIMenuItem DrinkH = new UIMenuItem("Bleuter'd Champaine Diamond        $150,000");
      uiMenu.AddItem(DrinkH);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == DrinkH)
        {
          if (Game.Player.Money >= 150000)
          {
            Game.Player.Money -= 150000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed_03"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 4500, false, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkG)
        {
          if (Game.Player.Money >= 50000)
          {
            Game.Player.Money -= 50000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed_02"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 4500, false, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkF)
        {
          if (Game.Player.Money >= 30000)
          {
            Game.Player.Money -= 30000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("ba_prop_battle_champ_closed"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            this.IsDrinking = true;
            Game.Player.Character.Task.PlayAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one", 5f, 4500, false, 0.0f);
            this.Effect = 6;
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.Champaine, (InputArgument) Game.Player.Character, (InputArgument) Game.Player.Character.GetBoneIndex(Bone.PH_R_Hand), (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            this.modMenuPool.CloseAllMenus();
            Game.Player.Character.Weapons.Select(WeaponHash.BZGas);
            Game.Player.Character.FreezePosition = true;
            Game.Player.Character.GetBoneCoord(Bone.PH_R_Hand, new Vector3(-0.05f, 0.0f, -0.05f));
            Script.Wait(5000);
            Game.Player.Character.HasGravity = true;
            Game.Player.Character.FreezePosition = false;
            this.Champaine.FreezePosition = false;
            this.Champaine.HasCollision = true;
            this.DrinkTimer = 0;
            Game.Player.Character.Task.ClearAnimation("anim@heists@heist_safehouse_intro@wine@window", "wine_window_part_one");
            Game.Player.Character.Task.ClearAll();
            Game.Player.Character.Task.ClearAllImmediately();
            this.Champaine.Detach();
            this.DrunkLevel += 5f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkE)
        {
          if (Game.Player.Money >= 5000)
          {
            Game.Player.Money -= 5000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.FreezePosition = true;
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 3;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 9f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkD)
        {
          if (Game.Player.Money >= 1000)
          {
            Game.Player.Money -= 1000;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 3;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 12f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkC)
        {
          if (Game.Player.Money >= 250)
          {
            Game.Player.Money -= 250;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_cs_whiskey_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 1;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 14f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item == DrinkB)
        {
          if (Game.Player.Money >= 75)
          {
            Game.Player.Money -= 75;
            Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
            Prop prop = World.CreateProp(this.RequestModel("prop_vodka_bottle"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
            prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
            this.Champaine = prop;
            this.Champ.Add(prop);
            Class1.WhiskeyTaskScriptStatus = 0;
            this.Bottle = this.Champaine;
            this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
            this.IsDrinking = true;
            this.Effect = 0;
            this.modMenuPool.CloseAllMenus();
            this.DrunkLevel += 16f;
            if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
            if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
            {
              Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
              Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
            }
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
        }
        if (item != DrinkA)
          return;
        if (Game.Player.Money >= 25)
        {
          Game.Player.Money -= 25;
          Game.Player.Character.Weapons.Select(WeaponHash.Unarmed);
          Prop prop = World.CreateProp(this.RequestModel("prop_sh_beer_pissh_01"), Game.Player.Character.GetOffsetInWorldCoords(new Vector3(5f, 0.0f, -1f)), false, false);
          prop.Position = Game.Player.Character.GetBoneCoord(Bone.IK_R_Hand, new Vector3(0.0f, 0.0f, 0.0f));
          this.Champaine = prop;
          this.Champ.Add(prop);
          Class1.WhiskeyTaskScriptStatus = 0;
          this.Bottle = this.Champaine;
          this.Glass = World.CreateProp(this.RequestModel(1480049515), Game.Player.Character.Position, false, false);
          this.IsDrinking = true;
          this.Effect = 0;
          this.modMenuPool.CloseAllMenus();
          this.DrunkLevel += 6f;
          if ((double) this.DrunkLevel >= 8.0 && (double) this.DrunkLevel < 16.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@MODERATEDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
          if ((double) this.DrunkLevel >= 16.0 && (double) this.DrunkLevel < 24.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@SLIGHTLYDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
          if ((double) this.DrunkLevel >= 24.0 && (double) this.DrunkLevel < 36.0)
          {
            Function.Call(Hash._0x6EA47DAE7FAD0EED, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK");
            Function.Call(Hash._0xAF8A94EDE7712BEF, (InputArgument) Game.Player.Character, (InputArgument) "MOVE_M@DRUNK@VERYDRUNK", (InputArgument) 1f);
          }
        }
        else
          UI.Notify(this.GetHostName() + " : You do not have enough money for this Drink!");
      });
    }

    public void SetBanner(UIMenu menu) => menu.SetBannerType(this.RectangleGUI);

    public void CreateBanner()
    {
      this.RectangleGUI = new UIResRectangle();
      this.RectangleGUI.Color = Color.FromArgb((int) byte.MaxValue, 0, 0, 0);
    }

    private void Setup()
    {
      this.AddCrowdSpawns();
      this.STLoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.waittime = this.Allstocks.waittime;
      this.Entry = new Vector3(-1285.281f, -651.9348f, 25.5f);
      this.Exit = new Vector3(-1569.409f, -3017.231f, -75.3f);
      this.Entry2 = new Vector3(-1181.11f, -752.158f, 18.2f);
      this.Exit2 = new Vector3(-1618.54f, -2998.86f, -79.5f);
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_0_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_1_dlc_int_01_ba_milo_");
      Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) "ba_int_placement_ba_interior_2_dlc_int_01_ba_milo_");
      this.MenuMarker = new Vector3(-1618f, -3012f, -76f);
      this.SetupMarker();
      this.modMenuPool3 = new MenuPool();
      this.modMenuPool4 = new MenuPool();
      this.modMenuPool = new MenuPool();
      this.mainMenu = new UIMenu("After Hours", "Select an Option");
      this.GUIMenus.Add(this.mainMenu);
      this.modMenuPool.Add(this.mainMenu);
      this.MainStuffMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Purchase Options");
      this.GUIMenus.Add(this.MainStuffMenu);
      UIMenuItem OpenGUI = new UIMenuItem("         Open Nightclub Management      ");
      this.MainStuffMenu.AddItem(OpenGUI);
      this.MainStuffMenu.AddItem(new UIMenuItem("                                        "));
      this.MainStuffMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != OpenGUI)
          return;
        this.Screen = 0.0f;
        this.frame = 0;
        this.NightclubManagementOn = false;
        this.SecuroservCargoOn = false;
        this.SecuroservVehicleOn = false;
        this.HangerCargoCrateGUION = false;
        this.AdhawlScaleOn = false;
        this.BunkerLogisiticsGUIOn = false;
        this.NightclubManagementOn = true;
        this.NC_safeCapacityCrt = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 10.ToString() + "]", this.NC_safeCapacityCrt);
        this.Config.SetValue<float>("Nightclub_Management", "safeCapacityCrt", this.NC_safeCapacityCrt);
        this.Config.Save();
        this.GUIOn = true;
        UI.Notify("Open GUI");
      });
      this.methgarage = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Purchase Options");
      this.GUIMenus.Add(this.methgarage);
      this.ProductStock = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Product Options");
      this.GUIMenus.Add(this.ProductStock);
      this.FalseAdvertising = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "False Advertising (Missions)");
      this.GUIMenus.Add(this.FalseAdvertising);
      this.SpecialVehicleOptions = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Purchase/Use a Special Vehicle");
      this.GUIMenus.Add(this.SpecialVehicleOptions);
      this.ExteriorOptions = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Nightclub Options");
      this.GUIMenus.Add(this.ExteriorOptions);
      this.SpecialMissions = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Special Missions (Missions)");
      this.GUIMenus.Add(this.SpecialMissions);
      this.NightClubBuyNewLoc = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Change Nightclub Locations");
      this.GUIMenus.Add(this.NightClubBuyNewLoc);
      this.Misc = this.modMenuPool.AddSubMenu(this.MainStuffMenu, "Misc");
      this.GUIMenus.Add(this.Misc);
      this.mainMenu3 = new UIMenu("Garage Options", "Select an Option");
      this.GUIMenus.Add(this.mainMenu3);
      this.modMenuPool3.Add(this.mainMenu3);
      this.Options3 = this.modMenuPool3.AddSubMenu(this.mainMenu3, "Options");
      this.GUIMenus.Add(this.Options3);
      this.mainMenu4 = new UIMenu("Garage Options", "Select an Option");
      this.GUIMenus.Add(this.mainMenu4);
      this.modMenuPool4.Add(this.mainMenu4);
      this.GarageMenu1 = this.modMenuPool4.AddSubMenu(this.mainMenu4, "Options");
      this.GUIMenus.Add(this.GarageMenu1);
      this.weaponsMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Customize Weapons");
      this.GUIMenus.Add(this.weaponsMenu);
      this.GunlockerMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Customize Weapons");
      this.GUIMenus.Add(this.GunlockerMenu);
      this.WoredrobeMainMenu = new UIMenu("Wardrobe", "Select an Option");
      this.GUIMenus.Add(this.WoredrobeMainMenu);
      this.modMenuPool.Add(this.WoredrobeMainMenu);
      this.WoredrobeMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Change Clothes");
      this.GUIMenus.Add(this.WoredrobeMenu);
      this.DrinksMenu = this.modMenuPool.AddSubMenu(this.mainMenu, "Drinks");
      this.SetupGarage(this.GarageMenu1);
      this.HouseOptions3();
      this.Setupbuisness();
      this.SetupSpecialVehicles();
      this.SetupProduct();
      this.SetupFalseAdvertising();
      this.SetupNightclubOptions();
      this.Drinks();
      this.MiscMenu();
      this.SetupSpecialMissions();
      this.NightClubBuyMenu();
      this.SetupWeapons();
      this.WareDrobe();
      this.LeanPos.Add(new Vector3(-1598.65f, -3007.789f, -77f));
      this.LeanPos.Add(new Vector3(-1596.055f, -3007.789f, -77f));
      this.LeanPos.Add(new Vector3(-1593.61f, -3007.789f, -77f));
      this.LeanPos.Add(new Vector3(-1590.863f, -3012.728f, -77f));
      this.DropPoint.Add(new Vector3(966f, -126f, 74f));
      this.DropPoint.Add(new Vector3(200f, 383f, 107f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-606f, 338f, 84f));
      this.DropPoint.Add(new Vector3(-1539f, -76f, 53f));
      this.DropPoint.Add(new Vector3(-2077f, -313f, 12f));
      this.DropPoint.Add(new Vector3(-1451f, -364f, 43f));
      this.DropPoint.Add(new Vector3(-587f, -1112f, 22f));
      this.DropPoint.Add(new Vector3(102.6f, 6634.6f, 30f));
      this.DropPoint.Add(new Vector3(-172.8f, 6452.8f, 29f));
      this.DropPoint.Add(new Vector3(-265.1f, 6335.5f, 30f));
      this.DropPoint.Add(new Vector3(-697.3f, 5772.9f, 15f));
      this.DropPoint.Add(new Vector3(-575.2f, 5335.6f, 68f));
      this.DropPoint.Add(new Vector3(35.9f, 6284.5f, 29f));
      this.DropPoint.Add(new Vector3(1724f, 6399.4f, 31f));
      this.DropPoint.Add(new Vector3(2467.7f, 4961.9f, 43f));
      this.DropPoint.Add(new Vector3(2104.9f, 4767.5f, 39f));
      this.DropPoint.Add(new Vector3(1501.6f, 3763.7f, 31f));
      this.DropPoint.Add(new Vector3(1374.5f, 3602.9f, 33f));
      this.DropPoint.Add(new Vector3(1689.4f, 3310.9f, 39f));
      this.DropPoint.Add(new Vector3(1989f, 3032f, 46f));
      this.DropPoint.Add(new Vector3(2320.1f, 2499.5f, 45f));
      this.DropPoint.Add(new Vector3(2365.2f, 2644.9f, 45f));
      this.DropPoint.Add(new Vector3(2411.1f, 3058.2f, 46f));
      this.DropPoint.Add(new Vector3(2812.8f, 1589.4f, 22f));
      this.DropPoint.Add(new Vector3(-1567.1f, 2770.7f, 15f));
      this.DropPoint.Add(new Vector3(-1911.4f, 2061f, 138f));
      this.DropPoint.Add(new Vector3(-310.8f, 2739.6f, 65f));
      this.DropPoint.Add(new Vector3(-288.5f, 2568.7f, 70f));
      this.DropPoint.Add(new Vector3(-85.6f, 2805.1f, 51f));
      this.DropPoint.Add(new Vector3(42.2f, 2786f, 56f));
      this.DropPoint.Add(new Vector3(216.7f, 2462.3f, 54f));
      this.currentbank = 1;
      this.MoneymodMenuPool = new MenuPool();
      this.MoneymainMenu = new UIMenu("Money Vault", "Select an Option");
      this.GUIMenus.Add(this.MoneymainMenu);
      this.MoneymodMenuPool.Add(this.MoneymainMenu);
      this.MoneyMenu = this.MoneymodMenuPool.AddSubMenu(this.MoneymainMenu, "Money Options");
      this.GUIMenus.Add(this.MoneyMenu);
      this.SetupMoneyMenu();
      this.STLoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      this.DeliverPoints();
      this.Now = this.GetDay();
      this.STmodMenuPool = new MenuPool();
      this.MethMenuPool = new MenuPool();
      this.WeedMenuPool = new MenuPool();
      this.CocaineMenuPool = new MenuPool();
      this.STmainMenu = new UIMenu("Biker Buisness", "Select an Option");
      this.GUIMenus.Add(this.STmainMenu);
      this.STmodMenuPool.Add(this.STmainMenu);
      this.Buy = this.STmodMenuPool.AddSubMenu(this.STmainMenu, "Buy");
      this.GUIMenus.Add(this.Buy);
      this.Sell = this.STmodMenuPool.AddSubMenu(this.STmainMenu, "Sell");
      this.GUIMenus.Add(this.Sell);
      this.Enter = this.STmodMenuPool.AddSubMenu(this.STmainMenu, "Enter");
      this.GUIMenus.Add(this.Enter);
      for (int index = 0; index < this.GUIMenus.Count; ++index)
        this.SetBanner(this.GUIMenus[index]);
    }

    public void WareDrobe()
    {
      List<object> items1 = new List<object>();
      items1.Add((object) "Save");
      items1.Add((object) "Load");
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1.ini");
      Slots.Add((object) "Slot2.ini");
      Slots.Add((object) "Slot3.ini");
      Slots.Add((object) "Slot4.ini");
      Slots.Add((object) "Slot5.ini");
      Slots.Add((object) "Slot6.ini");
      Slots.Add((object) "Slot7.ini");
      Slots.Add((object) "Slot8.ini");
      Slots.Add((object) "Slot9.ini");
      Slots.Add((object) "Slot10.ini");
      List<object> objectList = new List<object>()
      {
        (object) WeaponHash.Unarmed,
        (object) WeaponHash.Knife,
        (object) WeaponHash.Nightstick,
        (object) WeaponHash.Hammer,
        (object) WeaponHash.Hatchet,
        (object) WeaponHash.KnuckleDuster,
        (object) WeaponHash.Machete,
        (object) WeaponHash.PoolCue,
        (object) WeaponHash.Wrench,
        (object) WeaponHash.SwitchBlade,
        (object) WeaponHash.GolfClub,
        (object) WeaponHash.Flashlight
      };
      List<object> Colours = new List<object>();
      Colours.Add((object) "Outfit Default");
      Colours.Add((object) "Blue");
      Colours.Add((object) "Green");
      Colours.Add((object) "Red");
      Colours.Add((object) "Orange");
      Colours.Add((object) "Pink");
      Colours.Add((object) "Purple");
      Colours.Add((object) "White");
      Colours.Add((object) "Black");
      List<object> Outfits = new List<object>();
      Outfits.Add((object) "Soldier");
      Outfits.Add((object) "Cloaker");
      Outfits.Add((object) "Hacker");
      Outfits.Add((object) "Juggernaut");
      Outfits.Add((object) "Arena War A");
      Outfits.Add((object) "Arena War B");
      Outfits.Add((object) "Space Marine");
      Outfits.Add((object) "Commando");
      Outfits.Add((object) "Space Suit");
      Outfits.Add((object) "Tron");
      List<object> Draw = new List<object>();
      List<object> Tex = new List<object>();
      Draw.Add((object) 0);
      Draw.Add((object) 1);
      Tex.Add((object) 0);
      List<object> items2 = new List<object>();
      items2.Add((object) " 0 FACE");
      items2.Add((object) "1 BEARD");
      items2.Add((object) "2 HAIRCUT");
      items2.Add((object) "3 SHIRT");
      items2.Add((object) "4 PANTS");
      items2.Add((object) "5 Hands / Gloves");
      items2.Add((object) "6 SHOES");
      items2.Add((object) "7 Eyes");
      items2.Add((object) "8 Accessories");
      items2.Add((object) "9 Mission Items/ Tasks");
      items2.Add((object) "10 Decals");
      items2.Add((object) "11 Collars and Inner Shirts");
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.WoredrobeMenu, "Change Outfit");
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem O = new UIMenuListItem("", Outfits, 0);
      uiMenu1.AddItem((UIMenuItem) O);
      O.Description = "While Using this outfit you will not be able to purchase anything due to being the MP male";
      UIMenuListItem C = new UIMenuListItem("Color : ", Colours, 0);
      uiMenu1.AddItem((UIMenuItem) C);
      C.Description = "Use this Colour Whenever possible or use Default";
      UIMenuItem Set = new UIMenuItem("Wear Outfit ");
      uiMenu1.AddItem(Set);
      Set.Description = "~y~ Warning ~w~ Lag is normal while applying outfits, simple alt tab out to avoid crash";
      UIMenuItem Remove = new UIMenuItem("Remove Outift ");
      uiMenu1.AddItem(Remove);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.WoredrobeMenu, "Change Clothes");
      this.GUIMenus.Add(uiMenu2);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.WoredrobeMenu, "Save/Load Outfit");
      this.GUIMenus.Add(uiMenu3);
      UIMenuListItem SVL = new UIMenuListItem("Function ", items1, 0);
      uiMenu3.AddItem((UIMenuItem) SVL);
      UIMenuListItem Sl = new UIMenuListItem("Slot ", Slots, 0);
      uiMenu3.AddItem((UIMenuItem) Sl);
      UIMenuItem Get = new UIMenuItem("Save");
      uiMenu3.AddItem(Get);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Get)
          return;
        string str = "";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Franklin)
          str = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Waredrobe//Franklin//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Michael)
          str = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Waredrobe//Michael//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.Trevor)
          str = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Waredrobe//Trevor//";
        if (Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeFemale01 || Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeMale01)
          str = "scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Waredrobe//Mp//";
        if (SVL.Index == 0)
        {
          Ped character = Game.Player.Character;
          Get.Text = "Save";
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__1 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, Class1, object> target = Class1.\u003C\u003Eo__567.\u003C\u003Ep__1.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, Class1, object>> p1 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__0 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = Class1.\u003C\u003Eo__567.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__567.\u003C\u003Ep__0, str, Slots[Sl.Index]);
          target((CallSite) p1, this, obj);
          int num1 = Function.Call<int>(Hash._0x898CC20EA75BACD8, (InputArgument) character, (InputArgument) 0);
          int num2 = Function.Call<int>(Hash._0xE131A28626F81AB2, (InputArgument) character, (InputArgument) 0);
          int num3 = Function.Call<int>(Hash._0xE3DD5F2A84B42281, (InputArgument) character, (InputArgument) 0);
          this.Config.SetValue<int>("-1 HAT", "Hat_Drawable", num1);
          this.Config.SetValue<int>("-1 Hat", "Hat_Tex", num2);
          this.Config.SetValue<int>("-1 Hat", "Hat_Palette", num3);
          int num4 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 0);
          int num5 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 0);
          this.Config.SetValue<int>("0 FACE", "Head_Drawable", num4);
          this.Config.SetValue<int>("0 FACE", "Head_Palette", num5);
          int num6 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 1);
          int num7 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 1);
          this.Config.SetValue<int>("1 BEARD", "BEARD_Drawable", num6);
          this.Config.SetValue<int>("1 BEARD", "BEARD_Palette", num7);
          int num8 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 2);
          int num9 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 2);
          this.Config.SetValue<int>("2 HAIRCUT", "HAIRCUT_Drawable", num8);
          this.Config.SetValue<int>("2 HAIRCUT", "HAIRCUT_Palette", num9);
          int num10 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 3);
          int num11 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 3);
          this.Config.SetValue<int>("3 SHIRT", "SHIRT_Drawable", num10);
          this.Config.SetValue<int>("3 SHIRT", "SHIRT_Palette", num11);
          int num12 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 4);
          int num13 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 4);
          this.Config.SetValue<int>("4 PANTS", "PANTS_Drawable", num12);
          this.Config.SetValue<int>("4 PANTS", "PANTS_Palette", num13);
          int num14 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 5);
          int num15 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 5);
          this.Config.SetValue<int>("5 Hands / Gloves", "Gloves_Drawable", num14);
          this.Config.SetValue<int>("5 Hands / Gloves", "Gloves_Palette", num15);
          int num16 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 6);
          int num17 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 6);
          this.Config.SetValue<int>("6 SHOES", "SHOES_Drawable", num16);
          this.Config.SetValue<int>("6 SHOES", "SHOES_Palette", num17);
          int num18 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 7);
          int num19 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 7);
          this.Config.SetValue<int>("7 Eyes", "Eyes_Drawable", num18);
          this.Config.SetValue<int>("7 Eyes", "Eyes_Palette", num19);
          int num20 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 8);
          int num21 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 8);
          this.Config.SetValue<int>("8 Accessories", "Accessories_Drawable", num20);
          this.Config.SetValue<int>("8 Accessories", "Accessories_Palette", num21);
          int num22 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 9);
          int num23 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 9);
          this.Config.SetValue<int>("9 Mission Items/ Tasks", "Mission_Drawable", num22);
          this.Config.SetValue<int>("9 Mission Items/ Tasks", "Mission_Palette", num23);
          int num24 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 10);
          int num25 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 10);
          this.Config.SetValue<int>("10 Decals", "Decals_Drawable", num24);
          this.Config.SetValue<int>("10 Decals", "Decals_Palette", num25);
          int num26 = Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) character, (InputArgument) 11);
          int num27 = Function.Call<int>(Hash._0x04A355E041E004E6, (InputArgument) character, (InputArgument) 11);
          this.Config.SetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Drawable", num26);
          this.Config.SetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Palette", num27);
          this.Config.Save();
          UI.Notify("Outfit saved!");
        }
        if (SVL.Index == 1)
        {
          Get.Text = "Load";
          Ped character = Game.Player.Character;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__3 = CallSite<Action<CallSite, Class1, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "LoadIniFile", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, Class1, object> target = Class1.\u003C\u003Eo__567.\u003C\u003Ep__3.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, Class1, object>> p3 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__3;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__2 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj = Class1.\u003C\u003Eo__567.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__567.\u003C\u003Ep__2, str, Slots[Sl.Index]);
          target((CallSite) p3, this, obj);
          int num1 = this.Config.GetValue<int>("0 FACE", "Head_Drawable", 0);
          int num2 = this.Config.GetValue<int>("0 FACE", "Head_Palette", 0);
          int num3 = this.Config.GetValue<int>("1 BEARD", "BEARD_Drawable", 0);
          int num4 = this.Config.GetValue<int>("1 BEARD", "BEARD_Palette", 0);
          int num5 = this.Config.GetValue<int>("2 HAIRCUT", "HAIRCUT_Drawable", 0);
          int num6 = this.Config.GetValue<int>("2 HAIRCUT", "HAIRCUT_Palette", 0);
          int num7 = this.Config.GetValue<int>("3 SHIRT", "SHIRT_Drawable", 0);
          int num8 = this.Config.GetValue<int>("3 SHIRT", "SHIRT_Palette", 0);
          int num9 = this.Config.GetValue<int>("4 PANTS", "PANTS_Drawable", 0);
          int num10 = this.Config.GetValue<int>("4 PANTS", "PANTS_Palette", 0);
          int num11 = this.Config.GetValue<int>("5 Hands / Gloves", "Gloves_Drawable", 0);
          int num12 = this.Config.GetValue<int>("5 Hands / Gloves", "Gloves_Palette", 0);
          int num13 = this.Config.GetValue<int>("6 SHOES", "SHOES_Drawable", 0);
          int num14 = this.Config.GetValue<int>("6 SHOES", "SHOES_Palette", 0);
          int num15 = this.Config.GetValue<int>("7 Eyes", "Eyes_Drawable", 0);
          int num16 = this.Config.GetValue<int>("7 Eyes", "Eyes_Palette", 0);
          int num17 = this.Config.GetValue<int>("8 Accessories", "Accessories_Drawable", 0);
          int num18 = this.Config.GetValue<int>("8 Accessories", "Accessories_Palette", 0);
          int num19 = this.Config.GetValue<int>("9 Mission Items/ Tasks", "Mission_Drawable", 0);
          int num20 = this.Config.GetValue<int>("9 Mission Items/ Tasks", "Mission_Palette", 0);
          int num21 = this.Config.GetValue<int>("10 Decals", "Decals_Drawable", 0);
          int num22 = this.Config.GetValue<int>("10 Decals", "Decals_Palette", 0);
          int num23 = this.Config.GetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Drawable", 0);
          int num24 = this.Config.GetValue<int>("11 Collars and Inner Shirts", "InnerShirts_Palette", 0);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) num1, (InputArgument) num2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) num3, (InputArgument) num4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) num5, (InputArgument) num6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) num7, (InputArgument) num8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) num9, (InputArgument) num10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) num11, (InputArgument) num12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) num13, (InputArgument) num14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) num15, (InputArgument) num16, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) num17, (InputArgument) num18, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) num19, (InputArgument) num20, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) num21, (InputArgument) num22, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) num23, (InputArgument) num24, (InputArgument) 1);
          int num25 = this.Config.GetValue<int>("-1 HAT", "Hat_Drawable", 0);
          int num26 = this.Config.GetValue<int>("-1 Hat", "Hat_Tex", 0);
          int num27 = this.Config.GetValue<int>("-1 Hat", "Hat_Palette", 0);
          if (num25 >= 1)
            Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) num25, (InputArgument) num26, (InputArgument) num27);
          else if (num25 < 1)
            Function.Call(Hash._0xCD8A7537A9B52F06, (InputArgument) Game.Player.Character);
        }
      });
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (SVL.Index == 0)
          Get.Text = "Save";
        if (SVL.Index != 1)
          return;
        Get.Text = "Load";
      });
      UIMenuListItem Comp1 = new UIMenuListItem("", items2, 0);
      uiMenu2.AddItem((UIMenuItem) Comp1);
      UIMenuListItem Drawable = new UIMenuListItem("Item : ", Draw, 0);
      uiMenu2.AddItem((UIMenuItem) Drawable);
      UIMenuListItem Texture = new UIMenuListItem("Texture : ", Tex, 0);
      uiMenu2.AddItem((UIMenuItem) Texture);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Set)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Wardrobe//Weapons.ini");
          foreach (WeaponHash weaponHash in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
          {
            if (Game.Player.Character.Weapons.HasWeapon(weaponHash))
            {
              Game.Player.Character.Weapons.Select(weaponHash, false);
              this.Config.SetValue<WeaponHash>(weaponHash.ToString(), "WeaponName", weaponHash);
              WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
              this.Liv = Game.Player.Character.Weapons.Current.Tint;
              int num = 0;
              foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
              {
                try
                {
                  if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash.GetHashCode(), (InputArgument) component.GetHashCode()))
                  {
                    if (Game.Player.Character.Weapons.Current.IsComponentActive(component))
                    {
                      this.Config.SetValue<bool>(weaponHash.ToString(), "HasComponent" + num.ToString(), true);
                      this.Config.SetValue<WeaponComponent>(weaponHash.ToString(), "Component" + num.ToString(), component);
                      ++num;
                      this.Config.Save();
                    }
                    if (!Game.Player.Character.Weapons.Current.IsComponentActive(component))
                    {
                      this.Config.SetValue<bool>(weaponHash.ToString(), "HasComponent" + num.ToString(), false);
                      this.Config.SetValue<WeaponComponent>(weaponHash.ToString(), "Component" + num.ToString(), component);
                      ++num;
                      this.Config.Save();
                    }
                  }
                }
                catch
                {
                  ++num;
                  UI.Notify("~y~ Warning ~w~: Weapon : " + weaponHash.ToString() + " Failed to save");
                }
              }
              this.Config.SetValue<WeaponTint>(weaponHash.ToString(), "Tint", this.Liv);
              this.Config.Save();
            }
          }
          this.ID_O = O.Index;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.ID_C = Class1.\u003C\u003Eo__567.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__567.\u003C\u003Ep__4, Colours[C.Index]);
          this.Setoutfit(O.Index);
          UI.Notify("~y~ Warning ~w~ Lag is normal while applying outfits");
          Script.Wait(2000);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__9 = CallSite<Action<CallSite, System.Type, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.ResultDiscarded, "Notify", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Action<CallSite, System.Type, object> target1 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__9.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Action<CallSite, System.Type, object>> p9 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__9;
          System.Type type = typeof (UI);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target2 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__8.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p8 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__8;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object, object> target3 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__7.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object, object>> p7 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__7;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string, object> target4 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__6.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string, object>> p6 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__6;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__567.\u003C\u003Ep__5 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.Constant, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__567.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__567.\u003C\u003Ep__5, "Player is wearing outfit : ~y~", Outfits[O.Index]);
          object obj2 = target4((CallSite) p6, obj1, "~w~ with colour : ~y~");
          object obj3 = Colours[C.Index];
          object obj4 = target3((CallSite) p7, obj2, obj3);
          object obj5 = target2((CallSite) p8, obj4, "~y~");
          target1((CallSite) p9, type, obj5);
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Wardrobe//Weapons.ini");
          foreach (WeaponHash weaponHash1 in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
          {
            WeaponHash weaponHash2 = this.Config.GetValue<WeaponHash>(weaponHash1.ToString(), "WeaponName", weaponHash1);
            if (weaponHash1 == weaponHash2)
            {
              Game.Player.Character.Weapons.Give(weaponHash1, 9999, true, true);
              Game.Player.Character.Weapons.Select(weaponHash1, true);
              this.Liv = this.Config.GetValue<WeaponTint>(weaponHash1.ToString(), "Tint", this.Liv);
              WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
              Game.Player.Character.Weapons.Current.Tint = this.Liv;
              this.Comp = 0;
              foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
              {
                try
                {
                  if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash1.GetHashCode(), (InputArgument) component.GetHashCode()))
                  {
                    if (this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                    {
                      Game.Player.Character.Weapons.Current.SetComponent(component, true);
                      ++this.Comp;
                    }
                    else if (!this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                      ++this.Comp;
                  }
                }
                catch
                {
                  ++this.Comp;
                }
              }
            }
          }
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
          Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 9999);
          Game.Player.Character.Weapons.Give(WeaponHash.Unarmed, 9999, true, true);
        }
        if (item != Remove || !(Game.Player.Character.Model == (GTA.Model) PedHash.FreemodeMale01))
          return;
        UI.Notify("taking off Outfit, this may take some time, lag spikes are normal");
        GTA.Model model = new GTA.Model(this.OldCharacter.Hash);
        model.Request(500);
        if (model.IsInCdImage && model.IsValid)
        {
          while (!model.IsLoaded)
            Script.Wait(100);
          Function.Call(Hash._0x00A1CADD00108836, (InputArgument) Game.Player, (InputArgument) model.Hash);
        }
        model.MarkAsNoLongerNeeded();
        this.LoadIniFile("scripts//Juggernaut.ini");
        foreach (WeaponHash weaponHash1 in (WeaponHash[]) Enum.GetValues(typeof (WeaponHash)))
        {
          WeaponHash weaponHash2 = this.Config.GetValue<WeaponHash>(weaponHash1.ToString(), "WeaponName", weaponHash1);
          if (weaponHash1 == weaponHash2)
          {
            Game.Player.Character.Weapons.Give(weaponHash1, 9999, true, true);
            Game.Player.Character.Weapons.Select(weaponHash1, true);
            this.Liv = this.Config.GetValue<WeaponTint>(weaponHash1.ToString(), "Tint", this.Liv);
            WeaponHash hash = Game.Player.Character.Weapons.Current.Hash;
            Game.Player.Character.Weapons.Current.Tint = this.Liv;
            this.Comp = 0;
            foreach (WeaponComponent component in (WeaponComponent[]) Enum.GetValues(typeof (WeaponComponent)))
            {
              try
              {
                if (Function.Call<bool>(Hash._0x5CEE3DF569CECAB0, (InputArgument) weaponHash1.GetHashCode(), (InputArgument) component.GetHashCode()))
                {
                  if (this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                  {
                    Game.Player.Character.Weapons.Current.SetComponent(component, true);
                    ++this.Comp;
                  }
                  else if (!this.Config.GetValue<bool>(weaponHash1.ToString(), "HasComponent" + this.Comp.ToString(), true))
                    ++this.Comp;
                }
              }
              catch
              {
                ++this.Comp;
              }
            }
          }
        }
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 177293209, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3686625920U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 4208062921U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 2024373456, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 961495388, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 3219281620U, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1432025498, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2009644972, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -879347409, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -1768145561, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) -2066285827, (InputArgument) 9999);
        Function.Call(Hash._0x78F0424C34306220, (InputArgument) Game.Player.Character, (InputArgument) 1785463520, (InputArgument) 9999);
        Game.Player.Character.Weapons.Give(WeaponHash.Unarmed, 9999, true, true);
        UI.Notify("Removed Outfit!");
      });
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == O)
          this.ID_O = O.Index;
        if (item != C || C != O)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__567.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__567.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.ID_C = Class1.\u003C\u003Eo__567.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__567.\u003C\u003Ep__10, Colours[C.Index]);
      });
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == Comp1)
        {
          Draw.Clear();
          Tex.Clear();
          int num1 = this.CheckClothes(1, Comp1.Index, 0);
          if (num1 > 0)
          {
            for (int index1 = 0; index1 < num1; ++index1)
              Draw.Add((object) index1);
          }
          int num2 = this.CheckClothes(2, Comp1.Index, 0);
          if (num2 > 0)
          {
            for (int index1 = 0; index1 < num2; ++index1)
              Tex.Add((object) index1);
          }
        }
        if (item == Drawable)
        {
          Tex.Clear();
          int num = this.CheckClothes(2, Comp1.Index, 0);
          if (num > 0)
          {
            for (int index1 = 0; index1 < num; ++index1)
              Tex.Add((object) index1);
          }
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index, (InputArgument) Drawable.Index, (InputArgument) Texture.Index, (InputArgument) 1);
        }
        if (item != Texture)
          return;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) Comp1.Index, (InputArgument) Drawable.Index, (InputArgument) Texture.Index, (InputArgument) 1);
      });
    }

    public int CheckClothes(int T, int RComp, int RDraw)
    {
      int num = 0;
      if (T == 1)
      {
        if (Function.Call<bool>(Hash._0xE825F6B6CEA7671D, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw))
          num = Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Game.Player.Character, (InputArgument) RComp);
      }
      if (T == 2)
      {
        if (Function.Call<bool>(Hash._0xE825F6B6CEA7671D, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw))
          num = Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Game.Player.Character, (InputArgument) RComp, (InputArgument) RDraw);
      }
      return num;
    }

    public void Setoutfit(int i)
    {
      Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
      if (Game.Player.Character.Model != (GTA.Model) PedHash.FreemodeMale01)
        this.OldCharacter = Game.Player.Character.Model;
      Function.Call(Hash._0xAA74EC0CB0AAEA2C, (InputArgument) Game.Player.Character, (InputArgument) 1.0);
      Function.Call(Hash._0x20510814175EA477, (InputArgument) Game.Player.Character);
      GTA.Model model = new GTA.Model(PedHash.FreemodeMale01);
      model.Request(500);
      if (model.IsInCdImage && model.IsValid)
      {
        while (!model.IsLoaded)
          Script.Wait(100);
        Function.Call(Hash._0x00A1CADD00108836, (InputArgument) Game.Player, (InputArgument) model.Hash);
      }
      model.MarkAsNoLongerNeeded();
      Ped character = Game.Player.Character;
      Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) -1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 17);
      bool flag = false;
      string idC = this.ID_C;
      if (i == 0)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 1)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 89, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 55, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 54, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 89, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 55, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 54, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 2 && idC.Equals("Outfit Default"))
      {
        if (!flag && !idC.Equals("Outfit Default"))
          UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        int num = new System.Random().Next(1, 100);
        if (num <= 25)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 38, (InputArgument) 0, (InputArgument) 1);
        if (num > 25 && num <= 50)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 112, (InputArgument) 0, (InputArgument) 1);
        if (num > 50 && num <= 75)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
        if (num > 75)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 104, (InputArgument) 25, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 125, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 68, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (i == 3)
      {
        if (idC.Equals("Blue"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Black") || idC.Equals("Outfit Default"))
        {
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 1, (InputArgument) 91, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 3, (InputArgument) 46, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 4, (InputArgument) 84, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 6, (InputArgument) 10, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 8, (InputArgument) 97, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 11, (InputArgument) 186, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Game.Player.Character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 4)
      {
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 13, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 15, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 275, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 5)
      {
        if (idC.Equals("Black"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 5, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("White"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 7, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 12, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 13, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 14, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 15, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Red"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 6, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 142, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 19, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 107, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 84, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 3, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 276, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 6)
      {
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 134, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 147, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 167, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 113, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 90, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 286, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 135, (InputArgument) 0);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 134, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 147, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 167, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 113, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 90, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 286, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 135, (InputArgument) 0);
        }
      }
      if (i == 7)
      {
        if (idC.Equals("Outfit Default"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 4, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 1, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 6, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 3, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 7, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 4, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 5, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 2, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 115, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 17, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 34, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 69, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 128, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i == 8)
      {
        if (idC.Equals("Green"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 8, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 8, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Purple"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 10, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 10, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Pink"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 11, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 11, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Orange"))
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 9, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 9, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (!flag)
        {
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
        if (idC.Equals("Outfit Default") || !flag)
        {
          if (!flag && !idC.Equals("Outfit Default"))
            UI.Notify("~y~Warning~w~ this Outfit did not have the specified color, setting to default, color chosen : " + idC);
          flag = true;
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 133, (InputArgument) 0, (InputArgument) 17);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 108, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 166, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 110, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 88, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 2, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 283, (InputArgument) 0, (InputArgument) 1);
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        }
      }
      if (i != 9)
        return;
      if (idC.Equals("Outfit Default"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 0, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Green"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 1, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 1, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 1, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 1, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("White"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 9, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 7, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 7, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 7, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Blue"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 3, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 3, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 3, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (idC.Equals("Black"))
      {
        flag = true;
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 10, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 10, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 10, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 10, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
      if (!flag)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x93376B65A266EB5F, (InputArgument) character, (InputArgument) 0, (InputArgument) 91, (InputArgument) 0, (InputArgument) 17);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 1, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 2, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 3, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 4, (InputArgument) 77, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 5, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 6, (InputArgument) 55, (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 7, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 8, (InputArgument) 130, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 9, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 10, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 11, (InputArgument) 178, (InputArgument) 0, (InputArgument) 1);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) character, (InputArgument) 12, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
      }
    }

    public void SetupMoneyMenu()
    {
      List<object> items = new List<object>();
      items.Add((object) "1");
      items.Add((object) "2");
      items.Add((object) "3");
      items.Add((object) "4");
      items.Add((object) "5");
      items.Add((object) "6");
      items.Add((object) "7");
      items.Add((object) "8");
      items.Add((object) "9");
      items.Add((object) "10");
      UIMenu uiMenu = this.MoneymodMenuPool.AddSubMenu(this.MoneyMenu, "Money Options");
      this.GUIMenus.Add(uiMenu);
      UIMenuListItem list5 = new UIMenuListItem("Vault: ", items, 0);
      uiMenu.AddItem((UIMenuItem) list5);
      UIMenuItem GetColor2 = new UIMenuItem("Change Bank Vault Number");
      uiMenu.AddItem(GetColor2);
      UIMenuItem WithDraw = new UIMenuItem("Withdraw");
      uiMenu.AddItem(WithDraw);
      UIMenuItem Deposit2 = new UIMenuItem("Deposit");
      uiMenu.AddItem(Deposit2);
      UIMenuItem balance = new UIMenuItem("Show Balance");
      uiMenu.AddItem(balance);
      UIMenuItem SFAB = new UIMenuItem("Show Total Account Balance");
      uiMenu.AddItem(SFAB);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SFAB)
        {
          long num1 = 0;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 1.ToString() + "]", this.MoneyStored);
          long num2 = num1 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 2.ToString() + "]", this.MoneyStored);
          long num3 = num2 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 3.ToString() + "]", this.MoneyStored);
          long num4 = num3 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 4.ToString() + "]", this.MoneyStored);
          long num5 = num4 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 5.ToString() + "]", this.MoneyStored);
          long num6 = num5 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 6.ToString() + "]", this.MoneyStored);
          long num7 = num6 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 7.ToString() + "]", this.MoneyStored);
          long num8 = num7 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 8.ToString() + "]", this.MoneyStored);
          long num9 = num8 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 9.ToString() + "]", this.MoneyStored);
          long num10 = num9 + (long) this.MoneyStored;
          this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + 10.ToString() + "]", this.MoneyStored);
          UI.Notify("Money in Account ~g~$" + (num10 + (long) this.MoneyStored).ToString("N"));
        }
        if (item == GetColor2)
        {
          this.LoadIniFile("scripts//scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          this.currentbank = list5.Index + 1;
          UI.Notify(this.GetHostName() + " : Vault Changed to:  " + this.currentbank.ToString());
        }
        if (item == WithDraw)
        {
          this.LoadIniFile("scripts//scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          this.Withdrawl();
        }
        if (item == Deposit2)
        {
          this.LoadIniFile("scripts//scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          this.Deposit();
        }
        if (item != balance)
          return;
        this.LoadIniFile("scripts//scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        UI.Notify(this.GetHostName() + " : Money in Vault ~b~" + this.currentbank.ToString() + "~w~, ~g~$" + this.MoneyStored.ToString("N"));
      });
    }

    private void Deposit()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if (int.Parse(userInput) <= Game.Player.Money)
      {
        this.MoneyStored = (float) int.Parse(userInput);
        Game.Player.Money -= int.Parse(userInput);
        float num = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored + num);
        this.Config.Save();
      }
      else
        UI.Notify("Agent 14  : boss you dont have that amount of money to deposit: value: " + int.Parse(userInput).ToString());
    }

    private void Withdrawl()
    {
      string userInput = Game.GetUserInput(12);
      if (!(userInput != ""))
        return;
      if ((double) int.Parse(userInput) <= (double) this.MoneyStored)
      {
        this.MoneyStored = this.Config.GetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored) - (float) int.Parse(userInput);
        Game.Player.Money += int.Parse(userInput);
        this.Config.SetValue<float>("ADDON2", "MONEYSTORED[" + this.currentbank.ToString() + "]", this.MoneyStored);
        this.Config.Save();
      }
      else
        UI.Notify("Agent 14 : boss you dont have that amount of money stored to withdraw, value: " + this.MoneyStored.ToString());
    }

    public void NightClubBuyMenu()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.NightClubBuyNewLoc, "Change NightClub Location");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Loc1 = new UIMenuItem("Del Perro : $0");
      uiMenu.AddItem(Loc1);
      UIMenuItem Loc2 = new UIMenuItem("Downtown Vinewood : $1,670,000");
      uiMenu.AddItem(Loc2);
      UIMenuItem Loc3 = new UIMenuItem("West Vinewood  : $1,700,000");
      uiMenu.AddItem(Loc3);
      UIMenuItem Loc4 = new UIMenuItem("Vespucci Canals  : $1,320,000");
      uiMenu.AddItem(Loc4);
      UIMenuItem Loc5 = new UIMenuItem("Strawberry  : $1,525,000");
      uiMenu.AddItem(Loc5);
      UIMenuItem Loc6 = new UIMenuItem("Mission Row : $1,440,000");
      uiMenu.AddItem(Loc6);
      UIMenuItem Loc7 = new UIMenuItem("La Mesa : $1,500,000");
      uiMenu.AddItem(Loc7);
      UIMenuItem Loc8 = new UIMenuItem("Cypress Flats  : $1,370,000 ");
      uiMenu.AddItem(Loc8);
      UIMenuItem Loc9 = new UIMenuItem("LSIA : $1,135,000");
      uiMenu.AddItem(Loc9);
      UIMenuItem Loc10 = new UIMenuItem("Elysian Island : $1,080,000");
      uiMenu.AddItem(Loc10);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Loc1)
        {
          if (Game.Player.Money >= 0)
          {
            Player player = Game.Player;
            player.Money = player.Money;
            this.NightClubLoc = 0;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc2)
        {
          if (Game.Player.Money >= 1670000)
          {
            Game.Player.Money -= 1670000;
            this.NightClubLoc = 1;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc3)
        {
          if (Game.Player.Money >= 1700000)
          {
            Game.Player.Money -= 1700000;
            this.NightClubLoc = 2;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc4)
        {
          if (Game.Player.Money >= 1320000)
          {
            Game.Player.Money -= 1320000;
            this.NightClubLoc = 3;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc5)
        {
          if (Game.Player.Money >= 1525000)
          {
            Game.Player.Money -= 1525000;
            this.NightClubLoc = 4;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc6)
        {
          if (Game.Player.Money >= 1440000)
          {
            Game.Player.Money -= 1440000;
            this.NightClubLoc = 5;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc7)
        {
          if (Game.Player.Money >= 1500000)
          {
            Game.Player.Money -= 1500000;
            this.NightClubLoc = 6;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc8)
        {
          if (Game.Player.Money >= 1370000)
          {
            Game.Player.Money -= 1370000;
            this.NightClubLoc = 7;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc9)
        {
          if (Game.Player.Money >= 1135000)
          {
            Game.Player.Money -= 1135000;
            this.NightClubLoc = 8;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        if (item == Loc10)
        {
          if (Game.Player.Money >= 1080000)
          {
            Game.Player.Money -= 1080000;
            this.NightClubLoc = 9;
            this.Config.SetValue<int>("Setup", "NightClubLoc", this.NightClubLoc);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : A new Nightclub Location has been purchased");
          }
          else
            UI.Notify(this.GetHostName() + " : You do not have enought money for this location  ");
        }
        this.SetNightclubLocation();
      });
    }

    private void SetupSpecialMissions()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.SpecialMissions, "Special Missions");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Race1 = new UIMenuItem("ExPatriot (Ported From Executive Business)");
      uiMenu.AddItem(Race1);
      Race1.Description = "This Special mission was ported from Executive Business, becuase it as for this mod orginally";
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Race1)
          return;
        UI.Notify("Office Assistant : Retrieve the Patriot Stretch and bring it to the Combined Vehicle Storage");
        if ((Entity) this.VtoGet != (Entity) null)
          this.VtoGet.Delete();
        if (this.VtoGetBlip != (Blip) null)
          this.VtoGetBlip.Remove();
        foreach (Ped guard in this.Guards)
        {
          if ((Entity) guard != (Entity) null)
            guard.Delete();
        }
        foreach (Ped ped in this.Driver)
        {
          if (this.Driver != null)
            ped.Delete();
        }
        this.VtoGet = World.CreateVehicle((GTA.Model) "PATRIOT2", new Vector3(-1490f, 147f, 54f), 45f);
        this.VtoGetBlip = World.CreateBlip(this.VtoGet.Position);
        this.VtoGet.IsPersistent = true;
        this.VtoGetBlip.Name = "Retrieve Patriot Stretch";
        this.VtoGetBlip.Sprite = BlipSprite.SportsCar;
        this.VtoGetBlip.Color = BlipColor.White;
        this.VtoGetBlip.Name = "Retrieve Patriot Stretch";
        this.VehicleSetup = true;
        this.Missionnum = 12;
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1467f, 157f, 54f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1491f, 165f, 54f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1483f, 158f, 54f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1467f, 145f, 45f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1500f, 144f, 55f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1480f, 138f, 55f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1477f, 165f, 55f)));
        this.Guards.Add(World.CreatePed((GTA.Model) PedHash.Bouncer01SMM, new Vector3(-1466f, 164f, 55f)));
        foreach (Ped guard in this.Guards)
        {
          guard.Weapons.Give(WeaponHash.SpecialCarbineMk2, 9999, true, true);
          guard.RelationshipGroup = 4;
          guard.IsEnemy = true;
        }
        this.Driver.Add(World.CreatePed((GTA.Model) "CSB_TonyPrince", new Vector3(-1186.21f, 282f, 69f)));
        this.GotCar = false;
        Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.VtoGet.Handle, (InputArgument) 0);
        this.VtoGet.PrimaryColor = VehicleColor.MatteWhite;
        this.VtoGet.SecondaryColor = VehicleColor.MetallicWhite;
        this.VtoGet.SetMod(VehicleMod.Livery, 17, true);
        this.VtoGet.SetMod(VehicleMod.Struts, 8, true);
        this.VtoGet.SetMod(VehicleMod.Hood, 2, true);
        this.VtoGet.NumberPlate = "PR2NCE";
        this.VtoGet.SetMod(VehicleMod.ArchCover, 4, true);
        this.VtoGet.WindowTint = VehicleWindowTint.PureBlack;
      });
    }

    public void MiscMenu()
    {
      List<object> objectList1 = new List<object>();
      foreach (int num in (VehicleHash[]) Enum.GetValues(typeof (VehicleHash)))
        objectList1.Add((object) (VehicleHash) num);
      List<object> VehicleColors = new List<object>();
      foreach (int num in (VehicleColor[]) Enum.GetValues(typeof (VehicleColor)))
        VehicleColors.Add((object) (VehicleColor) num);
      List<object> LogList = new List<object>();
      string[] logFile = File.ReadAllLines(this.ListPath);
      foreach (string str in logFile)
        LogList.Add((object) str);
      this.LoadIniFile(this.ListPath);
      List<object> objectList2 = new List<object>()
      {
        (object) "None",
        (object) "Super",
        (object) "Sport",
        (object) "Armoured",
        (object) "SportClassic",
        (object) "Compact",
        (object) "Coupe",
        (object) "Bikes",
        (object) "Offroad",
        (object) "Sedan",
        (object) "Suv",
        (object) "Vans"
      };
      List<object> objectList3 = new List<object>()
      {
        (object) true,
        (object) false
      };
      List<object> objectList4 = new List<object>()
      {
        (object) 100,
        (object) 95,
        (object) 90,
        (object) 85,
        (object) 80,
        (object) 75,
        (object) 70,
        (object) 65,
        (object) 60,
        (object) 55,
        (object) 50,
        (object) 45,
        (object) 40,
        (object) 35,
        (object) 30,
        (object) 25,
        (object) 20,
        (object) 15,
        (object) 10
      };
      List<object> objectList5 = new List<object>()
      {
        (object) "None",
        (object) "Male & Female",
        (object) "Male",
        (object) "Female",
        (object) "Female - Topless",
        (object) "Male & Female - Topless"
      };
      List<object> objectList6 = new List<object>()
      {
        (object) "NULL",
        (object) "NULL",
        (object) "NULL",
        (object) "NULL",
        (object) "NULL",
        (object) "NULL"
      };
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.Misc, "Misc");
      this.GUIMenus.Add(uiMenu1);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.Misc, "Outside Scene");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem uiMenuItem1 = new UIMenuItem("------------------Reset List-----------------------------");
      uiMenu2.AddItem(uiMenuItem1);
      UIMenuItem ResetL = new UIMenuItem("Reset Vehicle List");
      uiMenu2.AddItem(ResetL);
      UIMenuItem uiMenuItem2 = new UIMenuItem("------------------Search Method 1--------------------------");
      uiMenu2.AddItem(uiMenuItem2);
      UIMenuListItem Ve = new UIMenuListItem("Vehicle : ", LogList, 0);
      uiMenu2.AddItem((UIMenuItem) Ve);
      UIMenuItem VDName = new UIMenuItem("Vehicle Spawn Name  : Dukes2");
      uiMenu2.AddItem(VDName);
      UIMenuItem VName = new UIMenuItem("Vehicle Full Name  : Imponte Dukes");
      uiMenu2.AddItem(VName);
      UIMenuItem uiMenuItem3 = new UIMenuItem("------------------Search Method 2--------------------------");
      uiMenu2.AddItem(uiMenuItem3);
      UIMenuItem Search = new UIMenuItem("Enter Vehicle Name");
      uiMenu2.AddItem(Search);
      UIMenuItem uiMenuItem4 = new UIMenuItem("Search Term  : NULL");
      uiMenu2.AddItem(uiMenuItem4);
      UIMenuItem uiMenuItem5 = new UIMenuItem("Vehicle Spawn Name  : NULL");
      uiMenu2.AddItem(uiMenuItem5);
      UIMenuItem uiMenuItem6 = new UIMenuItem("Vehicle Full Name  : NULL");
      uiMenu2.AddItem(uiMenuItem6);
      UIMenuItem uiMenuItem7 = new UIMenuItem("------------------Purchase Vehicle--------------------------");
      uiMenu2.AddItem(uiMenuItem7);
      UIMenuListItem Primary = new UIMenuListItem("Primary Colour  : ", VehicleColors, 0);
      uiMenu2.AddItem((UIMenuItem) Primary);
      UIMenuListItem Secondary = new UIMenuListItem("Secondary Colour  : ", VehicleColors, 0);
      uiMenu2.AddItem((UIMenuItem) Secondary);
      UIMenuItem PuchaseV = new UIMenuItem("Purchase Vehicle : $0");
      uiMenu2.AddItem(PuchaseV);
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item != Ve)
          return;
        try
        {
          string[] separator = new string[2]{ " = ", "," };
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__580.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = Class1.\u003C\u003Eo__580.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__0, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName.Text = "Vehicle Spawn Name : " + this.Model;
            VName.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV.Text = "Purchase Vehicle : " + this.Price;
          }
        }
        catch
        {
        }
      });
      string SearchTerm;
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == ResetL)
        {
          if (LogList.Count > 0)
            LogList.Clear();
          logFile = File.ReadAllLines(this.ListPath);
          foreach (object obj in logFile)
            LogList.Add(obj);
          UI.Notify(this.GetHostName() + " Reset Vehicle List");
        }
        if (item == Search)
        {
          try
          {
            if (LogList.Count > 0)
              LogList.Clear();
            SearchTerm = Game.GetUserInput(32);
            SearchTerm.ToUpper();
            UI.Notify("Search Term : " + SearchTerm);
            bool flag = false;
            foreach (string str in logFile)
            {
              if (str.Contains(SearchTerm))
              {
                UI.Notify("Found Match");
                LogList.Add((object) str);
                flag = true;
                string[] separator = new string[2]
                {
                  " = ",
                  ","
                };
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__1 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__580.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                string[] strArray = Class1.\u003C\u003Eo__580.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__1, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
                for (int index1 = 0; index1 < strArray.Length; ++index1)
                {
                  this.Price = strArray[1];
                  this.Model = strArray[2];
                  this.man = strArray[0];
                  VDName.Text = "Vehicle Spawn Name : " + this.Model;
                  VName.Text = "Vehicle Full Name  : " + this.man;
                  PuchaseV.Text = "Purchase Vehicle : " + this.Price;
                }
              }
            }
            if (!flag)
            {
              UI.Notify("Found No Match");
              logFile = File.ReadAllLines(this.ListPath);
              foreach (object obj in logFile)
                LogList.Add(obj);
              string[] separator = new string[2]
              {
                " = ",
                ","
              };
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__2 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__580.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string[] strArray = Class1.\u003C\u003Eo__580.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__2, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
              for (int index1 = 0; index1 < strArray.Length; ++index1)
              {
                this.Price = strArray[1];
                this.Model = strArray[2];
                this.man = strArray[0];
                VDName.Text = "Vehicle Spawn Name : " + this.Model;
                VName.Text = "Vehicle Full Name  : " + this.man;
                PuchaseV.Text = "Purchase Vehicle : " + this.Price;
              }
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Invalid Search Term Entered");
          }
        }
        if (item != PuchaseV)
          return;
        if ((double) Game.Player.Money > (double) this.M)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__580.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = Class1.\u003C\u003Eo__580.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__3, LogList[Ve.Index]).Split(new string[2]
          {
            " = ",
            ","
          }, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName.Text = "Vehicle Spawn Name : " + this.Model;
            VName.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV.Text = "Purchase Vehicle : " + this.Price;
          }
          Game.Player.Money -= int.Parse(this.Price);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__580.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, VehicleColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleColor), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.PrimaryColor = Class1.\u003C\u003Eo__580.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__4, VehicleColors[Primary.Index]);
          this.Config.SetValue<VehicleColor>("Misc", "PrimaryColor", this.PrimaryColor);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__580.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, VehicleColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleColor), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.SecondaryColor = Class1.\u003C\u003Eo__580.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__5, VehicleColors[Secondary.Index]);
          this.Config.SetValue<VehicleColor>("Misc", "SecondaryColor", this.SecondaryColor);
          this.Config.SetValue<string>("Misc", "LuxuryCarHash", this.man);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Outside Vehicle has been Changed!");
          logFile = File.ReadAllLines(this.ListPath);
          foreach (object obj in logFile)
            LogList.Add(obj);
        }
        else
          UI.Notify(this.GetHostName() + " You do not have enought money to purchase this vehicle!");
      });
      List<object> MColour = new List<object>();
      MColour.Add((object) "Green");
      MColour.Add((object) "Blue");
      MColour.Add((object) "Yellow");
      MColour.Add((object) "Red");
      MColour.Add((object) "Purple");
      MColour.Add((object) "Pink");
      List<object> BColour = new List<object>();
      BColour.Add((object) BlipColor.Green);
      BColour.Add((object) BlipColor.Blue);
      BColour.Add((object) BlipColor.Yellow);
      BColour.Add((object) BlipColor.Red);
      BColour.Add((object) BlipColor.Purple);
      BColour.Add((object) BlipColor.Pink);
      List<object> UiColour = new List<object>();
      UiColour.Add((object) "   g   ");
      UiColour.Add((object) "   b   ");
      UiColour.Add((object) "   y  ");
      UiColour.Add((object) "   r   ");
      UiColour.Add((object) "   p   ");
      UiColour.Add((object) "   m   ");
      UIMenuListItem MC = new UIMenuListItem("Marker Color : ", MColour, 0);
      uiMenu1.AddItem((UIMenuItem) MC);
      UIMenuListItem BC = new UIMenuListItem("Blip Color : ", BColour, 0);
      uiMenu1.AddItem((UIMenuItem) BC);
      UIMenuItem uiMenuItem8 = new UIMenuItem("Current Host : " + this.GetHostName());
      uiMenu1.AddItem(uiMenuItem8);
      UIMenuItem SetHN = new UIMenuItem("Set Host Name");
      uiMenu1.AddItem(SetHN);
      UIMenuListItem uiC = new UIMenuListItem("UI Color : ", UiColour, 0);
      uiMenu1.AddItem((UIMenuItem) uiC);
      UIMenuItem Setall = new UIMenuItem("Save All");
      uiMenu1.AddItem(Setall);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == SetHN)
        {
          this.HostName = Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 16);
          this.Config.SetValue<string>("Misc", "HostName", this.HostName);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : Hi im your new boss!");
        }
        if (item != Setall)
          return;
        this.Config.SetValue<string>("Misc", "HostName", this.HostName);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__6 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__580.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, BlipColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (BlipColor), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.Blip_Colour = Class1.\u003C\u003Eo__580.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__6, BColour[BC.Index]);
        this.Config.SetValue<BlipColor>("Misc", "Blip_Colour", this.Blip_Colour);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__7 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__580.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.Uicolour = Class1.\u003C\u003Eo__580.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__7, UiColour[uiC.Index]);
        this.Config.SetValue<string>("Misc", "Uicolour", this.Uicolour);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__580.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__580.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.MarkerColorString = Class1.\u003C\u003Eo__580.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__580.\u003C\u003Ep__8, MColour[MC.Index]);
        this.Config.SetValue<string>("Misc", "MarkerColor", this.MarkerColorString);
        this.Config.Save();
        UI.Notify(this.GetHostName() + " : Settings Changed they will take effect when you reload the mod!");
      });
    }

    private void SetupNightclubOptions()
    {
      float StyleCost = 0.0f;
      float PodiumCost = 0.0f;
      float BoozeCost = 0.0f;
      float DJCost = 0.0f;
      float DJLightCost = 0.0f;
      float ProjectorCost = 0.0f;
      float SecurityCost = 0.0f;
      float ClubnameCost = 0.0f;
      float TrophieCost = 0.0f;
      float LightRigCost = 0.0f;
      float ClutterCost = 0.0f;
      float DeliveryTruckCost = 0.0f;
      float WorkLightsCost = 0.0f;
      float DancerACost = 0.0f;
      float DancerBCost = 0.0f;
      float DryIceCost = 0.0f;
      float RadioCost = 0.0f;
      float GunlockerCost = 0.0f;
      float MoneyVaultCost = 0.0f;
      float PrivacyGlassCost = 0.0f;
      float WordrobeCost = 0.0f;
      float TotalCost = 0.0f;
      List<object> RadioS = new List<object>();
      RadioS.Add((object) "Los Santos Rock Radio");
      RadioS.Add((object) "Non-Stop-Pop FM");
      RadioS.Add((object) "Radio Los Santos");
      RadioS.Add((object) "Channel X");
      RadioS.Add((object) "West Coast Talk Radio");
      RadioS.Add((object) "Rebel Radio");
      RadioS.Add((object) "Soulwax FM");
      RadioS.Add((object) "East Los FM");
      RadioS.Add((object) "West Coast Classics");
      RadioS.Add((object) "Blue Ark");
      RadioS.Add((object) "World Wide FM");
      RadioS.Add((object) "FlyLo FM");
      RadioS.Add((object) "The Lowdown 91.1");
      RadioS.Add((object) "The Lab");
      RadioS.Add((object) "Radio Mirror Park");
      RadioS.Add((object) "Space 103.2");
      RadioS.Add((object) "Vinewood Boulevard Radio");
      RadioS.Add((object) "Blonded Los Santos 97.8 FM");
      RadioS.Add((object) "Los Santos Underground Radio");
      RadioS.Add((object) "IFruit Radio");
      RadioS.Add((object) "Self Radio");
      List<object> TF = new List<object>();
      TF.Add((object) false);
      TF.Add((object) true);
      List<object> items1 = new List<object>();
      items1.Add((object) "Traditional");
      items1.Add((object) "Edgy");
      items1.Add((object) "Glamorous");
      List<object> items2 = new List<object>();
      items2.Add((object) "Style 1 ");
      items2.Add((object) "Style 2");
      items2.Add((object) "Style 3");
      List<object> items3 = new List<object>();
      items3.Add((object) "Traditional");
      items3.Add((object) "Edgy");
      items3.Add((object) "Glamorous");
      List<object> items4 = new List<object>();
      items4.Add((object) "Booze 1");
      items4.Add((object) "Booze 2");
      items4.Add((object) "Booze 3");
      List<object> items5 = new List<object>();
      items5.Add((object) "Tale of Us");
      items5.Add((object) "Dixon");
      items5.Add((object) "Solomun ");
      items5.Add((object) "Black Madonna");
      List<object> items6 = new List<object>();
      items6.Add((object) "None");
      items6.Add((object) "Cathedral");
      items6.Add((object) "Lightning Storm");
      items6.Add((object) "Surge");
      items6.Add((object) "Dazzle");
      List<object> items7 = new List<object>();
      items7.Add((object) "None");
      items7.Add((object) "GEO");
      items7.Add((object) "LED");
      items7.Add((object) "LSER");
      items7.Add((object) "NR");
      List<object> items8 = new List<object>();
      items8.Add((object) "Upgrade Option 1");
      items8.Add((object) "Upgrade Option 2");
      items8.Add((object) "Upgrade Option 3");
      items8.Add((object) "Upgrade Option 4");
      List<object> items9 = new List<object>();
      items9.Add((object) "None");
      items9.Add((object) "Studio Los Santos");
      items9.Add((object) "Omega");
      items9.Add((object) "Technologie");
      items9.Add((object) "Gefangnis");
      items9.Add((object) "Maisonette");
      items9.Add((object) "Tony's Fun House");
      items9.Add((object) "The Palace");
      items9.Add((object) "Paradise");
      items9.Add((object) "Galaxy");
      List<object> items10 = new List<object>();
      items10.Add((object) "Trophies x1");
      items10.Add((object) "Trophies x2");
      items10.Add((object) "Trophies x3");
      items10.Add((object) "Trophies x4");
      items10.Add((object) "Trophies x5");
      items10.Add((object) "Trophies x6");
      items10.Add((object) "Trophies x7");
      items10.Add((object) "Trophies x8");
      items10.Add((object) "Trophies x9");
      List<object> items11 = new List<object>();
      items11.Add((object) "Type A");
      items11.Add((object) "Type B");
      items11.Add((object) "Type C");
      items11.Add((object) "Type D");
      items11.Add((object) "Type E");
      items11.Add((object) "Type F");
      items11.Add((object) "Type G");
      items11.Add((object) "Type H");
      List<object> items12 = new List<object>();
      items12.Add((object) "Female");
      items12.Add((object) "Male");
      List<object> items13 = new List<object>();
      items13.Add((object) "0x (No Dry Ice)");
      items13.Add((object) "1x");
      items13.Add((object) "2x");
      items13.Add((object) "3x");
      items13.Add((object) "4x");
      items13.Add((object) "5x");
      items13.Add((object) "6x");
      items13.Add((object) "7x");
      items13.Add((object) "8x");
      items13.Add((object) "9x");
      items13.Add((object) "10x");
      items13.Add((object) "11x");
      items13.Add((object) "12x");
      items13.Add((object) "13x");
      items13.Add((object) "14x");
      items13.Add((object) "15x");
      List<object> color = new List<object>();
      color.Add((object) "White");
      color.Add((object) "Yellow");
      color.Add((object) "Green");
      color.Add((object) "GreenYellow");
      color.Add((object) "Lime");
      color.Add((object) "Red");
      color.Add((object) "PowderBlue");
      color.Add((object) "Violet");
      color.Add((object) "Turquoise");
      color.Add((object) "Orange");
      color.Add((object) "Pink");
      color.Add((object) "AliceBlue");
      color.Add((object) "BlueViolet");
      color.Add((object) "Blue");
      color.Add((object) "Cyan");
      color.Add((object) "Magenta");
      color.Add((object) "Gray");
      color.Add((object) "LightBlue");
      color.Add((object) "LightCyan");
      color.Add((object) "Gold");
      color.Add((object) "Lavender");
      color.Add((object) "Silver");
      color.Add((object) "Snow");
      color.Add((object) "YellowGreen");
      color.Add((object) "Goldenrod");
      color.Add((object) "GhostWhite");
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.ExteriorOptions, "Interior Options");
      this.GUIMenus.Add(uiMenu1);
      UIMenuListItem IDancers = new UIMenuListItem("Interior Dancers  : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) IDancers);
      UIMenuItem RefreshPeds = new UIMenuItem("Refresh Interior Peds");
      uiMenu1.AddItem(RefreshPeds);
      UIMenuItem uiMenuItem1 = new UIMenuItem("----------------Night Club Options-----------------");
      uiMenu1.AddItem(uiMenuItem1);
      UIMenuListItem S = new UIMenuListItem("Style  : ", items1, 0);
      uiMenu1.AddItem((UIMenuItem) S);
      UIMenuListItem p = new UIMenuListItem("Podium : ", items3, 0);
      uiMenu1.AddItem((UIMenuItem) p);
      UIMenuListItem b = new UIMenuListItem("Booze : ", items4, 0);
      uiMenu1.AddItem((UIMenuItem) b);
      UIMenuListItem dj = new UIMenuListItem("DJ : ", items5, 0);
      uiMenu1.AddItem((UIMenuItem) dj);
      UIMenuListItem djl = new UIMenuListItem("DJ Lights : ", items6, 0);
      uiMenu1.AddItem((UIMenuItem) djl);
      UIMenuListItem projt = new UIMenuListItem("Projector Type : ", items7, 0);
      uiMenu1.AddItem((UIMenuItem) projt);
      UIMenuListItem secu = new UIMenuListItem("Security Upgrade : ", items8, 0);
      uiMenu1.AddItem((UIMenuItem) secu);
      UIMenuListItem cn = new UIMenuListItem("Club Name : ", items9, 0);
      uiMenu1.AddItem((UIMenuItem) cn);
      UIMenuListItem tr = new UIMenuListItem("Amt of Trophies : ", items10, 0);
      uiMenu1.AddItem((UIMenuItem) tr);
      UIMenuListItem LR = new UIMenuListItem("Light Rig On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) LR);
      UIMenuListItem CL = new UIMenuListItem("Clutter On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) CL);
      UIMenuListItem DT = new UIMenuListItem("Delivery Truck On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) DT);
      UIMenuListItem WK = new UIMenuListItem("Work Lights On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) WK);
      UIMenuItem uiMenuItem2 = new UIMenuItem("----------------Night Club Dancers-----------------");
      uiMenu1.AddItem(uiMenuItem2);
      UIMenuListItem DAg = new UIMenuListItem("Dancer A Gender : ", items12, 0);
      uiMenu1.AddItem((UIMenuItem) DAg);
      UIMenuListItem DAs = new UIMenuListItem("Dancer A Style : ", items2, 0);
      uiMenu1.AddItem((UIMenuItem) DAs);
      UIMenuListItem DBg = new UIMenuListItem("Dancer B Gender : ", items12, 0);
      uiMenu1.AddItem((UIMenuItem) DBg);
      UIMenuListItem DBs = new UIMenuListItem("Dancer B Style : ", items2, 0);
      uiMenu1.AddItem((UIMenuItem) DBs);
      UIMenuItem uiMenuItem3 = new UIMenuItem("----------------Nightclub Lights--------------------");
      uiMenu1.AddItem(uiMenuItem3);
      UIMenuListItem sptc = new UIMenuListItem("Spotlight Colour : ", color, 0);
      uiMenu1.AddItem((UIMenuItem) sptc);
      UIMenuListItem cc = new UIMenuListItem("Ceiling Colour : ", color, 0);
      uiMenu1.AddItem((UIMenuItem) cc);
      UIMenuListItem RNS = new UIMenuListItem("Random Spotlight Colour : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) RNS);
      UIMenuListItem RNCL = new UIMenuListItem("Random Celing Light Colour : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) RNCL);
      UIMenuListItem MSL = new UIMenuListItem("Moving Spot Lights : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) MSL);
      UIMenuListItem SlType = new UIMenuListItem(" Spot Light Type : ", items11, 0);
      uiMenu1.AddItem((UIMenuItem) SlType);
      UIMenuItem uiMenuItem4 = new UIMenuItem("----------------Nightclub Dry Ice-------------------");
      uiMenu1.AddItem(uiMenuItem4);
      UIMenuListItem DI = new UIMenuListItem("Dry Ice On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) DI);
      UIMenuListItem DIM = new UIMenuListItem("Dry Ice Multiplier : ", items13, 0);
      uiMenu1.AddItem((UIMenuItem) DIM);
      DIM.Description = "Warning : The higher the Multipier the more the lag";
      UIMenuItem uiMenuItem5 = new UIMenuItem("----------------Nightclub Radio-------------------");
      uiMenu1.AddItem(uiMenuItem5);
      UIMenuListItem RadioM = new UIMenuListItem("Play Radio Music : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) RadioM);
      UIMenuListItem RadioSs = new UIMenuListItem("Station : ", RadioS, 0);
      uiMenu1.AddItem((UIMenuItem) RadioSs);
      UIMenuItem uiMenuItem6 = new UIMenuItem("----------------Nightclub Privacy Glass-------------------");
      uiMenu1.AddItem(uiMenuItem6);
      UIMenuListItem PG = new UIMenuListItem("Privacy Glass On : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) PG);
      UIMenuItem uiMenuItem7 = new UIMenuItem("----------------Nightclub Gunlocker-------------------");
      uiMenu1.AddItem(uiMenuItem7);
      UIMenuListItem GL = new UIMenuListItem("Gunlocker Enabled : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) GL);
      UIMenuItem uiMenuItem8 = new UIMenuItem("----------------Nightclub Money Vault-------------------");
      uiMenu1.AddItem(uiMenuItem8);
      UIMenuListItem MV = new UIMenuListItem("Money Vault Enabled : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) MV);
      UIMenuItem uiMenuItem9 = new UIMenuItem("----------------Nightclub Wardrobe-------------------");
      uiMenu1.AddItem(uiMenuItem9);
      UIMenuListItem WD = new UIMenuListItem("Wardrobe Enabled : ", TF, 0);
      uiMenu1.AddItem((UIMenuItem) WD);
      UIMenuItem uiMenuItem10 = new UIMenuItem("----------------Buy & Refresh-------------------");
      uiMenu1.AddItem(uiMenuItem10);
      UIMenuItem Cost = new UIMenuItem("Cost : " + TotalCost.ToString("N"));
      uiMenu1.AddItem(Cost);
      UIMenuItem SaveInt = new UIMenuItem("Buy & Refresh");
      uiMenu1.AddItem(SaveInt);
      uiMenu1.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (S.Index == 0)
          StyleCost = this.N_Style == S.Index ? 0.0f : 140000f;
        if (S.Index == 1)
          StyleCost = this.N_Style == S.Index ? 0.0f : 230000f;
        if (S.Index == 2)
          StyleCost = this.N_Style == S.Index ? 0.0f : 370000f;
        if (p.Index == 0)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 75000f;
        if (p.Index == 1)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 110000f;
        if (p.Index == 2)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 160000f;
        if (b.Index == 0)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 15000f;
        if (b.Index == 1)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 450000f;
        if (b.Index == 2)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 70000f;
        if (dj.Index == 0)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 125000f;
        if (dj.Index == 1)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 230000f;
        if (dj.Index == 2)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 345000f;
        if (dj.Index == 3)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 415000f;
        if (djl.Index == 0)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 0.0f;
        if (djl.Index == 1)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 110000f;
        if (djl.Index == 2)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 170000f;
        if (djl.Index == 3)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 200000f;
        if (djl.Index == 4)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 270000f;
        if (projt.Index == 0)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 0.0f;
        if (projt.Index == 1)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 110000f;
        if (projt.Index == 2)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 170000f;
        if (projt.Index == 3)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 200000f;
        if (projt.Index == 4)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 270000f;
        if (secu.Index == 0)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 100000f;
        if (secu.Index == 1)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 150000f;
        if (secu.Index == 2)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 225000f;
        if (secu.Index == 3)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 300000f;
        ClubnameCost = this.N_ClubName == cn.Index ? 0.0f : (float) (45000 * (cn.Index + 1));
        TrophieCost = this.N_trophies == tr.Index ? 0.0f : (float) (15000 * (tr.Index + 1));
        if (LR.Index == 0)
          LightRigCost = this.N_LightsRig == LR.Index ? 0.0f : 0.0f;
        if (LR.Index == 1)
          LightRigCost = this.N_LightsRig == LR.Index ? 0.0f : 450000f;
        if (CL.Index == 0)
          ClutterCost = this.N_Clutter == CL.Index ? 0.0f : 0.0f;
        if (CL.Index == 1)
          ClutterCost = this.N_Clutter == CL.Index ? 0.0f : 100000f;
        if (DT.Index == 0)
          DeliveryTruckCost = this.N_DelivTruck == DT.Index ? 0.0f : 0.0f;
        if (DT.Index == 1)
          DeliveryTruckCost = this.N_DelivTruck == DT.Index ? 0.0f : 50000f;
        if (WK.Index == 0)
          WorkLightsCost = this.N_WorkLights == WK.Index ? 0.0f : 0.0f;
        if (WK.Index == 1)
          WorkLightsCost = this.N_WorkLights == WK.Index ? 0.0f : 25000f;
        DancerACost = this.N_DancerAStyle == DAs.Index ? 0.0f : (float) (75000 * (DAs.Index + 1));
        DancerBCost = this.N_DancerBStyle == DBs.Index ? 0.0f : (float) (75000 * (DBs.Index + 1));
        if (DI.Index == 0)
          DryIceCost = this.N_DryIce == DI.Index ? 0.0f : 0.0f;
        if (DI.Index == 1)
          DryIceCost = this.N_DryIce == DI.Index ? 0.0f : 650000f;
        if (RadioM.Index == 0)
          RadioCost = this.PlayRadioMusic ? 0.0f : 0.0f;
        if (RadioM.Index == 1)
          RadioCost = this.PlayRadioMusic ? 0.0f : 125000f;
        if (GL.Index == 0)
          GunlockerCost = this.GunLockerBought != 0 ? 0.0f : 0.0f;
        if (GL.Index == 1)
          GunlockerCost = this.GunLockerBought != 0 ? 0.0f : 1000000f;
        if (WD.Index == 0)
          WordrobeCost = this.WaredrobeOwned != 0 ? 0.0f : 0.0f;
        if (WD.Index == 1)
          WordrobeCost = this.WaredrobeOwned != 0 ? 0.0f : 1000000f;
        if (PG.Index == 0)
          PrivacyGlassCost = this.N_PrivacyGlass == PG.Index ? 0.0f : 0.0f;
        if (PG.Index == 1)
          PrivacyGlassCost = this.N_PrivacyGlass == PG.Index ? 0.0f : 200000f;
        if (MV.Index == 0)
          MoneyVaultCost = this.MoneyVaultBought != 0 ? 0.0f : 0.0f;
        if (MV.Index == 1)
          MoneyVaultCost = this.MoneyVaultBought != 0 ? 0.0f : 1000000f;
        TotalCost = StyleCost + PodiumCost + BoozeCost + DJCost + DJLightCost + SecurityCost + ClubnameCost + TrophieCost + LightRigCost + ClutterCost + DeliveryTruckCost + WorkLightsCost + DancerACost + DancerBCost + DryIceCost + RadioCost + GunlockerCost + PrivacyGlassCost + MoneyVaultCost + ProjectorCost + WordrobeCost;
        Cost.Text = "Cost " + TotalCost.ToString("N");
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == RefreshPeds)
        {
          this.SpawnDancersInNightclub = IDancers.Index;
          this.Config.SetValue<int>("Interior", "SpawnDancersInNightclub", this.SpawnDancersInNightclub);
          this.Config.Save();
          this.RefreshInterior();
        }
        if (item != SaveInt)
          return;
        if (S.Index == 0)
          StyleCost = this.N_Style == S.Index ? 0.0f : 140000f;
        if (S.Index == 1)
          StyleCost = this.N_Style == S.Index ? 0.0f : 230000f;
        if (S.Index == 2)
          StyleCost = this.N_Style == S.Index ? 0.0f : 370000f;
        if (p.Index == 0)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 75000f;
        if (p.Index == 1)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 110000f;
        if (p.Index == 2)
          PodiumCost = this.N_PodiumStyle == p.Index ? 0.0f : 160000f;
        if (b.Index == 0)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 15000f;
        if (b.Index == 1)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 450000f;
        if (b.Index == 2)
          BoozeCost = this.N_Booze == b.Index ? 0.0f : 70000f;
        if (dj.Index == 0)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 125000f;
        if (dj.Index == 1)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 230000f;
        if (dj.Index == 2)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 345000f;
        if (dj.Index == 3)
          DJCost = this.N_DJ == dj.Index ? 0.0f : 415000f;
        if (djl.Index == 0)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 0.0f;
        if (djl.Index == 1)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 110000f;
        if (djl.Index == 2)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 170000f;
        if (djl.Index == 3)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 200000f;
        if (djl.Index == 4)
          DJLightCost = this.N_DJLights == djl.Index ? 0.0f : 270000f;
        if (projt.Index == 0)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 0.0f;
        if (projt.Index == 1)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 110000f;
        if (projt.Index == 2)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 170000f;
        if (projt.Index == 3)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 200000f;
        if (projt.Index == 4)
          ProjectorCost = this.N_ProjectorType == projt.Index ? 0.0f : 270000f;
        if (secu.Index == 0)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 100000f;
        if (secu.Index == 1)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 150000f;
        if (secu.Index == 2)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 225000f;
        if (secu.Index == 3)
          SecurityCost = this.N_Upgrade == secu.Index ? 0.0f : 300000f;
        ClubnameCost = this.N_ClubName == cn.Index ? 0.0f : (float) (45000 * (cn.Index + 1));
        TrophieCost = this.N_trophies == tr.Index ? 0.0f : (float) (15000 * (tr.Index + 1));
        if (LR.Index == 0)
          LightRigCost = this.N_LightsRig == LR.Index ? 0.0f : 0.0f;
        if (LR.Index == 1)
          LightRigCost = this.N_LightsRig == LR.Index ? 0.0f : 450000f;
        if (CL.Index == 0)
          ClutterCost = this.N_Clutter == CL.Index ? 0.0f : 0.0f;
        if (CL.Index == 1)
          ClutterCost = this.N_Clutter == CL.Index ? 0.0f : 100000f;
        if (DT.Index == 0)
          DeliveryTruckCost = this.N_DelivTruck == DT.Index ? 0.0f : 0.0f;
        if (DT.Index == 1)
          DeliveryTruckCost = this.N_DelivTruck == DT.Index ? 0.0f : 50000f;
        if (WK.Index == 0)
          WorkLightsCost = this.N_WorkLights == WK.Index ? 0.0f : 0.0f;
        if (WK.Index == 1)
          WorkLightsCost = this.N_WorkLights == WK.Index ? 0.0f : 25000f;
        DancerACost = this.N_DancerAStyle == DAs.Index ? 0.0f : (float) (75000 * (DAs.Index + 1));
        DancerBCost = this.N_DancerBStyle == DBs.Index ? 0.0f : (float) (75000 * (DBs.Index + 1));
        if (DI.Index == 0)
          DryIceCost = this.N_DryIce == DI.Index ? 0.0f : 0.0f;
        if (DI.Index == 1)
          DryIceCost = this.N_DryIce == DI.Index ? 0.0f : 650000f;
        if (RadioM.Index == 0)
          RadioCost = this.PlayRadioMusic ? 0.0f : 0.0f;
        if (RadioM.Index == 1)
          RadioCost = this.PlayRadioMusic ? 0.0f : 125000f;
        if (GL.Index == 0)
          GunlockerCost = this.GunLockerBought != 0 ? 0.0f : 0.0f;
        if (GL.Index == 1)
          GunlockerCost = this.GunLockerBought != 0 ? 0.0f : 1000000f;
        if (WD.Index == 0)
          WordrobeCost = this.WaredrobeOwned != 0 ? 0.0f : 0.0f;
        if (WD.Index == 1)
          WordrobeCost = this.WaredrobeOwned != 0 ? 0.0f : 1000000f;
        if (PG.Index == 0)
          PrivacyGlassCost = this.N_PrivacyGlass == PG.Index ? 0.0f : 0.0f;
        if (PG.Index == 1)
          PrivacyGlassCost = this.N_PrivacyGlass == PG.Index ? 0.0f : 200000f;
        if (MV.Index == 0)
          MoneyVaultCost = this.MoneyVaultBought != 0 ? 0.0f : 0.0f;
        if (MV.Index == 1)
          MoneyVaultCost = this.MoneyVaultBought != 0 ? 0.0f : 1000000f;
        TotalCost = StyleCost + PodiumCost + BoozeCost + DJCost + DJLightCost + SecurityCost + ClubnameCost + TrophieCost + LightRigCost + ClutterCost + DeliveryTruckCost + WorkLightsCost + DancerACost + DancerBCost + DryIceCost + RadioCost + GunlockerCost + PrivacyGlassCost + MoneyVaultCost + ProjectorCost + WordrobeCost;
        Cost.Text = "Cost " + TotalCost.ToString("N");
        if ((double) Game.Player.Money >= (double) TotalCost)
        {
          Game.Player.Money -= (int) TotalCost;
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          this.DryIceParticleMultiplier = DIM.Index;
          this.Config.SetValue<int>("Interior", "DryIceParticleMultiplier", this.DryIceParticleMultiplier);
          this.MoneyVaultBought = MV.Index;
          this.Config.SetValue<int>("Interior", "N_MoneyVault", this.MoneyVaultBought);
          this.GunLockerBought = GL.Index;
          this.Config.SetValue<int>("Interior", "N_Gunlocker", this.GunLockerBought);
          this.WaredrobeOwned = WD.Index;
          this.Config.SetValue<int>("Interior", "N_Waredrobe", this.WaredrobeOwned);
          this.N_PrivacyGlass = PG.Index;
          this.Config.SetValue<int>("Interior", "N_PrivacyGlass", this.N_PrivacyGlass);
          this.SpotLightType = SlType.Index;
          this.Config.SetValue<int>("Interior", "SpotLightType", this.SpotLightType);
          this.N_Style = S.Index;
          this.Config.SetValue<int>("Interior", "N_Style", this.N_Style);
          this.N_PodiumStyle = p.Index;
          this.Config.SetValue<int>("Interior", "N_PodiumStyle", this.N_PodiumStyle);
          this.N_Booze = b.Index;
          this.Config.SetValue<int>("Interior", "N_Booze", this.N_Booze);
          this.N_DJLights = djl.Index;
          this.Config.SetValue<int>("Interior", "N_DJLights", this.N_DJLights);
          this.N_ProjectorType = projt.Index;
          this.Config.SetValue<int>("Interior", "N_ProjectorType", this.N_ProjectorType);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.MovingSpotLights = Class1.\u003C\u003Eo__581.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__0, TF[MSL.Index]);
          this.Config.SetValue<bool>("Interior", "MovingSpotLights", this.MovingSpotLights);
          this.N_LightsRig = LR.Index;
          this.Config.SetValue<int>("Interior", "N_LightsRig", this.N_LightsRig);
          this.N_Upgrade = secu.Index;
          this.Config.SetValue<int>("Interior", "N_Upgrade", this.N_Upgrade);
          this.N_ClubName = cn.Index;
          this.Config.SetValue<int>("Interior", "N_ClubName", this.N_ClubName);
          this.N_trophies = tr.Index;
          this.Config.SetValue<int>("Interior", "N_trophies", this.N_trophies);
          this.N_WorkLights = WK.Index;
          this.Config.SetValue<int>("Interior", "N_WorkLights", this.N_WorkLights);
          this.N_Clutter = CL.Index;
          this.Config.SetValue<int>("Interior", "N_Clutter", this.N_Clutter);
          this.N_DryIce = DI.Index;
          this.Config.SetValue<int>("Interior", "N_DryIce", this.N_DryIce);
          this.N_DelivTruck = DT.Index;
          this.Config.SetValue<int>("Interior", "N_DelivTruck", this.N_DelivTruck);
          this.N_DJ = dj.Index;
          this.Config.SetValue<int>("Interior", "N_DJ", this.N_DJ);
          this.N_DancerAGender = DAg.Index;
          this.Config.SetValue<int>("Interior", "N_DancerAGender", this.N_DancerAGender);
          this.N_DancerAStyle = DAs.Index;
          this.Config.SetValue<int>("Interior", "N_DancerAStyle", this.N_DancerAStyle);
          this.N_DancerBGender = DBg.Index;
          this.Config.SetValue<int>("Interior", "N_DancerBGender", this.N_DancerBGender);
          this.N_DancerBStyle = DBs.Index;
          this.Config.SetValue<int>("Interior", "N_DancerAStyle", this.N_DancerBStyle);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.N_CeilingColourstring = Class1.\u003C\u003Eo__581.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__1, color[cc.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.N_SpotLightColourstring = Class1.\u003C\u003Eo__581.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__2, color[sptc.Index]);
          this.Config.SetValue<string>("Interior", "N_CeilingColour", this.N_CeilingColourstring);
          this.Config.SetValue<string>("Interior", "N_SpotLightColour", this.N_SpotLightColourstring);
          this.N_SpotLightColourstring = this.Config.GetValue<string>("Interior", "N_SpotLightColour", this.N_SpotLightColourstring);
          this.N_SpotLightColour = Color.FromName(this.N_SpotLightColourstring);
          this.N_CeilingColourstring = this.Config.GetValue<string>("Interior", "N_CeilingColour", this.N_CeilingColourstring);
          this.N_CeilingColour = Color.FromName(this.N_CeilingColourstring);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, string> target1 = Class1.\u003C\u003Eo__581.\u003C\u003Ep__5.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, string>> p5 = Class1.\u003C\u003Eo__581.\u003C\u003Ep__5;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "ToString", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[1]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          Func<CallSite, object, object> target2 = Class1.\u003C\u003Eo__581.\u003C\u003Ep__4.Target;
          // ISSUE: reference to a compiler-generated field
          CallSite<Func<CallSite, object, object>> p4 = Class1.\u003C\u003Eo__581.\u003C\u003Ep__4;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__3 = CallSite<Func<CallSite, string, object, object>>.Create(Binder.BinaryOperation(CSharpBinderFlags.None, ExpressionType.Add, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
            {
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
              CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
            }));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          object obj1 = Class1.\u003C\u003Eo__581.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__3, RadioSs.Index.ToString() + "_", RadioS[RadioSs.Index]);
          object obj2 = target2((CallSite) p4, obj1);
          this.DefaultRadioStation = target1((CallSite) p5, obj2);
          this.Config.SetValue<string>("Interior", "DefaultRadioStation", this.DefaultRadioStation);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.RandomSpotlightColour = Class1.\u003C\u003Eo__581.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__6, TF[RNS.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.RandomCelingLightColor = Class1.\u003C\u003Eo__581.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__7, TF[RNCL.Index]);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__581.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__581.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, bool>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (bool), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.PlayRadioMusic = Class1.\u003C\u003Eo__581.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__581.\u003C\u003Ep__8, TF[RadioM.Index]);
          this.Config.SetValue<bool>("Interior", "RandomCelingLightColor", this.RandomCelingLightColor);
          this.Config.SetValue<bool>("Interior", "PlayRadioMusic", this.PlayRadioMusic);
          this.Config.SetValue<bool>("Interior", "RandomSpotlightColour", this.RandomSpotlightColour);
          this.Config.Save();
          this.DeleteNComputerscreens1();
          this.DeleteNComputerscreens();
          UI.Notify("~g~ HKH191~w~ : Refreshed Interior Settings, Please Exit and Enter the Nightclub ");
          if (dj.Index == 0)
          {
            this.DJ = "IG_talMM";
            this.Config.SetValue<string>("Setup", "DJ", this.DJ);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : DJ Changed to ~y~Tale Of Us~w~");
          }
          if (dj.Index == 1)
          {
            this.DJ = "IG_Dix";
            this.Config.SetValue<string>("Setup", "DJ", this.DJ);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : DJ Changed to ~y~Dixon~w~");
          }
          if (dj.Index == 2)
          {
            this.DJ = "IG_Sol";
            this.Config.SetValue<string>("Setup", "DJ", this.DJ);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : DJ Changed to ~y~Solomun~w~");
          }
          if (dj.Index == 3)
          {
            this.DJ = "IG_DJBlaMadon";
            this.Config.SetValue<string>("Setup", "DJ", this.DJ);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " : DJ Changed to ~y~Black Madonna~w~");
          }
          this.MoneyVaultDoorOpen = false;
          this.OpenGunlockerDoor = false;
          this.SpawnDancersInNightclub = IDancers.Index;
          this.Config.SetValue<int>("Interior", "SpawnDancersInNightclub", this.SpawnDancersInNightclub);
          this.Config.Save();
        }
        else
          Class1.TextNotification("CHAR_LESTER", "~" + this.Uicolour + "~" + this.GetHostName(), "To Nightclub Owner:", "You do not have enough Money for the Selected Upgrades");
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.ExteriorOptions, "Exterior Options");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem ExteriorA = new UIMenuItem("Tale Of Us Banner");
      uiMenu2.AddItem(ExteriorA);
      UIMenuItem ExteriorB = new UIMenuItem("Dixon Banner");
      uiMenu2.AddItem(ExteriorB);
      UIMenuItem ExteriorC = new UIMenuItem("Solomun Banner");
      uiMenu2.AddItem(ExteriorC);
      UIMenuItem ExteriorD = new UIMenuItem("Black Madonna Banner");
      uiMenu2.AddItem(ExteriorD);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == ExteriorA)
        {
          this.Design = "ba_case2_taleofus";
          this.Config.SetValue<string>("Setup", "Design", this.Design);
          this.Config.Save();
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
        }
        if (item == ExteriorB)
        {
          this.Design = "ba_case2_dixon";
          this.Config.SetValue<string>("Setup", "Design", this.Design);
          this.Config.Save();
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
        }
        if (item == ExteriorC)
        {
          this.Design = "ba_case2_solomun";
          this.Config.SetValue<string>("Setup", "Design", this.Design);
          this.Config.Save();
          Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
        }
        if (item != ExteriorD)
          return;
        this.Design = "ba_case2_madonna";
        this.Config.SetValue<string>("Setup", "Design", this.Design);
        this.Config.Save();
        Function.Call(Hash._0x41B4893843BBDB74, (InputArgument) this.Design);
      });
    }

    public void SetupFA(string v, int EC)
    {
      foreach (Ped ped in this.p)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.VehicletoDestroy != (Entity) null)
        this.VehicletoDestroy.Delete();
      if (this.VehicletoDestroyBlip != (Blip) null)
        this.VehicletoDestroyBlip.Remove();
      Vector3 location = this.GetLocation();
      this.VehicletoDestroy = World.CreateVehicle(this.RequestModel(v), location);
      this.Destination = this.GetLocation();
      this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.Driver);
      this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Driver));
      if (EC < 1)
        ;
      if (EC >= 2)
      {
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.Passenger);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger));
      }
      if (EC >= 3)
      {
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.Passenger);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.LeftRear);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear));
      }
      if (EC >= 4)
      {
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.Passenger);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.LeftRear);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.RightRear);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear));
      }
      if (EC >= 5)
      {
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.Passenger);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Passenger));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.LeftRear);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.LeftRear));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.RightRear);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.RightRear));
        this.VehicletoDestroy.CreateRandomPedOnSeat(VehicleSeat.ExtraSeat1);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.ExtraSeat1).Task.FightAgainst(Game.Player.Character);
        this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.ExtraSeat1).Weapons.Give(WeaponHash.MiniSMG, 9999, true, true);
        this.p.Add(this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.ExtraSeat1));
      }
      this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicletoDestroy, this.Destination, 40f, 100f, 6);
      Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.VehicletoDestroy.Handle, (InputArgument) 0);
      this.VehicletoDestroy.PrimaryColor = this.GetColor();
      this.VehicletoDestroy.SecondaryColor = this.GetColor();
      this.VehicletoDestroy.SetMod(VehicleMod.Brakes, 3, true);
      this.VehicletoDestroy.SetMod(VehicleMod.Suspension, 3, true);
      this.VehicletoDestroy.SetMod(VehicleMod.Transmission, 3, true);
      this.VehicletoDestroy.SetMod(VehicleMod.Engine, 3, true);
      this.VehicletoDestroy.SetMod(VehicleMod.Livery, this.GetLivery(8), true);
      this.VehicletoDestroyBlip = World.CreateBlip(this.VehicletoDestroy.Position);
      this.VehicletoDestroyBlip.Sprite = BlipSprite.Adversary;
      this.VehicletoDestroyBlip.Color = this.Blip_Colour;
      this.VehicletoDestroyBlip.Name = "Destroy Party Bus";
      UI.Notify(this.GetHostName() + " : We have spotted a rival Nightclubs " + this.VehicletoDestroy.FriendlyName + ", go torch that thing (destroy it)");
      this.MissionSetup = true;
      this.missionnum = 1;
      foreach (Ped ped in this.p)
      {
        if ((Entity) ped != (Entity) null)
        {
          int num = Function.Call<int>(Hash._0xD24D37CC275948CC, (InputArgument) "HATES_PLAYER");
          Function.Call(Hash._0xC80A74AC829DDD92, (InputArgument) ped, (InputArgument) num);
          Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
          Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
          ped.Task.FightAgainst(Game.Player.Character);
          Function.Call(Hash._0x971D38760FBC02EF, (InputArgument) ped, (InputArgument) 1);
        }
      }
      this.VehicletoDestroy.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.VehicletoDestroy, this.Destination, 40f, 100f, 6);
    }

    private void SetupFalseAdvertising()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.FalseAdvertising, "False Advertising Missions");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Mission1 = new UIMenuItem("Party Bus");
      uiMenu.AddItem(Mission1);
      UIMenuItem Mission2 = new UIMenuItem("Patriot Stretch");
      uiMenu.AddItem(Mission2);
      UIMenuItem Mission3 = new UIMenuItem("Mancer");
      uiMenu.AddItem(Mission3);
      UIMenuItem Mission4 = new UIMenuItem("Stafford");
      uiMenu.AddItem(Mission4);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Mission1)
          this.SetupFA("PBus2", 1);
        if (item == Mission2)
          this.SetupFA("PATRIOT2", 4);
        if (item == Mission3)
          this.SetupFA("MENACER", 5);
        if (item != Mission4)
          return;
        this.SetupFA("STAFFORD", 4);
      });
    }

    public Vector3 GetLocation()
    {
      System.Random random = new System.Random();
      if (random.Next(1, 13) == 1)
        this.VehicleToDestroySpawn = new Vector3(-1069.32f, -72.28f, 19f);
      if (random.Next(1, 13) == 2)
        this.VehicleToDestroySpawn = new Vector3(-1579.93f, -155.28f, 55f);
      if (random.Next(1, 13) == 3)
        this.VehicleToDestroySpawn = new Vector3(-711.74f, -28.28f, 37f);
      if (random.Next(1, 13) == 4)
        this.VehicleToDestroySpawn = new Vector3(6f, 253.58f, 109f);
      if (random.Next(1, 13) == 5)
        this.VehicleToDestroySpawn = new Vector3(703f, 32f, 84f);
      if (random.Next(1, 13) == 6)
        this.VehicleToDestroySpawn = new Vector3(1197f, -421.5f, 68f);
      if (random.Next(1, 13) == 7)
        this.VehicleToDestroySpawn = new Vector3(1257f, -1428f, 35f);
      if (random.Next(1, 13) == 8)
        this.VehicleToDestroySpawn = new Vector3(1264f, -2039f, 45f);
      if (random.Next(1, 13) == 9)
        this.VehicleToDestroySpawn = new Vector3(527f, -2052f, 28f);
      if (random.Next(1, 13) == 10)
        this.VehicleToDestroySpawn = new Vector3(-161f, -2087.8f, 26f);
      if (random.Next(1, 13) == 11)
        this.VehicleToDestroySpawn = new Vector3(756f, -1723f, 30f);
      if (random.Next(1, 13) == 12)
        this.VehicleToDestroySpawn = new Vector3(-816f, -2300f, 11f);
      if (random.Next(1, 13) == 13)
        this.VehicleToDestroySpawn = new Vector3(-1839f, 136f, 78f);
      return this.VehicleToDestroySpawn;
    }

    public VehicleColor GetColor()
    {
      List<object> objectList = new List<object>();
      VehicleColor[] values = (VehicleColor[]) Enum.GetValues(typeof (VehicleColor));
      for (int index = 0; index < values.Length; ++index)
        objectList.Add((object) values[index]);
      int index1 = new System.Random().Next(1, values.Length);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__585.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__585.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, VehicleColor>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (VehicleColor), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      return Class1.\u003C\u003Eo__585.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__585.\u003C\u003Ep__0, objectList[index1]);
    }

    public int GetLivery(int MaxLiveries) => new System.Random().Next(-1, MaxLiveries);

    public void SetupSpecialVehicles()
    {
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.SpecialVehicleOptions, "Use a vehicle");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem ScramJetUse = new UIMenuItem("ScramJet");
      uiMenu1.AddItem(ScramJetUse);
      UIMenuItem MenacerUse = new UIMenuItem("Menacer");
      uiMenu1.AddItem(MenacerUse);
      UIMenuItem OppressorMkIIuse = new UIMenuItem("Oppressor MkII");
      uiMenu1.AddItem(OppressorMkIIuse);
      UIMenuItem PatriotStretchUse = new UIMenuItem("Patriot Stretch");
      uiMenu1.AddItem(PatriotStretchUse);
      UIMenuItem SwingerUse = new UIMenuItem("Swinger");
      uiMenu1.AddItem(SwingerUse);
      UIMenuItem StraffordUse = new UIMenuItem("Stafford");
      uiMenu1.AddItem(StraffordUse);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == ScramJetUse && this.ScramJetBought == 1)
        {
          if ((Entity) this.SpecialVehicle != (Entity) null)
            this.SpecialVehicle.Delete();
          this.SpecialVehicle = World.CreateVehicle((GTA.Model) "SCRAMJET", this.VehicleSpawn);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//ScramJet.ini");
          this.SaveLoad.Load(this.SpecialVehicle);
          this.SpecialVehicle.IsDriveable = false;
          UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
        }
        if (item == MenacerUse && this.MenacerBought == 1)
        {
          if ((Entity) this.SpecialVehicle != (Entity) null)
            this.SpecialVehicle.Delete();
          this.SpecialVehicle = World.CreateVehicle((GTA.Model) "MENACER", this.VehicleSpawn);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Menacer.ini");
          this.SaveLoad.Load(this.SpecialVehicle);
          this.SpecialVehicle.IsDriveable = false;
          UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
        }
        if (item == OppressorMkIIuse && this.OppressorMKIIBought == 1)
        {
          if ((Entity) this.SpecialVehicle != (Entity) null)
            this.SpecialVehicle.Delete();
          this.SpecialVehicle = World.CreateVehicle((GTA.Model) "OPPRESSOR2", this.VehicleSpawn);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//OppressorMK2.ini");
          this.SaveLoad.Load(this.SpecialVehicle);
          this.SpecialVehicle.IsDriveable = false;
          UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
        }
        if (item == PatriotStretchUse && this.PatriotStretchBought == 1)
        {
          if ((Entity) this.SpecialVehicle != (Entity) null)
            this.SpecialVehicle.Delete();
          this.SpecialVehicle = World.CreateVehicle((GTA.Model) "PATRIOT2", this.VehicleSpawn);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Patirot Stretch.ini");
          this.SaveLoad.Load(this.SpecialVehicle);
          this.SpecialVehicle.IsDriveable = false;
          UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
        }
        if (item == SwingerUse && this.SwingerBought == 1)
        {
          if ((Entity) this.SpecialVehicle != (Entity) null)
            this.SpecialVehicle.Delete();
          this.SpecialVehicle = World.CreateVehicle((GTA.Model) "SWINGER", this.VehicleSpawn);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Swinger.ini");
          this.SaveLoad.Load(this.SpecialVehicle);
          this.SpecialVehicle.IsDriveable = false;
          UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
        }
        if (item != StraffordUse || this.StraffordBought != 1)
          return;
        if ((Entity) this.SpecialVehicle != (Entity) null)
          this.SpecialVehicle.Delete();
        this.SpecialVehicle = World.CreateVehicle((GTA.Model) "STAFFORD", this.VehicleSpawn);
        this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Strafford.ini");
        this.SaveLoad.Load(this.SpecialVehicle);
        this.SpecialVehicle.IsDriveable = false;
        UI.Notify(this.GetHostName() + " Your : " + this.SpecialVehicle.FriendlyName + " is in the Vehicle Bay for you to use");
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.SpecialVehicleOptions, "Buy a vehicle");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem ScramJetBuy = new UIMenuItem("ScramJet : $4,628,000");
      uiMenu2.AddItem(ScramJetBuy);
      UIMenuItem MenacerBuy = new UIMenuItem("Menacer : $1,775,000");
      uiMenu2.AddItem(MenacerBuy);
      UIMenuItem PatriotStretchBuy = new UIMenuItem("Patriot Stretch : $611,000");
      uiMenu2.AddItem(PatriotStretchBuy);
      UIMenuItem OppressorMkIIBuy = new UIMenuItem("Oppressor MKII : $3,890,000");
      uiMenu2.AddItem(OppressorMkIIBuy);
      UIMenuItem SwingerBuy = new UIMenuItem("Swinger : $909,000");
      uiMenu2.AddItem(SwingerBuy);
      UIMenuItem StraffordBuy = new UIMenuItem("Strafford : $1,272,000");
      uiMenu2.AddItem(StraffordBuy);
      UIMenuItem uiMenuItem = new UIMenuItem("-------------------------------------------------------------");
      uiMenu2.AddItem(uiMenuItem);
      UIMenuItem Speedo4 = new UIMenuItem("Speedo Custom : $95,000");
      uiMenu2.AddItem(Speedo4);
      UIMenuItem Mule2 = new UIMenuItem("Mule Custom : $0");
      uiMenu2.AddItem(Mule2);
      UIMenuItem Pounder2 = new UIMenuItem("Pounder Custom : $320,000");
      uiMenu2.AddItem(Pounder2);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Pounder2)
        {
          if (this.PounderCustomUnlocked != 1)
          {
            if (Game.Player.Money >= 320000)
            {
              Game.Player.Money -= 320000;
              this.PounderCustomUnlocked = 1;
              this.Config.SetValue<int>("Vehicles", "PounderCustomUnlocked", this.PounderCustomUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " :  You are now able to use this vehicle from Storage Bay");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Storage//PounderCustom.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == Mule2)
        {
          if (this.MuleCustomUnlocked != 1)
          {
            if (Game.Player.Money >= 0)
            {
              Player player = Game.Player;
              player.Money = player.Money;
              this.MuleCustomUnlocked = 1;
              this.Config.SetValue<int>("Vehicles", "MuleCustomUnlocked", this.MuleCustomUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " :  You are now able to use this vehicle from Storage Bay");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Storage//MuleCustom.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == Speedo4)
        {
          if (this.SpeedoCustomUnlocked != 1)
          {
            if (Game.Player.Money >= 95000)
            {
              Game.Player.Money -= 95000;
              this.SpeedoCustomUnlocked = 1;
              this.Config.SetValue<int>("Vehicles", "SpeedoCustomUnlocked", this.SpeedoCustomUnlocked);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " :  You are now able to use this vehicle from Storage Bay");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Storage//SpeedoCustom.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == ScramJetBuy)
        {
          if (this.ScramJetBought != 1)
          {
            if (Game.Player.Money >= 4628000)
            {
              Game.Player.Money -= 4628000;
              this.ScramJetBought = 1;
              this.Config.SetValue<int>("Vehicles", "ScramJetBought", this.ScramJetBought);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " :  Your new Vehicle has been delivered");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//ScramJet.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == MenacerBuy)
        {
          if (this.MenacerBought != 1)
          {
            if (Game.Player.Money >= 1775000)
            {
              Game.Player.Money -= 1775000;
              this.MenacerBought = 1;
              this.Config.SetValue<int>("Vehicles", "MenacerBought", this.MenacerBought);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Your new Vehicle has been delivered");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Menacer.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == PatriotStretchBuy)
        {
          if (this.PatriotStretchBought != 1)
          {
            if (Game.Player.Money >= 611000)
            {
              Game.Player.Money -= 611000;
              this.PatriotStretchBought = 1;
              this.Config.SetValue<int>("Vehicles", "PatriotStretchBought", this.PatriotStretchBought);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Your new Vehicle has been delivered");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Patirot Stretch.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " :You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item == OppressorMkIIBuy)
        {
          if (this.OppressorMKIIBought != 1)
          {
            if (Game.Player.Money >= 3890000)
            {
              Game.Player.Money -= 3890000;
              this.OppressorMKIIBought = 1;
              this.Config.SetValue<int>("Vehicles", "OppressorMKIIBought", this.OppressorMKIIBought);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " :  Your new Vehicle has been delivered");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//OppressorMK2.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " :You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " :You own this vehicle");
        }
        if (item == SwingerBuy)
        {
          if (this.SwingerBought != 1)
          {
            if (Game.Player.Money >= 909000)
            {
              Game.Player.Money -= 909000;
              this.SwingerBought = 1;
              this.Config.SetValue<int>("Vehicles", "SwingerBought", this.SwingerBought);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : Your new Vehicle has been delivered");
              this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Swinger.ini");
              this.ResetSourcedVehicle();
            }
            else
              UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
          }
          else
            UI.Notify(this.GetHostName() + " : You own this vehicle");
        }
        if (item != StraffordBuy)
          return;
        if (this.StraffordBought != 1)
        {
          if (Game.Player.Money >= 1272000)
          {
            Game.Player.Money -= 1272000;
            this.StraffordBought = 1;
            this.Config.SetValue<int>("Vehicles", "StraffordBought", this.StraffordBought);
            this.Config.Save();
            UI.Notify(this.GetHostName() + " :  Your new Vehicle has been delivered");
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Strafford.ini");
            this.ResetSourcedVehicle();
          }
          else
            UI.Notify(this.GetHostName() + " : You dont have enought money for this vehicle");
        }
        else
          UI.Notify(this.GetHostName() + " : You own this vehicle");
      });
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.SpecialVehicleOptions, "Misc Vehicles");
      this.GUIMenus.Add(uiMenu3);
      UIMenuItem TerabyteBuy = new UIMenuItem("Terabyte : $3,459,000");
      uiMenu3.AddItem(TerabyteBuy);
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != TerabyteBuy || this.TerroybiteBought == 1 || Game.Player.Money < 3459000)
          return;
        Game.Player.Money -= 3459000;
        this.TerroybiteBought = 1;
        this.Config.SetValue<int>("MISC", "TerroybiteBought", this.TerroybiteBought);
        this.Config.Save();
        UI.Notify(this.GetHostName() + " :  Your new Terabyte will be here when you re-enter the Nightclub");
      });
    }

    public void DeleteCarinSlot(string Slot, Vehicle V)
    {
      string Garage = "Garage";
      this.Garages.SaveLoad.LoadIniFile(this.LoadPath + Garage + "//" + Slot + ".ini");
      UI.Notify(this.LoadPath + Garage + "//" + Slot + ".ini");
      this.Garages.SaveLoad.SaveName();
      this.Garages.DeleteCarintSlot(this.LoadPath, Garage, Slot);
      V.Delete();
    }

    public void LoadCarinToRealWorld(Vehicle V)
    {
      this.SetNightclubLocation();
      Vehicle vehicle = V;
      V.Position = this.GarageVehicleSpawnOutside;
      Game.Player.Character.SetIntoVehicle(vehicle, VehicleSeat.Driver);
      this.IsInInterior = false;
      vehicle.IsDriveable = true;
      vehicle.IsDriveable = true;
      vehicle.Repair();
      vehicle.Rotation = new Vector3(0.0f, 0.0f, 178f);
      this.SpecialVehicle = (Vehicle) null;
      if ((Entity) this.Terrobyte != (Entity) null)
        this.Terrobyte.Delete();
      if ((Entity) this.SpecialVehicle != (Entity) null)
        this.SpecialVehicle.Delete();
      if (this.Peds.Count <= 0)
        return;
      foreach (Ped ped in this.Peds)
      {
        ped.Task.ClearAllImmediately();
        ped.MarkAsNoLongerNeeded();
        ped.Delete();
      }
    }

    public void ShowIncrease()
    {
      UI.Notify("Level: " + this.purchaselvl.ToString());
      UI.Notify("Max Stocks: " + this.maxstocks.ToString());
      UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
      UI.Notify("Mission Gain: " + this.profitMargin.ToString() + "%");
      UI.Notify("Stock Value: $" + this.stocksvalue.ToString("N"));
    }

    private void SetupProduct()
    {
      UIMenu uiMenu = this.modMenuPool.AddSubMenu(this.ProductStock, "Buy/Sell Product");
      this.GUIMenus.Add(uiMenu);
      UIMenuItem Buy2 = new UIMenuItem("Buy X10: -$" + 500000.ToString());
      uiMenu.AddItem(Buy2);
      UIMenuItem Buy = new UIMenuItem("Buy X1: -$" + 100000.ToString());
      uiMenu.AddItem(Buy);
      UIMenuItem Sell = new UIMenuItem("Instant Sell - All Stocks (75% Return)");
      uiMenu.AddItem(Sell);
      UIMenuItem SupplySell = new UIMenuItem("Supply Mission - Sell  (125% Return)");
      uiMenu.AddItem(SupplySell);
      UIMenuItem SupplySteal = new UIMenuItem("Supply Mission - Steal Cargo Crates ");
      uiMenu.AddItem(SupplySteal);
      UIMenuItem SupplyDestoy = new UIMenuItem("Supply Mission - Destroy Cargo Crates ");
      uiMenu.AddItem(SupplyDestoy);
      UIMenuItem Show = new UIMenuItem("Show Product Value/Count");
      uiMenu.AddItem(Show);
      uiMenu.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Show)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          UI.Notify(this.GetHostName() + " : Here is where we are at");
          this.ShowIncrease();
        }
        if (item == Buy2)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          if (this.stockscount + 10 <= this.maxstocks)
          {
            if (Game.Player.Money > 500000)
            {
              Game.Player.Money -= 500000;
              this.stocksvalue += 250000f;
              this.stockscount += 10;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : ok i can deal with that, one new container of product");
              UI.Notify("Stocks Avalable: " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " : Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == Buy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          if (this.stockscount != this.maxstocks)
          {
            if (Game.Player.Money > 100000)
            {
              Game.Player.Money -= 100000;
              this.stocksvalue += 25000f;
              ++this.stockscount;
              this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
              this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
              this.Config.Save();
              UI.Notify(this.GetHostName() + " : ok i can deal with that, one new container of product");
              UI.Notify(this.GetHostName() + " : " + this.stockscount.ToString());
            }
          }
          else
            UI.Notify(this.GetHostName() + " : Sorry Boss, were full, we canot store any more stocks, please sell stocks or upgrade ");
        }
        if (item == SupplySell)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.STAmttoDeliver = 0;
          if (this.stockscount > 100 && this.stockscount < 200)
          {
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.TipTruck, this.GarageVehicleSpawnOutside, 0.0f);
            this.StockVeh.ToggleExtra(2, false);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            System.Random random = new System.Random();
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
          }
          if (this.stockscount > 200)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.GarageVehicleSpawnOutside, 0.0f);
            Vector3 offsetInWorldCoords1 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
            Vector3 offsetInWorldCoords2 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
            Vector3 offsetInWorldCoords3 = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
            Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop1;
            this.SellStockProps.Add(prop1);
            Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp2 = prop2;
            this.SellStockProps.Add(prop2);
            Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp3 = prop3;
            this.SellStockProps.Add(prop3);
            this.SellStockProp1.HasCollision = false;
            this.SellStockProp2.HasCollision = false;
            this.SellStockProp3.HasCollision = false;
          }
          if (this.stockscount < 100)
          {
            System.Random random = new System.Random();
            this.StockVeh = World.CreateVehicle((GTA.Model) VehicleHash.Guardian, this.GarageVehicleSpawnOutside, 0.0f);
            Vector3 offsetInWorldCoords = this.StockVeh.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.1f));
            Prop prop = World.CreateProp(this.RequestModel(this.CrateProps[random.Next(0, this.CrateProps.Count)]), offsetInWorldCoords, new Vector3(0.0f, 0.0f, this.StockVeh.Heading), false, false);
            this.SellStockProp1 = prop;
            this.SellStockProps.Add(prop);
            this.SellStockProp1.HasCollision = false;
          }
          if (this.stockscount < 30)
            this.STAmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.STAmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.STAmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.STAmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.STAmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.STAmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.STAmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.STAmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.STAmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.STAmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.STAmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.STAmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Cargo Sell Deliver Point";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " : Because your Stock Level is " + this.stockscount.ToString() + ", you need to deliver to a minimum of " + this.AmttoDeliver.ToString() + " drop points~w~, each drop point is indicated by a yellow crate icon on your map, good luck");
          if ((Entity) this.StockVeh != (Entity) null)
          {
            this.StockVeh.AddBlip();
            this.StockVeh.CurrentBlip.Sprite = BlipSprite.ArmoredTruck;
            this.StockVeh.CurrentBlip.Name = "Cargo Deliver Vehicle";
            this.StockVeh.CurrentBlip.Color = BlipColor.Blue4;
          }
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 2222;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplySteal)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          if (this.SupplyGarageBlip != (Blip) null)
            this.SupplyGarageBlip.Remove();
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
          if (this.SellStockProps.Count > 0)
          {
            foreach (Prop sellStockProp in this.SellStockProps)
            {
              if ((Entity) sellStockProp != (Entity) null)
                sellStockProp.Delete();
            }
          }
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
          this.DropBlip.Clear();
          if ((Entity) this.StockVeh != (Entity) null)
            this.StockVeh.Delete();
          Script.Wait(100);
          this.STAmttoDeliver = 0;
          if (this.stockscount < 30)
            this.STAmttoDeliver = 2;
          if (this.stockscount >= 30 && this.stockscount < 70)
            this.STAmttoDeliver = 3;
          if (this.stockscount >= 70 && this.stockscount < 120)
            this.STAmttoDeliver = 4;
          if (this.stockscount >= 120 && this.stockscount < 150)
            this.STAmttoDeliver = 5;
          if (this.stockscount >= 150 && this.stockscount < 190)
            this.STAmttoDeliver = 6;
          if (this.stockscount >= 190 && this.stockscount < 230)
            this.STAmttoDeliver = 7;
          if (this.stockscount >= 230 && this.stockscount < 260)
            this.STAmttoDeliver = 8;
          if (this.stockscount >= 260 && this.stockscount < 290)
            this.STAmttoDeliver = 9;
          if (this.stockscount >= 290 && this.stockscount < 330)
            this.STAmttoDeliver = 10;
          if (this.stockscount >= 330 && this.stockscount < 360)
            this.STAmttoDeliver = 12;
          if (this.stockscount >= 360 && this.stockscount < 400)
            this.STAmttoDeliver = 14;
          if (this.stockscount >= 400)
            this.STAmttoDeliver = 16;
          foreach (Vector3 position in this.DropPoint)
          {
            Blip blip = World.CreateBlip(position);
            blip.Sprite = BlipSprite.SpecialCargo;
            blip.Name = "Steal Cargo Vehicle";
            blip.Color = BlipColor.BlueLight;
            this.DropBlip.Add(blip);
            blip.IsShortRange = true;
          }
          UI.Notify(this.GetHostName() + " : I have marked out several locations where, we have spotted rival Businesses, shipping Stock, steal as much you want");
          this.CreateSupplyVehicle = false;
          this.GotVehicle = false;
          this.SellStockDeliveryMission = true;
          this.missionnum = 3333;
          this.SellStockPointsBeenAt = 0;
        }
        if (item == SupplyDestoy)
        {
          this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
          if ((Entity) this.Sam1 != (Entity) null)
            this.Sam1.Delete();
          if ((Entity) this.Sam2 != (Entity) null)
            this.Sam2.Delete();
          if ((Entity) this.Sam3 != (Entity) null)
            this.Sam3.Delete();
          if (this.Sam1blip != (Blip) null)
            this.Sam1blip.Remove();
          if (this.Sam2blip != (Blip) null)
            this.Sam2blip.Remove();
          if (this.Sam3blip != (Blip) null)
            this.Sam3blip.Remove();
          if (this.EndPointBlip != (Blip) null)
            this.EndPointBlip.Remove();
          this.EndPoint = new Vector3(-1286.58f, 2529.48f, 20f);
          this.Sam1Loc = new Vector3(-2168.24f, -343f, 14f);
          this.Sam2Loc = new Vector3(2199f, 3015.55f, 45f);
          this.Sam3Loc = new Vector3(-155f, 6216.85f, 32f);
          this.Sam1 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam1Loc);
          this.Sam2 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam2Loc);
          this.Sam3 = World.CreateVehicle((GTA.Model) VehicleHash.Flatbed, this.Sam3Loc);
          System.Random random1 = new System.Random();
          Vector3 offsetInWorldCoords1 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords2 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords3 = this.Sam1.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop1 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords1, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp1 = prop1;
          this.SellStockProps.Add(prop1);
          Prop prop2 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords2, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp2 = prop2;
          this.SellStockProps.Add(prop2);
          Prop prop3 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords3, new Vector3(0.0f, 0.0f, this.Sam1.Heading), false, false);
          this.SellStockProp3 = prop3;
          this.SellStockProps.Add(prop3);
          this.SellStockProp1.HasCollision = false;
          this.SellStockProp2.HasCollision = false;
          this.SellStockProp3.HasCollision = false;
          Vector3 offsetInWorldCoords4 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords5 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords6 = this.Sam2.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop4 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords4, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp4 = prop4;
          this.SellStockProps.Add(prop4);
          Prop prop5 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords5, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp5 = prop5;
          this.SellStockProps.Add(prop5);
          Prop prop6 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords6, new Vector3(0.0f, 0.0f, this.Sam2.Heading), false, false);
          this.SellStockProp6 = prop6;
          this.SellStockProps.Add(prop6);
          this.SellStockProp4.HasCollision = false;
          this.SellStockProp5.HasCollision = false;
          this.SellStockProp6.HasCollision = false;
          Vector3 offsetInWorldCoords7 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -2f, 0.5f));
          Vector3 offsetInWorldCoords8 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -3f, 0.5f));
          Vector3 offsetInWorldCoords9 = this.Sam3.GetOffsetInWorldCoords(new Vector3(0.0f, -4f, 0.5f));
          Prop prop7 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords7, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp7 = prop7;
          this.SellStockProps.Add(prop7);
          Prop prop8 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords8, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp8 = prop8;
          this.SellStockProps.Add(prop8);
          Prop prop9 = World.CreateProp(this.RequestModel(this.CrateProps[random1.Next(0, this.CrateProps.Count)]), offsetInWorldCoords9, new Vector3(0.0f, 0.0f, this.Sam3.Heading), false, false);
          this.SellStockProp9 = prop9;
          this.SellStockProps.Add(prop9);
          this.SellStockProp7.HasCollision = false;
          this.SellStockProp8.HasCollision = false;
          this.SellStockProp9.HasCollision = false;
          this.Sam1.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam1.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam1, this.EndPoint, 20f, 120f, 1);
          this.Sam2.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam2.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam2, this.EndPoint, 20f, 120f, 1);
          this.Sam3.CreatePedOnSeat(VehicleSeat.Driver, (GTA.Model) PedHash.ArmGoon02GMY);
          this.Sam3.GetPedOnSeat(VehicleSeat.Driver).Task.DriveTo(this.Sam3, this.EndPoint, 20f, 120f, 1);
          System.Random random2 = new System.Random();
          this.Sam1blip = World.CreateBlip(this.Sam1.Position);
          this.Sam1blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam1blip.Color = BlipColor.Red;
          this.Sam1blip.Name = "Armored Truck A";
          this.Sam2blip = World.CreateBlip(this.Sam2.Position);
          this.Sam2blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam2blip.Color = BlipColor.Red;
          this.Sam2blip.Name = "Armored Truck B";
          this.Sam3blip = World.CreateBlip(this.Sam3.Position);
          this.Sam3blip.Sprite = BlipSprite.ArmoredTruck;
          this.Sam3blip.Color = BlipColor.Red;
          this.Sam3blip.Name = "Armored Truck C";
          this.EndPointBlip = World.CreateBlip(this.EndPoint);
          this.EndPointBlip.Sprite = BlipSprite.CaptureFlag;
          this.EndPointBlip.Color = BlipColor.White;
          this.EndPointBlip.Name = "Delivery Point";
          this.missionnum = 4444;
          this.SellStockDeliveryMission = true;
          UI.Notify(this.GetHostName() + " : Boss I've spotted 3 vehicles on route to Fort Zancudo, Destroy All Three, Before they reach their destination for a 25% Boost to Stock Value");
        }
        if (item != Sell)
          return;
        this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
        UI.Notify(this.GetHostName() + " : Using instant Sell we can only get 75% of the available stock value");
        Game.Player.Money += (int) ((double) this.stocksvalue * 0.75);
        this.stocksvalue = 0.0f;
        this.stockscount = 0;
        this.Config.SetValue<int>("Setup", "stockslevel", this.stockscount);
        this.Config.SetValue<float>("Setup", "StocksValue", this.stocksvalue);
        this.Config.Save();
      });
    }

    public void SetRadioOff()
    {
      Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
      this.RadioOn = false;
      Function.Call(Hash._0xBF286C554784F3DF, (InputArgument) true);
      Function.Call(Hash._0x1098355A16064BB3, (InputArgument) false);
      Function.Call(Hash._0xF7F26C6E9CC9EBB8, (InputArgument) true);
      this.RefreshingRadio = false;
    }

    public void SetRadioOn()
    {
      if (this.PlayRadioMusic)
      {
        Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
        this.RadioOn = true;
        string[] strArray = this.DefaultRadioStation.Split('_');
        int num = 1;
        try
        {
          num = int.Parse(strArray[0]);
        }
        catch
        {
        }
        Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
        Function.Call(Hash._0xBF286C554784F3DF, (InputArgument) true);
        Function.Call(Hash._0x1098355A16064BB3, (InputArgument) true);
        Function.Call(Hash._0xF7F26C6E9CC9EBB8, (InputArgument) true);
        Function.Call(Hash._0xA619B168B8A8570F, (InputArgument) num);
      }
      if (this.PlayRadioMusic)
        return;
      Function.Call(Hash._0x19F21E63AE6EAE4E, (InputArgument) true);
      this.RadioOn = false;
      Function.Call(Hash._0xBF286C554784F3DF, (InputArgument) false);
      Function.Call(Hash._0x1098355A16064BB3, (InputArgument) false);
      Function.Call(Hash._0xF7F26C6E9CC9EBB8, (InputArgument) false);
      this.RefreshingRadio = false;
    }

    private void Setupbuisness()
    {
      List<object> items = new List<object>();
      int num1 = 1;
      for (int index = 1; index < 100; ++index)
        items.Add((object) (num1 + index));
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(this.methgarage, "Expand Business ");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem Update = new UIMenuItem("Update Stats");
      uiMenu1.AddItem(Update);
      UIMenuItem BuyNewLevel = new UIMenuItem(" Buy Level ");
      uiMenu1.AddItem(BuyNewLevel);
      UIMenuListItem list2 = new UIMenuListItem("Select Level: ", items, 1);
      uiMenu1.AddItem((UIMenuItem) list2);
      UIMenuItem Jump = new UIMenuItem("Jump Straight to Level");
      uiMenu1.AddItem(Jump);
      UIMenuItem Show = new UIMenuItem("Show Level");
      uiMenu1.AddItem(Show);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.methgarage, "Sell  Business");
      this.GUIMenus.Add(uiMenu2);
      UIMenuItem Sell = new UIMenuItem("Sell");
      uiMenu2.AddItem(Sell);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Sell)
          return;
        if (!this.bought)
        {
          UI.Notify(this.GetHostName() + " : Get out of here!, you dont own any of these buisnesses ");
        }
        else
        {
          this.bought = false;
          this.purchaselvl = 0;
          this.stocksvalue = 0.0f;
          this.stockscount = 0;
          this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          this.Config.Save();
          UI.Notify(this.GetHostName() + " : I just heard, you wanted to sell the buisness, i'm verry sorry, if i have upset you in any way");
        }
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Jump)
        {
          int num2 = list2.Index + 1;
          if (num2 > this.purchaselvl)
          {
            int num3 = 0;
            int num4 = 0;
            this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
            for (int purchaselvl = this.purchaselvl; purchaselvl < num2; ++purchaselvl)
            {
              double num5 = 1.75;
              if (this.purchaselvl < 25)
                num5 = 1.75;
              if (this.purchaselvl > 25 && index < 50)
                num5 = 2.25;
              if (this.purchaselvl > 50 && this.purchaselvl < 70)
                num5 = 3.5;
              if (this.purchaselvl > 75 && this.purchaselvl < 100)
                num5 = 4.75;
              num3 += (int) ((double) this.BusinessUpgradeBasePrice * num5 * (double) num2);
              ++num4;
            }
            UI.Notify(this.GetHostName() + " : OK your new level will be " + (this.purchaselvl += num4 + 1).ToString() + ", at a price of $" + num3.ToString("N") + ", Do u want to continue Enter Y or N");
            Script.Wait(1000);
            try
            {
              if (Game.GetUserInput(WindowTitle.CELL_EMAIL_BOD, 1).Equals("Y"))
              {
                if (Game.Player.Money >= num3)
                {
                  Game.Player.Money -= num3;
                  this.purchaselvl = num2;
                  float num5 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
                  this.maxstocks = 10 * this.purchaselvl;
                  this.maxstocks = 10 * this.purchaselvl;
                  this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
                  this.increaseGain = num5;
                  this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                  this.Config.Save();
                }
                else
                  UI.Notify("You dont have enough money to purchase this upgrade");
              }
              else
              {
                this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
                UI.Notify(this.GetHostName() + " : You Entered the Wrong key or N");
              }
            }
            catch (NullReferenceException ex)
            {
              this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              UI.Notify("You did not enter a key!");
            }
          }
        }
        int num6;
        if (item == Update)
        {
          int num2 = list2.Index + 1;
          double num3 = 1.75;
          if (this.purchaselvl < 25)
            num3 = 1.75;
          if (this.purchaselvl > 25 && index < 50)
            num3 = 2.25;
          if (this.purchaselvl > 50 && this.purchaselvl < 70)
            num3 = 3.5;
          if (this.purchaselvl > 75 && this.purchaselvl < 100)
            num3 = 4.75;
          UI.Notify("Price " + ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2).ToString("N"));
          num6 = num2 + 1;
          UI.Notify("Level to Buy " + num6.ToString());
          UI.Notify("increaseGain : $" + ((float) ((double) this.BusinessUpgradeIncreaseGain * (double) num2 / 0.75)).ToString("N"));
          UI.Notify("Profit Margin :" + (0.85 * (double) num2 + 0.0).ToString() + "%");
          num6 = 10 * num2;
          UI.Notify("Max Stocks : " + num6.ToString());
        }
        if (item == BuyNewLevel)
        {
          int num2 = list2.Index + 1;
          this.purchaselvl = this.Config.GetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
          if (this.purchaselvl + 1 == num2)
          {
            double num3 = 1.75;
            if (this.purchaselvl < 25)
              num3 = 1.75;
            if (this.purchaselvl > 25 && index < 50)
              num3 = 2.25;
            if (this.purchaselvl > 50 && this.purchaselvl < 70)
              num3 = 3.5;
            if (this.purchaselvl > 75 && this.purchaselvl < 100)
              num3 = 4.75;
            if ((double) Game.Player.Money >= (double) this.BusinessUpgradeBasePrice * num3 * (double) num2)
            {
              Game.Player.Money -= (int) ((double) this.BusinessUpgradeBasePrice * num3 * (double) num2);
              ++this.purchaselvl;
              this.maxstocks = 10 * this.purchaselvl;
              float num4 = (float) ((double) this.BusinessUpgradeIncreaseGain * (double) this.purchaselvl / 0.75);
              this.profitMargin = (float) (0.85 * (double) this.purchaselvl + 0.0);
              this.increaseGain = num4;
              this.Config.SetValue<int>("Setup", "BuisnessLevel", this.purchaselvl);
              this.Config.Save();
            }
            else
              UI.Notify("You dont have enough money to purchase this upgrade");
          }
          else
            UI.Notify("The level you are trying to purchase is either to high or to low!, please purchase the level before, to purchase this level");
        }
        if (item != Show)
          return;
        double num7 = 1.75;
        if (this.purchaselvl < 25)
          num7 = 1.75;
        if (this.purchaselvl > 25 && index < 50)
          num7 = 2.25;
        if (this.purchaselvl > 50 && this.purchaselvl < 70)
          num7 = 3.5;
        if (this.purchaselvl > 75 && this.purchaselvl < 100)
          num7 = 4.75;
        UI.Notify("Price for Next Level $" + ((double) this.BusinessUpgradeBasePrice * num7 * (double) this.purchaselvl).ToString("N"));
        num6 = this.purchaselvl + 1;
        UI.Notify("Next Level " + num6.ToString());
        UI.Notify("Annual Gain: $" + this.increaseGain.ToString("N"));
        UI.Notify("Profit Margin :" + (0.85 * (double) this.purchaselvl + 0.0).ToString() + "%");
        num6 = 10 * this.purchaselvl;
        UI.Notify("Max Stocks : " + num6.ToString());
      });
    }

    public Color RandomColour()
    {
      Color color = Color.Beige;
      List<object> objectList = new List<object>();
      objectList.Add((object) "White");
      objectList.Add((object) "Yellow");
      objectList.Add((object) "Green");
      objectList.Add((object) "GreenYellow");
      objectList.Add((object) "Lime");
      objectList.Add((object) "Red");
      objectList.Add((object) "PowderBlue");
      objectList.Add((object) "Violet");
      objectList.Add((object) "Turquoise");
      objectList.Add((object) "Orange");
      objectList.Add((object) "Pink");
      objectList.Add((object) "AliceBlue");
      objectList.Add((object) "BlueViolet");
      objectList.Add((object) "Blue");
      objectList.Add((object) "Cyan");
      objectList.Add((object) "Magenta");
      objectList.Add((object) "Gray");
      objectList.Add((object) "LightBlue");
      objectList.Add((object) "LightCyan");
      objectList.Add((object) "Gold");
      objectList.Add((object) "Lavender");
      objectList.Add((object) "Silver");
      objectList.Add((object) "Snow");
      objectList.Add((object) "YellowGreen");
      objectList.Add((object) "Goldenrod");
      objectList.Add((object) "GhostWhite");
      System.Random random = new System.Random();
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__1 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, Color>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Color), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, Color> target1 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__1.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, Color>> p1 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__1;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__0 = CallSite<Func<CallSite, System.Type, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "FromName", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj1 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__596.\u003C\u003Ep__0, typeof (Color), objectList[random.Next(0, objectList.Count)]);
      color = target1((CallSite) p1, obj1);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__3 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, Color>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Color), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, Color> target2 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__3.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, Color>> p3 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__3;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__2 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__2 = CallSite<Func<CallSite, System.Type, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "FromName", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj2 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__596.\u003C\u003Ep__2, typeof (Color), objectList[random.Next(0, objectList.Count)]);
      color = target2((CallSite) p3, obj2);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__5 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, Color>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (Color), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      Func<CallSite, object, Color> target3 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__5.Target;
      // ISSUE: reference to a compiler-generated field
      CallSite<Func<CallSite, object, Color>> p5 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__5;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__596.\u003C\u003Ep__4 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__596.\u003C\u003Ep__4 = CallSite<Func<CallSite, System.Type, object, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.None, "FromName", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[2]
        {
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType | CSharpArgumentInfoFlags.IsStaticType, (string) null),
          CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
        }));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      object obj3 = Class1.\u003C\u003Eo__596.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__596.\u003C\u003Ep__4, typeof (Color), objectList[random.Next(0, objectList.Count)]);
      return target3((CallSite) p5, obj3);
    }

    public void SaveLocalcar(string G, Vehicle V, string Slot)
    {
      if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if (Game.Player.Character.CurrentVehicle.DisplayName != "RHINO" || Game.Player.Character.CurrentVehicle.DisplayName != "KHANJALI" || Game.Player.Character.CurrentVehicle.DisplayName != "CHERNOBOG")
        {
          string str = "Garage";
          string displayName = Game.Player.Character.CurrentVehicle.DisplayName;
          this.Garages.SaveLoad.LoadIniFile(this.LoadPath + str + "//" + Slot + ".ini");
          this.Garages.SaveLoad.Save();
          string loadPath = this.LoadPath;
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          this.IsInInterior = true;
        }
        else
          this.DisplayHelpTextThisFrame("You cannot save this vehicle");
      }
      else
        this.DisplayHelpTextThisFrame("Bring a vehicle to save");
    }

    public void SaveCar(string G, Vehicle V, string Slot)
    {
      if ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if (Game.Player.Character.CurrentVehicle.DisplayName != "RHINO" || Game.Player.Character.CurrentVehicle.DisplayName != "KHANJALI" || Game.Player.Character.CurrentVehicle.DisplayName != "CHERNOBOG")
        {
          string str = "Garage";
          string displayName = Game.Player.Character.CurrentVehicle.DisplayName;
          this.Garages.SaveLoad.LoadIniFile(this.LoadPath + str + "//" + Slot + ".ini");
          this.Garages.SaveLoad.SaveWithoutDelete();
          string loadPath = this.LoadPath;
          UI.Notify(this.GetHostName() + " : Vehicle Saved!");
        }
        else
          this.DisplayHelpTextThisFrame("You cannot save this vehicle");
      }
      else
        this.DisplayHelpTextThisFrame("Bring a vehicle to save");
    }

    private void SetupGarage(UIMenu Options)
    {
      List<object> items = new List<object>();
      items.Add((object) "False");
      items.Add((object) "True");
      List<object> garage = new List<object>();
      garage.Add((object) "Garage");
      List<object> Slots = new List<object>();
      Slots.Add((object) "Slot1");
      Slots.Add((object) "Slot2");
      Slots.Add((object) "Slot3");
      Slots.Add((object) "Slot4");
      Slots.Add((object) "Slot5");
      Slots.Add((object) "Slot6");
      Slots.Add((object) "Slot7");
      Slots.Add((object) "Slot8");
      Slots.Add((object) "Slot9");
      Slots.Add((object) "Slot10");
      UIMenu uiMenu1 = this.modMenuPool.AddSubMenu(Options, "Enter Garage On Foot");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem ENTStorage = new UIMenuItem("Enter Storage");
      uiMenu1.AddItem(ENTStorage);
      UIMenuItem ENTGarage = new UIMenuItem("Enter Garage");
      uiMenu1.AddItem(ENTGarage);
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == ENTStorage)
        {
          Game.FadeScreenOut(500);
          Script.Wait(500);
          Game.Player.Character.FreezePosition = false;
          Game.Player.Character.Position = this.InsideGarageSpawn;
          this.GarageID = "Storage";
          string Garage = "Storage";
          Script.Wait(500);
          Game.FadeScreenIn(500);
          this.Garages.DeleteVehicles();
          this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
          this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
          this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
          this.Garages.LoadGarage(this.LoadPath, Garage, 3, this.GarageVehicleSpawnOutside);
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          this.IsInInterior = false;
          this.SetRadioOff();
          this.RefreshInterior();
        }
        if (item != ENTGarage)
          return;
        Game.FadeScreenOut(500);
        Script.Wait(500);
        Game.Player.Character.FreezePosition = false;
        Game.Player.Character.Position = this.InsideGarageSpawn;
        this.GarageID = "Garage";
        string Garage1 = "Garage";
        Script.Wait(500);
        Game.FadeScreenIn(500);
        this.Garages.DeleteVehicles();
        this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
        this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
        this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
        this.Garages.LoadGarage(this.LoadPath, Garage1, 10, this.GarageVehicleSpawnOutside);
        Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
        this.IsInInterior = false;
        this.SetRadioOff();
        this.RefreshInterior();
      });
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(Options, "Enter Garage");
      this.GUIMenus.Add(uiMenu2);
      UIMenuListItem g = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu2.AddItem((UIMenuItem) g);
      UIMenuListItem s = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu2.AddItem((UIMenuItem) s);
      UIMenuItem CarinSlot = new UIMenuItem("Car : ");
      uiMenu2.AddItem(CarinSlot);
      UIMenuItem Set = new UIMenuItem("Save Current Car");
      uiMenu2.AddItem(Set);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(Options, "View Car");
      this.GUIMenus.Add(uiMenu3);
      UIMenuListItem E = new UIMenuListItem("View Area: ", items, 0);
      uiMenu3.AddItem((UIMenuItem) E);
      UIMenuListItem g1 = new UIMenuListItem("Garage : ", garage, 0);
      uiMenu3.AddItem((UIMenuItem) g1);
      UIMenuListItem s1 = new UIMenuListItem("Slot : ", Slots, 0);
      uiMenu3.AddItem((UIMenuItem) s1);
      UIMenuItem CarinSlot1 = new UIMenuItem("Car : ");
      uiMenu3.AddItem(CarinSlot1);
      UIMenuItem Drive = new UIMenuItem("Drive This Car");
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Drive)
          return;
        this.ISinviewMode = false;
        Game.Player.Character.Position = this.GarageVehicleSpawnOutside;
        Game.Player.Character.IsVisible = true;
        Game.Player.Character.FreezePosition = false;
        if (this.Cam != (Camera) null)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          World.RenderingCamera = this.Cam;
          Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          this.Cam.IsActive = false;
          this.Cam.Destroy();
        }
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SaveLoad.VehicleName.Equals("null"))
        {
          CarinSlot1.Text = this.SaveLoad.VehicleName;
          try
          {
            if (this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null")
            {
              this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
              this.Vehicle1 = World.CreateVehicle(this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), this.MenuMarker, -90f);
              this.SaveLoad.Load(this.Vehicle1);
              this.Vehicle1.IsDriveable = true;
              this.Vehicle1.Position = this.GarageVehicleSpawnOutside;
              Game.Player.Character.Position = this.GarageVehicleSpawnOutside;
              Game.Player.Character.SetIntoVehicle(this.Vehicle1, VehicleSeat.Driver);
              this.Vehicle1 = (Vehicle) null;
            }
          }
          catch (Exception ex)
          {
            UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
          }
        }
        else if (this.SaveLoad.VehicleName.Equals("null"))
          CarinSlot1.Text = "No car in slot";
      });
      uiMenu3.AddItem(Drive);
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == E)
        {
          if (E.IndexToItem(E.Index) == (object) "True")
          {
            this.ISinviewMode = true;
            this.P = Game.Player.Character.Position;
            if (this.Cam != (Camera) null)
            {
              if ((Entity) this.Vehicle1 != (Entity) null)
                this.Vehicle1.Delete();
              World.RenderingCamera = this.Cam;
              Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
              this.Cam.IsActive = false;
              this.Cam.Destroy();
            }
            this.Cam = World.CreateCamera(new Vector3(400f, -958f, -98f), new Vector3(0.0f, 0.0f, 86f), 90f);
            Game.Player.Character.Position = this.Cam.Position;
            Game.Player.Character.Rotation = this.Cam.Rotation;
            Game.Player.Character.IsVisible = false;
            Game.Player.Character.FreezePosition = true;
            this.Cam.IsActive = true;
            this.Cam.FarClip = 2000f;
            Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 1, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
          }
          else if (E.IndexToItem(E.Index) == (object) "False")
          {
            this.ISinviewMode = false;
            Game.Player.Character.Position = this.GarageVehicleSpawnOutside;
            Game.Player.Character.IsVisible = true;
            Game.Player.Character.FreezePosition = false;
            if (this.Cam != (Camera) null)
            {
              if ((Entity) this.Vehicle1 != (Entity) null)
                this.Vehicle1.Delete();
              World.RenderingCamera = this.Cam;
              Function.Call(Hash._0x07E5B515DB0636FC, (InputArgument) 0, (InputArgument) 0, (InputArgument) 3000, (InputArgument) 1, (InputArgument) 0);
              this.Cam.IsActive = false;
              this.Cam.Destroy();
            }
          }
        }
        if (item == g1)
        {
          if ((Entity) this.Vehicle1 != (Entity) null)
            this.Vehicle1.Delete();
          this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
          if (!this.SaveLoad.VehicleName.Equals("null"))
          {
            CarinSlot1.Text = this.SaveLoad.VehicleName;
            try
            {
              if (this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null")
              {
                this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
                this.Vehicle1 = World.CreateVehicle(this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
                this.SaveLoad.Load(this.Vehicle1);
                this.Vehicle1.IsDriveable = true;
                this.Vehicle1.EngineRunning = true;
                this.Vehicle1.HighBeamsOn = true;
              }
            }
            catch (Exception ex)
            {
              UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
            }
          }
          else if (this.SaveLoad.VehicleName.Equals("null"))
            CarinSlot1.Text = "No car in slot";
        }
        if (item != s1)
          return;
        if ((Entity) this.Vehicle1 != (Entity) null)
          this.Vehicle1.Delete();
        this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
        if (!this.SaveLoad.VehicleName.Equals("null"))
          CarinSlot1.Text = this.SaveLoad.VehicleName;
        else if (this.SaveLoad.VehicleName.Equals("null"))
          CarinSlot1.Text = "No car in slot";
        try
        {
          if (this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini") != (GTA.Model) "null")
          {
            if ((Entity) this.Vehicle1 != (Entity) null)
              this.Vehicle1.Delete();
            this.SaveLoad.LoadIniFile(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini");
            this.Vehicle1 = World.CreateVehicle(this.SaveLoad.CheckCar(this.path + g1.IndexToItem(g1.Index)?.ToString() + "//" + s1.IndexToItem(s1.Index)?.ToString() + ".ini"), new Vector3(396f, -958f, -99f), -90f);
            this.SaveLoad.Load(this.Vehicle1);
            this.Vehicle1.IsDriveable = true;
            this.Vehicle1.EngineRunning = true;
            this.Vehicle1.HighBeamsOn = true;
          }
        }
        catch (Exception ex)
        {
          UI.Notify("~r~ Could Not Load Vehicle, Please Try Again ~w~");
        }
      });
      uiMenu2.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == g)
        {
          this.SaveLoad.LoadIniFile(this.path + g.IndexToItem(g.Index)?.ToString() + "//" + s.IndexToItem(s.Index)?.ToString() + ".ini");
          if (!this.SaveLoad.VehicleName.Equals("null"))
            CarinSlot.Text = this.SaveLoad.VehicleName;
          else if (this.SaveLoad.VehicleName.Equals("null"))
            CarinSlot.Text = "No car in slot";
        }
        if (item != s)
          return;
        this.SaveLoad.LoadIniFile(this.path + g.IndexToItem(g.Index)?.ToString() + "//" + s.IndexToItem(s.Index)?.ToString() + ".ini");
        if (!this.SaveLoad.VehicleName.Equals("null"))
          CarinSlot.Text = this.SaveLoad.VehicleName;
        else if (this.SaveLoad.VehicleName.Equals("null"))
          CarinSlot.Text = "No car in slot";
      });
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != Set)
          return;
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__599.\u003C\u003Ep__0 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__599.\u003C\u003Ep__0 = CallSite<Action<CallSite, Class1, object, Vehicle, object>>.Create(Binder.InvokeMember(CSharpBinderFlags.InvokeSimpleName | CSharpBinderFlags.ResultDiscarded, "SaveLocalcar", (IEnumerable<System.Type>) null, typeof (Class1), (IEnumerable<CSharpArgumentInfo>) new CSharpArgumentInfo[4]
          {
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.UseCompileTimeType, (string) null),
            CSharpArgumentInfo.Create(CSharpArgumentInfoFlags.None, (string) null)
          }));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__599.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__599.\u003C\u003Ep__0, this, garage[g.Index], this.Vehicle1, Slots[s.Index]);
      });
    }

    public void SetStaticEmitterEnabled(string ob, bool b) => Function.Call(Hash._0x399D2D3B33F1B8EB, (InputArgument) ob, (InputArgument) b);

    private void OnShutdown(object sender, EventArgs e)
    {
      if (false)
        return;
      if (this.BlipItem_SetupMission != (Blip) null)
        this.BlipItem_SetupMission.Remove();
      foreach (Class1.Flare smokeParticle in this.SmokeParticles)
        Function.Call(Hash._0x8F75998877616996, (InputArgument) smokeParticle.FlareID_1, (InputArgument) false);
      foreach (Class1.PosterPosition poster in this.Posters)
      {
        if ((Entity) poster.PosterOFfset != (Entity) null)
          poster.PosterOFfset.Delete();
        if ((Entity) poster.Poster != (Entity) null)
          poster.Poster.Delete();
      }
      if (this.SupplyMissionOn)
      {
        if ((Entity) this.SupplyMissionMainVehicle != (Entity) null && this.SupplyMissionMainVehicle.CurrentBlip != (Blip) null)
        {
          this.SupplyMissionMainVehicle.CurrentBlip.Remove();
          this.SupplyMissionMainVehicle.MarkAsNoLongerNeeded();
        }
        if ((Entity) this.Garages.Vehicle1 != (Entity) null)
        {
          if (this.Garages.Vehicle1.CurrentBlip != (Blip) null)
            this.Garages.Vehicle1.CurrentBlip.Remove();
          this.Garages.Vehicle1.Delete();
        }
        if ((Entity) this.Garages.Vehicle2 != (Entity) null)
        {
          if (this.Garages.Vehicle2.CurrentBlip != (Blip) null)
            this.Garages.Vehicle2.CurrentBlip.Remove();
          this.Garages.Vehicle2.Delete();
        }
        if ((Entity) this.Garages.Vehicle3 != (Entity) null)
        {
          if (this.Garages.Vehicle3.CurrentBlip != (Blip) null)
            this.Garages.Vehicle3.CurrentBlip.Remove();
          this.Garages.Vehicle3.Delete();
        }
      }
      foreach (Vehicle supplyMissionVehicle in this.SupplyMissionVehicles)
      {
        if ((Entity) supplyMissionVehicle != (Entity) null)
          supplyMissionVehicle.Delete();
      }
      foreach (Prop prop in this.SupplyMissionPropsSecondary)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Prop supplyMissionProp in this.SupplyMissionProps)
      {
        if ((Entity) supplyMissionProp != (Entity) null)
          supplyMissionProp.Delete();
      }
      foreach (Blip supplyMissionBlip in this.SupplyMissionBlips)
      {
        if (supplyMissionBlip != (Blip) null)
          supplyMissionBlip.Remove();
      }
      foreach (Ped supplyMissionPed in this.SupplyMissionPeds)
      {
        if ((Entity) supplyMissionPed != (Entity) null)
          supplyMissionPed.Delete();
      }
      if (this.SupplyMissionPeds.Count > 0)
        this.SupplyMissionPeds.Clear();
      if (this.SupplyMissionBlips.Count > 0)
        this.SupplyMissionBlips.Clear();
      if (this.SupplyMissionProps.Count > 0)
        this.SupplyMissionProps.Clear();
      if (this.SupplyMissionVehicles.Count > 0)
        this.SupplyMissionVehicles.Clear();
      if ((Entity) this.PlayerDrink != (Entity) null)
        this.PlayerDrink.Delete();
      foreach (Prop smokeEmitter in this.SmokeEmitters)
      {
        if ((Entity) smokeEmitter != (Entity) null)
          smokeEmitter.Delete();
      }
      foreach (Ped ped in this.MainPedsUnderground)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.MainChairsUnderground)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Ped attackPed in this.AttackPeds)
      {
        if ((Entity) attackPed != (Entity) null)
          attackPed.Delete();
      }
      foreach (Vehicle attackVehicle in this.AttackVehicles)
      {
        if ((Entity) attackVehicle != (Entity) null)
          attackVehicle.Delete();
      }
      foreach (Blip blip in this.STDropBlip)
      {
        if (blip != (Blip) null)
          blip.Remove();
      }
      foreach (Prop chiarProp in this.ChiarProps)
      {
        if ((Entity) chiarProp != (Entity) null)
          chiarProp.Delete();
      }
      foreach (Ped ped in this.Gang)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Vehicle gangVehicle in this.GangVehicles)
      {
        if ((Entity) gangVehicle != (Entity) null)
          gangVehicle.Delete();
      }
      if (this.MethBlip != (Blip) null)
        this.MethBlip.Remove();
      if (this.CocaineBlip != (Blip) null)
        this.CocaineBlip.Remove();
      if (this.WeedBlip != (Blip) null)
        this.WeedBlip.Remove();
      if (this.MoneyForgeBlip != (Blip) null)
        this.MoneyForgeBlip.Remove();
      if (this.FakeIDBlip != (Blip) null)
        this.FakeIDBlip.Remove();
      foreach (Ped stPed in this.STPeds)
      {
        if ((Entity) stPed != (Entity) null)
          stPed.Delete();
      }
      foreach (Blip blip in this.STDropBlip)
      {
        if (blip != (Blip) null)
          blip.Remove();
      }
      if ((Entity) this.DropVehicle != (Entity) null)
        this.DropVehicle.Delete();
      if (this.DropVehicleBlip != (Blip) null)
        this.DropVehicleBlip.Remove();
      if (this.ballasBlip1 != (Blip) null)
        this.ballasBlip1.Remove();
      if ((Entity) this.OutsideBouncer_1 != (Entity) null)
        this.OutsideBouncer_1.Delete();
      if ((Entity) this.OutsideBouncer_2 != (Entity) null)
        this.OutsideBouncer_2.Delete();
      if ((Entity) this.LuxuryCar != (Entity) null)
        this.LuxuryCar.Delete();
      foreach (Ped ped in this.WaitingPed)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Prop prop in this.WaitingPedFence)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      try
      {
        if (this.EndPointBlip != (Blip) null)
          this.EndPointBlip.Remove();
        if ((Entity) this.Sam1 != (Entity) null)
          this.Sam1.Delete();
        if ((Entity) this.Sam2 != (Entity) null)
          this.Sam2.Delete();
        if ((Entity) this.Sam3 != (Entity) null)
          this.Sam3.Delete();
        if (this.Sam1blip != (Blip) null)
          this.Sam1blip.Remove();
        if (this.Sam2blip != (Blip) null)
          this.Sam2blip.Remove();
        if (this.Sam3blip != (Blip) null)
          this.Sam3blip.Remove();
        if (this.SuppyGuards.Count > 0)
        {
          foreach (Ped suppyGuard in this.SuppyGuards)
          {
            if ((Entity) suppyGuard != (Entity) null)
              suppyGuard.Delete();
          }
        }
        if (this.DropBlip.Count > 0)
        {
          foreach (Blip blip in this.DropBlip)
          {
            if (blip != (Blip) null)
              blip.Remove();
          }
        }
        if ((Entity) this.StockVeh != (Entity) null)
          this.StockVeh.Delete();
        if (this.SellStockProps.Count > 0)
        {
          foreach (Prop sellStockProp in this.SellStockProps)
          {
            if ((Entity) sellStockProp != (Entity) null)
              sellStockProp.Delete();
          }
        }
        if (this.SupplyGarageBlip != (Blip) null)
          this.SupplyGarageBlip.Remove();
      }
      catch
      {
      }
      foreach (Prop djProp in this.DJProps)
      {
        if ((Entity) djProp != (Entity) null)
          djProp.Delete();
      }
      foreach (Prop celingLight in this.CelingLights)
      {
        if ((Entity) celingLight != (Entity) null)
          celingLight.Delete();
      }
      foreach (Ped ped in this.p)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      if ((Entity) this.Poster != (Entity) null)
        this.Poster.Delete();
      if ((Entity) this.Poster1 != (Entity) null)
        this.Poster1.Delete();
      if ((Entity) this.Poster2 != (Entity) null)
        this.Poster2.Delete();
      foreach (Ped ped in this.Driver)
      {
        if ((Entity) ped != (Entity) null)
          ped.Delete();
      }
      foreach (Ped guard in this.Guards)
      {
        if ((Entity) guard != (Entity) null)
          guard.Delete();
      }
      if ((Entity) this.VtoGet != (Entity) null)
        this.VtoGet.Delete();
      if ((Entity) this.VtoGet1 != (Entity) null)
        this.VtoGet1.Delete();
      if ((Entity) this.VtoGet2 != (Entity) null)
        this.VtoGet2.Delete();
      if ((Entity) this.VtoGet3 != (Entity) null)
        this.VtoGet3.Delete();
      if (this.VtoGetBlip != (Blip) null)
        this.VtoGetBlip.Remove();
      if ((Entity) this.Vent != (Entity) null)
        this.Vent.Delete();
      if ((Entity) this.DancerA != (Entity) null)
        this.DancerA.Delete();
      if ((Entity) this.DancerB != (Entity) null)
        this.DancerB.Delete();
      if ((Entity) this.ClubNameProp != (Entity) null)
        this.ClubNameProp.Delete();
      foreach (Prop prop in this.Champ)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      foreach (Ped dancer in this.Dancers)
      {
        if ((Entity) dancer != (Entity) null)
          dancer.Delete();
      }
      foreach (Prop secondaryLen in this.SecondaryLens)
      {
        if ((Entity) secondaryLen != (Entity) null)
          secondaryLen.Delete();
      }
      foreach (Prop thirdLen in this.ThirdLens)
      {
        if ((Entity) thirdLen != (Entity) null)
          thirdLen.Delete();
      }
      foreach (Prop miscProp in this.MiscProps)
      {
        if ((Entity) miscProp != (Entity) null)
          miscProp.Delete();
      }
      if (this.Garages != null)
        this.Garages.DeleteVehicles();
      if (this.TowerBlip != (Blip) null)
        this.TowerBlip.Remove();
      if ((Entity) this.DJped2 != (Entity) null)
        this.DJped2.Delete();
      if ((Entity) this.DJped != (Entity) null)
        this.DJped.Delete();
      foreach (Ped mainPed in this.MainPeds)
      {
        if ((Entity) mainPed != (Entity) null)
          mainPed.Delete();
      }
      if ((Entity) this.Chair_A != (Entity) null)
        this.Chair_A.Delete();
      if ((Entity) this.Chair_B != (Entity) null)
        this.Chair_B.Delete();
      if ((Entity) this.Chair_C != (Entity) null)
        this.Chair_C.Delete();
      if (this.GarageB != (Blip) null)
        this.GarageB.Remove();
      if ((Entity) this.Terrobyte != (Entity) null)
        this.Terrobyte.Delete();
      if ((Entity) this.SpecialVehicle != (Entity) null)
        this.SpecialVehicle.Delete();
      if (this.Peds.Count > 0)
      {
        foreach (Ped ped in this.Peds)
        {
          ped.Task.ClearAllImmediately();
          ped.Delete();
        }
      }
      if ((Entity) this.VehicletoDestroy != (Entity) null)
        this.VehicletoDestroy.Delete();
      if (this.VehicletoDestroyBlip != (Blip) null)
        this.VehicletoDestroyBlip.Remove();
      this.RemoveSmokeParticles();
    }

    public int RenderScreenModel(string name, long model)
    {
      int num = 0;
      if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) name))
        Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) name, (InputArgument) 0);
      if (!Function.Call<bool>(Hash._0x113750538FA31298, (InputArgument) (float) model))
        Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) (float) model);
      if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) name))
        num = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) name);
      return num;
    }

    public void SetRandomOutfit(Ped Dancer)
    {
      System.Random random = new System.Random();
      if (Dancer.Gender == Gender.Female)
      {
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0, (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) 4, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) != 4)
        {
          int num1 = random.Next(0, 5);
          if (num1 == 4)
          {
            int num2 = random.Next(0, 4);
            if (num2 == 0)
              num1 = 0;
            if (num2 == 1)
              num1 = 1;
            if (num2 == 2)
              num1 = 2;
            if (num2 == 3)
              num1 = 3;
            if (num2 == 4)
              num1 = 5;
          }
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 4, (InputArgument) num1, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 4)), (InputArgument) 1);
        }
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3), (InputArgument) 0, (InputArgument) 0);
        if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 4) == 4)
          Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 5, (InputArgument) 4, (InputArgument) 0, (InputArgument) 1);
      }
      if (Dancer.Gender != Gender.Male)
        return;
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 0, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 0)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 2, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 2)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 3)), (InputArgument) 0);
      Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 8, (InputArgument) random.Next(0, Function.Call<int>(Hash._0x27561561732A7842, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) random.Next(0, Function.Call<int>(Hash._0x8F7156A3142A6BAD, (InputArgument) Dancer, (InputArgument) 8)), (InputArgument) 0);
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 0)
      {
        int num = random.Next(0, 4);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 1)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 2)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 3)
      {
        int num = random.Next(0, 3);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 4)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 5)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
      if (Function.Call<int>(Hash._0x67F3780DD425D4FC, (InputArgument) Dancer, (InputArgument) 3) == 6)
      {
        int num = random.Next(0, 2);
        Function.Call(Hash._0x262B14F48D29DE80, (InputArgument) Dancer, (InputArgument) 3, (InputArgument) 5, (InputArgument) num, (InputArgument) 0);
      }
    }

    private void CreateNComputerScreens()
    {
      int num1 = 0;
      int num2 = 0;
      if (this.N_DJ == 0)
        num2 = 3;
      else if (this.N_DJ == 1)
        num2 = 1;
      else if (this.N_DJ == 2)
        num2 = 2;
      else if (this.N_DJ == 3)
        num2 = 4;
      if (this.N_ClubName != 0)
        ;
      if (this.N_ClubName == 1)
        num1 = 2;
      if (this.N_ClubName == 2)
        num1 = 3;
      if (this.N_ClubName == 3)
        num1 = 4;
      if (this.N_ClubName == 4)
        num1 = 5;
      if (this.N_ClubName == 5)
        num1 = 6;
      if (this.N_ClubName == 6)
        num1 = 7;
      if (this.N_ClubName == 7)
        num1 = 8;
      if (this.N_ClubName == 8)
        num1 = 9;
      if (this.N_ClubName == 9)
        num1 = 1;
      if ((uint) this.N_ClubName <= 0U)
        return;
      switch (this.NCStageS)
      {
        case 0:
          this.DeleteNComputerscreens();
          this.NCStageS = 1;
          break;
        case 1:
          if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "Club_Projector"))
          {
            Function.Call(Hash._0x57D9C12635E25CE3, (InputArgument) "Club_Projector", (InputArgument) 0);
            Function.Call(Hash._0xF6C09E276AEB3F2D, (InputArgument) 1206830836);
            this.ONscreens = Function.Call<int>(Hash._0x1A6478B61C6BDC3B, (InputArgument) "Club_Projector");
          }
          if (num2 == 0 || num2 == 1)
          {
            if (this.N_ProjectorType == 0)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ1_0[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 1)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ1_1[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 2)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ1_2[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 3)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ1_3[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 4)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ1_4[num1 - 1], (InputArgument) 1);
          }
          if (num2 == 2)
          {
            if (this.N_ProjectorType == 0)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ2_0[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 1)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ2_1[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 2)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ2_2[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 3)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ2_3[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 4)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ2_4[num1 - 1], (InputArgument) 1);
          }
          if (num2 == 3)
          {
            if (this.N_ProjectorType == 0)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ3_0[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 1)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ3_1[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 2)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ3_2[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 3)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ3_3[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 4)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ3_4[num1 - 1], (InputArgument) 1);
          }
          if (num2 == 4)
          {
            if (this.N_ProjectorType == 0)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ4_0[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 1)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ4_1[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 2)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ4_2[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 3)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ4_3[num1 - 1], (InputArgument) 1);
            else if (this.N_ProjectorType == 4)
              Function.Call(Hash._0xF7B38B8305F1FE8B, (InputArgument) 0, (InputArgument) this.NDJ4_4[num1 - 1], (InputArgument) 1);
          }
          Function.Call(Hash._0x113D2C5DC57E1774, (InputArgument) 1);
          Function.Call(Hash._0x2982BF73F66E9DDC, (InputArgument) -5f);
          Function.Call(Hash._0xBAABBB23EB6E484E, (InputArgument) 0);
          this.NCStageS = 2;
          break;
        case 2:
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) this.ONscreens);
          Function.Call(Hash._0x61BB1D9B3A95D802, (InputArgument) 4);
          Function.Call(Hash._0xC6372ECD45D73BCD, (InputArgument) 1);
          Function.Call(Hash._0xFDDC2B4ED3C69DF0, (InputArgument) 0.5f, (InputArgument) 0.5f, (InputArgument) 1f, (InputArgument) 1f, (InputArgument) 0.0f, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue, (InputArgument) (int) byte.MaxValue);
          Function.Call(Hash._0x5F15302936E07111, (InputArgument) Function.Call<int>(Hash._0x52F0982D7FD156B6));
          break;
      }
    }

    private void DeleteNComputerscreens()
    {
      if (!Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "Club_Projector"))
        return;
      Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "Club_Projector");
    }

    private void DeleteNComputerscreens1()
    {
      if (!this.CleanUpS)
        return;
      Ped character = Game.Player.Character;
      Vector3 position = Game.Player.Character.Position;
      if (Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) position.X, (InputArgument) position.Y, (InputArgument) position.Z) == 0)
      {
        if (Function.Call<bool>(Hash._0x78DCDC15C9F116B4, (InputArgument) "Club_Projector"))
          Function.Call(Hash._0xE9F6FFE837354DD4, (InputArgument) "Club_Projector");
        this.CleanUpS = false;
      }
    }

    private void SetBeamColor(int beam, Color RGB) => Function.Call((Hash) 16103540244286509412, (InputArgument) beam, (InputArgument) 1, (InputArgument) (int) RGB.R, (InputArgument) (int) RGB.G, (InputArgument) (int) RGB.B);

    public void AddSmokeParticles()
    {
      if (!this.IsInInterior)
        this.RemoveSmokeParticles();
      if (!Function.Call<bool>(Hash._0x8702416E512EC454, (InputArgument) "scr_ba_club"))
        Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_ba_club");
      while (true)
      {
        if (!Function.Call<bool>(Hash._0x8702416E512EC454, (InputArgument) "scr_ba_club"))
          Script.Wait(0);
        else
          break;
      }
      for (int index = 0; index < 7; ++index)
      {
        int dryIceParticle = Class1.dryIceParticles[index];
        Vector3 dryIcePosition = Class1.dryIcePositions[index];
        Vector3 dryIceRotation = Class1.dryIceRotations[index];
        string str = index < 3 ? "scr_ba_club_smoke" : "scr_ba_club_smoke_machine";
        float num1 = index < 3 ? 1f : 5f;
        if (!Function.Call<bool>(Hash._0x74AFEF0D2E1E409B, (InputArgument) dryIceParticle))
        {
          Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_ba_club");
          float num2 = dryIcePosition.Z + (index < 3 ? 1f : 0.0f);
          Class1.dryIceParticles[index] = Function.Call<int>(Hash._0xE184F4F0DC5910E7, (InputArgument) str, (InputArgument) dryIcePosition.X, (InputArgument) dryIcePosition.Y, (InputArgument) num2, (InputArgument) dryIceRotation.X, (InputArgument) dryIceRotation.Y, (InputArgument) dryIceRotation.Z, (InputArgument) num1, (InputArgument) false, (InputArgument) false, (InputArgument) false, (InputArgument) true);
          Function.Call(Hash._0x7F8F65877F88783B, (InputArgument) Class1.dryIceParticles[index], (InputArgument) 0.11f, (InputArgument) 0.1f, (InputArgument) 0.11f, (InputArgument) true);
        }
      }
    }

    public int CheckLightRot(int Light, int XYZ)
    {
      System.Random random = new System.Random();
      int num = 0;
      if (XYZ == 0)
        num = (double) this.Lens[Light].Rotation.X <= (double) this.LensMinX[Light] || (double) this.Lens[Light].Rotation.X >= (double) this.LensMaxX[Light] ? 0 : random.Next(-5, 5);
      if (XYZ == 1)
        num = (double) this.Lens[Light].Rotation.Y <= (double) this.LensMinY[Light] || (double) this.Lens[Light].Rotation.Y >= (double) this.LensMaxY[Light] ? 0 : random.Next(-5, 5);
      if (XYZ == 2)
        num = (double) this.Lens[Light].Rotation.Z <= (double) this.LensMinZ[Light] || (double) this.Lens[Light].Rotation.Z >= (double) this.LensMaxZ[Light] ? 0 : random.Next(-5, 5);
      return num;
    }

    public void RemoveSmokeParticles()
    {
      for (int index = 0; index < 7; ++index)
      {
        if (Class1.dryIceParticles.Count > 0)
        {
          int dryIceParticle = Class1.dryIceParticles[index];
          if (Function.Call<bool>(Hash._0x74AFEF0D2E1E409B, (InputArgument) dryIceParticle))
          {
            Function.Call(Hash._0xC401503DFE8D53CF, (InputArgument) dryIceParticle, (InputArgument) true);
            Class1.dryIceParticles[index] = 0;
          }
        }
      }
      if (!Function.Call<bool>(Hash._0x8702416E512EC454, (InputArgument) "scr_ba_club"))
        return;
      Function.Call(Hash._0x5F61EBBE1A00F96D, (InputArgument) "scr_ba_club");
    }

    private void drawSprite2(
      string textureDict,
      string textureName,
      float screenX,
      float screenY,
      float width,
      float height,
      int r,
      int g,
      int b,
      int alpha)
    {
      Function.Call(Hash._0xDFA2EF8E04127DD5, (InputArgument) textureDict, (InputArgument) 0);
      if (!Function.Call<bool>(Hash._0x0145F696AAAAD2E4, (InputArgument) textureDict))
        return;
      Function.Call(Hash._0xE7FFAE5EBF23D890, (InputArgument) textureDict, (InputArgument) textureName, (InputArgument) screenX, (InputArgument) screenY, (InputArgument) width, (InputArgument) height, (InputArgument) 0, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) alpha, (InputArgument) 0);
    }

    private void drawText(string text, float x, float y, float scale, int r, int g, int b)
    {
      Function.Call(Hash._0x25FBB336DF1804CB, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0xBE6B23FFA53FB442, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) (int) byte.MaxValue);
      Function.Call(Hash._0x07C837F9A01C34C9, (InputArgument) 0.0f, (InputArgument) scale);
      Function.Call(Hash._0xCD015E5BB0D96A57, (InputArgument) x, (InputArgument) y, (InputArgument) 0.1);
    }

    public void Show_E(string E)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 73, (InputArgument) 0), (object) E);
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void Show_MouseButton(string MB)
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(1);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 24, (InputArgument) 0), (object) MB);
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 73, (InputArgument) 0), (object) "Quit");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 175, (InputArgument) 0), (object) "");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 3, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 174, (InputArgument) 0), (object) "");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 173, (InputArgument) 0), (object) "");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 5, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 172, (InputArgument) 0), (object) "Swap Dance");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public ulong GetTickCount64() => (ulong) Game.GameTime;

    private void Rotatelights()
    {
      if (!this.RotLights)
      {
        this.update2 = this.GetTickCount64();
        this.RotLights = true;
      }
      if (this.GetTickCount64() > this.update2 + 2000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
          {
            Function.Call(Hash._0x961AC54BF0613F5D, (InputArgument) this.NLightObject[index], (InputArgument) 1, (InputArgument) 1);
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index - 9].Z, (InputArgument) 2, (InputArgument) 1);
          }
        }
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 20f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 2200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 2400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 2600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 2800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 20f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 3000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 3200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 3400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 3600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -85f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 4800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -65f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 5000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 5200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 6000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 6200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 6400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 6600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 20f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 6800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 7000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 7200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 7400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -85f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 8600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -65f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 8800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 9000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 9200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 9400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 9600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 40f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 9800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 20f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 10000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 10200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 10400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -60f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 10600UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -85f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 11800UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -65f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 12000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) -30f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 12200UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 13000UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
          {
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.NLightObject[index], (InputArgument) this.NLightObject[index + 9], (InputArgument) -1, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) -0.21f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
          }
        }
      }
      if (this.GetTickCount64() > this.update2 + 13200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 13400UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 13600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 13800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 80f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 14000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 14200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 14600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 14800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index - 9].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 15000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 30f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 15200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 15400UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 85f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 15600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 15800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 16000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 16200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index - 9].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 16400UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 16600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 16800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 17000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 80f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 17200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 17400UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 17600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z + 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 17800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index - 9].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 18000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 30f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 18200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 18400UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 85f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 18600UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 60f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 18800UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 40f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 19000UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) (this.Spotrot[index - 9].Z - 20f), (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 19200UL && this.RotLights)
      {
        for (int index = 9; index < 18; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index - 9].Z, (InputArgument) 2, (InputArgument) 1);
        }
      }
      if (this.GetTickCount64() > this.update2 + 19400UL && this.RotLights)
      {
        for (int index = 0; index < 9; ++index)
        {
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
            Function.Call(Hash._0x961AC54BF0613F5D, (InputArgument) this.NLightObject[index], (InputArgument) 1, (InputArgument) 1);
          if (Function.Call<bool>(Hash._0x7239B21A38F536BA, (InputArgument) this.NLightObject[index]))
          {
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) this.Spotloc[index].X, (InputArgument) this.Spotloc[index].Y, (InputArgument) this.Spotloc[index].Z, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1);
            Function.Call(Hash._0x8524A8B0171D5E07, (InputArgument) this.NLightObject[index], (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) this.Spotrot[index].Z, (InputArgument) 2, (InputArgument) 1);
            Function.Call(Hash._0x6B9BBD38AB0796DF, (InputArgument) this.NLightObject[index + 9], (InputArgument) this.NLightObject[index], (InputArgument) -1, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.21f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 0, (InputArgument) 2, (InputArgument) 1);
          }
        }
      }
      if (this.GetTickCount64() <= this.update2 + 23000UL || !this.RotLights)
        return;
      this.RotLights = false;
    }

    private string func_715(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SVM_VEH_1";
        case 1:
          return "SVM_VEH_2";
        case 2:
          return "SVM_VEH_3";
        case 3:
          return "SVM_VEH_4";
        case 4:
          return "SVM_VEH_5";
        case 5:
          return "SVM_VEH_6";
        case 6:
          return "SVM_VEH_7";
        case 7:
          return "SVM_VEH_8";
        default:
          return "";
      }
    }

    private string func_716(int iParam0)
    {
      switch (iParam0)
      {
        case 0:
          return "SVM_MIS_1";
        case 1:
          return "SVM_MIS_2";
        case 2:
          return "SVM_MIS_3";
        case 3:
          return "SVM_MIS_4";
        case 4:
          return "SVM_MIS_5";
        case 5:
          return "SVM_MIS_6";
        case 6:
          return "SVM_MIS_7";
        case 7:
          return "SVM_MIS_8";
        default:
          return "";
      }
    }

    private string func_369(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "DYN_MPWH_1";
        case 2:
          return "DYN_MPWH_2";
        case 3:
          return "DYN_MPWH_3";
        case 4:
          return "DYN_MPWH_4";
        case 5:
          return "DYN_MPWH_5";
        case 6:
          return "DYN_MPWH_6";
        case 7:
          return "DYN_MPWH_7";
        case 8:
          return "DYN_MPWH_8";
        case 9:
          return "DYN_MPWH_9";
        case 10:
          return "DYN_MPWH_10";
        case 11:
          return "DYN_MPWH_11";
        case 12:
          return "DYN_MPWH_12";
        case 13:
          return "DYN_MPWH_13";
        case 14:
          return "DYN_MPWH_14";
        case 15:
          return "DYN_MPWH_15";
        case 16:
          return "DYN_MPWH_16";
        case 17:
          return "DYN_MPWH_17";
        case 18:
          return "DYN_MPWH_18";
        case 19:
          return "DYN_MPWH_19";
        case 20:
          return "DYN_MPWH_20";
        case 21:
          return "DYN_MPWH_21";
        case 22:
          return "DYN_MPWH_22";
        default:
          return "";
      }
    }

    private string func_370(int iParam0)
    {
      switch (iParam0)
      {
        case 1:
          return "MP_WHOUSE_0DES";
        case 2:
          return "MP_WHOUSE_1DES";
        case 3:
          return "MP_WHOUSE_2DES";
        case 4:
          return "MP_WHOUSE_3DES";
        case 5:
          return "MP_WHOUSE_4DES";
        case 6:
          return "MP_WHOUSE_5DES";
        case 7:
          return "MP_WHOUSE_6DES";
        case 8:
          return "MP_WHOUSE_7DES";
        case 9:
          return "MP_WHOUSE_8DES";
        case 10:
          return "MP_WHOUSE_9DES";
        case 11:
          return "MP_WHOUSE_10DES";
        case 12:
          return "MP_WHOUSE_11DES";
        case 13:
          return "MP_WHOUSE_12DES";
        case 14:
          return "MP_WHOUSE_13DES";
        case 15:
          return "MP_WHOUSE_14DES";
        case 16:
          return "MP_WHOUSE_15DES";
        case 17:
          return "MP_WHOUSE_16DES";
        case 18:
          return "MP_WHOUSE_17DES";
        case 19:
          return "MP_WHOUSE_18DES";
        case 20:
          return "MP_WHOUSE_19DES";
        case 21:
          return "MP_WHOUSE_20DES";
        case 22:
          return "MP_WHOUSE_21DES";
        default:
          return "";
      }
    }

    public void NC_CheckTasks(int TC, int TSK)
    {
      if (TC == 0)
      {
        if (this.NC_Technician1Task == TSK)
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot assign a task that current technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
        if (this.TechnicialSelected == TC && (this.NC_Technician2Task == TSK || this.NC_Technician3Task == TSK || this.NC_Technician4Task == TSK || this.NC_Technician5Task == TSK))
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot Assign a task that another technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
      }
      if (TC == 1)
      {
        if (this.NC_Technician1Task == TSK)
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot assign a task that current technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
        if (this.TechnicialSelected == TC && (this.NC_Technician1Task == TSK || this.NC_Technician3Task == TSK || this.NC_Technician4Task == TSK || this.NC_Technician5Task == TSK))
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot Assign a task that another technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
      }
      if (TC == 2)
      {
        if (this.NC_Technician1Task == TSK)
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot assign a task that current technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
        if (this.TechnicialSelected == TC && (this.NC_Technician2Task == TSK || this.NC_Technician1Task == TSK || this.NC_Technician4Task == TSK || this.NC_Technician5Task == TSK))
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot Assign a task that another technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
      }
      if (TC == 3)
      {
        if (this.NC_Technician1Task == TSK)
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot assign a task that current technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
        if (this.TechnicialSelected == TC && (this.NC_Technician2Task == TSK || this.NC_Technician3Task == TSK || this.NC_Technician1Task == TSK || this.NC_Technician5Task == TSK))
        {
          this.ShowingOverlay = true;
          this.OverlayIndex = 3;
          this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot Assign a task that another technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
        }
      }
      if (TC != 4)
        return;
      if (this.NC_Technician1Task == TSK)
      {
        this.ShowingOverlay = true;
        this.OverlayIndex = 3;
        this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot assign a task that current technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
      }
      if (this.TechnicialSelected == TC && (this.NC_Technician2Task == TSK || this.NC_Technician3Task == TSK || this.NC_Technician4Task == TSK || this.NC_Technician1Task == TSK))
      {
        this.ShowingOverlay = true;
        this.OverlayIndex = 3;
        this.GUIscaleform.CallFunction("SHOW_OVERLAY", (object) "Nightclub Management", (object) "Cannot Assign a task that another technician already Has assigned", (object) "Cancel", (object) "OK", (object) 0);
      }
    }

    public static Vector3 GenerateSpawnPos(
      Vector3 desiredPos,
      Class1.Nodetype roadtype,
      bool sidewalk)
    {
      Vector3 zero = Vector3.Zero;
      bool flag = false;
      OutputArgument outputArgument = new OutputArgument();
      int num1 = 1;
      int num2 = 0;
      if (roadtype == Class1.Nodetype.AnyRoad)
        num2 = 1;
      if (roadtype == Class1.Nodetype.Road)
        num2 = 0;
      if (roadtype == Class1.Nodetype.Offroad)
      {
        num2 = 1;
        flag = true;
      }
      if (roadtype == Class1.Nodetype.Water)
        num2 = 3;
      int num3 = Function.Call<int>(Hash._0x22D7275A79FE8215, (InputArgument) desiredPos.X, (InputArgument) desiredPos.Y, (InputArgument) desiredPos.Z, (InputArgument) num1, (InputArgument) num2, (InputArgument) 300f, (InputArgument) 300f);
      if (flag)
      {
        while (true)
        {
          if (!Function.Call<bool>(Hash._0x4F5070AA58F69279, (InputArgument) num3) && num1 < 500)
          {
            ++num1;
            num3 = Function.Call<int>(Hash._0x22D7275A79FE8215, (InputArgument) desiredPos.X, (InputArgument) desiredPos.Y, (InputArgument) desiredPos.Z, (InputArgument) num1, (InputArgument) num2, (InputArgument) 300f, (InputArgument) 300f);
          }
          else
            break;
        }
      }
      Function.Call(Hash._0x703123E5E7D429C2, (InputArgument) num3, (InputArgument) outputArgument);
      Vector3 position = outputArgument.GetResult<Vector3>();
      if (sidewalk)
        position = World.GetNextPositionOnSidewalk(position);
      return position;
    }

    private void SetColor(int particle, float r, float g, float b, bool p1) => Function.Call(Hash._0x7F8F65877F88783B, (InputArgument) particle, (InputArgument) r, (InputArgument) g, (InputArgument) b, (InputArgument) p1);

    private void SetRange(int handle, float range) => Function.Call(Hash._0xDCB194B85EF7B541, (InputArgument) handle, (InputArgument) range);

    private int GetBoneByName(Entity entity, string name) => Function.Call<int>(Hash._0xFB71170B7E76ACBA, (InputArgument) entity, (InputArgument) name);

    public void CreateFlyers(Vector3 X)
    {
      Vector3 vector3 = X;
      Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_ba_bb");
      Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_ba_bb");
      Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_ba_bb");
      if (!Function.Call<bool>(Hash._0x8702416E512EC454, (InputArgument) "scr_ba_bb"))
      {
        Script.Wait(0);
        Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_ba_bb");
        Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_ba_bb");
        Function.Call(Hash._0xB80D8756B4668AB6, (InputArgument) "scr_ba_bb");
      }
      if (!Function.Call<bool>(Hash._0x8702416E512EC454, (InputArgument) "scr_ba_bb"))
        return;
      Function.Call(Hash._0x6C38AF3693A69A91, (InputArgument) "scr_ba_bb");
      X = new Vector3(vector3.X, vector3.Y, World.GetGroundHeight(new Vector3(vector3.X, vector3.Y, vector3.Z + 500f)));
      int Fid1 = Function.Call<int>(Hash._0x1AE42C1660FD6517, (InputArgument) "scr_ba_bb_leaflet_drop", (InputArgument) Game.Player.Character.CurrentVehicle, (InputArgument) 0.0f, (InputArgument) -2.25f, (InputArgument) -0.1f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 0.0f, (InputArgument) 5f, (InputArgument) false, (InputArgument) false, (InputArgument) false);
      if (Function.Call<bool>(Hash._0x74AFEF0D2E1E409B, (InputArgument) Fid1))
        Function.Call(Hash._0x5F0C4B5B1C393BE2, (InputArgument) Fid1, (InputArgument) "spawn", (InputArgument) 10f, (InputArgument) false);
      this.SmokeParticles.Add(new Class1.Flare(Fid1, 0));
      UI.Notify("Spawn Flyer " + Fid1.ToString());
    }

    private float progresswidth(float percent) => 0.08f * percent;

    private float progressxcoord(float percent) => 0.9f + 0.04f * percent;

    public void DrawStockBarNoLines(
      string Name,
      float X,
      float Y,
      float CrntValue,
      float MaxValue)
    {
      this.drawSprite2("timerbars", "all_black_bg", X, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "all_black_bg", X - 0.1f, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "damagebarfill_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, 0);
      this.drawSprite2("timerbars", "damagebarfill_128", this.progressxcoord(CrntValue / MaxValue), Y, this.progresswidth(CrntValue / MaxValue), 0.03f, 150, 150, 150, (int) byte.MaxValue);
      this.drawText(Name, X - 0.1f, Y - 0.016f, 0.3f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
    }

    public void DrawStockBar(string Name, float X, float Y, float CrntValue, float MaxValue)
    {
      this.drawSprite2("timerbars", "all_black_bg", X, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "all_black_bg", X - 0.1f, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "damagebarfill_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, 0);
      this.drawSprite2("timerbars", "damagebarfill_128", this.progressxcoord(CrntValue / MaxValue), Y, this.progresswidth(CrntValue / MaxValue), 0.03f, 150, 150, 150, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker20_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker40_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker60_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker80_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawText(Name, X - 0.1f, Y - 0.016f, 0.3f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
    }

    public void FailPromotionMission(string Reason)
    {
      Game.Player.Money += 25000;
      MissionScreen missionScreen = new MissionScreen();
      if (this.SupplyMissionID == 2)
        missionScreen.SetFail("Nightclub Management : Poster Promotion", 25000, Reason);
      if (this.SupplyMissionID == 3)
        missionScreen.SetFail("Nightclub Management : VIP Promotion", 25000, Reason);
      if (this.SupplyMissionID == 4)
        missionScreen.SetFail("Nightclub Management : Blimp Promotion", 25000, Reason);
      if (this.SupplyMissionID == 5)
        missionScreen.SetFail("Nightclub Management : Drop Flyer Promotion", 25000, Reason);
      if (this.SupplyMissionID == 6)
        missionScreen.SetFail("Nightclub Management : Destroy Rivals Promotion", 25000, Reason);
      if (this.SupplyMissionID == 7)
        missionScreen.SetFail("Nightclub Management : Retrieve Mule Promotion", 25000, Reason);
      if (this.SupplyMissionID == 8)
        missionScreen.SetFail("Nightclub Management : Damage Developer Vehicles Promotion", 25000, Reason);
      Script.Wait(6000);
      Game.FadeScreenOut(2500);
      Script.Wait(2500);
      this.ObjectivesGot = 0;
      this.ObjectivesNeeded = 0;
      this.ObjectiveCurrent = 0;
      if ((Entity) this.SupplyMissionMainVehicle != (Entity) null && this.SupplyMissionMainVehicle.CurrentBlip != (Blip) null)
      {
        this.SupplyMissionMainVehicle.CurrentBlip.Remove();
        this.SupplyMissionMainVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Ped attackPed in this.AttackPeds)
      {
        if ((Entity) attackPed != (Entity) null)
          attackPed.Delete();
      }
      foreach (Vehicle attackVehicle in this.AttackVehicles)
      {
        if ((Entity) attackVehicle != (Entity) null)
          attackVehicle.Delete();
      }
      foreach (Ped supplyMissionPed in this.SupplyMissionPeds)
      {
        if ((Entity) supplyMissionPed != (Entity) null)
          supplyMissionPed.Delete();
      }
      foreach (Vehicle supplyMissionVehicle in this.SupplyMissionVehicles)
      {
        if ((Entity) supplyMissionVehicle != (Entity) null)
          supplyMissionVehicle.Delete();
      }
      foreach (Prop supplyMissionProp in this.SupplyMissionProps)
      {
        if ((Entity) supplyMissionProp != (Entity) null)
          supplyMissionProp.Delete();
      }
      foreach (Blip supplyMissionBlip in this.SupplyMissionBlips)
      {
        if (supplyMissionBlip != (Blip) null)
          supplyMissionBlip.Remove();
      }
      if (this.SupplyMissionPeds.Count > 0)
        this.SupplyMissionPeds.Clear();
      if (this.SupplyMissionBlips.Count > 0)
        this.SupplyMissionBlips.Clear();
      if (this.SupplyMissionProps.Count > 0)
        this.SupplyMissionProps.Clear();
      foreach (Prop prop in this.SupplyMissionPropsSecondary)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      if (this.SupplyMissionPropsSecondary.Count > 0)
        this.SupplyMissionPropsSecondary.Clear();
      if (this.SupplyMissionVehicles.Count > 0)
        this.SupplyMissionVehicles.Clear();
      if (this.Posters.Count > 0)
      {
        foreach (Class1.PosterPosition poster in this.Posters)
        {
          Vector3 position = poster.Position;
          if (true)
          {
            if ((Entity) poster.Poster != (Entity) null)
              poster.Poster.Delete();
            poster.Created = false;
          }
        }
      }
      if (this.CurrentObjs_NamedLocations.Count > 0)
        this.CurrentObjs_NamedLocations.Clear();
      if (this.CurrentObjs_PosterPos.Count > 0)
        this.CurrentObjs_PosterPos.Clear();
      if (this.CurrentObjs_Vector3.Count > 0)
        this.CurrentObjs_Vector3.Clear();
      this.SupplyMissionID = 0;
      this.SupplyMissionStage = 0;
      this.SupplyMissionOn = false;
      Script.Wait(2500);
      Game.FadeScreenIn(2500);
    }

    public void PassPromotionMission()
    {
      string Reason = "";
      this.NC_Popularity += 25f;
      if ((double) this.NC_Popularity >= 100.0)
        this.NC_Popularity = 100f;
      this.Config.SetValue<float>("Nightclub_Management", "Popularity", this.NC_Popularity);
      ++this.NC_NightclubJobsCompleted;
      this.Config.SetValue<int>("Nightclub_Management", "NightclubJobsCompleted", this.NC_NightclubJobsCompleted);
      this.Config.Save();
      Game.Player.Money += 25000;
      MissionScreen missionScreen = new MissionScreen();
      if (this.SupplyMissionID == 2)
        missionScreen.SetPass("Nightclub Management : Poster Promotion", 25000, Reason);
      if (this.SupplyMissionID == 3)
        missionScreen.SetPass("Nightclub Management : VIP Promotion", 25000, Reason);
      if (this.SupplyMissionID == 4)
        missionScreen.SetPass("Nightclub Management : Blimp Promotion", 25000, Reason);
      if (this.SupplyMissionID == 5)
        missionScreen.SetPass("Nightclub Management : Drop Flyer Promotion", 25000, Reason);
      if (this.SupplyMissionID == 6)
        missionScreen.SetPass("Nightclub Management : Destroy Rivals Promotion", 25000, Reason);
      if (this.SupplyMissionID == 7)
        missionScreen.SetPass("Nightclub Management : Retrieve Mule Promotion", 25000, Reason);
      if (this.SupplyMissionID == 8)
        missionScreen.SetPass("Nightclub Management : Damage Developer Vehicles Promotion", 25000, Reason);
      Script.Wait(6000);
      Game.FadeScreenOut(2500);
      Script.Wait(2500);
      this.ObjectivesGot = 0;
      this.ObjectivesNeeded = 0;
      this.ObjectiveCurrent = 0;
      if ((Entity) this.SupplyMissionMainVehicle != (Entity) null && this.SupplyMissionMainVehicle.CurrentBlip != (Blip) null)
      {
        this.SupplyMissionMainVehicle.CurrentBlip.Remove();
        this.SupplyMissionMainVehicle.MarkAsNoLongerNeeded();
      }
      foreach (Ped attackPed in this.AttackPeds)
      {
        if ((Entity) attackPed != (Entity) null)
          attackPed.Delete();
      }
      foreach (Vehicle attackVehicle in this.AttackVehicles)
      {
        if ((Entity) attackVehicle != (Entity) null)
          attackVehicle.Delete();
      }
      foreach (Ped supplyMissionPed in this.SupplyMissionPeds)
      {
        if ((Entity) supplyMissionPed != (Entity) null)
          supplyMissionPed.Delete();
      }
      foreach (Vehicle supplyMissionVehicle in this.SupplyMissionVehicles)
      {
        if ((Entity) supplyMissionVehicle != (Entity) null)
          supplyMissionVehicle.Delete();
      }
      foreach (Prop supplyMissionProp in this.SupplyMissionProps)
      {
        if ((Entity) supplyMissionProp != (Entity) null)
          supplyMissionProp.Delete();
      }
      foreach (Blip supplyMissionBlip in this.SupplyMissionBlips)
      {
        if (supplyMissionBlip != (Blip) null)
          supplyMissionBlip.Remove();
      }
      if (this.SupplyMissionPeds.Count > 0)
        this.SupplyMissionPeds.Clear();
      if (this.SupplyMissionBlips.Count > 0)
        this.SupplyMissionBlips.Clear();
      if (this.SupplyMissionProps.Count > 0)
        this.SupplyMissionProps.Clear();
      foreach (Prop prop in this.SupplyMissionPropsSecondary)
      {
        if ((Entity) prop != (Entity) null)
          prop.Delete();
      }
      if (this.SupplyMissionPropsSecondary.Count > 0)
        this.SupplyMissionPropsSecondary.Clear();
      if (this.SupplyMissionVehicles.Count > 0)
        this.SupplyMissionVehicles.Clear();
      if (this.Posters.Count > 0)
      {
        foreach (Class1.PosterPosition poster in this.Posters)
        {
          Vector3 position = poster.Position;
          if (true)
          {
            if ((Entity) poster.Poster != (Entity) null)
              poster.Poster.Delete();
            poster.Created = false;
          }
        }
      }
      if (this.CurrentObjs_NamedLocations.Count > 0)
        this.CurrentObjs_NamedLocations.Clear();
      if (this.CurrentObjs_PosterPos.Count > 0)
        this.CurrentObjs_PosterPos.Clear();
      if (this.CurrentObjs_Vector3.Count > 0)
        this.CurrentObjs_Vector3.Clear();
      this.SupplyMissionID = 0;
      this.SupplyMissionStage = 0;
      this.SupplyMissionOn = false;
      Script.Wait(2500);
      Game.FadeScreenIn(2500);
    }

    public void SetDate_Daily()
    {
      this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
      if (this.GetDay_Daily() + this.DaysWait_Daily <= 30)
      {
        this.NextDay_Daily = this.GetDay_Daily() + this.DaysWait_Daily;
        this.NextMonth_Daily = this.GetMonth_Daily();
      }
      if (this.GetDay_Daily() + this.DaysWait_Daily > 30)
      {
        this.NextDay_Daily = -(30 - (this.GetDay_Daily() + this.DaysWait_Daily));
        if (this.GetMonth_Daily() + 1 <= 12)
          this.NextMonth_Daily = this.GetDay_Daily() + 1;
        if (this.GetMonth_Daily() + 1 > 12)
          this.NextMonth_Daily = 1;
      }
      this.NextYear_Daily = this.GetYear_Daily();
    }

    public void GetDateRelative_Daily()
    {
      if (!this.BYPASS_NOSAVE_OR_CRASH_Daily || this.Now_Daily == this.GetDay_Daily())
        return;
      this.Now_Daily = this.GetDay_Daily();
      int num1 = this.GetDay_Daily() + this.DAYSTORESET_UPDATETIME_Daily;
      int num2 = this.GetMonth_Daily();
      int yearDaily = this.GetYear_Daily();
      if (num1 < 0)
      {
        num1 = -num1;
        if (this.GetMonth_Daily() + 1 <= 12)
          num2 = this.GetMonth_Daily() + 1;
        if (this.GetMonth_Daily() + 1 > 12)
          num2 = 1;
      }
      if (num1 > 30)
        num1 = 30;
      if (this.GetMonth_Daily() + 1 > 12)
        num2 = 1;
      if (num1 <= this.NextDay_Daily && num2 <= this.NextMonth_Daily || (num2 < this.NextMonth_Daily || num2 > this.NextMonth_Daily) || yearDaily != this.NextYear_Daily)
      {
        this.NextMonth_Daily = this.GetMonth_Daily();
        this.NextDay_Daily = this.GetDay_Daily() + this.DaysWait_Daily;
        this.NextYear_Daily = this.GetYear_Daily();
        this.NC_NightClubEarnings += (int) (1000.0 * (double) this.NC_Popularity * (double) this.NC_MultiplierSell);
        this.Config.SetValue<int>("Nightclub_Management", "NightClubEarnings", this.NC_NightClubEarnings);
        this.NC_safeCapacityCrt += (float) (int) (1000.0 * (double) this.NC_Popularity * (double) this.NC_MultiplierSell);
        this.Config.SetValue<float>("Nightclub_Management", "safeCapacityCrt", this.NC_safeCapacityCrt);
        ScriptSettings config1 = this.Config;
        int num3 = 10;
        string name1 = "MONEYSTORED[" + num3.ToString() + "]";
        double moneyStored1 = (double) this.MoneyStored;
        this.MoneyStored = config1.GetValue<float>("ADDON2", name1, (float) moneyStored1);
        if ((double) this.MoneyStored < (double) this.NC_safeCapacityMax)
        {
          this.MoneyStored += 1000f * this.NC_Popularity * (float) this.NC_MultiplierSell;
          ScriptSettings config2 = this.Config;
          num3 = 10;
          string name2 = "MONEYSTORED[" + num3.ToString() + "]";
          double moneyStored2 = (double) this.MoneyStored;
          config2.SetValue<float>("ADDON2", name2, (float) moneyStored2);
          this.Config.Save();
          int num4 = (int) (1000.0 * (double) this.NC_Popularity * (double) this.NC_MultiplierSell);
          Class1.TextNotification("CHAR_LESTER", "~" + this.Uicolour + "~" + this.GetHostName(), "After Hours Nightclub", "$" + num4.ToString("N") + " has been added to Vault 10 of you Nightclub Safe ");
        }
        if ((double) this.MoneyStored >= (double) this.NC_safeCapacityMax)
        {
          this.MoneyStored = (float) this.NC_safeCapacityMax;
          ScriptSettings config2 = this.Config;
          num3 = 10;
          string name2 = "MONEYSTORED[" + num3.ToString() + "]";
          double moneyStored2 = (double) this.MoneyStored;
          config2.SetValue<float>("ADDON2", name2, (float) moneyStored2);
          this.Config.Save();
          Class1.TextNotification("CHAR_LESTER", "~" + this.Uicolour + "~" + this.GetHostName(), "After Hours Nightclub", "Vault 10 of you Nightclub Safe is Full!");
        }
      }
    }

    public int GetHour_Daily() => Function.Call<int>(Hash._0x25223CA6B4D20B7F);

    public int GetMinutes_Daily() => Function.Call<int>(Hash._0x13D2B8ADD79640F2);

    public int GetDay_Daily() => Function.Call<int>(Hash._0x3D10BC92A4DB1D35);

    public int GetMonth_Daily() => Function.Call<int>(Hash._0xBBC72712E80257A1);

    public int GetYear_Daily() => Function.Call<int>(Hash._0x961777E64BDAF717);

    public void ResetSourcedVehicle()
    {
      AfterHoursBusiness.SaveCar saveLoad = this.SaveLoad;
      saveLoad.Config.SetValue<int>("Configurations", "Roof", -1);
      saveLoad.Config.SetValue<int>("Configurations", "AerialsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "AirfilterId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "ArchCoverId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "ArmorId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "BackWheelsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "BrakesId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "ColumnShifterLeversId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "DashboardId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "DialDesignId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "DoorSpeekersId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "EngineId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "EngineBlockId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "ExaustId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "FenderId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "FrameId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "FrontBumperId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "FrontWheelsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "GrilleId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "HoodId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "HornsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "HydralicsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "LiveryId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "SecondaryVehicleLivery", -1);
      saveLoad.Config.SetValue<int>("Configurations", "OrnamentsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "PlaquesId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "Plateholder", -1);
      saveLoad.Config.SetValue<int>("Configurations", "RearBumperId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "RightFenderId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "SeatsId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "speakers", -1);
      saveLoad.Config.SetValue<int>("Configurations", "speakers", -1);
      saveLoad.Config.SetValue<int>("Configurations", "SpoilersId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "SteeringWheelId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "StrutId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "RoofId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "SuspensionId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "TransmissionId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "TrimDesignId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "TrimDesignId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "TrunkId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "VanityPlatesId", -1);
      saveLoad.Config.SetValue<int>("Configurations", "WindowId", -1);
      saveLoad.Config.SetValue<VehicleWindowTint>("Configurations", "TintId", VehicleWindowTint.None);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "Wheelcolour", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "DashBoardColour", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "PearlCent", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<Color>("Configurations", "NeonColour", Color.Black);
      saveLoad.Config.SetValue<string>("Configurations", "PlanteNo", "");
      saveLoad.Config.SetValue<bool>("Configurations", "CustomTiresOn", false);
      saveLoad.Config.SetValue<int>("Configurations", "Blades", -1);
      saveLoad.Config.SetValue<bool>("Configurations", "HasXenonLights", false);
      saveLoad.Config.SetValue<bool>("Configurations", "TurboActive", false);
      saveLoad.Config.SetValue<int>("Configurations", "LightColor", -1);
      saveLoad.Config.SetValue<Color>("Configurations", "NeonColor", Color.Black);
      saveLoad.Config.SetValue<bool>("Configurations", "RightNeonOn", false);
      saveLoad.Config.SetValue<bool>("Configurations", "LeftNeonOn", false);
      saveLoad.Config.SetValue<bool>("Configurations", "FrontNeonOn", false);
      saveLoad.Config.SetValue<bool>("Configurations", "BackNeonOn", false);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "Wheelcolour", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "DashBoardColour", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<Color>("Configurations", "TireSmokeColor", Color.Black);
      saveLoad.Config.SetValue<bool>("Configurations", "TireSmoke", false);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "TrimColor", VehicleColor.MatteBlack);
      saveLoad.Config.SetValue<bool>("Configurations", "BulletProofTires", false);
      saveLoad.Config.SetValue<int>("Configurations", "WheelType", -1);
      saveLoad.Config.SetValue<bool>("Configurations", "UseCustomPrimaryColor", false);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "PrimaryColor", VehicleColor.DefaultAlloyColor);
      saveLoad.Config.SetValue<bool>("Configurations", "UseCustomSecondaryColor", false);
      saveLoad.Config.SetValue<VehicleColor>("Configurations", "SecondaryColor", VehicleColor.DefaultAlloyColor);
      saveLoad.Config.Save();
    }

    public void DrawStockBar(string Name, float X, float Y, int CrntValue, int MaxValue)
    {
      this.drawSprite2("timerbars", "all_black_bg", X, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "all_black_bg", X - 0.1f, Y, 0.21f, 0.04f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
      this.drawSprite2("timerbars", "damagebarfill_128", X + 0.05f, Y, 0.08f, 0.03f, (int) this.MarkerColor.R, (int) this.MarkerColor.G, (int) this.MarkerColor.B, 70);
      this.drawSprite2("timerbars", "damagebarfill_128", this.progressxcoord((float) CrntValue / (float) MaxValue), Y, this.progresswidth((float) CrntValue / (float) MaxValue), 0.03f, (int) this.MarkerColor.R, (int) this.MarkerColor.G, (int) this.MarkerColor.B, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker20_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker40_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker60_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawSprite2("timerbar_lines", "LineMarker80_128", X + 0.05f, Y, 0.08f, 0.03f, 0, 0, 0, (int) byte.MaxValue);
      this.drawText(Name, X - 0.1f, Y - 0.016f, 0.3f, (int) byte.MaxValue, (int) byte.MaxValue, (int) byte.MaxValue);
    }

    private void ArmedPed2(Ped Ped, WeaponHash Weapon)
    {
      int num = new System.Random().Next(0, 300);
      if (num < 50)
        Ped.Weapons.Give(WeaponHash.CombatPistol, 9999, true, true);
      if (num > 50 && num < 100)
        Ped.Weapons.Give(WeaponHash.SMG, 9999, true, true);
      if (num > 100 && num < 150)
        Ped.Weapons.Give(WeaponHash.PumpShotgun, 9999, true, true);
      if (num > 150 && num < 200)
        Ped.Weapons.Give(WeaponHash.Pistol, 9999, true, true);
      if (num > 200 && num < 225)
        Ped.Weapons.Give(WeaponHash.CarbineRifle, 9999, true, true);
      if (num <= 225 || num >= 300)
        return;
      Ped.Weapons.Give(WeaponHash.CombatPistol, 9999, true, true);
    }

    public void SetupRaid(int RaidTypeMission)
    {
      int num = new System.Random().Next(0, 100);
      if (num >= 60)
        this.RaidEnemyTime = 1;
      if (num < 59)
        this.RaidEnemyTime = 0;
      this.WaitingForRaid = false;
      this.CurrentTime = this.GetHour();
      this.RaidHour = Game.GameTime + new System.Random().Next(225000, 880000);
      Class1.TextNotification("CHAR_LESTER", ("~g~ " + this.GetHostName()).ToString(), "Nightclub Raid", "Our Nightclub is Under attack!");
      Vector3 entry = this.Entry;
      this.RaidLocation = entry;
      Blip blip = World.CreateBlip(entry);
      blip.Sprite = BlipSprite.PropertyVagos;
      blip.Color = this.Blip_Colour;
      blip.Name = "Business Raid";
      blip.IsShortRange = true;
      this.SupplyMissionBlips.Add(blip);
      this.SupplyMissionOn = true;
      this.SupplyMissionID = 100;
    }

    public void ShowGUIInsrucitons()
    {
      Convert.ToInt32(UIMenu.GetScreenResolutionMantainRatio().Width / 2f);
      Scaleform scaleform = new Scaleform(0);
      scaleform.Load("instructional_buttons");
      scaleform.CallFunction("CLEAR_ALL");
      scaleform.CallFunction("TOGGLE_MOUSE_BUTTONS", (object) 0);
      scaleform.CallFunction("CREATE_CONTAINER");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 0, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 200, (InputArgument) 0), (object) "Exit");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 1, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 24, (InputArgument) 0), (object) "Select");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 2, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 25, (InputArgument) 0), (object) "Back");
      scaleform.CallFunction("SET_DATA_SLOT", (object) 4, (object) Function.Call<string>(Hash._0x0499D7B09FC9B407, (InputArgument) 2, (InputArgument) 198, (InputArgument) 0), (object) "Screen Up/Down");
      scaleform.CallFunction("DRAW_INSTRUCTIONAL_BUTTONS", (object) -1);
      scaleform.Render2D();
    }

    public void OnTick(object sender, EventArgs e)
    {
      // ISSUE: The method is too long to display (59826 instructions)
    }

    public void AddCar(string Slot)
    {
      AfterHoursBusiness.SaveCar saveLoad = this.SaveLoad;
      string str = Slot;
      if (str.Equals("Slot1"))
      {
        Vector3 vehicle1Loc = this.Garages.Vehicle1Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle1 != (Entity) null)
          this.Garages.Vehicle1.Delete();
        saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot1.ini");
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot1.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot1.ini");
          this.Garages.Vehicle1 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot1.ini"), vehicle1Loc, heading);
          saveLoad.Load(this.Garages.Vehicle1);
          this.Garages.Vehicle1.IsDriveable = false;
        }
      }
      if (str.Equals("Slot2"))
      {
        Vector3 vehicle2Loc = this.Garages.Vehicle2Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle2 != (Entity) null)
          this.Garages.Vehicle2.Delete();
        saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot2.ini");
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot2.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot2.ini");
          this.Garages.Vehicle2 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot2.ini"), vehicle2Loc, heading);
          saveLoad.Load(this.Garages.Vehicle2);
          this.Garages.Vehicle2.IsDriveable = false;
        }
      }
      if (str.Equals("Slot3"))
      {
        Vector3 vehicle3Loc = this.Garages.Vehicle3Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle3 != (Entity) null)
          this.Garages.Vehicle3.Delete();
        saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot3.ini");
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot3.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot3.ini");
          this.Garages.Vehicle3 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot3.ini"), vehicle3Loc, heading);
          saveLoad.Load(this.Garages.Vehicle3);
          this.Garages.Vehicle3.IsDriveable = false;
        }
      }
      if (str.Equals("Slot4"))
      {
        Vector3 vehicle4Loc = this.Garages.Vehicle4Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle4 != (Entity) null)
          this.Garages.Vehicle4.Delete();
        saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot4.ini");
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot4.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot4.ini");
          this.Garages.Vehicle4 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot4.ini"), vehicle4Loc, heading);
          saveLoad.Load(this.Garages.Vehicle4);
          this.Garages.Vehicle4.IsDriveable = false;
        }
      }
      if (str.Equals("Slot5"))
      {
        Vector3 vehicle5Loc = this.Garages.Vehicle5Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle5 != (Entity) null)
          this.Garages.Vehicle5.Delete();
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot5.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot5.ini");
          this.Garages.Vehicle5 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot5.ini"), vehicle5Loc, heading);
          saveLoad.Load(this.Garages.Vehicle5);
          this.Garages.Vehicle5.IsDriveable = false;
        }
      }
      if (str.Equals("Slot6"))
      {
        Vector3 vehicle6Loc = this.Garages.Vehicle6Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle6 != (Entity) null)
          this.Garages.Vehicle6.Delete();
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot6.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot6.ini");
          this.Garages.Vehicle6 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot6.ini"), vehicle6Loc, heading);
          saveLoad.Load(this.Garages.Vehicle6);
          this.Garages.Vehicle6.IsDriveable = false;
        }
      }
      if (str.Equals("Slot7"))
      {
        Vector3 vehicle7Loc = this.Garages.Vehicle7Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle7 != (Entity) null)
          this.Garages.Vehicle7.Delete();
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot7.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot7.ini");
          this.Garages.Vehicle7 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot7.ini"), vehicle7Loc, heading);
          saveLoad.Load(this.Garages.Vehicle7);
          this.Garages.Vehicle7.IsDriveable = false;
        }
      }
      if (str.Equals("Slot8"))
      {
        Vector3 vehicle8Loc = this.Garages.Vehicle8Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle8 != (Entity) null)
          this.Garages.Vehicle8.Delete();
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot8.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot8.ini");
          this.Garages.Vehicle8 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot8.ini"), vehicle8Loc, heading);
          saveLoad.Load(this.Garages.Vehicle8);
          this.Garages.Vehicle8.IsDriveable = false;
        }
      }
      if (str.Equals("Slot9"))
      {
        Vector3 vehicle9Loc = this.Garages.Vehicle9Loc;
        float heading = 180f;
        if ((Entity) this.Garages.Vehicle9 != (Entity) null)
          this.Garages.Vehicle9.Delete();
        GTA.Model model = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot9.ini");
        if (model != (GTA.Model) "null" && model != (GTA.Model) (string) null && model != (GTA.Model) (string) null)
        {
          saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot9.ini");
          this.Garages.Vehicle9 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot9.ini"), vehicle9Loc, heading);
          saveLoad.Load(this.Garages.Vehicle9);
          this.Garages.Vehicle9.IsDriveable = false;
        }
      }
      if (!str.Equals("Slot10"))
        return;
      Vector3 vehicle10Loc = this.Garages.Vehicle10Loc;
      float heading1 = 180f;
      if ((Entity) this.Garages.Vehicle10 != (Entity) null)
        this.Garages.Vehicle10.Delete();
      GTA.Model model1 = saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot10.ini");
      if (model1 != (GTA.Model) "null" && model1 != (GTA.Model) (string) null && model1 != (GTA.Model) (string) null)
      {
        saveLoad.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot10.ini");
        this.Garages.Vehicle10 = World.CreateVehicle(saveLoad.CheckCar("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\Slot10.ini"), vehicle10Loc, heading1);
        saveLoad.Load(this.Garages.Vehicle10);
        this.Garages.Vehicle10.IsDriveable = false;
      }
    }

    public static string LoadDict(string dict)
    {
      while (true)
      {
        if (!Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) dict))
        {
          Function.Call(Hash._0xD3BD40951412FEF6, (InputArgument) dict);
          Script.Yield();
        }
        else
          break;
      }
      return dict;
    }

    public void HouseOptions3()
    {
      AfterHoursBusiness.SaveCar SC = this.SaveLoad;
      for (int index = 1; index <= 10; ++index)
        this.Slots.Add((object) ("Slot" + index.ToString()));
      List<object> LogList = new List<object>();
      string[] logFile = File.ReadAllLines(this.ListPath);
      foreach (string str in logFile)
        LogList.Add((object) str);
      List<object> STlist = new List<object>();
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      STlist.Add((object) "NULL");
      List<object> objectList = new List<object>()
      {
        (object) "None",
        (object) "Super",
        (object) "Sport",
        (object) "Armoured",
        (object) "SportClassic",
        (object) "Compact",
        (object) "Coupe",
        (object) "Bikes",
        (object) "Offroad",
        (object) "Sedan",
        (object) "Suv",
        (object) "Vans"
      };
      UIMenu uiMenu1 = this.modMenuPool3.AddSubMenu(this.Options3, "Nightclub Options");
      this.GUIMenus.Add(uiMenu1);
      UIMenuItem ExitGarage = new UIMenuItem("Exit Garage");
      uiMenu1.AddItem(ExitGarage);
      UIMenu uiMenu2 = this.modMenuPool.AddSubMenu(this.Options3, "Remove Vehicle");
      this.GUIMenus.Add(uiMenu2);
      UIMenu uiMenu3 = this.modMenuPool.AddSubMenu(this.Options3, "Add Car To Slot");
      this.GUIMenus.Add(uiMenu3);
      UIMenuItem uiMenuItem1 = new UIMenuItem("------------------Reset List-----------------------------");
      uiMenu3.AddItem(uiMenuItem1);
      UIMenuItem uiMenuItem2 = new UIMenuItem("Reset Vehicle List");
      uiMenu3.AddItem(uiMenuItem2);
      UIMenuItem uiMenuItem3 = new UIMenuItem("------------------Search Method 1--------------------------");
      uiMenu3.AddItem(uiMenuItem3);
      UIMenuListItem Ve = new UIMenuListItem("Vehicle : ", LogList, 0);
      uiMenu3.AddItem((UIMenuItem) Ve);
      UIMenuItem VDName = new UIMenuItem("Vehicle Spawn Name  : Dukes2");
      uiMenu3.AddItem(VDName);
      UIMenuItem VName = new UIMenuItem("Vehicle Full Name  : Imponte Dukes");
      uiMenu3.AddItem(VName);
      UIMenuItem PuchaseV = new UIMenuItem("Purchase Vehicle : $0");
      uiMenu3.AddItem(PuchaseV);
      UIMenuItem uiMenuItem4 = new UIMenuItem("------------------Search Method 2--------------------------");
      uiMenu3.AddItem(uiMenuItem4);
      UIMenuItem Search = new UIMenuItem("Enter Vehicle Name");
      uiMenu3.AddItem(Search);
      UIMenuListItem Ve2 = new UIMenuListItem("Vehicle : ", STlist, 0);
      uiMenu3.AddItem((UIMenuItem) Ve2);
      UIMenuItem uiMenuItem5 = new UIMenuItem("Search Term  : NULL");
      uiMenu3.AddItem(uiMenuItem5);
      UIMenuItem VDName2 = new UIMenuItem("Vehicle Spawn Name  : NULL");
      uiMenu3.AddItem(VDName2);
      UIMenuItem VName2 = new UIMenuItem("Vehicle Full Name  : NULL");
      uiMenu3.AddItem(VName2);
      UIMenuItem PuchaseV2 = new UIMenuItem("Purchase Vehicle : NULL");
      uiMenu3.AddItem(PuchaseV2);
      UIMenuItem uiMenuItem6 = new UIMenuItem("-------------------Slot Selection-------------------------");
      uiMenu3.AddItem(uiMenuItem6);
      UIMenuListItem ListSlot = new UIMenuListItem("Slot: ", this.Slots, 0);
      uiMenu3.AddItem((UIMenuItem) ListSlot);
      uiMenu3.OnListChange += (ListChangedEvent) ((sender, item, index) =>
      {
        if (item == ListSlot)
        {
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__886.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string str = Class1.\u003C\u003Eo__886.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__0, this.Slots[ListSlot.Index]);
          if (str.Equals("Slot1"))
            this.Current = this.Garages.Vehicle1;
          if (str.Equals("Slot2"))
            this.Current = this.Garages.Vehicle2;
          if (str.Equals("Slot3"))
            this.Current = this.Garages.Vehicle3;
          if (str.Equals("Slot4"))
            this.Current = this.Garages.Vehicle4;
          if (str.Equals("Slot5"))
            this.Current = this.Garages.Vehicle5;
          if (str.Equals("Slot6"))
            this.Current = this.Garages.Vehicle6;
          if (str.Equals("Slot7"))
            this.Current = this.Garages.Vehicle7;
          if (str.Equals("Slot8"))
            this.Current = this.Garages.Vehicle8;
          if (str.Equals("Slot9"))
            this.Current = this.Garages.Vehicle9;
          if (str.Equals("Slot10"))
            this.Current = this.Garages.Vehicle10;
        }
        if (item == Ve)
        {
          try
          {
            string[] separator = new string[2]{ " = ", "," };
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__1 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__886.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string[] strArray = Class1.\u003C\u003Eo__886.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__1, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
            for (int index1 = 0; index1 < strArray.Length; ++index1)
            {
              this.Price = strArray[1];
              this.Model = strArray[2];
              this.man = strArray[0];
              VDName.Text = "Vehicle Spawn Name : " + this.Model;
              VName.Text = "Vehicle Full Name  : " + this.man;
              PuchaseV.Text = "Purchase Vehicle : " + this.Price;
            }
          }
          catch
          {
          }
        }
        if (item != Ve2)
          return;
        try
        {
          string[] separator = new string[2]{ " = ", "," };
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__886.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          string[] strArray = Class1.\u003C\u003Eo__886.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__2, STlist[Ve2.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
          for (int index1 = 0; index1 < strArray.Length; ++index1)
          {
            this.Price = strArray[1];
            this.Model = strArray[2];
            this.man = strArray[0];
            VDName2.Text = "Vehicle Spawn Name : " + this.Model;
            VName2.Text = "Vehicle Full Name  : " + this.man;
            PuchaseV2.Text = "Purchase Vehicle : " + this.Price;
          }
        }
        catch
        {
        }
      });
      string SearchTerm;
      uiMenu3.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Search)
        {
          try
          {
            if (LogList.Count > 0)
              LogList.Clear();
            SearchTerm = Game.GetUserInput(32);
            SearchTerm = SearchTerm.ToUpper();
            UI.Notify("Search Term : " + SearchTerm);
            bool flag = false;
            foreach (string str in logFile)
            {
              if (str.ToUpper().Contains(SearchTerm))
              {
                UI.Notify("Found Match");
                LogList.Add((object) str);
                flag = true;
                string[] separator = new string[2]
                {
                  " = ",
                  ","
                };
                // ISSUE: reference to a compiler-generated field
                if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__3 == null)
                {
                  // ISSUE: reference to a compiler-generated field
                  Class1.\u003C\u003Eo__886.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
                }
                // ISSUE: reference to a compiler-generated field
                // ISSUE: reference to a compiler-generated field
                string[] strArray = Class1.\u003C\u003Eo__886.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__3, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
                for (int index1 = 0; index1 < strArray.Length; ++index1)
                {
                  this.Price = strArray[1];
                  this.Model = strArray[2];
                  this.man = strArray[0];
                  VDName.Text = "Vehicle Spawn Name : " + this.Model;
                  VName.Text = "Vehicle Full Name  : " + this.man;
                  PuchaseV.Text = "Purchase Vehicle : " + this.Price;
                }
              }
            }
            if (!flag)
            {
              UI.Notify("Found No Match");
              logFile = File.ReadAllLines(this.ListPath);
              foreach (object obj in logFile)
                LogList.Add(obj);
              string[] separator = new string[2]
              {
                " = ",
                ","
              };
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__4 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__886.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string[] strArray = Class1.\u003C\u003Eo__886.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__4, LogList[Ve.Index]).Split(separator, StringSplitOptions.RemoveEmptyEntries);
              for (int index1 = 0; index1 < strArray.Length; ++index1)
              {
                this.Price = strArray[1];
                this.Model = strArray[2];
                this.man = strArray[0];
                VDName.Text = "Vehicle Spawn Name : " + this.Model;
                VName.Text = "Vehicle Full Name  : " + this.man;
                PuchaseV.Text = "Purchase Vehicle : " + this.Price;
              }
            }
          }
          catch (Exception ex)
          {
            UI.Notify("Invalid Search Term Entered");
          }
        }
        try
        {
          this.M = (float) int.Parse(this.Price);
        }
        catch (Exception ex)
        {
        }
        if (item == PuchaseV2)
        {
          if ((double) Game.Player.Money > (double) this.M)
          {
            try
            {
              Game.Player.Money -= (int) this.M;
              // ISSUE: reference to a compiler-generated field
              if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__5 == null)
              {
                // ISSUE: reference to a compiler-generated field
                Class1.\u003C\u003Eo__886.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
              }
              // ISSUE: reference to a compiler-generated field
              // ISSUE: reference to a compiler-generated field
              string Slot = Class1.\u003C\u003Eo__886.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__5, this.Slots[ListSlot.Index]);
              SC.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
              UI.Notify("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
              Vector3 position = Game.Player.Character.Position;
              SC.Save();
              SC.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
              try
              {
                Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
                SC.SaveName(vehicle.DisplayName);
                vehicle.Delete();
                UI.Notify("~b~SR :~w~ Bought New Car, reloading Garage");
                this.AddCar(Slot);
              }
              catch (NullReferenceException ex)
              {
                UI.Notify("~r~error ~w~ Invalid Vehicle Name!");
              }
            }
            catch (Exception ex)
            {
            }
          }
          else
            UI.Notify(" you do not have enought money to purchase this vehicle!");
        }
        if (item != PuchaseV)
          return;
        if ((double) Game.Player.Money > (double) this.M)
        {
          try
          {
            Game.Player.Money -= (int) this.M;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__886.\u003C\u003Ep__6 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__886.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            string Slot = Class1.\u003C\u003Eo__886.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__886.\u003C\u003Ep__6, this.Slots[ListSlot.Index]);
            SC.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
            UI.Notify("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
            Vector3 position = Game.Player.Character.Position;
            SC.Save();
            try
            {
              SC.LoadIniFile("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Garage\\" + Slot + ".ini");
              Vehicle vehicle = World.CreateVehicle(this.RequestModel(this.man), new Vector3(), 0.0f);
              SC.SaveName(vehicle.DisplayName);
              vehicle.Delete();
              UI.Notify("~b~SR :~w~ Bought New Car, relaoding Garage");
              this.AddCar(Slot);
            }
            catch (Exception ex)
            {
            }
          }
          catch (Exception ex)
          {
          }
        }
        else
          UI.Notify("you do not have enought money to purchase this vehicle!");
      });
      UIMenuItem Slot1A = new UIMenuItem("Slot 1");
      uiMenu2.AddItem(Slot1A);
      UIMenuItem Slot2A = new UIMenuItem("Slot 2");
      uiMenu2.AddItem(Slot2A);
      UIMenuItem Slot3A = new UIMenuItem("Slot 3");
      uiMenu2.AddItem(Slot3A);
      UIMenuItem Slot4A = new UIMenuItem("Slot 4");
      uiMenu2.AddItem(Slot4A);
      UIMenuItem Slot5A = new UIMenuItem("Slot 5");
      uiMenu2.AddItem(Slot5A);
      UIMenuItem Slot6A = new UIMenuItem("Slot 6");
      uiMenu2.AddItem(Slot6A);
      UIMenuItem Slot7A = new UIMenuItem("Slot 7");
      uiMenu2.AddItem(Slot7A);
      UIMenuItem Slot8A = new UIMenuItem("Slot 8");
      uiMenu2.AddItem(Slot8A);
      UIMenuItem Slot9A = new UIMenuItem("Slot 9");
      uiMenu2.AddItem(Slot9A);
      UIMenuItem Slot10A = new UIMenuItem("Slot 10");
      uiMenu2.AddItem(Slot10A);
      uiMenu2.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item == Slot1A && (Entity) this.Garages.Vehicle1 != (Entity) null)
          this.DeleteCarinSlot("Slot1", this.Garages.Vehicle1);
        if (item == Slot2A && (Entity) this.Garages.Vehicle2 != (Entity) null)
          this.DeleteCarinSlot("Slot2", this.Garages.Vehicle2);
        if (item == Slot3A && (Entity) this.Garages.Vehicle3 != (Entity) null)
          this.DeleteCarinSlot("Slot3", this.Garages.Vehicle3);
        if (item == Slot4A && (Entity) this.Garages.Vehicle4 != (Entity) null)
          this.DeleteCarinSlot("Slot4", this.Garages.Vehicle4);
        if (item == Slot5A && (Entity) this.Garages.Vehicle5 != (Entity) null)
          this.DeleteCarinSlot("Slot5", this.Garages.Vehicle5);
        if (item == Slot6A && (Entity) this.Garages.Vehicle6 != (Entity) null)
          this.DeleteCarinSlot("Slot6", this.Garages.Vehicle6);
        if (item == Slot7A && (Entity) this.Garages.Vehicle7 != (Entity) null)
          this.DeleteCarinSlot("Slot7", this.Garages.Vehicle7);
        if (item == Slot8A && (Entity) this.Garages.Vehicle8 != (Entity) null)
          this.DeleteCarinSlot("Slot8", this.Garages.Vehicle8);
        if (item == Slot9A && (Entity) this.Garages.Vehicle9 != (Entity) null)
          this.DeleteCarinSlot("Slot9", this.Garages.Vehicle9);
        if (item != Slot10A || !((Entity) this.Garages.Vehicle10 != (Entity) null))
          return;
        this.DeleteCarinSlot("Slot10", this.Garages.Vehicle10);
      });
      uiMenu1.OnItemSelect += (ItemSelectEvent) ((sender, item, index) =>
      {
        if (item != ExitGarage || this.purchaselvl < 1)
          return;
        this.Garages.DeleteVehicles();
        this.IsInInterior = false;
        Game.Player.Character.Position = this.GarageVehicleSpawnOutside;
      });
    }

    private void DisplayHelpTextThisFrame(string text)
    {
      Function.Call(Hash._0x8509B634FBE7DA11, (InputArgument) "STRING");
      Function.Call(Hash._0x6C188BE134E074AA, (InputArgument) text);
      Function.Call(Hash._0x238FFE5C7B0498A6, (InputArgument) 0, (InputArgument) 0, (InputArgument) 1, (InputArgument) -1);
    }

    public void ChooseMaleTransion() => this.CurrentDanceDict = "anim@amb@nightclub@dancers@club_ambientpeds_transitions@";

    public void ChooseFemaleTransion() => this.CurrentDanceDict = "anim@amb@nightclub@dancers@club_ambientpeds_transitions@";

    public void ChooseDance()
    {
      List<object> objectList = new List<object>();
      string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt");
      string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@";
      foreach (string str2 in strArray)
        objectList.Add((object) str2);
      int index = new System.Random().Next(0, objectList.Count);
      if (this.ChoosenDance)
        return;
      this.ChoosenDance = true;
      this.CurrentDanceDict = str1;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__892.\u003C\u003Ep__0 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__892.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.CurrentDance = Class1.\u003C\u003Eo__892.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__892.\u003C\u003Ep__0, objectList[index]);
    }

    public void SetupPed(Ped NewPed)
    {
      this.PedDanceTimer = 0;
      this.PedsDancing = true;
      Vector3 vector3 = NewPed.Position;
      vector3 = new Vector3(vector3.X, vector3.Y, vector3.Z - 1f);
      NewPed.Position = this.Entry;
      NewPed.Position = vector3;
      this.Peds.Add(NewPed);
      Ped ped = NewPed;
      Function.Call(Hash._0x90D2156198831D69, (InputArgument) ped, (InputArgument) true);
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
      Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
      Script.Wait(1);
      float num = (float) new System.Random().Next(0, 160);
      if (!this.ChoosenDance)
      {
        if ((double) num < 10.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__0, objectList[index]);
          }
        }
        if ((double) num > 10.0 && (double) num <= 20.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__1, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
          }
        }
        if ((double) num > 20.0 && (double) num <= 30.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__2, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__3, objectList[index]);
          }
        }
        if ((double) num > 30.0 && (double) num <= 40.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__4 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__4, objectList[index]);
          }
        }
        if ((double) num > 40.0 && (double) num <= 50.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__5, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__6 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__6, objectList[index]);
          }
        }
        if ((double) num > 50.0 && (double) num <= 60.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__7 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__7, objectList[index]);
          }
        }
        if ((double) num > 60.0 && (double) num <= 70.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__8, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__9, objectList[index]);
          }
        }
        if ((double) num > 70.0 && (double) num <= 80.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__10, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__11 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__11, objectList[index]);
          }
        }
        if ((double) num > 80.0 && (double) num <= 90.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__12, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__13, objectList[index]);
          }
        }
        if ((double) num > 90.0 && (double) num <= 100.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@low_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__14, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__15, objectList[index]);
          }
        }
        if ((double) num > 100.0 && (double) num <= 110.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__16, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__17, objectList[index]);
          }
        }
        if ((double) num > 110.0 && (double) num <= 120.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__18, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__19, objectList[index]);
          }
        }
        if ((double) num > 130.0 && (double) num <= 140.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__20, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__21, objectList[index]);
          }
        }
        if ((double) num > 140.0 && (double) num <= 150.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@low_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__22, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__23 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__23, objectList[index]);
          }
        }
        if ((double) num > 150.0 && (double) num <= 160.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__893.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__24, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__893.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__25, objectList[index]);
          }
        }
      }
      List<object> objectList1 = new List<object>();
      foreach (string readAllLine in File.ReadAllLines(this.DanceLoadDirect))
        objectList1.Add((object) readAllLine);
      int index1 = new System.Random().Next(0, objectList1.Count);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__893.\u003C\u003Ep__26 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__893.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.CurrentDance = Class1.\u003C\u003Eo__893.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__893.\u003C\u003Ep__26, objectList1[index1]);
      Class1.LoadDict(this.CurrentDanceDict);
      ped.Task.PlayAnimation(this.CurrentDanceDict, this.CurrentDance, 256f, -1, true, -1f);
    }

    public void SetupNewDance()
    {
    }

    public void SetupPlayerNewDance(Ped NewPed, int I, int J)
    {
      if ((Entity) this.PlayerDrink != (Entity) null)
        this.PlayerDrink.Delete();
      this.PedDanceTimer = 0;
      this.PedsDancing = true;
      Ped ped = NewPed;
      Function.Call(Hash._0x90D2156198831D69, (InputArgument) ped, (InputArgument) true);
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
      Function.Call(Hash._0x9F8AA94D6D97DBF4, (InputArgument) ped, (InputArgument) 1);
      Function.Call(Hash._0x70A2D1137C8ED7C9, (InputArgument) ped, (InputArgument) 0, (InputArgument) 0);
      Function.Call(Hash._0x9F7794730795E019, (InputArgument) ped, (InputArgument) 17, (InputArgument) 1);
      Script.Wait(1);
      float num = (float) new System.Random().Next(0, 160);
      this.ChoosenDance = false;
      if (I == 0)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt");
        string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__0 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__0, objectList[index]);
        }
      }
      if (I == 1)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__1 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__1, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
        }
      }
      if (I == 2)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__2 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__2, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__3 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__3, objectList[index]);
        }
      }
      if (I == 3)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__4 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__4, objectList[index]);
        }
      }
      if (I == 4)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__5 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__5, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__6 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__6, objectList[index]);
        }
      }
      if (I == 5)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__7 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__7, objectList[index]);
        }
      }
      if (I == 6)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@med_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__8 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__8, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__9 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__9, objectList[index]);
        }
      }
      if (I == 7)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_groups@";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__10 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__10, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__11 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__11, objectList[index]);
        }
      }
      if (I == 8)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_groups@hi_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__12 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__12, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__13 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__13, objectList[index]);
        }
      }
      if (I == 9)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_groups@low_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__14 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__14, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__15 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__15, objectList[index]);
        }
      }
      if (I == 10)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_groups@med_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__16 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__16, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__17 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__17, objectList[index]);
        }
      }
      if (I == 11)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__18 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__18, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__19 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__19, objectList[index]);
        }
      }
      if (I == 12)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__20 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__20, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__21 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__21, objectList[index]);
        }
      }
      if (I == 13)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@low_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__22 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__22, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__23 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__23, objectList[index]);
        }
      }
      if (I == 14)
      {
        List<object> objectList = new List<object>();
        this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt";
        string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt");
        string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@med_intensity";
        foreach (string str2 in strArray)
          objectList.Add((object) str2);
        int index = new System.Random().Next(0, objectList.Count);
        // ISSUE: reference to a compiler-generated field
        if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__24 == null)
        {
          // ISSUE: reference to a compiler-generated field
          Class1.\u003C\u003Eo__895.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
        }
        // ISSUE: reference to a compiler-generated field
        // ISSUE: reference to a compiler-generated field
        this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__24, objectList[index]);
        if (!this.ChoosenDance)
        {
          this.ChoosenDance = true;
          this.CurrentDanceDict = str1;
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__25 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__895.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__25, objectList[index]);
        }
      }
      List<object> objectList1 = new List<object>();
      foreach (string readAllLine in File.ReadAllLines(this.DanceLoadDirect))
        objectList1.Add((object) readAllLine);
      int index1 = new System.Random().Next(0, objectList1.Count);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__26 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__895.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__26, objectList1[index1]);
      if (J > objectList1.Count)
        J = 0;
      if (J < 0)
        J = objectList1.Count - 1;
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__895.\u003C\u003Ep__27 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__895.\u003C\u003Ep__27 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.CurrentDance = Class1.\u003C\u003Eo__895.\u003C\u003Ep__27.Target((CallSite) Class1.\u003C\u003Eo__895.\u003C\u003Ep__27, objectList1[J]);
      NewPed.Task.PlayAnimation(this.CurrentDanceDict, this.CurrentDance, 256f, -1, true, -1f);
      Ped character = Game.Player.Character;
    }

    public void SetupPedNewDance(Ped NewPed)
    {
      this.PedDanceTimer = 0;
      this.PedsDancing = true;
      float num = (float) new System.Random().Next(0, 160);
      if (!this.ChoosenDance)
      {
        if ((double) num < 10.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__0 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__0 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__0.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__0, objectList[index]);
          }
        }
        if ((double) num > 10.0 && (double) num <= 20.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@low-med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__1 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__1 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__1.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__1, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
          }
        }
        if ((double) num > 20.0 && (double) num <= 30.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@club_ambientpeds@med-hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__2 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__2 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__2.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__2, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__3 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__3 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__3.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__3, objectList[index]);
          }
        }
        if ((double) num > 30.0 && (double) num <= 40.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__4 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__4 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__4.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__4, objectList[index]);
          }
        }
        if ((double) num > 40.0 && (double) num <= 50.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__5 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__5 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__5.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__5, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__6 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__6 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__6.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__6, objectList[index]);
          }
        }
        if ((double) num > 50.0 && (double) num <= 60.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@low_intesnsity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__7 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__7 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__7.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__7, objectList[index]);
          }
        }
        if ((double) num > 60.0 && (double) num <= 70.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_facedj@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_facedj@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__8 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__8 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__8.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__8, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__9 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__9 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__9.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__9, objectList[index]);
          }
        }
        if ((double) num > 70.0 && (double) num <= 80.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__10 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__10 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__10.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__10, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__11 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__11 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__11.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__11, objectList[index]);
          }
        }
        if ((double) num > 80.0 && (double) num <= 90.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__12 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__12 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__12.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__12, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__13 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__13 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__13.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__13, objectList[index]);
          }
        }
        if ((double) num > 90.0 && (double) num <= 100.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@low_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@low_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__14 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__14 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__14.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__14, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__15 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__15 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__15.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__15, objectList[index]);
          }
        }
        if ((double) num > 100.0 && (double) num <= 110.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_groups@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_groups@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__16 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__16 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__16.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__16, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__17 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__17 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__17.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__17, objectList[index]);
          }
        }
        if ((double) num > 110.0 && (double) num <= 120.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__18 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__18 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__18.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__18, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__19 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__19 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__19.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__19, objectList[index]);
          }
        }
        if ((double) num > 130.0 && (double) num <= 140.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@hi_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__20 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__20 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__20.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__20, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__21 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__21 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__21.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__21, objectList[index]);
          }
        }
        if ((double) num > 140.0 && (double) num <= 150.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@low_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@low_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__22 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__22 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__22.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__22, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__23 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__23 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__23.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__23, objectList[index]);
          }
        }
        if ((double) num > 150.0 && (double) num <= 160.0)
        {
          List<object> objectList = new List<object>();
          this.DanceLoadDirect = "scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt";
          string[] strArray = File.ReadAllLines("scripts\\HKH191sBusinessMods\\AfterHoursBusiness\\NightClub1\\Dance\\anim@amb@nightclub@dancers@crowddance_single_props@med_intensity.txt");
          string str1 = "anim@amb@nightclub@dancers@crowddance_single_props@med_intensity";
          foreach (string str2 in strArray)
            objectList.Add((object) str2);
          int index = new System.Random().Next(0, objectList.Count);
          // ISSUE: reference to a compiler-generated field
          if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__24 == null)
          {
            // ISSUE: reference to a compiler-generated field
            Class1.\u003C\u003Eo__897.\u003C\u003Ep__24 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
          }
          // ISSUE: reference to a compiler-generated field
          // ISSUE: reference to a compiler-generated field
          this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__24.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__24, objectList[index]);
          if (!this.ChoosenDance)
          {
            this.ChoosenDance = true;
            this.CurrentDanceDict = str1;
            // ISSUE: reference to a compiler-generated field
            if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__25 == null)
            {
              // ISSUE: reference to a compiler-generated field
              Class1.\u003C\u003Eo__897.\u003C\u003Ep__25 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
            }
            // ISSUE: reference to a compiler-generated field
            // ISSUE: reference to a compiler-generated field
            this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__25.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__25, objectList[index]);
          }
        }
      }
      List<object> objectList1 = new List<object>();
      foreach (string readAllLine in File.ReadAllLines(this.DanceLoadDirect))
        objectList1.Add((object) readAllLine);
      int index1 = new System.Random().Next(0, objectList1.Count);
      // ISSUE: reference to a compiler-generated field
      if (Class1.\u003C\u003Eo__897.\u003C\u003Ep__26 == null)
      {
        // ISSUE: reference to a compiler-generated field
        Class1.\u003C\u003Eo__897.\u003C\u003Ep__26 = CallSite<Func<CallSite, object, string>>.Create(Binder.Convert(CSharpBinderFlags.None, typeof (string), typeof (Class1)));
      }
      // ISSUE: reference to a compiler-generated field
      // ISSUE: reference to a compiler-generated field
      this.CurrentDance = Class1.\u003C\u003Eo__897.\u003C\u003Ep__26.Target((CallSite) Class1.\u003C\u003Eo__897.\u003C\u003Ep__26, objectList1[index1]);
      NewPed.Task.PlayAnimation(this.CurrentDanceDict, this.CurrentDance, 256f, -1, true, -1f);
    }

    private void OnKeyDown()
    {
      if (this.SeatPos.Count > 0)
      {
        for (int index = 0; index < this.SeatPos.Count; ++index)
        {
          if ((double) World.GetDistance(Game.Player.Character.Position, this.SeatPos[index]) < 3.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            if (!this.sitting)
            {
              Game.FadeScreenOut(500);
              Script.Wait(500);
              this.sitting = true;
              Game.Player.Character.FreezePosition = true;
              Game.Player.Character.Position = this.SeatPos[index];
              Game.Player.Character.Heading = this.SeatRot[index];
              Function.Call(Hash._0xB4EC2312F4E5B1F1, (InputArgument) 0.0f);
              Function.Call(Hash._0x6D0858B8EDFD2B7D, (InputArgument) 0.0f);
              Game.Player.Character.Task.PlayAnimation("anim@amb@office@seating@male@var_e@base@", "base", 8f, -1, true, -1f);
              Script.Wait(500);
              Game.FadeScreenIn(500);
            }
            else if (this.sitting)
            {
              Game.Player.Character.FreezePosition = true;
              Game.FadeScreenOut(500);
              Script.Wait(500);
              this.sitting = false;
              Game.Player.Character.Position = this.SeatPos[index];
              Game.Player.Character.Heading = this.SeatRot[index];
              Function.Call(Hash._0xB4EC2312F4E5B1F1, (InputArgument) 0.0f);
              Function.Call(Hash._0x6D0858B8EDFD2B7D, (InputArgument) 0.0f);
              Game.Player.Character.Task.ClearAnimation("anim@amb@office@seating@male@var_e@base@", "base");
              Game.Player.Character.FreezePosition = false;
              Script.Wait(500);
              Game.FadeScreenIn(500);
            }
          }
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ChairPos) < 2.0)
      {
        if (this.IsSittinginCeoSeat)
        {
          if (Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) && this.NightclubManagementOn)
          {
            Prop chairA = this.Chair_A;
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairA.Position.X, (InputArgument) chairA.Position.Y, (InputArgument) chairA.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairA.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairA, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            this.Screen = 0.0f;
            this.frame = 0;
            this.GUIOn = false;
            this.GUIscaleform.Unload();
            this.NightclubManagementOn = false;
          }
          if ((Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) || Game.IsControlJustPressed(2, GTA.Control.PhoneCancel)) && this.MainStuffMenu.Visible)
          {
            Prop chairA = this.Chair_A;
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairA.Position.X, (InputArgument) chairA.Position.Y, (InputArgument) chairA.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairA.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairA, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
            if (!this.MainStuffMenu.Visible)
            {
              Prop chairA = this.Chair_A;
              int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairA.Position.X, (InputArgument) chairA.Position.Y, (InputArgument) chairA.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairA.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairA, (InputArgument) num, (InputArgument) "computer_enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(100);
              this.MainStuffMenu.Visible = !this.MainStuffMenu.Visible;
            }
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Cover))
          {
            Game.Player.Character.HasCollision = true;
            this.modMenuPool.CloseAllMenus();
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.Chair_A.Position.X, (InputArgument) this.Chair_A.Position.Y, (InputArgument) this.Chair_A.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.Chair_A.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Chair_A, (InputArgument) num, (InputArgument) "exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(4000);
            Game.Player.Character.Task.ClearAll();
            this.IsSittinginCeoSeat = false;
            if (this.NightclubManagementOn)
            {
              this.Screen = 0.0f;
              this.frame = 0;
              this.GUIOn = false;
              this.GUIscaleform.Unload();
              this.NightclubManagementOn = false;
            }
          }
        }
        else if (!this.IsSittinginCeoSeat && Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          Script.Wait(100);
          string str = "anim@amb@office@boss@male@";
          Class1.LoadDict("anim@amb@office@boss@male@");
          if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
          {
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.Chair_A.Position.X, (InputArgument) this.Chair_A.Position.Y, (InputArgument) this.Chair_A.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.Chair_A.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Chair_A, (InputArgument) num, (InputArgument) "enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(5000);
          }
          this.IsSittinginCeoSeat = true;
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.ChairPos2) < 2.0)
      {
        if (this.IsSittinginCeoSeat2)
        {
          if ((Game.IsControlJustPressed(2, GTA.Control.FrontendPauseAlternate) || Game.IsControlJustPressed(2, GTA.Control.PhoneCancel)) && this.mainMenu.Visible)
          {
            Prop chairC = this.Chair_C;
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairC.Position.X, (InputArgument) chairC.Position.Y, (InputArgument) chairC.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairC.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairC, (InputArgument) num, (InputArgument) "computer_exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Context))
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
            if (!this.MainStuffMenu.Visible)
            {
              Prop chairC = this.Chair_C;
              int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) chairC.Position.X, (InputArgument) chairC.Position.Y, (InputArgument) chairC.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) chairC.Rotation.Z, (InputArgument) 2);
              Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "computer_enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "computer_enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) chairC, (InputArgument) num, (InputArgument) "computer_enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
              Script.Wait(100);
              this.MainStuffMenu.Visible = !this.MainStuffMenu.Visible;
            }
          }
          if (Game.IsControlJustPressed(2, GTA.Control.Cover))
          {
            Game.Player.Character.HasCollision = true;
            this.modMenuPool.CloseAllMenus();
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.Chair_C.Position.X, (InputArgument) this.Chair_C.Position.Y, (InputArgument) this.Chair_C.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.Chair_C.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "exit", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "exit", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Chair_C, (InputArgument) num, (InputArgument) "exit_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(4000);
            Game.Player.Character.Task.ClearAll();
            this.IsSittinginCeoSeat2 = false;
          }
        }
        else if (!this.IsSittinginCeoSeat2 && Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          Script.Wait(100);
          string str = "anim@amb@office@boss@male@";
          Class1.LoadDict("anim@amb@office@boss@male@");
          if (Function.Call<bool>(Hash._0xD031A9162D01088C, (InputArgument) str))
          {
            int num = Function.Call<int>(Hash._0x8C18E0F9080ADD73, (InputArgument) this.Chair_C.Position.X, (InputArgument) this.Chair_C.Position.Y, (InputArgument) this.Chair_C.Position.Z, (InputArgument) 0.0, (InputArgument) 0.0, (InputArgument) this.Chair_C.Rotation.Z, (InputArgument) 2);
            Function.Call(Hash._0xEEA929141F699854, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) "enter", (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0x734292F4F0ABF6D0, (InputArgument) num, (InputArgument) Function.Call<int>(Hash._0xE4A310B1D7FA73CC, (InputArgument) num));
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) Game.Player.Character, (InputArgument) num, (InputArgument) "enter", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Function.Call(Hash._0xC77720A12FE14A86, (InputArgument) this.Chair_C, (InputArgument) num, (InputArgument) "enter_chair", (InputArgument) Class1.LoadDict("anim@amb@office@boss@male@"), (InputArgument) 16f, (InputArgument) -16f, (InputArgument) 0, (InputArgument) 1148846080);
            Script.Wait(5000);
          }
          this.IsSittinginCeoSeat2 = true;
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if ((Entity) Game.Player.Character.CurrentVehicle == (Entity) this.Terrobyte)
        {
          this.CabPrimary = this.Terrobyte.PrimaryColor;
          this.CabSecondary = this.Terrobyte.SecondaryColor;
          Terobyte terobyte = new Terobyte(this.CabPrimary, this.CabSecondary);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
          this.LoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
          this.SaveLoad.Load(this.Terrobyte);
        }
        if ((Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SpecialVehicle)
        {
          if (this.SpecialVehicle.DisplayName == "MENACER")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Menacer.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
          if (this.SpecialVehicle.DisplayName == "OPPRESSOR2")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//OppressorMK2.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
          if (this.SpecialVehicle.DisplayName == "SCRAMJET")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//ScramJet.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
          if (this.SpecialVehicle.DisplayName == "PATRIOT2")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Patirot Stretch.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
          if (this.SpecialVehicle.DisplayName == "SWINGER")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Swinger.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
          if (this.SpecialVehicle.DisplayName == "STAFFORD")
          {
            this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Special Vehicles//Strafford.ini");
            this.SaveLoad.SaveWithoutDelete();
            UI.Notify(this.GetHostName() + " : vehicle Saved");
          }
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (Entity) this.Terrobyte != (Entity) null && ((Entity) Game.Player.Character.CurrentVehicle != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.Terrobyte))
      {
        this.LoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
        this.CabPrimary = VehicleColor.MatteWhite;
        this.CabSecondary = VehicleColor.MatteWhite;
        this.CabPrimary = this.Terrobyte.PrimaryColor;
        this.CabSecondary = this.Terrobyte.SecondaryColor;
        UI.Notify(this.GetHostName() + " Terrobyte Saved");
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        if ((Entity) this.Terrobyte != (Entity) null && (Entity) Game.Player.Character.CurrentVehicle == (Entity) this.Terrobyte)
        {
          Script.Wait(1000);
          Game.Player.Character.Position = this.Exit;
          this.IsInInterior = false;
          this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
          this.Config.Save();
          this.SetNightclubLocation();
          Vector3 vehicleSpawnOutside = this.GarageVehicleSpawnOutside;
          vehicleSpawnOutside.X += 5f;
          Game.Player.Character.Position = vehicleSpawnOutside;
          Game.Player.Character.Position = new Vector3(202f, 202f, 202f);
          Script.Wait(100);
          if ((Entity) this.Terrobyte != (Entity) null)
            this.Terrobyte.Delete();
          this.SetRadioOff();
        }
        if ((Entity) this.SpecialVehicle != (Entity) null && ((Entity) Game.Player.Character.CurrentVehicle == (Entity) this.SpecialVehicle && (Entity) Game.Player.Character.CurrentVehicle != (Entity) this.Terrobyte))
        {
          this.IsInInterior = false;
          this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
          this.Config.Save();
          this.SetNightclubLocation();
          UI.Notify("Exiting With Vehicle");
          this.LoadCarinToRealWorld(this.SpecialVehicle);
          this.SpecialVehicle = (Vehicle) null;
          this.SetRadioOff();
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Context) && (double) World.GetDistance(Game.Player.Character.Position, this.GarageOptions) < 2.0 && !this.mainMenu3.Visible)
        this.mainMenu3.Visible = !this.mainMenu3.Visible;
      if ((Entity) this.Terrobyte != (Entity) null)
      {
        this.CabPrimary = this.Terrobyte.PrimaryColor;
        this.CabSecondary = this.Terrobyte.SecondaryColor;
        if (this.CabPrimary != this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary))
        {
          this.Config3.SetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary);
          this.Config3.Save();
          UI.Notify(this.GetHostName() + " Terrobyte Colors Saved");
        }
        if (this.CabSecondary != this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabSecondary))
        {
          this.Config3.SetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabSecondary);
          this.Config3.Save();
          UI.Notify(this.GetHostName() + " Terrobyte Colors Saved");
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.GarageExit) < 3.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        this.Garages.DeleteVehicles();
        Game.Player.Character.Position = this.GarageEntry;
        Script.Wait(10);
        this.IsInInterior = true;
        this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
        this.Config.Save();
        if (this.TerroybiteBought == 1)
        {
          if ((Entity) this.Terrobyte != (Entity) null)
            this.Terrobyte.Delete();
          this.LoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
          this.CabPrimary = VehicleColor.MatteWhite;
          this.CabPrimary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary);
          this.CabSecondary = VehicleColor.MatteWhite;
          this.CabSecondary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabSecondary);
          this.Terrobyte = World.CreateVehicle(this.RequestModel(VehicleHash.Terrorbyte), this.TerrobyteSpawn);
          Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.Terrobyte.Handle, (InputArgument) 0);
          this.Terrobyte.PrimaryColor = this.CabPrimary;
          this.Terrobyte.SecondaryColor = this.CabSecondary;
          this.Terrobyte.Rotation = new Vector3(0.0f, 0.0f, 0.0f);
          this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
          this.SaveLoad.Load(this.Terrobyte);
        }
        this.SetRadioOn();
      }
      if (!this.SellStockDeliveryMission && (double) World.GetDistance(Game.Player.Character.Position, this.GarageVehicleSpawnOutside) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context))
      {
        if (this.purchaselvl >= 1)
        {
          if (!this.mainMenu4.Visible)
            this.mainMenu4.Visible = !this.mainMenu4.Visible;
        }
        else
          UI.Notify(this.GetHostName() + " : Please purchase the Nightclub first!");
      }
      if (this.IsInInterior && (double) World.GetDistance(Game.Player.Character.Position, this.GarageEntry) < 1.25)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context))
        {
          this.GarageID = "Garage";
          string Garage1 = "Garage";
          this.Garages.DeleteVehicles();
          this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
          this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
          this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
          this.Garages.LoadGarage(this.LoadPath, Garage1, 10, this.GarageVehicleSpawnOutside);
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          Game.Player.Character.Position = this.GarageExit;
          this.IsInInterior = false;
          Class1.GetInVehicleBay = 1;
          this.SetRadioOff();
          string Garage2 = "Garage";
          this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
          this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
          this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
          this.Garages.LoadGarage(this.LoadPath, Garage2, 10, this.GarageVehicleSpawnOutside);
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          Game.Player.Character.Position = this.GarageExit;
          this.IsInInterior = false;
          Class1.GetInVehicleBay = 1;
          this.SetRadioOff();
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover))
        {
          this.GarageID = "Storage";
          string Garage1 = "Storage";
          this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
          this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
          this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
          this.Garages.LoadGarage(this.LoadPath, Garage1, 3, this.GarageVehicleSpawnOutside);
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          Game.Player.Character.Position = this.GarageExit;
          this.IsInInterior = false;
          Class1.GetInVehicleBay = 1;
          this.SetRadioOff();
          string Garage2 = "Storage";
          this.Garages.MuleCustomUnlocked = this.MuleCustomUnlocked;
          this.Garages.SpeedoCustomUnlocked = this.SpeedoCustomUnlocked;
          this.Garages.PounderCustomUnlocked = this.PounderCustomUnlocked;
          this.Garages.LoadGarage(this.LoadPath, Garage2, 3, this.GarageVehicleSpawnOutside);
          Function.Call<int>(Hash._0xB0F7F8663821D9C3, (InputArgument) 229.9559, (InputArgument) -981.7928, (InputArgument) -99.66071);
          Game.Player.Character.Position = this.GarageExit;
          this.IsInInterior = false;
          Class1.GetInVehicleBay = 1;
          this.SetRadioOff();
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.Exit2) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && this.IsInInterior)
      {
        this.IsInInterior = false;
        this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
        this.Config.Save();
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.Entry;
        this.SetRadioOff();
        Script.Wait(300);
        Game.FadeScreenIn(300);
        if (this.Peds.Count > 0)
        {
          foreach (Ped ped in this.Peds)
          {
            ped.Task.ClearAllImmediately();
            ped.MarkAsNoLongerNeeded();
            ped.Delete();
          }
        }
      }
      if ((double) World.GetDistance(Game.Player.Character.Position, this.Entry) < 3.0)
      {
        if (Game.IsControlJustPressed(2, GTA.Control.Context) && this.purchaselvl != 0 && this.purchaselvl >= 1)
        {
          if (Game.Player.WantedLevel >= 1)
          {
            this.DisplayHelpTextThisFrame("Lose the cops");
            UI.Notify(this.GetHostName() + " : Please lose the cops boss");
          }
          else
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
            Script.Wait(300);
            this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
            this.Config.Save();
            Game.FadeScreenOut(300);
            Script.Wait(300);
            this.SetRadioOn();
            Script.Wait(100);
            Game.Player.Character.Position = this.Exit;
            this.IsInInterior = true;
            Game.FadeScreenIn(300);
            try
            {
              if (this.TerroybiteBought == 1)
              {
                if ((Entity) this.Terrobyte != (Entity) null)
                  this.Terrobyte.Delete();
                this.LoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
                this.CabPrimary = VehicleColor.MatteWhite;
                this.CabPrimary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary);
                this.Terrobyte = World.CreateVehicle(this.RequestModel(VehicleHash.Terrorbyte), this.TerrobyteSpawn);
                this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
                this.Terrobyte.Rotation = new Vector3(0.0f, 0.0f, 0.0f);
                this.CabSecondary = VehicleColor.MatteWhite;
                this.CabSecondary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabSecondary);
                Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.Terrobyte.Handle, (InputArgument) 0);
                this.Terrobyte.PrimaryColor = this.CabPrimary;
                this.Terrobyte.SecondaryColor = this.CabSecondary;
                this.SaveLoad.Load(this.Terrobyte);
              }
              this.IsInInterior = true;
              this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
              this.Config.Save();
            }
            catch
            {
              UI.Notify("ERROR on Enter");
            }
            Script.Wait(10);
            if ((double) World.GetDistance(Game.Player.Character.Position, this.EntryMarkerA) < 3.0)
              Game.Player.Character.Position = this.Exit;
            if ((double) World.GetDistance(Game.Player.Character.Position, this.EntryMarkerB) < 3.0)
              Game.Player.Character.Position = this.Exit2;
          }
        }
        if (Game.IsControlJustPressed(2, GTA.Control.Cover) && this.purchaselvl != 0 && this.purchaselvl >= 1)
        {
          if (Game.Player.WantedLevel >= 1)
          {
            this.DisplayHelpTextThisFrame("Lose the cops");
            UI.Notify(this.GetHostName() + " : Please lose the cops boss");
          }
          else
          {
            this.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//NightClub1//Main.ini");
            Script.Wait(300);
            this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
            this.Config.Save();
            Game.FadeScreenOut(300);
            Script.Wait(300);
            this.SetRadioOn();
            Script.Wait(100);
            Game.Player.Character.Position = this.Exit;
            this.IsInInterior = true;
            Game.FadeScreenIn(300);
            try
            {
              if (this.TerroybiteBought == 1)
              {
                if ((Entity) this.Terrobyte != (Entity) null)
                  this.Terrobyte.Delete();
                this.LoadIniFile3("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
                this.CabPrimary = VehicleColor.MatteWhite;
                this.CabPrimary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "PRIMARYCOLOR", this.CabPrimary);
                this.Terrobyte = World.CreateVehicle(this.RequestModel(VehicleHash.Terrorbyte), this.TerrobyteSpawn);
                this.SaveLoad.LoadIniFile("scripts//HKH191sBusinessMods//AfterHoursBusiness//Terrobyte//Terrobyte.ini");
                this.Terrobyte.Rotation = new Vector3(0.0f, 0.0f, 0.0f);
                this.CabSecondary = VehicleColor.MatteWhite;
                this.CabSecondary = this.Config3.GetValue<VehicleColor>("CONFIGURATIONS", "SECONDARYCOLOR", this.CabSecondary);
                Function.Call(Hash._0x1F2AA07F00B3217A, (InputArgument) this.Terrobyte.Handle, (InputArgument) 0);
                this.Terrobyte.PrimaryColor = this.CabPrimary;
                this.Terrobyte.SecondaryColor = this.CabSecondary;
                this.SaveLoad.Load(this.Terrobyte);
              }
              this.IsInInterior = true;
              this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
              this.Config.Save();
            }
            catch
            {
              UI.Notify("ERROR on Enter");
            }
            Script.Wait(10);
            if ((double) World.GetDistance(Game.Player.Character.Position, this.EntryMarkerA) < 3.0)
              Game.Player.Character.Position = this.Exit;
            if ((double) World.GetDistance(Game.Player.Character.Position, this.EntryMarkerB) < 3.0)
              Game.Player.Character.Position = this.Exit2;
            Game.Player.Character.Position = this.Exit;
            Game.Player.Character.Position = this.Exit2;
          }
        }
      }
      else if ((double) World.GetDistance(Game.Player.Character.Position, this.Exit) < 2.0 && Game.IsControlJustPressed(2, GTA.Control.Context) && this.IsInInterior)
      {
        this.IsInInterior = false;
        this.Config.SetValue<bool>("Misc", "IsInInterior", this.IsInInterior);
        this.Config.Save();
        Game.FadeScreenOut(300);
        Script.Wait(300);
        Game.Player.Character.Position = this.Entry;
        this.SetRadioOff();
        Script.Wait(300);
        Game.FadeScreenIn(300);
        if (this.Peds.Count > 0)
        {
          foreach (Ped ped in this.Peds)
          {
            ped.Task.ClearAllImmediately();
            ped.MarkAsNoLongerNeeded();
            ped.Delete();
          }
        }
      }
      if (Game.IsControlJustPressed(2, GTA.Control.Cover) && (Entity) Game.Player.Character.CurrentVehicle != (Entity) null)
      {
        Vehicle currentVehicle = Game.Player.Character.CurrentVehicle;
        if ((Entity) this.Garages.Vehicle1 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle1)
        {
          if (this.Garages.Vehicle1.Model != (GTA.Model) VehicleHash.Mule4 && this.GarageID.Equals("Garage"))
            this.SaveCar("Garage", this.Garages.Vehicle1, "Slot1");
          if (this.Garages.Vehicle1.Model == (GTA.Model) VehicleHash.Mule4 && this.GarageID.Equals("Storage"))
            this.SaveCar("Storage", this.Garages.Vehicle1, "MuleCustom");
        }
        if ((Entity) this.Garages.Vehicle2 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle2)
        {
          if (this.Garages.Vehicle2.Model != (GTA.Model) VehicleHash.Pounder2 && this.GarageID.Equals("Garage"))
            this.SaveCar("Garage", this.Garages.Vehicle2, "Slot2");
          if (this.Garages.Vehicle2.Model == (GTA.Model) VehicleHash.Pounder2 && this.GarageID.Equals("Storage"))
            this.SaveCar("Storage", this.Garages.Vehicle2, "PounderCustom");
        }
        if ((Entity) this.Garages.Vehicle3 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle3)
        {
          if (this.Garages.Vehicle2.Model != (GTA.Model) VehicleHash.Speedo4 && this.GarageID.Equals("Garage"))
            this.SaveCar("Garage", this.Garages.Vehicle3, "Slot3");
          if (this.Garages.Vehicle2.Model == (GTA.Model) VehicleHash.Speedo4 && this.GarageID.Equals("Storage"))
            this.SaveCar("Storage", this.Garages.Vehicle3, "SpeedoCustom");
        }
        if ((Entity) this.Garages.Vehicle4 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle4)
          this.SaveCar("Garage", this.Garages.Vehicle4, "Slot4");
        if ((Entity) this.Garages.Vehicle5 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle5)
          this.SaveCar("Garage", this.Garages.Vehicle5, "Slot5");
        if ((Entity) this.Garages.Vehicle6 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle6)
          this.SaveCar("Garage", this.Garages.Vehicle6, "Slot6");
        if ((Entity) this.Garages.Vehicle7 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle7)
          this.SaveCar("Garage", this.Garages.Vehicle7, "Slot7");
        if ((Entity) this.Garages.Vehicle8 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle8)
          this.SaveCar("Garage", this.Garages.Vehicle8, "Slot8");
        if ((Entity) this.Garages.Vehicle9 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle9)
          this.SaveCar("Garage", this.Garages.Vehicle9, "Slot9");
        if ((Entity) this.Garages.Vehicle10 != (Entity) null && (Entity) currentVehicle == (Entity) this.Garages.Vehicle10)
          this.SaveCar("Garage", this.Garages.Vehicle10, "Slot10");
      }
      if (!Game.IsControlJustPressed(2, GTA.Control.Context) || !((Entity) Game.Player.Character.CurrentVehicle != (Entity) null))
        return;
      Vehicle currentVehicle1 = Game.Player.Character.CurrentVehicle;
      if ((Entity) this.Garages.Vehicle1 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle1)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle1);
        this.Garages.Vehicle1 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle2 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle2)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle2);
        this.Garages.Vehicle2 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle3 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle3)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle3);
        this.Garages.Vehicle3 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle4 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle4)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle4);
        this.Garages.Vehicle4 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle5 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle5)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle5);
        this.Garages.Vehicle5 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle6 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle6)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle6);
        this.Garages.Vehicle6 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle7 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle7)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle7);
        this.Garages.Vehicle7 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle8 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle8)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle8);
        this.Garages.Vehicle8 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle9 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle9)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle9);
        this.Garages.Vehicle9 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
      if ((Entity) this.Garages.Vehicle10 != (Entity) null && (Entity) currentVehicle1 == (Entity) this.Garages.Vehicle10)
      {
        this.LoadCarinToRealWorld(this.Garages.Vehicle10);
        this.Garages.Vehicle10 = (Vehicle) null;
        this.DisplayHelpTextThisFrame("Press E to use this vehicle");
        this.Garages.DeleteVehicles();
      }
    }

    public class DancePositionsSettings
    {
      public Vector3 Pos { get; set; }

      public float Heading { get; set; }

      public bool Created { get; set; }

      public DancePositionsSettings()
      {
      }

      public DancePositionsSettings(Vector3 P, float H)
      {
        this.Pos = P;
        this.Heading = H;
      }
    }

    public enum Nodetype
    {
      AnyRoad,
      Road,
      Offroad,
      Water,
    }

    public class NamedLocation
    {
      public Vector3 Position { get; set; }

      public string Location { get; set; }

      public float Heading { get; set; }

      public bool UsedLocation { get; set; }

      public NamedLocation()
      {
      }

      public NamedLocation(Vector3 P, string L)
      {
        this.Position = P;
        this.Location = L;
      }

      public NamedLocation(Vector3 P, float H, string L)
      {
        this.Position = P;
        this.Heading = H;
        this.Location = L;
      }
    }

    public class PosterPosition
    {
      public Vector3 Position { get; set; }

      public float Heading { get; set; }

      public bool CreatedOffset { get; set; }

      public Prop PosterOFfset { get; set; }

      public Prop Poster { get; set; }

      public bool Created { get; set; }

      public PosterPosition()
      {
      }

      public PosterPosition(Vector3 P, float H, bool C)
      {
        this.Position = P;
        this.Heading = H;
        this.Created = C;
      }
    }

    public class Flare : Script
    {
      public Vector3 Location { get; set; }

      public bool Created { get; set; }

      public Prop FlareProp { get; set; }

      public int FlareID_1 { get; set; }

      public int FlareID_2 { get; set; }

      public int FlareID_3 { get; set; }

      public int timer { get; set; }

      public Flare()
      {
      }

      public Flare(Prop FP, int Fid1, int Fid2, int Fid3)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
        this.FlareID_2 = Fid2;
        this.FlareID_3 = Fid3;
      }

      public Flare(Prop FP, int Fid1)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
      }

      public Flare(Prop FP, int Fid1, bool C)
      {
        this.FlareProp = FP;
        this.FlareID_1 = Fid1;
        this.Created = C;
      }

      public Flare(Vector3 Loc, bool C)
      {
        this.Location = Loc;
        this.Created = C;
      }

      public Flare(Prop FP, Vector3 Loc, bool C)
      {
        this.FlareProp = FP;
        this.Location = Loc;
        this.Created = C;
      }

      public Flare(int Fid1, int T)
      {
        this.FlareID_1 = Fid1;
        this.timer = T;
      }
    }
  }
}
